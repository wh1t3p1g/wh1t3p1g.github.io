<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>0kami&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.0kami.cn/"/>
  <updated>2021-03-21T09:38:33.907Z</updated>
  <id>http://blog.0kami.cn/</id>
  
  <author>
    <name>wh1t3p1g</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何高效的挖掘Java反序列化利用链？</title>
    <link href="http://blog.0kami.cn/2021/03/14/java-how-to-find-gadget-chains/"/>
    <id>http://blog.0kami.cn/2021/03/14/java-how-to-find-gadget-chains/</id>
    <published>2021-03-14T14:43:16.000Z</published>
    <updated>2021-03-21T09:38:33.907Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;#1 前言&quot;&gt;&lt;/a&gt;#1 前言&lt;/h1&gt;&lt;p&gt;Java反序列化利用链一直都是国内外研究热点之一，但当前自动化方案gadgetinspector的效果并不好。所以目前多数师傅仍然是以人工+自研小工具的方式进行利用链的挖掘。目前我个人也在找一个合适的方法来高效挖掘利用链，本文将主要介绍我自己的一些挖掘心得，辅以XStream反序列化利用链CVE-2021-21346为例。&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>XStream 1.4.15 Blacklist Bypass</title>
    <link href="http://blog.0kami.cn/2021/01/03/java-xstream-blacklist-bypass/"/>
    <id>http://blog.0kami.cn/2021/01/03/java-xstream-blacklist-bypass/</id>
    <published>2021-01-03T14:43:16.000Z</published>
    <updated>2021-04-09T07:01:25.213Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-Gadget-Overview&quot;&gt;&lt;a href=&quot;#1-Gadget-Overview&quot; class=&quot;headerlink&quot; title=&quot;#1 Gadget Overview&quot;&gt;&lt;/a&gt;#1 Gadget Overview&lt;/h1&gt;&lt;p&gt;Recently, I found a new deserialzation gadget which can bypass the latest version of XStream. This gadget use the JDK to construct the gadget chain. I had tested the gadget chain to RCE (remote code execute) with the version of JDK8 (8u162). I think other version of JDK also could trigger this vulnerablity to the RCE.&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="cve" scheme="http://blog.0kami.cn/tags/cve/"/>
    
  </entry>
  
  <entry>
    <title>【CTF】xnuca2020 easyjava</title>
    <link href="http://blog.0kami.cn/2020/11/02/ctf-xnuca-2020-easyjava/"/>
    <id>http://blog.0kami.cn/2020/11/02/ctf-xnuca-2020-easyjava/</id>
    <published>2020-11-02T04:04:34.000Z</published>
    <updated>2020-11-18T14:35:36.612Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;easyjava的设计思路主要来源于现实环境中遇到的一些问题，以及最近刚出的mybatis二级缓存反序列化的安全问题的一种设想。题目的设计目的主要考察选手对于实操性的漏洞的利用以及源码审计能力。&lt;/p&gt;
    
    </summary>
    
      <category term="ctf" scheme="http://blog.0kami.cn/categories/ctf/"/>
    
    
      <category term="ctf" scheme="http://blog.0kami.cn/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>【notes】struts2历史漏洞分析</title>
    <link href="http://blog.0kami.cn/2020/05/22/java-talk-about-struts2/"/>
    <id>http://blog.0kami.cn/2020/05/22/java-talk-about-struts2/</id>
    <published>2020-05-22T09:14:38.000Z</published>
    <updated>2020-12-08T15:15:08.560Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;17年的时候整理过struts2相关的POC，时隔3年，虽然struts2已经不再那么流行了，但是还是有很大的研究价值，本文将一点一点跟一下struts2 有价值的漏洞XD&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】回顾XStream反序列化漏洞</title>
    <link href="http://blog.0kami.cn/2020/04/18/java/talk-about-xstream-deserialization/"/>
    <id>http://blog.0kami.cn/2020/04/18/java/talk-about-xstream-deserialization/</id>
    <published>2020-04-18T11:44:58.000Z</published>
    <updated>2021-03-17T11:42:40.120Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://x-stream.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;XStream&lt;/a&gt;也是一款用的比较多的序列化组件，可以将object转化为XML并能完整的还原回来。他也曾经出现过反序列化漏洞，本文主要整理XStream相关的安全问题XD&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】浅谈fastjson反序列化漏洞</title>
    <link href="http://blog.0kami.cn/2020/04/13/java/talk-about-fastjson-deserialization/"/>
    <id>http://blog.0kami.cn/2020/04/13/java/talk-about-fastjson-deserialization/</id>
    <published>2020-04-13T08:31:09.000Z</published>
    <updated>2020-11-18T14:33:06.736Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;最近又碰上了fastjson的题目，想着是时候分析一波这个漏洞了，跟上师傅们的脚步。&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】攻击Java JMX-RMI</title>
    <link href="http://blog.0kami.cn/2020/03/10/java/java-jmx-rmi/"/>
    <id>http://blog.0kami.cn/2020/03/10/java/java-jmx-rmi/</id>
    <published>2020-03-10T12:51:30.000Z</published>
    <updated>2020-11-18T14:30:01.415Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;RMI的一个重要应用是JMX(Java Management Extentions)，本文介绍JMX的两个攻击面：）&lt;br&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】JNDI with LDAP</title>
    <link href="http://blog.0kami.cn/2020/03/01/java/jndi-with-ldap/"/>
    <id>http://blog.0kami.cn/2020/03/01/java/jndi-with-ldap/</id>
    <published>2020-03-01T11:22:01.000Z</published>
    <updated>2020-11-18T14:29:38.735Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;JNDI的SPI层除了RMI外，还可以跟LDAP交互。与RMI类似，LDAP也能同样返回一个Reference给JNDI的Naming Manager，本文将讲述JNDI使用ldap协议的两个攻击面XD&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】JNDI with RMI</title>
    <link href="http://blog.0kami.cn/2020/02/09/java/jndi-with-rmi/"/>
    <id>http://blog.0kami.cn/2020/02/09/java/jndi-with-rmi/</id>
    <published>2020-02-09T13:42:18.000Z</published>
    <updated>2020-11-18T14:29:18.865Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;在现实环境中，遇到RMI Registry的机会很少，而结合反序列化漏洞的JNDI注入则常见了许多。本文将介绍RMI结合JNDI后可以做哪些事情XD&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】浅谈Java RMI Registry安全问题</title>
    <link href="http://blog.0kami.cn/2020/02/06/java/rmi-registry-security-problem/"/>
    <id>http://blog.0kami.cn/2020/02/06/java/rmi-registry-security-problem/</id>
    <published>2020-02-06T07:23:36.000Z</published>
    <updated>2020-11-18T14:27:51.150Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;本文讲述了Java RMI Registry相关的反序列化问题，主讲Registry，后续补充了Client端和Server端的利用&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】Java反序列化利用链挖掘之Shiro反序列化</title>
    <link href="http://blog.0kami.cn/2019/11/10/java/study-java-deserialized-shiro-1-2-4/"/>
    <id>http://blog.0kami.cn/2019/11/10/java/study-java-deserialized-shiro-1-2-4/</id>
    <published>2019-11-10T07:32:03.000Z</published>
    <updated>2021-03-16T01:51:54.159Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在跟了一遍commons-collections系列的payload后，终于可以开始解决一下当时对shiro反序列化模凌两可的认识了。&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】Java反序列化利用链挖掘之CommonsCollections2,4,8</title>
    <link href="http://blog.0kami.cn/2019/11/05/java/study-java-deserialized-commonscollections4/"/>
    <id>http://blog.0kami.cn/2019/11/05/java/study-java-deserialized-commonscollections4/</id>
    <published>2019-11-05T08:55:51.000Z</published>
    <updated>2020-11-18T14:32:00.442Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;前面几篇文章，分析了CommonsCollections:3.2.1版本以下存在的反序列化链。今天将继续分析CommonsCollections:4.0版本，主要讲述CommonsCollections2，4，8的利用链构造。&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】Java反序列化利用链挖掘之CommonsCollections5,6,7,9,10</title>
    <link href="http://blog.0kami.cn/2019/10/31/java/study-java-deserialized-commonscollections3-others/"/>
    <id>http://blog.0kami.cn/2019/10/31/java/study-java-deserialized-commonscollections3-others/</id>
    <published>2019-10-31T11:40:44.000Z</published>
    <updated>2020-11-18T14:30:35.931Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;本文继续分析CommonsCollections的相关反序列化利用链，这次主要分析CommonsCollections5,6,7，以及我找的一个新利用链，这里暂且将其称为10.&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】Java反序列化利用链挖掘之CommonsCollections3</title>
    <link href="http://blog.0kami.cn/2019/10/28/java/study-java-deserialized-commonscollections3-3/"/>
    <id>http://blog.0kami.cn/2019/10/28/java/study-java-deserialized-commonscollections3-3/</id>
    <published>2019-10-28T08:20:06.000Z</published>
    <updated>2020-11-18T14:31:23.156Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;前面分析了ysoserial的CommonsCollections1，熟悉了一点Java反序列化。本文将继续分析ysoserial的利用，今天的主角是CommonsCollections3.&lt;/p&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【notes】Java反序列化利用链挖掘之CommonsCollections1</title>
    <link href="http://blog.0kami.cn/2019/10/24/java/study-java-deserialized-commonscollections3-1/"/>
    <id>http://blog.0kami.cn/2019/10/24/java/study-java-deserialized-commonscollections3-1/</id>
    <published>2019-10-24T14:15:25.000Z</published>
    <updated>2020-11-18T14:30:54.639Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
      <category term="notes" scheme="http://blog.0kami.cn/categories/notes/"/>
    
    
      <category term="vul" scheme="http://blog.0kami.cn/tags/vul/"/>
    
  </entry>
  
  <entry>
    <title>【Code Review】thinkphp v5.2.x 反序列化利用链挖掘</title>
    <link href="http://blog.0kami.cn/2019/09/10/php-thinkphp-5-2-x-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/"/>
    <id>http://blog.0kami.cn/2019/09/10/php-thinkphp-5-2-x-反序列化利用链/</id>
    <published>2019-09-10T04:59:00.000Z</published>
    <updated>2019-10-25T01:28:38.670Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;上周参与了N1CTF，里面有一道关于thinkphp5的反序列化漏洞的利用。记录一下关于该反序列化的利用链分析。&lt;br&gt;
    
    </summary>
    
      <category term="codereview" scheme="http://blog.0kami.cn/categories/codereview/"/>
    
    
      <category term="cms" scheme="http://blog.0kami.cn/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>【Code Review】thinkphp v6.0.x 反序列化利用链挖掘</title>
    <link href="http://blog.0kami.cn/2019/09/10/php-thinkphp-6-0-x-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/"/>
    <id>http://blog.0kami.cn/2019/09/10/php-thinkphp-6-0-x-反序列化利用链/</id>
    <published>2019-09-10T04:59:00.000Z</published>
    <updated>2019-10-25T01:27:35.336Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;上一篇分析了tp 5.2.x的反序列化利用链挖掘，顺着思路，把tp6.0.x也挖了。有类似的地方，也有需要重新挖掘的地方。&lt;br&gt;
    
    </summary>
    
      <category term="codereview" scheme="http://blog.0kami.cn/categories/codereview/"/>
    
    
      <category term="cms" scheme="http://blog.0kami.cn/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>【Code Review】mycncart sqli</title>
    <link href="http://blog.0kami.cn/2019/02/25/php/mycncart-v2-0-0-3-sqli/"/>
    <id>http://blog.0kami.cn/2019/02/25/php/mycncart-v2-0-0-3-sqli/</id>
    <published>2019-02-25T10:33:48.000Z</published>
    <updated>2019-02-25T10:48:59.472Z</updated>
    
    <summary type="html">
    
      welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="codereview" scheme="http://blog.0kami.cn/categories/codereview/"/>
    
    
      <category term="cms" scheme="http://blog.0kami.cn/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>【Code Review】temmoku home版 t1.15 前台sqli</title>
    <link href="http://blog.0kami.cn/2019/02/21/php/temmoku-t1-15-sqli/"/>
    <id>http://blog.0kami.cn/2019/02/21/php/temmoku-t1-15-sqli/</id>
    <published>2019-02-21T13:09:44.000Z</published>
    <updated>2019-02-22T01:34:39.328Z</updated>
    
    <summary type="html">
    
      welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="codereview" scheme="http://blog.0kami.cn/categories/codereview/"/>
    
    
      <category term="cms" scheme="http://blog.0kami.cn/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title>【Code Analysis】thinkphp v5.x App.php s参数RCE</title>
    <link href="http://blog.0kami.cn/2019/02/05/php-thinkphp-v5-x-App-php-rce/"/>
    <id>http://blog.0kami.cn/2019/02/05/php-thinkphp-v5-x-App-php-rce/</id>
    <published>2019-02-05T08:02:06.000Z</published>
    <updated>2019-03-13T09:11:15.312Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;放假了，对thinkphp的几个RCE做一下分析，记录一下XD&lt;br&gt;
    
    </summary>
    
      <category term="codereview" scheme="http://blog.0kami.cn/categories/codereview/"/>
    
    
      <category term="cms" scheme="http://blog.0kami.cn/tags/cms/"/>
    
  </entry>
  
</feed>
